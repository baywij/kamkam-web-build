{"version":3,"sources":["../node_modules/react-c3js/react-c3js.js","../node_modules/c3/c3.js","../node_modules/d3/d3.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","__webpack_require__","_propTypes2","_reactDom","obj","__esModule","default","c3","C3Chart","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","updateChart","newProps","destroyChart","chart","destroy","err","Error","mountNode","config","newConfig","bindto","generate","data","load","unload","generateChart","findDOMNode","unloadBeforeLoad","unloadData","loadNewData","className","style","createElement","get","object","isRequired","title","size","padding","color","interaction","transition","oninit","func","onrendered","onmouseover","onmouseout","onresize","onresized","axis","grid","regions","array","legend","tooltip","subchart","zoom","point","line","area","bar","pie","donut","gauge","string","bool","module","c3_axis_fn","c3_axis_internal_fn","CLASS","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","brush","focused","defocused","region","tooltipContainer","tooltipName","shape","shapes","lines","bars","circle","circles","arc","arcLabelLine","arcs","areas","empty","text","texts","gaugeValue","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","_typeof","Symbol","iterator","classCallCheck","possibleConstructorReturn","isValue","v","isFunction","o","isArray","Array","isString","isUndefined","isDefined","ceil10","Math","ceil","asHalfPixel","n","diffDomain","d","isEmpty","keys","notEmpty","c3_chart_internal_fn","getOption","options","defaultValue","hasValue","dict","found","forEach","sanitise","str","replace","getPathBox","path","box","getBoundingClientRect","items","pathSegList","getItem","minX","x","minY","min","y","width","height","AxisInternal","component","params","d3","scale","linear","range","orient","innerTickSize","outerTickSize","withOuterTick","tickPadding","tickValues","tickFormat","tickArguments","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","selection","attr","scaleExtent","domain","start","stop","generateTicks","ticks","push","unshift","copyScale","newScale","copy","isCategory","textFormatted","formatted","updateRange","rangeExtent","updateTickTextCharSize","tick","internal","h","w","select","each","undefined","transitionise","withoutTransition","isVertical","tspanData","splitted","tickMultiline","splitTickText","concat","tickMultilineMax","ellipsify","map","s","index","subtext","spaceIndex","textWidth","tickText","maxWidth","tickWidth","toString","split","charAt","substr","slice","max","ellipsified","remaining","available","padEnd","updateTickLength","lineY2","tickPosition","textY","rotate","textTransform","textTextAnchor","tspanDx","sin","PI","tspanDy","dy","g","tickTransform","tickX","tickY","scale0","__chart__","scale1","selectAll","tickEnter","enter","insert","tickExit","exit","remove","tickUpdate","append","lineUpdate","textUpdate","tspanUpdate","pathUpdate","rangeBand","dx","top","right","bottom","left","format","isCentered","tickInterval","interval","node","getTotalLength","Infinity","culling","Axis","_Component","owner","fn","_this","inherits","componentKey","init","$$","main","axes","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","bind","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","y2","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","Number","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","time","axis_y_tick_time_value","axis_y_tick_time_interval","getId","id","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","toFixed","axis_x_tick_format","date","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","position","isInner","indexOf","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","currentMaxTickWidths","svg","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","classed","updateLabels","withTransition","getPadding","domainLength","p","unit","convertPixelsToAxisPadding","pixels","values","tickCount","forTimeSeries","targetCount","end","count","tickValue","Date","sort","a","b","generateTransitions","duration","axisSubX","subx","redraw","transitions","isHidden","c3_chart_fn","version","Chart","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","argThis","api","window","getDefaultConfig","cache","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","utc","axis_x_localtime","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDay","getDate","getMonth","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","initPie","initBrush","initZoom","selectChart","document","observeInserted","html","xs","convertDataToTargets","data_filter","filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","extent","subX","subY","subY2","orgXDomain","zoom_enabled","on","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initSubchart","initTooltip","initLegend","initTitle","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","element","smoothLines","el","type","x1","x2","y1","legendHeight","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","cx","cy","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","e","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","t","add","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","opacity","point_show","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","previousSibling","disconnect","setInterval","parentNode","clearInterval","update","observe","attributes","childList","characterData","console","error","resizeFunction","generateResize","resize_auto","resizeTimeout","clearTimeout","setTimeout","flush","resizeIfElementDisplayed","offsetParent","attachEvent","addEventListener","wrapper","resizeFunctions","callResizeFunctions","f","splice","endall","callback","timer","done","parsedDate","data_xFormat","parse","isNaN","hidden","mozHidden","msHidden","webkitHidden","Function","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","_x","_y","set","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","distance","isFinite","measurementElement","createElementNS","setAttribute","getAttribute","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","clear","initialize","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","exponent","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","number","pow","_parseArcFlag","flag","flagChar","parseSegment","points","arcAngle","arcLarge","arcSweep","builder","String","targetLength","padString","repeat","labels","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","resize","size_width","size_height","detachEvent","removeEventListener","targetIds","shown","targetId","names","clearLegendItemTextBoxCache","updateDataAttributes","colors","args","baseTarget","baseValue","diff","to","notfoundIds","orgDataCount","getMaxDataCount","tail","json","rows","columns","j","getOtherTargetX","missing","translateX","scaleX","transform","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","updateXGrid","hideXGridFocus","ease","isRegionOnX","xgridAttr","regionX","regionWidth","focus","candidates","mapToTargetIds","selectorTargets","revert","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","groups","data_groups","show","hide","hideLegend","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","loadFromArgs","ids","c","selected","merge","getTargetSelectorSuffix","__data__","indices","resetOther","data_selection_enabled","toggle","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","that","mouse","isMultipleX","getYScale","getIndexByX","dispatchEvent","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","enabled","unzoom","zoom_x_max","zoom_x_min","layout","reduce","getOrderFunction","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","radius","innerRadiusRatio","innerRadius","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","outerRadius","newArc","withoutUpdate","updated","centroid","rate","expandWidth","getArc","force","isArcType","transformForArcLabel","ratio","translate","hasGauge","sqrt","donut_label_ratio","pie_label_ratio","cos","abs","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","mainArcLabelLine","arcData","classArc","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","arcInnerRadius","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","attrTween","interpolate","interpolated","round","d1","gauge_label_show","gauge_units","addCache","cloneTarget","generateClass","prefix","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","toLowerCase","URL","parent","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pattern","category10","data_color","threshold","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","read","this_config","find","shift","url","mimeType","headers","req","xhr","header","dataResponse","response","responseText","responseURL","status","statusText","JSON","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","targetKeys","new_rows","new_row","findValueInJson","pathArray","k","newRows","newRow","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","v1","v2","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","filterByX","getXValue","idsForX","hasMultipleX","name","valueOnIndex","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderAsc","orderDesc","t1","t2","reducer","t1Sum","t2Sum","order","orderTargets","fct","reverse","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","current","types","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","drag","sx","sy","mx","my","maxX","maxY","altDomain","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","updateYGrid","gridValues","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getFullYear","getGridFilterToRemove","param","forX","toRemove","toShow","eventRectUpdate","maxDataCountTarget","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","eventRectEnter","expandCircles","expandBars","unexpandCircles","unexpandBars","isStepType","isWithinShape","behavior","origin","mouseout","selector","event","createEvent","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","step","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","l","rects","tiles","background","paddingTop","maxHeight","posMin","tileWidth","totalLength","offsets","widths","heights","margins","steps","updatePositions","textElement","maxLength","reset","isLast","getTextRect","textContent","getTextBox","itemWidth","itemHeight","itemLength","areaLength","updateValues","withoutStep","altKey","parentData","regionY","regionHeight","getScale","forTimeseries","getX","offset","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","r","pointSelectR","unselectPoint","selectPath","rgb","brighter","unselectPath","nodeName","barData","random","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","y0","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","interpolation","isInterpolationType","isSplineType","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","lineTargetsNum","lineOffset","_regions","sWithRegion","xp","yp","diffx2","xOffset","isWithinRegions","generateM","d0","x_diff","xv0","xv1","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","lineOrScatterData","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","redrawForBrush","context","visibility","contextLineEnter","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","barOrLineData","forFlow","cls","rect","font","getAreaPoints","getBarPoints","getLinePoints","getter","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","valueOf","sortFunction","bgcolor","titleFormat","nameFormat","valueFormat","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","property","has","ua","userAgent","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","z","factory","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_arraySlice","d3_array","list","d3_document","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","now","setProperty","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","ascending","descending","sum","mean","quantile","H","floor","median","numbers","variance","m","deviation","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","entries","arrays","merged","d3_class","ctor","properties","d3_Map","_","d3_range_integerScale","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","d3_selection","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","namespace","namespaceURI","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","next","nextSibling","comparator","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","$","d3_selection_onFilter","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","container","d3_mousePoint","d3_mouse_bug44083","changedTouches","ownerSVGElement","createSVGPoint","scrollX","scrollY","ctm","border","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","mousedown","touchstart","subject","move","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","position1","position0","dragRestore","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","b0","b1","r0","coshr0","u","d3_sinh","translate0","center0","mousewheelTimer","touchtime","view","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","rescale","invert","zoomstarted","zoomed","zoomended","location0","d3_selection_interrupt","locations0","distance0","zoomName","touchmove","touchend","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","darker","hcl","d3_hclPrototype","d3_hcl_lab","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","d3_xhr","request","XMLHttpRequest","responseType","respond","result","d3_xhrHasResponse","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","formatRow","formatValue","join","stringify","eol","EOL","EOF","N","I","token","formatRows","fieldSet","fields","field","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","d3_format_precision","LN10","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","d3_format_re","fill","align","zfill","comma","precision","suffix","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","formatPrefix","after","lastIndexOf","fromCharCode","X","toPrecision","toExponential","d3_time","d3_date","d3_date_utc","UTC","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTimezoneOffset","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","dt","times","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formatPads","d3_time_formats","M","L","Z","d3_time_parse","localZ","W","U","d3_time_parsers","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","compareRanges","withinRange","best","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","methods","_stream2","projectionMutator","equirectangular","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","children","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","resort","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","d3_layout_pieSortByValue","padAngle","da","pa","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","squarify","score","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","d3_scale_threshold","identity","d3_scale_identity","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","styleNull","styleTween","inheritId","id0","id1","tickFormat_","d3_svg_axisDefaultOrient","tickArguments_","tickSpacing","lineEnter","textEnter","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","eventTarget","event_","resizing","resizingX","resizingY","keyCode","brushmove","brushend","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","responseXML"],"mappings":"4FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAAJ,OAAAK,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAAF,UAAAD,GAEA,QAAAI,KAAAD,EACAV,OAAAY,UAAAC,eAAAC,KAAAJ,EAAAC,KACAL,EAAAK,GAAAD,EAAAC,IAKA,OAAAL,GAGAS,EAAA,WACA,SAAAC,EAAAV,EAAAW,GACA,QAAAV,EAAA,EAAmBA,EAAAU,EAAAR,OAAkBF,IAAA,CACrC,IAAAW,EAAAD,EAAAV,GACAW,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACArB,OAAAC,eAAAK,EAAAY,EAAAP,IAAAO,IAIA,gBAAAI,EAAAC,EAAAC,GAGA,OAFAD,GAAAP,EAAAM,EAAAV,UAAAW,GACAC,GAAAR,EAAAM,EAAAE,GACAF,GAdA,GAoBAG,EAAAC,EAFaC,EAAQ,IAMrBC,EAAAF,EAFiBC,EAAQ,IAIzBE,EAAgBF,EAAQ,IAExB,SAAAD,EAAAI,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAE,QAAAF,GAkCA,IAAAG,OAAA,EAEAC,EAAA,SAAAC,GAGA,SAAAD,IAGA,OAtCA,SAAAE,EAAAd,GACA,KAAAc,aAAAd,GACA,UAAAe,UAAA,qCAkCAC,CAAAC,KAAAL,GA9BA,SAAAM,EAAA1B,GACA,IAAA0B,EACA,UAAAC,eAAA,6DAGA,OAAA3B,GAAA,kBAAAA,GAAA,oBAAAA,EAAA0B,EAAA1B,EA2BA4B,CAAAH,MAAAL,EAAAS,WAAA3C,OAAA4C,eAAAV,IAAAW,MAAAN,KAAA/B,YAiHA,OAzIA,SAAAsC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAV,UAAA,kEAAAU,GAGAD,EAAAlC,UAAAZ,OAAAgD,OAAAD,KAAAnC,UAAA,CACAqC,YAAA,CACA9C,MAAA2C,EACA3B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA2B,IAAA/C,OAAAkD,eAAAlD,OAAAkD,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GAMAI,CAAAjB,EAuHCT,EAAAO,QAAAoB,WA/GDrC,EAAAmB,EAAA,EACAvB,IAAA,oBACAR,MAAA,WACA8B,EAAWN,EAAQ,MACnBY,KAAAc,YAAAd,KAAAtB,SAEG,CACHN,IAAA,4BACAR,MAAA,SAAAmD,GACAf,KAAAc,YAAAC,KAEG,CACH3C,IAAA,uBACAR,MAAA,WACAoC,KAAAgB,iBAEG,CACH5C,IAAA,eACAR,MAAA,WACA,IACAoC,KAAAiB,MAAAjB,KAAAiB,MAAAC,UACO,MAAAC,GACP,UAAAC,MAAA,oBAAAD,MAGG,CACH/C,IAAA,gBACAR,MAAA,SAAAyD,EAAAC,GACA,IAAAC,EAAA1D,EAAA,CACA2D,OAAAH,GACOC,GAEP,OAAA5B,EAAA+B,SAAAF,KAEG,CACHnD,IAAA,cACAR,MAAA,SAAA8D,GACA1B,KAAAiB,MAAAU,KAAAD,KAEG,CACHtD,IAAA,aACAR,MAAA,WACAoC,KAAAiB,MAAAW,WAEG,CACHxD,IAAA,cACAR,MAAA,SAAA0D,GACAtB,KAAAiB,QACAjB,KAAAiB,MAAAjB,KAAA6B,eAAA,EAAAvC,EAAAwC,aAAA9B,MAAAsB,IAGAA,EAAAS,kBACA/B,KAAAgC,aAGAhC,KAAAiC,YAAAX,EAAAI,QAEG,CACHtD,IAAA,SACAR,MAAA,WACA,IAAAsE,EAAAlC,KAAAtB,MAAAwD,UAAA,IAAAlC,KAAAtB,MAAAwD,UAAA,GACAC,EAAAnC,KAAAtB,MAAAyD,MAAAnC,KAAAtB,MAAAyD,MAAA,GACA,OAAAjD,EAAAO,QAAA2C,cAAA,OACAF,YACAC,aAGG,EACH/D,IAAA,cACAiE,IAAA,WACA,kBAEG,CACHjE,IAAA,YACAiE,IAAA,WACA,OACAX,KAAArC,EAAAI,QAAA6C,OAAAC,WACAC,MAAAnD,EAAAI,QAAA6C,OACAG,KAAApD,EAAAI,QAAA6C,OACAI,QAAArD,EAAAI,QAAA6C,OACAK,MAAAtD,EAAAI,QAAA6C,OACAM,YAAAvD,EAAAI,QAAA6C,OACAO,WAAAxD,EAAAI,QAAA6C,OACAQ,OAAAzD,EAAAI,QAAAsD,KACAC,WAAA3D,EAAAI,QAAAsD,KACAE,YAAA5D,EAAAI,QAAAsD,KACAG,WAAA7D,EAAAI,QAAAsD,KACAI,SAAA9D,EAAAI,QAAAsD,KACAK,UAAA/D,EAAAI,QAAAsD,KACAM,KAAAhE,EAAAI,QAAA6C,OACAgB,KAAAjE,EAAAI,QAAA6C,OACAiB,QAAAlE,EAAAI,QAAA+D,MACAC,OAAApE,EAAAI,QAAA6C,OACAoB,QAAArE,EAAAI,QAAA6C,OACAqB,SAAAtE,EAAAI,QAAA6C,OACAsB,KAAAvE,EAAAI,QAAA6C,OACAuB,MAAAxE,EAAAI,QAAA6C,OACAwB,KAAAzE,EAAAI,QAAA6C,OACAyB,KAAA1E,EAAAI,QAAA6C,OACA0B,IAAA3E,EAAAI,QAAA6C,OACA2B,IAAA5E,EAAAI,QAAA6C,OACA4B,MAAA7E,EAAAI,QAAA6C,OACA6B,MAAA9E,EAAAI,QAAA6C,OACAJ,UAAA7C,EAAAI,QAAA2E,OACAjC,MAAA9C,EAAAI,QAAA6C,OACAP,iBAAA1C,EAAAI,QAAA4E,UAKA1E,EAvHA,GA0HAhC,EAAA8B,QAAAE,wBC9M8D2E,EAAA3G,QAC7D,WACD,aAEA,IA8LA4G,EACAC,EA/LAC,EAAA,CACA1G,OAAA,YACAkD,MAAA,WACAyD,UAAA,gBACAC,WAAA,iBACAC,SAAA,eACAC,UAAA,gBACAC,UAAA,gBACAC,WAAA,iBACAC,SAAA,eACAC,UAAA,gBACAC,eAAA,sBACAC,oBAAA,2BACAC,mBAAA,2BACAC,kBAAA,0BACAC,kBAAA,0BACAC,eAAA,qBACAC,gBAAA,sBACAC,UAAA,gBACAC,WAAA,iBACAC,iBAAA,wBACAC,mBAAA,0BACAC,SAAA,eACAC,MAAA,WACAC,QAAA,aACAC,UAAA,eACAC,OAAA,YACA1C,QAAA,aACAf,MAAA,WACA0D,iBAAA,uBACAxC,QAAA,aACAyC,YAAA,kBACAC,MAAA,WACAC,OAAA,YACAvC,KAAA,UACAwC,MAAA,WACAtC,IAAA,SACAuC,KAAA,UACAC,OAAA,YACAC,QAAA,aACAC,IAAA,SACAC,aAAA,oBACAC,KAAA,UACA7C,KAAA,UACA8C,MAAA,WACAC,MAAA,WACAC,KAAA,UACAC,MAAA,WACAC,WAAA,iBACA3D,KAAA,UACA4D,UAAA,gBACAC,MAAA,WACAC,OAAA,YACAC,UAAA,gBACAC,WAAA,iBACAC,WAAA,iBACAC,MAAA,WACAC,OAAA,YACAC,UAAA,gBACAC,WAAA,iBACAtE,KAAA,UACAuE,MAAA,YACAC,WAAA,kBACAC,MAAA,YACAC,WAAA,kBACAC,OAAA,aACAC,YAAA,mBACAC,iBAAA,uBACAC,WAAA,iBACAC,gBAAA,uBACAC,eAAA,sBACAC,iBAAA,wBACAC,kBAAA,yBACAC,SAAA,cACAC,SAAA,aACAC,SAAA,aACAC,SAAA,cAGAC,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAvJ,GACA,cAAAA,GACG,SAAAA,GACH,OAAAA,GAAA,oBAAAsJ,QAAAtJ,EAAAmB,cAAAmI,QAAAtJ,IAAAsJ,OAAAxK,UAAA,gBAAAkB,GAGAwJ,EAAA,SAAAlJ,EAAAd,GACA,KAAAc,aAAAd,GACA,UAAAe,UAAA,sCAoBAkJ,EAAA,SAAA/I,EAAA1B,GACA,IAAA0B,EACA,UAAAC,eAAA,6DAGA,OAAA3B,GAAA,kBAAAA,GAAA,oBAAAA,EAAA0B,EAAA1B,GAGA0K,EAAA,SAAAC,GACA,OAAAA,GAAA,IAAAA,GAGAC,EAAA,SAAAC,GACA,0BAAAA,GAGAC,EAAA,SAAAD,GACA,OAAAE,MAAAD,QAAAD,IAGAG,EAAA,SAAAH,GACA,wBAAAA,GAGAI,EAAA,SAAAN,GACA,2BAAAA,GAGAO,EAAA,SAAAP,GACA,2BAAAA,GAGAQ,EAAA,SAAAR,GACA,UAAAS,KAAAC,KAAAV,EAAA,KAGAW,EAAA,SAAAC,GACA,OAAAH,KAAAC,KAAAE,GAAA,IAGAC,EAAA,SAAAC,GACA,OAAAA,EAAA,GAAAA,EAAA,IAGAC,EAAA,SAAAb,GACA,2BAAAA,GAAA,OAAAA,GAAAG,EAAAH,IAAA,IAAAA,EAAAlL,QAAA,iCAAAkL,EAAA,YAAAR,EAAAQ,KAAA,IAAA3L,OAAAyM,KAAAd,GAAAlL,QAGAiM,EAAA,SAAAf,GACA,OAAAgB,EAAAH,QAAAb,IAGAiB,EAAA,SAAAC,EAAAlM,EAAAmM,GACA,OAAAd,EAAAa,EAAAlM,IAAAkM,EAAAlM,GAAAmM,GAGAC,EAAA,SAAAC,EAAA7M,GACA,IAAA8M,GAAA,EAMA,OALAjN,OAAAyM,KAAAO,GAAAE,QAAA,SAAAvM,GACAqM,EAAArM,KAAAR,IACA8M,GAAA,KAGAA,GAGAE,EAAA,SAAAC,GACA,wBAAAA,IAAAC,QAAA,aAA4DA,QAAA,aAAsBD,GAGlFE,EAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,wBACAC,EAAA,CAAAH,EAAAI,YAAAC,QAAA,GAAAL,EAAAI,YAAAC,QAAA,IACAC,EAAAH,EAAA,GAAAI,EACAC,EAAA7B,KAAA8B,IAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAO,GACA,OACAH,EAAAD,EACAI,EAAAF,EACAG,MAAAV,EAAAU,MACAC,OAAAX,EAAAW,SAOA,SAAAC,EAAAC,EAAAC,GACA/L,KACA8L,YADA9L,KAEA+L,UAAA,GAFA/L,KAGAgM,GAAAF,EAAAE,GAHAhM,KAIAiM,MAJAjM,KAIAgM,GAAAC,MAAAC,SAJAlM,KAKAmM,MALAnM,KAMAoM,OAAA,SANApM,KAOAqM,cAAA,EAPArM,KAQAsM,cAAAtM,KAAA+L,OAAAQ,cAAA,IARAvM,KASAwM,YAAA,EATAxM,KAUAyM,WAAA,KAVAzM,KAWA0M,WAXA1M,KAYA2M,cAZA3M,KAaA4M,WAAA,EAbA5M,KAcA6M,aAAA,EAdA7M,KAeA8M,aAfA9M,KAgBA+M,iBAhBA/M,KAiBAgN,eAjBAhN,KAiBA+L,OAAAiB,eAjBAhN,KAkBAiN,WAlBAjN,KAmBAqD,KAnBArD,KAmBAkN,gBAGA1I,EAAAqH,EAAAxN,WAEAuJ,MAAA,SAAAuF,EAAA5B,EAAAqB,GACAO,EAAAC,KAAA,qBAAApD,GACA,mBAAAL,KAAAC,KAAA2B,EAAAvB,GAAA4C,GAAA,UAIApI,EAAAsD,MAAA,SAAAqF,EAAAzB,GACAyB,EAAAC,KAAA,qBAAApD,GACA,qBAAAL,KAAAC,KAAA8B,EAAA1B,IAAA,OAIAxF,EAAA6I,YAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,IAAApP,OAAA,GACA,OAAAqP,EAAAC,EAAA,CAAAD,EAAAC,GAAA,CAAAA,EAAAD,IAGA/I,EAAAiJ,cAAA,SAAAxB,GACA,IACAjO,EACAsP,EACAI,EAAA,GAEA,GAAAzB,EAAAyB,MACA,OAAAzB,EAAAyB,MAAApN,MAAA2L,EANAjM,KAMA2M,eAKA,IAFAW,EAAArB,EAAAqB,SAEAtP,EAAA2L,KAAAC,KAAA0D,EAAA,IAAkCtP,EAAAsP,EAAA,GAAetP,IACjD0P,EAAAC,KAAA3P,GAOA,OAJA0P,EAAAxP,OAAA,GAAAwP,EAAA,MACAA,EAAAE,QAAAF,EAAA,IAAAA,EAAA,GAAAA,EAAA,KAGAA,GAGAlJ,EAAAqJ,UAAA,WACA,IAEAP,EADAQ,EADA9N,KACAiM,MAAA8B,OAQA,OATA/N,KAIA+L,OAAAiC,aACAV,EALAtN,KAKAiM,MAAAqB,SACAQ,EAAAR,OAAA,CAAAA,EAAA,GAAAA,EAAA,QAGAQ,GAGAtJ,EAAAyJ,cAAA,SAAA/E,GACA,IACAgF,EADAlO,KACA0M,WADA1M,KACA0M,WAAAxD,KACA,2BAAAgF,IAAA,IAGA1J,EAAA2J,YAAA,WAGA,OAFAnO,KACAmM,MADAnM,KACAiM,MAAAmC,YADApO,KACAiM,MAAAmC,cADApO,KACAqN,YADArN,KACAiM,MAAAE,SADAnM,KAEAmM,OAGA3H,EAAA6J,uBAAA,SAAAC,GACA,IAAAC,EAAAvO,KAEA,GAAAuO,EAAAxB,iBACA,OAAAwB,EAAAxB,iBAGA,IAAAtK,EAAA,CACA+L,EAAA,KACAC,EAAA,KAgBA,OAdAH,EAAAI,OAAA,QAAA3H,KAAA,SAAAiD,GACA,OAAAuE,EAAAN,cAAAjE,KACK2E,KAAA,SAAA3E,GACL,IAAAiB,EAAAjL,KAAAkL,wBACAnE,EAAAwH,EAAAN,cAAAjE,GACAwE,EAAAvD,EAAAW,OACA6C,EAAA1H,EAAAkE,EAAAU,MAAA5E,EAAA7I,YAAA0Q,EAEAJ,GAAAC,IACAhM,EAAA+L,IACA/L,EAAAgM,OAEK1H,KAAA,IACLwH,EAAAxB,iBAAAtK,EACAA,GAGA+B,EAAAqK,cAAA,SAAA1B,GACA,OAAAnN,KAAA+L,OAAA+C,kBAAA3B,EAAAnN,KAAAgM,GAAAnJ,WAAAsK,IAGA3I,EAAAuK,WAAA,WACA,eAAA/O,KAAAoM,QAAA,UAAApM,KAAAoM,QAGA5H,EAAAwK,UAAA,SAAAhF,EAAAhM,EAAA0P,EAAAzB,GACA,IACAgD,EADAjP,KACA+L,OAAAmD,cADAlP,KACAmP,cAAAnF,EAAA0D,EAAAzB,GAAA,GAAAmD,OADApP,KACAiO,cAAAjE,IAMA,OAPAhK,KAGA+L,OAAAmD,eAHAlP,KAGA+L,OAAAsD,iBAAA,IACAJ,EAJAjP,KAIAsP,UAAAL,EAJAjP,KAIA+L,OAAAsD,mBAGAJ,EAAAM,IAAA,SAAAC,GACA,OACAC,MAAAzR,EACAiR,SAAAO,EACAtR,OAAA+Q,EAAA/Q,WAKAsG,EAAA2K,cAAA,SAAAnF,EAAA0D,EAAAzB,GACA,IAGAyD,EACAC,EACAC,EALArB,EAAAvO,KACA6P,EAAAtB,EAAAN,cAAAjE,GACA8F,EAAAvB,EAAAxC,OAAAgE,UAMA,yBAAAtS,OAAAY,UAAA2R,SAAAzR,KAAAsR,GACAA,KAGAC,MAAA,KACAA,EAAAvB,EAAAQ,aAAA,GAAAR,EAAAxC,OAAAiC,WAAArE,KAAAC,KAAAqC,EAAAyB,EAAA,IAAAzB,EAAAyB,EAAA,aAGA,SAAAuC,EAAAhB,EAAAlI,GACA4I,OAAAf,EAEA,QAAA5Q,EAAA,EAAqBA,EAAA+I,EAAA7I,OAAiBF,IAQtC,GAPA,MAAA+I,EAAAmJ,OAAAlS,KACA2R,EAAA3R,GAGA0R,EAAA3I,EAAAoJ,OAAA,EAAAnS,EAAA,GACA4R,EAAArB,EAAAxB,iBAAA0B,EAAAiB,EAAAxR,OAEA4R,EAAAF,EACA,OAAAK,EAAAhB,EAAAG,OAAArI,EAAAoJ,OAAA,EAAAR,GAAA3R,IAAA+I,EAAAqJ,MAAAT,IAAA,EAAA3R,IAIA,OAAAiR,EAAAG,OAAArI,GAGAkJ,CA7BA,GA6BAJ,EAAA,MAGArL,EAAA8K,UAAA,SAAAL,EAAAoB,GACA,GAAApB,EAAA/Q,QAAAmS,EACA,OAAApB,EAMA,IAHA,IAAAqB,EAAArB,EAAAmB,MAAA,EAAAC,GACAE,EAAA,EAEAvS,EAAAqS,EAAA,EAAyBrS,GAAA,EAAQA,IAAA,CACjC,IAAAwS,EAAAF,EAAAtS,GAAAE,OAIA,GAHAoS,EAAAtS,GAAAsS,EAAAtS,GAAAmS,OAAA,EAAAK,EAAAD,GAAAE,OAAAD,EAAA,MACAD,GAAAC,IAEA,EACA,MAIA,OAAAF,GAGA9L,EAAAkM,iBAAA,WACA1Q,KACAiN,WAAAtD,KAAA0G,IADArQ,KACAqM,cAAA,GADArM,KACAwM,aAGAhI,EAAAmM,OAAA,SAAA3G,GACA,IACA4G,EADA5Q,KACAiM,MAAAjC,IADAhK,KACA8M,aAAA,EADA9M,KACA4M,YACA,OAFA5M,KAEAmM,MAAA,GAAAyE,KAFA5Q,KAEAmM,MAAA,GAFAnM,KAEAqM,cAAA,GAGA7H,EAAAqM,MAAA,WACA,IACAC,EADA9Q,KACAgN,eACA,OAAA8D,EAAA,KAAAA,EAAA,QAAAA,EAAA,QAFA9Q,KAEAiN,YAGAzI,EAAAuM,cAAA,WACA,IACAD,EADA9Q,KACAgN,eACA,OAAA8D,EAAA,UAAAA,EAAA,QAGAtM,EAAAwM,eAAA,WACA,IACAF,EADA9Q,KACAgN,eACA,OAAA8D,IAAA,0BAGAtM,EAAAyM,QAAA,WACA,IACAH,EADA9Q,KACAgN,eACA,OAAA8D,EAAA,EAAAnH,KAAAuH,IAAAvH,KAAAwH,IAAAL,EAAA,SAGAtM,EAAA4M,QAAA,SAAApH,EAAAhM,GACA,IACAqT,EADArR,KACA+M,iBAAAyB,EAUA,OARA,IAAAxQ,IAEAqT,EALArR,KAIA+O,gBACA/E,EAAA9L,OAAA,IALA8B,KAKA+M,iBAAAyB,EAAA,MAEA,SAIA6C,GAGA7M,EAAA0I,aAAA,WACA,IAAAqB,EAAAvO,KACAgM,EAAAuC,EAAAvC,GACAD,EAAAwC,EAAAxC,OAEA,SAAA1I,EAAAiO,GACAA,EAAA3C,KAAA,WACA,IASA4C,EACAC,EACAC,EAXAH,EAAAjO,EAAAiO,EAAAtF,EAAA0C,OAAA1O,MACA0R,EAAA1R,KAAA2R,WAAApD,EAAAtC,MACA2F,EAAA5R,KAAA2R,UAAApD,EAAAV,YACAH,EAAAa,EAAA9B,WAAA8B,EAAA9B,WAAA8B,EAAAd,cAAAmE,GACAtD,EAAAgD,EAAAO,UAAA,SAAAnQ,KAAAgM,EAAAkE,GACAE,EAAAxD,EAAAyD,QAAAC,OAAA,eAAA5E,KAAA,gBAAAjL,MAAA,gBAEA8P,EAAA3D,EAAA4D,OAAAC,SACAC,EAAA7D,EAAAM,cAAAP,GAAAnM,MAAA,aAKA4J,EAAAiC,YACAO,EAAA3B,WAAAjD,KAAAC,MAAAgI,EAAA,GAAAA,EAAA,OACAJ,EAAAjD,EAAAzB,aAAA,EAAAyB,EAAA3B,WACA6E,EAAAlD,EAAAzB,aAAAyB,EAAA3B,WAAA,GAEA2B,EAAA3B,WAAA4E,EAAA,EAGAM,EAAAO,OAAA,QACAP,EAAAO,OAAA,QACA9D,EAAAJ,cACAI,EAAAmC,mBACAnC,EAAAF,uBAAAiD,EAAA5C,OAAA,UACA,IAAA4D,EAAAF,EAAA1D,OAAA,QACA6D,EAAAH,EAAA1D,OAAA,QACA8D,EAAAlE,EAAAI,OAAA,QAAAmD,UAAA,SAAAnQ,KAAA,SAAAsI,EAAAhM,GACA,OAAAuQ,EAAAS,UAAAhF,EAAAhM,EAAA0P,EAAAkE,KAEAY,EAAAT,QAAAM,OAAA,SACAG,EAAAN,OAAAC,SACAK,EAAAzL,KAAA,SAAAiD,GACA,OAAAA,EAAAiF,WAEA,IAAAjE,EAAAsG,EAAAO,UAAA,WAAAnQ,KAAA,KACA+Q,GAAAzH,EAAA+G,QAAAM,OAAA,QAAAjF,KAAA,kBAAAmB,EAAAM,cAAA7D,IAEA,OAAAuD,EAAAnC,QACA,aAEAmF,EAAAhD,EAAA3G,MACA0K,EAAAlF,KAAA,KAAAoE,GAAApE,KAAA,KAAAoE,GAAApE,KAAA,cAAApD,EAAAhM,GACA,OAAAuQ,EAAAoC,OAAA3G,EAAAhM,KAEAuU,EAAAnF,KAAA,OAAAA,KAAA,aAAApD,EAAAhM,GACA,OAAAuQ,EAAAsC,MAAA7G,EAAAhM,KACeoP,KAAA,qBAAApD,EAAAhM,GACf,OAAAuQ,EAAAwC,cAAA/G,EAAAhM,KACemE,MAAA,uBAAA6H,EAAAhM,GACf,OAAAuQ,EAAAyC,eAAAhH,EAAAhM,KAEAwU,EAAApF,KAAA,OAAAA,KAAA,cAAApD,EAAAhM,GACA,OAAAuQ,EAAA6C,QAAApH,EAAAhM,KACeoP,KAAA,cAAApD,EAAAhM,GACf,OAAAuQ,EAAA0C,QAAAjH,EAAAhM,KAEAyU,EAAArF,KAAA,QAAAmB,EAAApC,MAAA,OAAAoC,EAAAjC,cAAA,MAAAiC,EAAApC,MAAA,OAAAoC,EAAAjC,eACA,MAGA,UAGAiF,EAAAhD,EAAA3G,MACA0K,EAAAlF,KAAA,KAAAoE,GAAApE,KAAA,KAAAoE,GAAApE,KAAA,cAAApD,EAAAhM,GACA,SAAAuQ,EAAAoC,OAAA3G,EAAAhM,KAEAuU,EAAAnF,KAAA,OAAAA,KAAA,aAAApD,EAAAhM,GACA,SAAAuQ,EAAAsC,MAAA7G,EAAAhM,IAAA+N,EAAAiC,WAAA,EAAAO,EAAAtB,WAAA,KACeG,KAAA,qBAAApD,EAAAhM,GACf,OAAAuQ,EAAAwC,cAAA/G,EAAAhM,KACemE,MAAA,uBAAA6H,EAAAhM,GACf,OAAAuQ,EAAAyC,eAAAhH,EAAAhM,KAEAwU,EAAApF,KAAA,OAAAA,KAAA,cAAApD,EAAAhM,GACA,OAAAuQ,EAAA6C,QAAApH,EAAAhM,KACeoP,KAAA,cAAApD,EAAAhM,GACf,OAAAuQ,EAAA0C,QAAAjH,EAAAhM,KAEAyU,EAAArF,KAAA,QAAAmB,EAAApC,MAAA,QAAAoC,EAAAjC,cAAA,MAAAiC,EAAApC,MAAA,QAAAoC,EAAAjC,eACA,MAGA,WAEAiF,EAAAhD,EAAAzG,MACAwK,EAAAlF,KAAA,MAAAmB,EAAAlC,eAAAe,KAAA,KAAAqE,GAAArE,KAAA,KAAAqE,GACAc,EAAAnF,KAAA,KAAAmB,EAAAtB,YAAAG,KAAA,IAAAmB,EAAA3B,YAAAzK,MAAA,qBACAqQ,EAAApF,KAAA,KAAAmB,EAAAtB,YAAAG,KAAA,cAAApD,EAAAhM,GACA,OAAAuQ,EAAA6C,QAAApH,EAAAhM,KAEAyU,EAAArF,KAAA,SAAAmB,EAAAjC,cAAA,IAAAiC,EAAApC,MAAA,SAAAoC,EAAApC,MAAA,QAAAoC,EAAAjC,eACA,MAGA,YAEAiF,EAAAhD,EAAAzG,MACAwK,EAAAlF,KAAA,KAAAmB,EAAAlC,eAAAe,KAAA,KAAAqE,GAAArE,KAAA,KAAAqE,GACAc,EAAAnF,KAAA,IAAAmB,EAAAtB,YAAAG,KAAA,IAAAmB,EAAA3B,YAAAzK,MAAA,uBACAqQ,EAAApF,KAAA,IAAAmB,EAAAtB,YAAAG,KAAA,cAAApD,EAAAhM,GACA,OAAAuQ,EAAA6C,QAAApH,EAAAhM,KAEAyU,EAAArF,KAAA,QAAAmB,EAAAjC,cAAA,IAAAiC,EAAApC,MAAA,SAAAoC,EAAApC,MAAA,OAAAoC,EAAAjC,eAKA,GAAAsF,EAAAc,UAAA,CACA,IAAAnH,EAAAqG,EACAe,EAAApH,EAAAmH,YAAA,EAEAhB,EAAAE,EAAA,SAAA5H,GACA,OAAAuB,EAAAvB,GAAA2I,QAESjB,EAAAgB,UACThB,EAAAE,EAEAK,EAAA1T,KAAAgT,EAAAK,EAAArD,EAAA3B,YAGAkF,EAAAvT,KAAAgT,EAAAG,EAAAnD,EAAA3B,YACAwF,EAAA7T,KAAAgT,EAAAK,EAAArD,EAAA3B,cAgGA,OA5FAvJ,EAAA4I,MAAA,SAAAV,GACA,OAAAtN,UAAAC,QAIAqQ,EAAAtC,MAAAV,EACAlI,GAJAkL,EAAAtC,OAOA5I,EAAA+I,OAAA,SAAAb,GACA,OAAAtN,UAAAC,QAIAqQ,EAAAnC,OAAAb,IAAA,CACAqH,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GACOxH,EAAA,YACPlI,GATAkL,EAAAnC,QAYA/I,EAAAqJ,WAAA,SAAAsG,GACA,OAAA/U,UAAAC,QAIAqQ,EAAA7B,WAAAsG,EACA3P,GAJAkL,EAAA7B,YAOArJ,EAAAyJ,aAAA,SAAAmG,GACA,OAAAhV,UAAAC,QAIAqQ,EAAAzB,aAAAmG,EACA5P,GAJAkL,EAAAzB,cAOAzJ,EAAAuJ,WAAA,WACA,OAAA2B,EAAA3B,YAGAvJ,EAAA6P,aAAA,WACA,IAAAC,EAAAjV,EASA,OAPA6N,EAAAiC,WACAmF,EAAA,EAAA5E,EAAA3B,YAEA1O,EAAAmF,EAAAiO,EAAA5C,OAAA,eAAA0E,OAAAC,iBAAA,EAAA9E,EAAAjC,cACA6G,EAAAjV,EAAAmF,EAAAiO,EAAAO,UAAA,QAAApP,QAGA0Q,IAAAG,IAAA,EAAAH,GAGA9P,EAAAqK,MAAA,WACA,OAAAzP,UAAAC,QAIAqQ,EAAA5B,cAAA1O,UACAoF,GAJAkL,EAAA5B,eAOAtJ,EAAAwJ,YAAA,SAAA0G,GACA,OAAAtV,UAAAC,QAIAqQ,EAAA1B,YAAA0G,EACAlQ,GAJAkL,EAAA1B,aAOAxJ,EAAAoJ,WAAA,SAAAlB,GACA,uBAAAA,EACAgD,EAAA9B,WAAA,WACA,OAAAlB,EAAAgD,EAAAtC,MAAAqB,eAEO,CACP,IAAArP,UAAAC,OACA,OAAAqQ,EAAA9B,WAGA8B,EAAA9B,WAAAlB,EAGA,OAAAlI,GAGAA,GAGA,IAAAmQ,EAAA,SAAAC,GAGA,SAAAD,EAAAE,GACA3K,EAAA/I,KAAAwT,GACA,IAAAG,EAAA,CACAA,GAAApP,EACAgK,SAAA,CACAoF,GAAAnP,IAIAoP,EAAA5K,EAAAhJ,MAAAwT,EAAApT,WAAA3C,OAAA4C,eAAAmT,IAAAjV,KAAAyB,KAAA0T,EAAA,OAAAC,IAIA,OAFAC,EAAA5H,GAAA0H,EAAA1H,GACA4H,EAAArF,SAAA1C,EACA+H,EAGA,OA7lBA,SAAArT,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAV,UAAA,kEAAAU,GAGAD,EAAAlC,UAAAZ,OAAAgD,OAAAD,KAAAnC,UAAA,CACAqC,YAAA,CACA9C,MAAA2C,EACA3B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA2B,IAAA/C,OAAAkD,eAAAlD,OAAAkD,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GA8jBAqT,CAAAL,EAAAC,GAkBAD,EAnBA,CAkeA,SAAAE,EAAAI,EAAAH,GACA3T,KAAA0T,QACAhU,EAAAuB,MAAAsN,SAAAuF,GAAAH,KA9cApP,EAAAiP,EAAAnV,WAEA0V,KAAA,WACA,IAAAC,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACA2S,EAAAD,EAAAC,KACAD,EAAAE,KAAA3I,EAAA0I,EAAA5B,OAAA,KAAAjF,KAAA,QAAA3I,EAAApB,KAAA,IAAAoB,EAAAmD,OAAAwF,KAAA,YAAA9L,EAAA6S,aAAA,GAAAH,EAAAI,kBAAAhH,KAAA,YAAA4G,EAAAK,aAAA,MAAAlS,MAAA,aAAAb,EAAAgT,YAAA,oBACAN,EAAAE,KAAA3I,EAAA8G,OAAA,QAAAjF,KAAA,QAAA3I,EAAAoD,YAAAuF,KAAA,YAAA9L,EAAAiT,aAAA,kBAAApS,MAAA,cAAAnC,KAAAwU,wBAAAC,KAAAzU,OACAgU,EAAAE,KAAAxI,EAAAuI,EAAA5B,OAAA,KAAAjF,KAAA,QAAA3I,EAAApB,KAAA,IAAAoB,EAAAqD,OAAAsF,KAAA,YAAA9L,EAAAoT,aAAA,GAAAV,EAAAW,kBAAAvH,KAAA,YAAA4G,EAAAK,aAAA,MAAAlS,MAAA,aAAAb,EAAAsT,YAAA,oBACAZ,EAAAE,KAAAxI,EAAA2G,OAAA,QAAAjF,KAAA,QAAA3I,EAAAsD,YAAAqF,KAAA,YAAA9L,EAAAiT,aAAA,kBAAApS,MAAA,cAAAnC,KAAA6U,wBAAAJ,KAAAzU,OACAgU,EAAAE,KAAAY,GAAAb,EAAA5B,OAAA,KAAAjF,KAAA,QAAA3I,EAAApB,KAAA,IAAAoB,EAAAuD,QACAoF,KAAA,YAAA4G,EAAAK,aAAA,OAAAlS,MAAA,aAAAb,EAAAyT,aAAA,oBACAf,EAAAE,KAAAY,GAAAzC,OAAA,QAAAjF,KAAA,QAAA3I,EAAAwD,aAAAmF,KAAA,YAAA9L,EAAAiT,aAAA,kBAAApS,MAAA,cAAAnC,KAAAgV,yBAAAP,KAAAzU,QAGAuE,EAAA0Q,SAAA,SAAAhJ,EAAAG,EAAAM,EAAAD,EAAAF,EAAAuC,EAAAoG,GACA,IAAAlB,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACA6T,EAAA,CACAnH,WAAAgG,EAAAoB,gBACA7I,gBACA2C,cAAA5N,EAAA+T,sBACAhG,iBAAA/N,EAAA+T,sBAAAC,OAAAhU,EAAAiU,0BAAA,EACAxF,UAAAzO,EAAAkU,kBACAxI,eAAAkI,EAAA,EAAA5T,EAAAmU,mBACA3G,qBAEAzL,EAAA,IAAArD,KAAAuO,SAAAvO,KAAAmV,GAAA9R,KAAA4I,SAAAG,UAmBA,OAjBA4H,EAAA0B,gBAAAjJ,GAAA,oBAAAA,IACAA,IAAA8C,IAAA,SAAArG,GACA,OAAA8K,EAAA2B,UAAAzM,MAKA7F,EAAAqJ,cAAAD,cAEAuH,EAAAoB,kBACA/R,EAAAyJ,aAAAxL,EAAAsU,sBAEA3L,EAAA3I,EAAAuU,uBACAvU,EAAAuU,qBAAA,IAIAxS,GAGAkB,EAAAuR,sBAAA,SAAAC,EAAA1S,GACA,IAEAoJ,EAFAuH,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OAcA,OAXAA,EAAA0U,iBAAA1U,EAAA2U,qBACAxJ,EAAAzM,KAAAkW,mBAAAlC,EAAAmC,qBAAAJ,GAAAzU,EAAA2U,kBAAAjC,EAAA0B,iBAGArS,EACAA,EAAAoJ,eAEAuH,EAAAoC,MAAA3J,cACAuH,EAAAqC,SAAA5J,eAGAA,GAGAlI,EAAA+R,SAAA,SAAArK,EAAAG,EAAAM,EAAAD,EAAAF,EAAAuC,EAAAoG,GACA,IAAAlB,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACA6T,EAAA,CACA5I,gBACAuC,oBACA9B,eAAAkI,EAAA,EAAA5T,EAAAiV,oBAEAlT,EAAA,IAAArD,KAAAuO,SAAAvO,KAAAmV,GAAA9R,KAAA4I,SAAAG,UAAAM,cAQA,OANAsH,EAAAwC,gBACAnT,EAAAqK,MAAAsG,EAAAhI,GAAAyK,KAAAnV,EAAAoV,wBAAApV,EAAAqV,2BAEAtT,EAAAoJ,cAGApJ,GAGAkB,EAAAqS,MAAA,SAAAC,GACA,IAAAvV,EAAAtB,KAAA0T,MAAApS,OACA,OAAAuV,KAAAvV,EAAAwV,UAAAxV,EAAAwV,UAAAD,GAAA,KAGAtS,EAAAwS,mBAAA,WACA,IAAA/C,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACA0R,EAAAgB,EAAA0B,eAAA1B,EAAAgD,sBAAAhD,EAAAoB,gBAAApB,EAAAiD,aAAA,SAAA/N,GACA,OAAAA,EAAA,EAAAA,EAAAgO,QAAA,GAAAhO,GAaA,OAVA5H,EAAA6V,qBACAhO,EAAA7H,EAAA6V,oBACAnE,EAAA1R,EAAA6V,mBACOnD,EAAA0B,iBACP1C,EAAA,SAAAoE,GACA,OAAAA,EAAApD,EAAAqD,eAAA/V,EAAA6V,mBAAAnD,CAAAoD,GAAA,MAKAjO,EAAA6J,GAAA,SAAA9J,GACA,OAAA8J,EAAAzU,KAAAyV,EAAA9K,IACK8J,GAGLzO,EAAA+S,cAAA,SAAA7K,EAAApJ,GACA,OAAAoJ,IAAApJ,IAAAoJ,kBAAAmC,IAGArK,EAAAgT,mBAAA,WACA,OAAAvX,KAAAsX,cAAAtX,KAAA0T,MAAApS,OAAAkW,mBAAAxX,KAAA0T,MAAA0C,QAGA7R,EAAAkT,mBAAA,WACA,OAAAzX,KAAAsX,cAAAtX,KAAA0T,MAAApS,OAAAoW,mBAAA1X,KAAA0T,MAAAiE,QAGApT,EAAAqT,oBAAA,WACA,OAAA5X,KAAAsX,cAAAtX,KAAA0T,MAAApS,OAAAuW,oBAAA7X,KAAA0T,MAAAoE,SAGAvT,EAAAwT,uBAAA,SAAAC,GACA,IAEAC,EAFAjE,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OAWA,MARA,MAAA0W,EACAC,EAAA3W,EAAA4W,aACK,OAAAF,EACLC,EAAA3W,EAAA6W,cACK,MAAAH,IACLC,EAAA3W,EAAA8W,cAGAH,GAGA1T,EAAA8T,aAAA,SAAAL,GACA,IAAAC,EAAAjY,KAAA+X,uBAAAC,GACA,OAAAzO,EAAA0O,SAAAlR,KAAA,MAGAxC,EAAA+T,aAAA,SAAAN,EAAAjR,GACA,IAAAiN,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACA2W,EAAAjY,KAAA+X,uBAAAC,GAEAzO,EAAA0O,GACA,MAAAD,EACA1W,EAAA4W,aAAAnR,EACO,OAAAiR,EACP1W,EAAA6W,cAAApR,EACO,MAAAiR,IACP1W,EAAA8W,aAAArR,GAEKkR,IACLA,EAAAlR,SAIAxC,EAAAgU,iBAAA,SAAAP,EAAAQ,GACA,IAAAP,EAAAjY,KAAA+X,uBAAAC,GACAS,EAAAR,GAAA,iCAAAA,EAAA,YAAArP,EAAAqP,OAAAQ,SAAAR,EAAAQ,SAAAD,EACA,OACAE,QAAAD,EAAAE,QAAA,YACAC,QAAAH,EAAAE,QAAA,YACAE,OAAAJ,EAAAE,QAAA,WACAG,SAAAL,EAAAE,QAAA,aACAI,QAAAN,EAAAE,QAAA,YACAK,MAAAP,EAAAE,QAAA,UACAM,SAAAR,EAAAE,QAAA,aACAO,SAAAT,EAAAE,QAAA,eAIApU,EAAA4U,sBAAA,WACA,OAAAnZ,KAAAuY,iBAAA,IAAAvY,KAAA0T,MAAApS,OAAAiT,aAAA,4BAGAhQ,EAAA6U,sBAAA,WACA,OAAApZ,KAAAuY,iBAAA,IAAAvY,KAAA0T,MAAApS,OAAAiT,aAAA,4BAGAhQ,EAAA8U,uBAAA,WACA,OAAArZ,KAAAuY,iBAAA,KAAAvY,KAAA0T,MAAApS,OAAAiT,aAAA,4BAGAhQ,EAAA+U,qBAAA,SAAAzC,GACA,aAAAA,EAAA7W,KAAAqZ,yBAAA,MAAAxC,EAAA7W,KAAAoZ,wBAAApZ,KAAAmZ,yBAGA5U,EAAAgV,kBAAA,WACA,OAAAvZ,KAAAqY,aAAA,MAGA9T,EAAAiV,kBAAA,WACA,OAAAxZ,KAAAqY,aAAA,MAGA9T,EAAAkV,mBAAA,WACA,OAAAzZ,KAAAqY,aAAA,OAGA9T,EAAAmV,cAAA,SAAAC,EAAAlB,GACA,IAAAzE,EAAAhU,KAAA0T,MAEA,OAAAiG,EACAlB,EAAAI,OAAA,EAAAJ,EAAAK,SAAA9E,EAAArI,MAAA,EAAAqI,EAAArI,MAEA8M,EAAAS,UAAAlF,EAAApI,OAAA6M,EAAAQ,UAAAjF,EAAApI,OAAA,KAIArH,EAAAqV,eAAA,SAAAD,EAAAlB,GACA,OAAAkB,EACAlB,EAAAI,OAAA,QAAAJ,EAAAM,QAAA,aAEAN,EAAAO,MAAA,SAAAP,EAAAS,SAAA,aAIA3U,EAAAsV,uBAAA,SAAAF,EAAAlB,GACA,OAAAkB,EACAlB,EAAAI,OAAA,QAAAJ,EAAAK,SAAA,eAEAL,EAAAS,SAAA,QAAAT,EAAAQ,SAAA,gBAIA1U,EAAAuV,eAAA,WACA,OAAA9Z,KAAA0Z,eAAA1Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAmZ,0BAGA5U,EAAAwV,eAAA,WACA,OAAA/Z,KAAA0Z,cAAA1Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAoZ,0BAGA7U,EAAAyV,gBAAA,WACA,OAAAha,KAAA0Z,cAAA1Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAqZ,2BAGA9U,EAAA0V,gBAAA,WACA,OAAAja,KAAA4Z,gBAAA5Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAmZ,0BAGA5U,EAAA2V,gBAAA,WACA,OAAAla,KAAA4Z,eAAA5Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAoZ,0BAGA7U,EAAA4V,iBAAA,WACA,OAAAna,KAAA4Z,eAAA5Z,KAAA0T,MAAApS,OAAAiT,aAAAvU,KAAAqZ,2BAGA9U,EAAA6V,gBAAA,WACA,IAAApG,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACAmX,EAAAzY,KAAAmZ,wBAEA,OAAA7X,EAAAiT,aACAkE,EAAAC,QAAA,aAAA1E,EAAA1S,OAAA6S,aAAA,EAAAnU,KAAAqa,gBAAA,MAEA5B,EAAAC,QAAA,SAAApX,EAAAgZ,cAAAhZ,EAAAgZ,cAAA,UAIA/V,EAAAgW,gBAAA,WACA,IAAAvG,EAAAhU,KAAA0T,MACA+E,EAAAzY,KAAAoZ,wBAEA,OAAApF,EAAA1S,OAAAiT,aACAkE,EAAAC,QAAA,eAEAD,EAAAC,QAAA,aAAA1E,EAAA1S,OAAAoT,aAAA,EAAA1U,KAAAqa,gBAAA,UAIA9V,EAAAiW,iBAAA,WACA,IAAAxG,EAAAhU,KAAA0T,MACA+E,EAAAzY,KAAAqZ,yBAEA,OAAArF,EAAA1S,OAAAiT,aACAkE,EAAAC,QAAA,iBAEAD,EAAAC,QAAA,aAAA1E,EAAA1S,OAAAmZ,cAAA,EAAAza,KAAAqa,gBAAA,WAIA9V,EAAAiQ,wBAAA,WACA,IAAAR,EAAAhU,KAAA0T,MACA,OAAA1T,KAAA6Z,wBAAA7F,EAAA1S,OAAAiT,aAAAvU,KAAAmZ,0BAGA5U,EAAAsQ,wBAAA,WACA,IAAAb,EAAAhU,KAAA0T,MACA,OAAA1T,KAAA6Z,uBAAA7F,EAAA1S,OAAAiT,aAAAvU,KAAAoZ,0BAGA7U,EAAAyQ,yBAAA,WACA,IAAAhB,EAAAhU,KAAA0T,MACA,OAAA1T,KAAA6Z,uBAAA7F,EAAA1S,OAAAiT,aAAAvU,KAAAqZ,2BAGA9U,EAAA8V,gBAAA,SAAAxD,EAAA6D,GACA,IAGAC,EACA1O,EACA5I,EACAuX,EANA5G,EAAAhU,KAAA0T,MACApS,EAAA0S,EAAA1S,OACAwO,EAAA,EAOA,OAAA4K,GAAA1G,EAAA6G,qBAAAhE,GACA7C,EAAA6G,qBAAAhE,IAGA7C,EAAA8G,MACAH,EAAA3G,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAEA,MAAAc,GACA5K,EAAA+H,EAAAtI,EAAAqC,OAAAT,OAAA0G,EAAAgH,WAAAL,EAAA,MACAtX,EAAArD,KAAAsW,SAAArK,EAAA+H,EAAAiH,QAAA3Z,EAAA4Z,mBAAAlH,EAAAmH,iBAAA,UACO,OAAAtE,GACP5K,EAAA+H,EAAAc,GAAA/G,OAAAT,OAAA0G,EAAAgH,WAAAL,EAAA,OACAtX,EAAArD,KAAAsW,SAAArK,EAAA+H,EAAAoH,SAAA9Z,EAAA+Z,oBAAArH,EAAAsH,kBAAA,WAEArP,EAAA+H,EAAAzI,EAAAwC,OAAAT,OAAA0G,EAAAuH,WAAAZ,IACAtX,EAAArD,KAAAiV,SAAAhJ,EAAA+H,EAAAwH,QAAAxH,EAAAyH,gBAAAzH,EAAA0H,iBAAA,SACA1b,KAAA8V,sBAAA6E,EAAAtX,KAGAuX,EAAA5G,EAAAhI,GAAA0C,OAAA,QAAA2D,OAAA,OAAAsJ,QAAA,UACAtJ,OAAA,OAAAlQ,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UAAAkQ,OAAA,KAAA9T,KAAA8E,GAAAsL,KAAA,WACAqF,EAAAhI,GAAA0C,OAAA1O,MAAA6R,UAAA,QAAAlD,KAAA,WACA,IAAA1D,EAAAjL,KAAAkL,wBAEA4E,EAAA7E,EAAAU,QACAmE,EAAA7E,EAAAU,SAGAiP,EAAAzI,YAIA6B,EAAA6G,qBAAAhE,GAAA/G,GAAA,EAAAkE,EAAA6G,qBAAAhE,GAAA/G,EACAkE,EAAA6G,qBAAAhE,KAGAtS,EAAAqX,aAAA,SAAAC,GACA,IAAA7H,EAAAhU,KAAA0T,MACA7L,EAAAmM,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAmD,MAAA,KAAAnD,EAAAoD,YACAE,EAAAiM,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAqD,MAAA,KAAArD,EAAAsD,YACAE,EAAA+L,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAuD,OAAA,KAAAvD,EAAAwD,cACA4T,EAAAhU,EAAAhF,aAAAgF,GAAAuF,KAAA,IAAApN,KAAA8Z,eAAArF,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAia,gBAAAxF,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAoa,gBAAA3F,KAAAzU,OAAA+G,KAAA/G,KAAAuZ,kBAAA9E,KAAAzU,QACA6b,EAAA9T,EAAAlF,aAAAkF,GAAAqF,KAAA,IAAApN,KAAA+Z,eAAAtF,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAka,gBAAAzF,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAua,gBAAA9F,KAAAzU,OAAA+G,KAAA/G,KAAAwZ,kBAAA/E,KAAAzU,QACA6b,EAAA5T,EAAApF,aAAAoF,GAAAmF,KAAA,IAAApN,KAAAga,gBAAAvF,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAma,iBAAA1F,KAAAzU,OAAAoN,KAAA,KAAApN,KAAAwa,iBAAA/F,KAAAzU,OAAA+G,KAAA/G,KAAAyZ,mBAAAhF,KAAAzU,QAGAuE,EAAAuX,WAAA,SAAApZ,EAAAtE,EAAAmM,EAAAwR,GACA,IAAAC,EAAA,kBAAAtZ,MAAAtE,GAEA,OAAA6K,EAAA+S,GAIA,UAAAtZ,EAAAuZ,KACAvZ,EAAAtE,GAAA2d,EAIA/b,KAAAkc,2BAAAF,EAAAD,GARAxR,GAWAhG,EAAA2X,2BAAA,SAAAC,EAAAJ,GACA,IAAA/H,EAAAhU,KAAA0T,MACAxV,EAAA8V,EAAA1S,OAAAiT,aAAAP,EAAArI,MAAAqI,EAAApI,OACA,OAAAmQ,GAAAI,EAAAje,IAGAqG,EAAA2R,mBAAA,SAAAkG,EAAAC,EAAAC,GACA,IACAC,EACAhP,EACAiP,EACAC,EACAtJ,EACAnV,EACA0e,EAPAjQ,EAAA2P,EASA,GAAAC,EAGA,QAFAE,EAAApT,EAAAkT,UAGA5P,EAAA,CAAA2P,EAAA,SACO,OAAAG,EACP9P,EAAA,CAAA2P,EAAA,GAAAA,IAAAle,OAAA,SACO,GAAAqe,EAAA,GAQP,IAPAE,EAAAF,EAAA,EACAhP,EAAA6O,EAAA,GACAI,EAAAJ,IAAAle,OAAA,GACAiV,GAAAqJ,EAAAjP,IAAAkP,EAAA,GAEAhQ,EAAA,CAAAc,GAEAvP,EAAA,EAAmBA,EAAAye,EAAWze,IAC9B0e,GAAAnP,EAAA4F,GAAAnV,EAAA,GACAyO,EAAAkB,KAAA2O,EAAA,IAAAK,KAAAD,MAGAjQ,EAAAkB,KAAA6O,GAUA,OANAF,IACA7P,IAAAmQ,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,KAIArQ,GAGAlI,EAAAwY,oBAAA,SAAAC,GACA,IAAAhJ,EAAAhU,KAAA0T,MACAQ,EAAAF,EAAAE,KACA,OACAtM,MAAAoV,EAAA9I,EAAA3I,EAAA1I,aAAAma,YAAA9I,EAAA3I,EACAzD,MAAAkV,EAAA9I,EAAAxI,EAAA7I,aAAAma,YAAA9I,EAAAxI,EACA1D,OAAAgV,EAAA9I,EAAAY,GAAAjS,aAAAma,YAAA9I,EAAAY,GACAmI,SAAAD,EAAA9I,EAAAgJ,KAAAra,aAAAma,YAAA9I,EAAAgJ,OAIA3Y,EAAA4Y,OAAA,SAAAC,EAAAC,GACA,IAAArJ,EAAAhU,KAAA0T,MACAM,EAAAE,KAAA3I,EAAApJ,MAAA,UAAAkb,EAAA,KACArJ,EAAAE,KAAAxI,EAAAvJ,MAAA,UAAAkb,EAAA,KACArJ,EAAAE,KAAAY,GAAA3S,MAAA,UAAAkb,EAAA,KACArJ,EAAAE,KAAAgJ,KAAA/a,MAAA,UAAAkb,EAAA,KACAD,EAAAxV,MAAArJ,KAAAyV,EAAAoC,OACAgH,EAAAtV,MAAAvJ,KAAAyV,EAAA2D,OACAyF,EAAApV,OAAAzJ,KAAAyV,EAAA8D,QACAsF,EAAAH,SAAA1e,KAAAyV,EAAAqC,WAGA,IAGAiH,EACAlT,EAJA1K,EAAA,CACA6d,QAAA,UAUA,SAAAC,EAAAlc,GACA,IAAA0S,EAAAhU,KAAAuO,SAAA,IAAAkP,EAAAzd,MACAgU,EAAA0J,WAAApc,GACA0S,EAAA2J,WAAArc,GACA0S,EAAAD,OACAC,EAAA4J,UAAAtc,GAEA,SAAAuc,EAAAlK,EAAA5V,EAAA+f,GACArgB,OAAAyM,KAAAyJ,GAAAhJ,QAAA,SAAAvM,GACAL,EAAAK,GAAAuV,EAAAvV,GAAAqW,KAAAqJ,GAEArgB,OAAAyM,KAAAyJ,EAAAvV,IAAAF,OAAA,GACA2f,EAAAlK,EAAAvV,GAAAL,EAAAK,GAAA0f,KALA,CAQKR,EAAAtd,WAGL,SAAAyd,EAAAM,GACA,IAAA/J,EAAAhU,KACAgU,EAAAhI,GAAAgS,OAAAhS,GAAAgS,OAAAhS,GAAqE5M,EAAQ,MAC7E4U,EAAA+J,MACA/J,EAAA1S,OAAA0S,EAAAiK,mBACAjK,EAAAtS,KAAA,GACAsS,EAAAkK,MAAA,GACAlK,EAAAE,KAAA,GAo6SA,OAj6SAxU,EAAA+B,SAAA,SAAAH,GACA,WAAAkc,EAAAlc,IAGA5B,EAAAuB,MAAA,CACA0S,GAAA6J,EAAAnf,UACAkQ,SAAA,CACAoF,GAAA8J,EAAApf,YAGAif,EAAA5d,EAAAuB,MAAA0S,IACAvJ,EAAA1K,EAAAuB,MAAAsN,SAAAoF,IAEAgK,WAAA,aAGAvT,EAAAwT,UAAA,aAGAxT,EAAA2J,KAAA,WACA,IAAAC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAGA,GAFA0S,EAAAmK,aAEA7c,EAAA8c,SACApK,EAAAqK,iBAAA/c,EAAA8c,SAAA9c,EAAAgd,cAAAhd,EAAAid,aAAAjd,EAAAkd,UAAAxK,EAAAyK,mBACK,GAAAnd,EAAAod,UACL1K,EAAAyK,aAAAzK,EAAA2K,kBAAArd,EAAAod,UAAApd,EAAAkd,iBACK,GAAAld,EAAAsd,UACL5K,EAAAyK,aAAAzK,EAAA6K,kBAAAvd,EAAAsd,gBACK,KAAAtd,EAAAwd,aAGL,MAAA1d,MAAA,+CAFA4S,EAAAyK,aAAAzK,EAAA+K,qBAAAzd,EAAAwd,iBAMA1U,EAAA+T,WAAA,WACA,IAAAnK,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAEA0S,EAAAgL,OAAA,YAAArC,KAAA,QAAA3I,EAAAiL,eAAAjL,EAAAgL,OAAA,SAAAhL,EAAAkL,eAAAlL,EAAAgL,OAAA,SAAAhL,EAAAmL,cAAAnL,EAAAgL,OAAA,QAAAhL,EAAAoL,kBAAApL,EAAAgL,OAAA,YAAAhL,EAAAqL,SAAArL,EAAAsL,YAAAtL,EAAAgL,QAAAhL,EAAAI,iBAAAJ,EAAAsL,YAAAtL,EAAAiL,gBAAAjL,EAAAW,iBAAAX,EAAAsL,YAAAtL,EAAAkL,gBACAlL,EAAAuL,gBAAAvL,EAAAsL,YAAAtL,EAAAmL,eAAAnL,EAAAwL,oBAAAxL,EAAAsL,YAAAtL,EAAAoL,mBAAApL,EAAAyL,UAAA,KACAzL,EAAA0L,UAAA,EACA1L,EAAA2L,SAAA,EACA3L,EAAA4L,aAAA,EACA5L,EAAA6L,WAAA,EACA7L,EAAA8L,YAAA,EACA9L,EAAArR,MAAAqR,EAAA+L,gBACA/L,EAAAgM,WAAAhM,EAAAiM,qBACAjM,EAAAkM,eAAA5e,EAAA6e,gBAAAnU,EAAAyK,KAAAzD,OAAAhH,EAAAyK,KAAAzD,OAAAoN,IACApM,EAAAqD,eAAA/V,EAAA+e,iBAAArU,EAAAyK,KAAAzD,OAAAhH,EAAAyK,KAAAzD,OAAAoN,IACApM,EAAAgD,sBAAAhD,EAAAqD,eAAAiJ,MAAA,iBAAAtW,GACA,OAAAA,EAAAuW,oBACK,gBAAAvW,GACL,OAAAA,EAAAwW,eACK,kBAAAxW,GACL,OAAAA,EAAAyW,eACK,kBAAAzW,GACL,OAAAA,EAAA0W,aACK,oBAAA1W,GACL,OAAAA,EAAA2W,UAAA,IAAA3W,EAAA4W,YACK,oBAAA5W,GACL,WAAAA,EAAA4W,YACK,oBAAA5W,GACL,OAAAA,EAAA6W,aACK,yBACL,aAEA7M,EAAA8M,gBAAA,GACA9M,EAAA+M,gBAAA,GACA/M,EAAAgN,iBAAA,GACAhN,EAAAiN,mBAAA,GACAjN,EAAAwH,QAAAla,EAAAiT,aAAAjT,EAAA6S,aAAA,eAAA7S,EAAA6S,aAAA,eACAH,EAAAiH,QAAA3Z,EAAAiT,aAAAjT,EAAAoT,aAAA,eAAApT,EAAAoT,aAAA,eACAV,EAAAoH,SAAA9Z,EAAAiT,aAAAjT,EAAAmZ,cAAA,eAAAnZ,EAAAmZ,cAAA,eACAzG,EAAAkN,WAAA5f,EAAAiT,aAAA,gBACAP,EAAAmN,cAAA,UAAA7f,EAAA8f,gBACApN,EAAAqN,cAAA,UAAA/f,EAAA8f,gBACApN,EAAAsN,YAAA,aAAAhgB,EAAAigB,qBAAA,cAAAjgB,EAAAigB,oBACAvN,EAAAwN,aAAA,aAAAlgB,EAAAigB,qBAAA,gBAAAjgB,EAAAigB,oBACAvN,EAAAyN,WAAA,EACAzN,EAAA0N,gBAAA,EACA1N,EAAA2N,iBAAA,EACA3N,EAAA6G,qBAAA,CACAtP,EAAA,EACAG,EAAA,EACAoJ,GAAA,GAEAd,EAAA4N,qBAAA,GACA5N,EAAA6N,sBAAAvgB,EAAAiT,eAAAjT,EAAAgT,YAAA,KACAN,EAAA8N,oBAAA,EACA9N,EAAA+N,cAAA,GACA/N,EAAAgO,gCAAApT,EACAoF,EAAAE,KAAAgJ,KAAAlR,EAAA6F,UAAA,KAGAzH,EAAA6X,kBAAA,WACAjiB,KAAAkiB,SACAliB,KAAAkiB,UAGAliB,KAAAmiB,UACAniB,KAAAmiB,WAGAniB,KAAAoiB,SACApiB,KAAAoiB,UAGApiB,KAAAqiB,WACAriB,KAAAqiB,YAGAriB,KAAAsiB,UACAtiB,KAAAsiB,YAIAlY,EAAAqU,aAAA,SAAA/c,GACA,IAGA6gB,EACAtO,EAJAD,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAGAkhB,GAAA,EACAxO,EAAA3Q,KAAA,IAAAmQ,EAAAQ,GAEAA,EAAAyO,SACAzO,EAAAyO,UAGAzO,EAAA0O,WACA1O,EAAA0O,YAGA1O,EAAA2O,UACA3O,EAAA2O,WAGArhB,EAAAE,OAEK,oBAAAF,EAAAE,OAAA4R,KACLY,EAAA4O,YAAAthB,EAAAE,OAEAwS,EAAA4O,YAAA5W,EAAA0C,OAAApN,EAAAE,QAJAwS,EAAA4O,YAAA5W,EAAA6F,UAAA,IAOAmC,EAAA4O,YAAA9b,UACAkN,EAAA4O,YAAA5W,EAAA0C,OAAAmU,SAAAzgB,cAAA,QAAAD,MAAA,aACA6R,EAAA8O,gBAAA9O,EAAA4O,aACAJ,GAAA,GAGAxO,EAAA4O,YAAAG,KAAA,IAAApH,QAAA,SAEA3H,EAAAtS,KAAAshB,GAAA,GACAhP,EAAAtS,KAAAqU,QAAA/B,EAAAiP,qBAAAvhB,GAEAJ,EAAA4hB,cACAlP,EAAAtS,KAAAqU,QAAA/B,EAAAtS,KAAAqU,QAAAoN,OAAA7hB,EAAA4hB,cAIA5hB,EAAA8hB,WACApP,EAAAqP,oBAAA,IAAA/hB,EAAA8hB,UAAApP,EAAAsP,SAAAtP,EAAAtS,KAAAqU,SAAAzU,EAAA8hB,WAGA9hB,EAAAiiB,aACAvP,EAAAwP,oBAAA,IAAAliB,EAAAiiB,YAAAvP,EAAAsP,SAAAtP,EAAAtS,KAAAqU,SAAAzU,EAAAiiB,aAIAvP,EAAAyP,cACAzP,EAAA0P,eAEA1P,EAAAzI,EAAA+B,OAAAtB,EAAA2X,OAAA3P,EAAAuH,WAAAvH,EAAAtS,KAAAqU,WACA/B,EAAAtI,EAAA4B,OAAA0G,EAAAgH,WAAAhH,EAAAtS,KAAAqU,QAAA,MACA/B,EAAAc,GAAAxH,OAAA0G,EAAAgH,WAAAhH,EAAAtS,KAAAqU,QAAA,OACA/B,EAAA4P,KAAAtW,OAAA0G,EAAAzI,EAAA+B,UACA0G,EAAA6P,KAAAvW,OAAA0G,EAAAtI,EAAA4B,UACA0G,EAAA8P,MAAAxW,OAAA0G,EAAAc,GAAAxH,UAEA0G,EAAA+P,WAAA/P,EAAAzI,EAAA+B,SAEA0G,EAAAlO,OACAkO,EAAAlO,MAAAmG,MAAA+H,EAAA4P,MAGAtiB,EAAA0iB,cACAhQ,EAAApQ,KAAAqI,MAAA+H,EAAAzI,GAMAyI,EAAA8G,IAAA9G,EAAA4O,YAAAvQ,OAAA,OAAAlQ,MAAA,qBAAA8hB,GAAA,wBACA,OAAA3iB,EAAA2B,YAAA1E,KAAAyV,KACKiQ,GAAA,wBACL,OAAA3iB,EAAA4B,WAAA3E,KAAAyV,KAGAA,EAAA1S,OAAA4iB,eACAlQ,EAAA8G,IAAA1N,KAAA,QAAA4G,EAAA1S,OAAA4iB,eAIA3B,EAAAvO,EAAA8G,IAAAzI,OAAA,QACA2B,EAAAmQ,UAAAnQ,EAAAoQ,WAAA7B,EAAAvO,EAAAgL,QACAhL,EAAAqQ,UAAArQ,EAAAoQ,WAAA7B,EAAAvO,EAAAiL,gBACAjL,EAAAsQ,UAAAtQ,EAAAoQ,WAAA7B,EAAAvO,EAAAkL,gBACAlL,EAAAuQ,SAAAvQ,EAAAoQ,WAAA7B,EAAAvO,EAAAmL,eACAnL,EAAAwQ,aAAAxQ,EAAAoQ,WAAA7B,EAAAvO,EAAAoL,mBACApL,EAAAyQ,gBAEAxQ,EAAAD,EAAAC,KAAAD,EAAA8G,IAAAzI,OAAA,KAAAjF,KAAA,YAAA4G,EAAAK,aAAA,SAEAL,EAAA0Q,cACA1Q,EAAA0Q,eAGA1Q,EAAA2Q,aACA3Q,EAAA2Q,cAGA3Q,EAAA4Q,YACA5Q,EAAA4Q,aAGA5Q,EAAA6Q,WACA7Q,EAAA6Q,YAMA5Q,EAAA5B,OAAA,QAAAjF,KAAA,QAAA3I,EAAAsC,KAAA,IAAAtC,EAAAqC,OAAAsG,KAAA,wBACAA,KAAA,8BAGA4G,EAAA8Q,aAEA9Q,EAAA+Q,WAEA9Q,EAAA5B,OAAA,KAAAjF,KAAA,YAAA4G,EAAAqL,UAAAjS,KAAA,QAAA3I,EAAAxD,OAEAK,EAAA0jB,kBACAhR,EAAAiR,gBAIAjR,EAAAkR,gBAEAlR,EAAAiO,oBAGAhO,EAAAjC,OAAA,OAAA1Q,EAAA6jB,gBAAA,UAAA1gB,EAAAlB,SAAA6J,KAAA,QAAA3I,EAAAoB,UAAAuH,KAAA,QAAA4G,EAAArI,OAAAyB,KAAA,SAAA4G,EAAApI,QAAAzJ,MAAA,aAAA8hB,GAAA,sBAEA3iB,EAAA8jB,eACApR,EAAAlO,MAAA6d,OAAA3P,EAAAqR,oBAIArR,EAAA3Q,KAAA0Q,OAEAC,EAAAsR,cAAAtR,EAAAtS,KAAAqU,SAEAyM,IACAxO,EAAAuR,kBACAvR,EAAA1S,OAAAwB,OAAAvE,KAAAyV,GACAA,EAAAmJ,OAAA,CACAtB,gBAAA,EACA2J,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACAC,uBAAA,KAKA3R,EAAA4R,aAEA5R,EAAA+J,IAAA8H,QAAA7R,EAAA4O,YAAAxP,QAGAhJ,EAAA0b,YAAA,SAAAC,EAAAC,GACA,IAAAhS,EAAAhU,KAEA,SAAAgmB,GACAD,EAAApX,KAAA,WACA,IAAA2C,EAAA0C,EAAAhI,GAAA0C,OAAA1O,MACAimB,EAAA3U,EAAAlE,KAAA,MACA8Y,EAAA5U,EAAAlE,KAAA,MACA+Y,EAAA7U,EAAAlE,KAAA,MACA0H,EAAAxD,EAAAlE,KAAA,MACAkE,EAAAlE,KAAA,CACA6Y,GAAAtc,KAAAC,KAAAqc,GACAC,GAAAvc,KAAAC,KAAAsc,GACAC,GAAAxc,KAAAC,KAAAuc,GACArR,GAAAnL,KAAAC,KAAAkL,QAMA1K,EAAAqZ,YAAA,WACA,IAAAzP,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA8kB,EAAApS,EAAAvQ,OAAAuQ,EAAAqS,kBAAA,EACAC,EAAAtS,EAAAvQ,OAAAuQ,EAAAuS,iBAAA,EACAC,EAAAxS,EAAAmN,eAAAnN,EAAAqN,cAAA,EAAA+E,EACAK,EAAAzS,EAAA0S,aACAC,EAAArlB,EAAAiT,cAAAkS,EAAA,EAAAzS,EAAA4S,wBAAA,KACAC,EAAAvlB,EAAAwlB,gBAAAL,EAAAnlB,EAAAylB,qBAAAJ,EAAA,EACA3S,EAAAgT,aAAAhT,EAAAiT,kBACAjT,EAAAkT,cAAAlT,EAAAmT,mBAEAnT,EAAAoT,OAAA9lB,EAAAiT,aAAA,CACA3B,IAAAoB,EAAA4S,wBAAA,MAAA5S,EAAAqT,uBACAxU,MAAA4T,EAAA,EAAAzS,EAAAsT,yBACAxU,OAAAkB,EAAA4S,wBAAA,KAAAJ,EAAAxS,EAAAuT,0BACAxU,KAAA8T,GAAAJ,EAAA,EAAAzS,EAAAwT,0BACK,CACL5U,IAAA,EAAAoB,EAAAqT,uBAEAxU,MAAA4T,EAAA,EAAAzS,EAAAsT,yBACAxU,OAAA6T,EAAAE,EAAAL,EAAAxS,EAAAuT,0BACAxU,KAAA0T,EAAA,EAAAzS,EAAAwT,yBAGAxT,EAAAyT,QAAAnmB,EAAAiT,aAAA,CACA3B,IAAAoB,EAAAoT,OAAAxU,IACAC,MAAA6U,IACA5U,OAAA,GAAA0T,EACAzT,KAAAiB,EAAA4N,sBACK,CACLhP,IAAAoB,EAAAkT,cAAAL,EAAAL,EACA3T,MAAA6U,IACA5U,OAAA6T,EAAAH,EACAzT,KAAAiB,EAAAoT,OAAArU,MAGAiB,EAAA2T,QAAA,CACA/U,IAAA,EACAC,MAAA6U,IACA5U,OAAA,EACAC,KAAA,GAGAiB,EAAA4T,qBACA5T,EAAA4T,oBAAAxB,EAAAE,GAGAtS,EAAArI,MAAAqI,EAAAgT,aAAAhT,EAAAoT,OAAArU,KAAAiB,EAAAoT,OAAAvU,MACAmB,EAAApI,OAAAoI,EAAAkT,cAAAlT,EAAAoT,OAAAxU,IAAAoB,EAAAoT,OAAAtU,OAEAkB,EAAArI,MAAA,IACAqI,EAAArI,MAAA,GAGAqI,EAAApI,OAAA,IACAoI,EAAApI,OAAA,GAGAoI,EAAA6T,OAAAvmB,EAAAiT,aAAAP,EAAAoT,OAAArU,KAAAiB,EAAA4N,qBAAA5N,EAAA6N,sBAAA7N,EAAArI,MACAqI,EAAA8T,QAAAxmB,EAAAiT,aAAAP,EAAApI,OAAAoI,EAAAkT,cAAAlT,EAAAyT,QAAA7U,IAAAoB,EAAAyT,QAAA3U,OAEAkB,EAAA6T,OAAA,IACA7T,EAAA6T,OAAA,GAGA7T,EAAA8T,QAAA,IACA9T,EAAA8T,QAAA,GAIA9T,EAAA+T,SAAA/T,EAAArI,OAAAqI,EAAAmN,cAAAmF,EAAA,MACAtS,EAAAgU,UAAAhU,EAAApI,QAAAoI,EAAAmN,cAAA,MAEAnN,EAAAiU,QAAA,WAAA3mB,EAAA4mB,mBACAlU,EAAAgU,WAAAhU,EAAApI,OAAAoI,EAAAmU,uBAGAnU,EAAAoU,cACApU,EAAAoU,eAGApU,EAAAmN,eAAAsF,IACAzS,EAAA2T,QAAA5U,KAAAiB,EAAA+T,SAAA,MAAA/T,EAAAqU,iBAIAje,EAAAkb,cAAA,SAAAvP,GACA,IAAA/B,EAAAhU,KAIAgU,EAAAsU,qBAAAvS,GAEA/B,EAAAuU,oBAAAxS,GAEA/B,EAAAwU,qBAAAzS,GAEA/B,EAAA0S,cAAA1S,EAAAyU,qBACAzU,EAAAyU,oBAAA1S,GAKA/B,EAAA0U,0BACA1U,EAAA0U,yBAAA3S,GAIA/B,EAAA2U,eAGAve,EAAAue,YAAA,WACA,IAAA3U,EAAAhU,KACAgU,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAA1G,QAAAolB,OAAA,SAAAnZ,GACA,OAAAgK,EAAA4U,eAAA5e,EAAA6M,MACKhU,aAAAma,SAAAhJ,EAAA1S,OAAAunB,qBAAA1mB,MAAA,cAGLiI,EAAA+S,OAAA,SAAA7S,EAAA8S,GACA,IAOA0L,EAAAC,EAAAlN,EAAAmN,EAAArD,EAAAH,EAAAC,EAAAC,EAAAuD,EAAAC,EAAAC,EAAAC,EAAAC,EAEAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA1M,EAAA2M,EAAAC,EACAC,EAAAC,EAEArd,EACAzO,EACA+rB,EACAC,EAEAC,EACAC,EAnBAlW,EAAAhU,KACAiU,EAAAD,EAAAC,KACAjI,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OACA6oB,EAAAnW,EAAAoW,gBAAApW,EAAAqW,YACAC,EAAAtW,EAAAoW,gBAAApW,EAAAuW,WACAC,EAAAxW,EAAAoW,gBAAApW,EAAAyW,YAEAC,EAAA1W,EAAA0S,aAIA/L,EAAA3G,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAKA4U,EAAA3W,EAAA2W,GAAAlW,KAAAT,GAkEA,GA9DA8U,EAAAze,EADAC,KAAA,GACA,YACAye,EAAA1e,EAAAC,EAAA,mBACAuR,EAAAxR,EAAAC,EAAA,qBACAkb,EAAAnb,EAAAC,EAAA,oBACAmb,EAAApb,EAAAC,EAAA,wBACAob,EAAArb,EAAAC,EAAA,2BACA2e,EAAA5e,EAAAC,EAAA,sBACA+e,EAAAhf,EAAAC,EAAA,kBAAAmb,GACAyD,EAAA7e,EAAAC,EAAA,iBACA6e,EAAA9e,EAAAC,EAAA,oBACA8e,EAAA/e,EAAAC,EAAA,oBACA0e,EAAA3e,EAAAC,EAAA,wBAAAuR,GACA8J,EAAAtb,EAAAC,EAAA,wBAAAuR,GACAmB,EAAAnB,EAAAva,EAAAunB,oBAAA,EACAc,EAAAX,EAAAhM,EAAA,EACA4M,EAAAjE,EAAA3I,EAAA,EACAI,KAAApJ,EAAA3Q,KAAA0Z,oBAAA6M,GAEAV,GAAA5nB,EAAAspB,YACA5W,EAAA6W,aAAA7W,EAAAsP,SAAAtP,EAAAtS,KAAAqU,SAAAzL,EAAA8S,GACKgM,GAGLpV,EAAAuR,iBAAA,GAIAvR,EAAAoB,iBAAA,IAAAuF,EAAAzc,QACA8V,EAAAzI,EAAA+B,OAAA,GAAA0G,EAAAE,KAAA3I,EAAAsG,UAAA,SAAApP,SAGAkY,EAAAzc,QACA8V,EAAA8W,cAAAnQ,EAAA8K,EAAAC,EAAAuD,GAEA3nB,EAAAkW,qBACA/K,EAAAuH,EAAA3Q,KAAAyS,sBAAA6E,MAGA3G,EAAAoC,MAAA3J,WAAA,IACAuH,EAAAqC,SAAA5J,WAAA,KAGAnL,EAAAypB,eAAAzgB,EAAAwf,OACAE,EAAAhW,EAAAzI,EAAAyf,aAGAhX,EAAAtI,EAAA4B,OAAA0G,EAAAgH,WAAAL,EAAA,IAAAqP,IACAhW,EAAAc,GAAAxH,OAAA0G,EAAAgH,WAAAL,EAAA,KAAAqP,KAEA1oB,EAAAoW,oBAAApW,EAAA2pB,mBACAjX,EAAA2D,MAAAlL,WAAAuH,EAAA3Q,KAAA6S,mBAAAlC,EAAAtI,EAAA4B,SAAAhM,EAAA2pB,qBAGA3pB,EAAAuW,qBAAAvW,EAAA4pB,oBACAlX,EAAA8D,OAAArL,WAAAuH,EAAA3Q,KAAA6S,mBAAAlC,EAAAc,GAAAxH,SAAAhM,EAAA4pB,qBAIAlX,EAAA3Q,KAAA8Z,OAAAC,EAAAsN,GAEA1W,EAAA3Q,KAAAuY,aAAAC,IAEA4J,GAAA4D,IAAA1O,EAAAzc,OACA,GAAAoD,EAAAuU,qBAAApJ,EAAA,CACA,IAAAzO,EAAA,EAAmBA,EAAAyO,EAAAvO,OAAuBF,IAC1C,GAAAyO,EAAAvO,OAAAF,EAAAsD,EAAA6pB,wBAAA,CACApB,EAAA/rB,EACA,MAIAgW,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAAmD,MAAA,eAAA+G,KAAA,SAAAyc,GACA,IAAA3b,EAAAhD,EAAAkM,QAAAyS,GAEA3b,GAAA,GACAzD,EAAA0C,OAAA1O,MAAAmC,MAAA,UAAAsN,EAAAsa,EAAA,uBAIA/V,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAAmD,MAAA,eAAAzF,MAAA,mBAKAmnB,EAAAtV,EAAAqX,iBAAArX,EAAAqX,iBAAAlB,GAAA,QAAAvb,EACA2a,EAAAvV,EAAAsX,gBAAAtX,EAAAsX,gBAAAhB,QAAA1b,EACA4a,EAAAxV,EAAAuX,iBAAAvX,EAAAuX,iBAAAf,GAAA,QAAA5b,EACA6a,EAAAzV,EAAAwX,kBAAArB,EAAAG,EAAAE,GAAA,GACAd,EAAA1V,EAAAwX,kBAAArB,EAAAG,EAAAE,GAAA,GAEA1B,IACA9U,EAAA6P,KAAAvW,OAAA0G,EAAAgH,WAAAL,EAAA,MACA3G,EAAA8P,MAAAxW,OAAA0G,EAAAgH,WAAAL,EAAA,QAIA3G,EAAAyX,mBAEAxX,EAAAvF,OAAA,QAAAjK,EAAAsC,KAAA,IAAAtC,EAAAqC,OAAAsG,KAAA,IAAA4G,EAAArI,MAAA,GAAAyB,KAAA,IAAA4G,EAAApI,OAAA,GAAA7E,KAAAzF,EAAAoqB,uBAAA7oB,aAAAV,MAAA,UAAAwY,EAAAzc,OAAA,KAEA8V,EAAA2X,WAAA3O,GAEAhJ,EAAA4X,aAAA5O,GAEAhJ,EAAA6X,UAAAlC,GAEA3V,EAAA8X,WAAAnC,GACA3V,EAAA+X,WAAApC,GACA3V,EAAAgY,eAEAhY,EAAAiY,gBACAjY,EAAAkY,WAAAvC,GAIA3V,EAAAmY,aACAnY,EAAAmY,cAIAnY,EAAAoY,WACApY,EAAAoY,UAAApP,EAAA2M,EAAAnE,GAIAxR,EAAAqY,gBACArY,EAAAqY,eAAAtD,EAAA3L,EAAAJ,EAAA2M,EAAAQ,EAAAG,EAAAE,GAIAvW,EAAApC,UAAA,IAAApN,EAAAe,iBAAA2d,OAAAnP,EAAAuW,UAAA9V,KAAAT,IAAAnC,UAAA,UAAAM,SAEA7Q,EAAAgrB,sBAAAhiB,EAAAwf,MAAAX,IACAnV,EAAAuY,kBAEAvY,EAAAwY,YACAxY,EAAAwY,cAKAxY,EAAAyY,gBAEAxC,GAAAjW,EAAA1S,OAAAiT,aAAAP,EAAA0Y,QAAA1Y,EAAA2Y,SAAAlY,KAAAT,GACAkW,GAAAlW,EAAA1S,OAAAiT,aAAAP,EAAA2Y,QAAA3Y,EAAA0Y,SAAAjY,KAAAT,GAEA1J,EAAAwf,OACAA,EAAA9V,EAAA4Y,aAAA,CACA7W,QAAA4E,EACAmP,KAAAxf,EAAAwf,KACA9M,SAAA1S,EAAAwf,KAAA9M,SACAuM,UACAC,WACAF,WACAW,KACAC,KACAS,KACAlB,WACAC,eAIA1M,GAAA8M,IAAA9V,EAAA6Y,eAGA7gB,EAAAnJ,aAAAma,YAAArO,KAAA,WACA,IAAAme,EAAA,GAEA,CAAA9Y,EAAA+Y,UAAAxD,GAAA,GAAAvV,EAAAgZ,WAAAxD,GAAA,GAAAxV,EAAAiZ,WAAA3D,GAAA,GAAAtV,EAAAkZ,aAAAjD,EAAAC,GAAA,GAAAlW,EAAAmZ,WAAA1D,EAAAC,EAAApf,EAAAwf,MAAA,GAAA9V,EAAAoZ,cAAA,GAAApZ,EAAAqZ,YAAA,IAAA1iB,QAAA,SAAAyS,GACAA,EAAAzS,QAAA,SAAA9H,GACAiqB,EAAAnf,KAAA9K,OAIAgnB,EAAA7V,EAAAsZ,eACAR,EAAAniB,QAAA,SAAA4iB,GACA1D,EAAA2D,IAAAD,OAEOhvB,KAAAsrB,EAAA,WACPC,GACAA,IAGAxoB,EAAA0B,YACA1B,EAAA0B,WAAAzE,KAAAyV,MAIAA,EAAA+Y,UAAAxD,GACAvV,EAAAgZ,WAAAxD,GACAxV,EAAAiZ,WAAA3D,GACAtV,EAAAkZ,aAAAjD,EAAAC,GACAlW,EAAAmZ,WAAA1D,EAAAC,EAAApf,EAAAwf,MACA9V,EAAAoZ,eACApZ,EAAAqZ,aAEA/rB,EAAA0B,YACA1B,EAAA0B,WAAAzE,KAAAyV,IAKAA,EAAAsP,SAAAtP,EAAAtS,KAAAqU,SAAApL,QAAA,SAAAkM,GACA7C,EAAA+N,cAAAlL,IAAA,KAIAzM,EAAAqjB,gBAAA,SAAAnjB,GACA,IAEA8S,EAFApJ,EAAAhU,KACAsB,EAAA0S,EAAA1S,QAEAgJ,KAAA,IAEAuR,eAAAxR,EAAAC,EAAA,qBACAA,EAAAkb,cAAAnb,EAAAC,EAAA,oBACAA,EAAA4e,WAAA7e,EAAAC,EAAA,iBAEAA,EAAAmb,mBAAA,EACAnb,EAAAob,sBAAA,EACApb,EAAA0e,uBAAA,EACA1e,EAAAojB,2BAAArjB,EAAAC,EAAA,6BAAAA,EAAAuR,gBAEA7H,EAAAyP,cAEAnZ,EAAA4e,YAAA5nB,EAAAspB,cACAxN,EAAApJ,EAAA3Q,KAAA0Z,oBAAAzS,EAAAqb,sBAAArkB,EAAAunB,oBAAA,GAEA7U,EAAA0P,eACA1P,EAAAyQ,gBAEAzQ,EAAA2Z,aAAArjB,EAAAojB,2BAAAtQ,IAIApJ,EAAAmJ,OAAA7S,EAAA8S,IAGAhT,EAAAwjB,qBAAA,WACA5tB,KAAAmd,OAAA,CACA2L,OAAA,EACAC,cAAA,EACAI,eAAA,EACAxD,uBAAA,KAIAvb,EAAAsL,aAAA,WACA,qBAAA1V,KAAAsB,OAAAusB,aAGAzjB,EAAAgL,cAAA,WACA,OAAApV,KAAAsB,OAAAusB,YAAAlV,QAAA,eAGAvO,EAAA0jB,UAAA,WACA,IACAxsB,EADAtB,KACAsB,OACA,OAFAtB,KAEA0V,iBAAApU,EAAAysB,QAAA5jB,EAAA7I,EAAA0sB,WAGA5jB,EAAAoM,cAAA,WACA,qBAAAxW,KAAAsB,OAAA2sB,aAGA7jB,EAAAiK,aAAA,SAAAtW,GACA,IAEAwN,EACAG,EAHAsI,EAAAhU,KACAsB,EAAA0S,EAAA1S,OA8BA,MA1BA,SAAAvD,GACAwN,EAAA1B,EAAAmK,EAAAoT,OAAArU,MACArH,EAAA7B,EAAAmK,EAAAoT,OAAAxU,MACK,YAAA7U,GACLwN,EAAA1B,EAAAmK,EAAAyT,QAAA1U,MACArH,EAAA7B,EAAAmK,EAAAyT,QAAA7U,MACK,WAAA7U,GACLwN,EAAAyI,EAAA2T,QAAA5U,KACArH,EAAAsI,EAAA2T,QAAA/U,KACK,MAAA7U,GACLwN,EAAA,EACAG,EAAApK,EAAAiT,aAAA,EAAAP,EAAApI,QACK,MAAA7N,GACLwN,EAAA,EACAG,EAAApK,EAAAiT,aAAAP,EAAApI,OAAA,GACK,OAAA7N,GACLwN,EAAAjK,EAAAiT,aAAA,EAAAP,EAAArI,MACAD,EAAApK,EAAAiT,aAAA,KACK,SAAAxW,GACLwN,EAAA,EACAG,EAAApK,EAAAiT,aAAA,EAAAP,EAAA8T,SACK,QAAA/pB,IACLwN,EAAAyI,EAAA+T,SAAA,EACArc,EAAAsI,EAAAgU,UAAA,GAAAhU,EAAAiU,QAAA,eAGA,aAAA1c,EAAA,IAAAG,EAAA,KAGAtB,EAAA8jB,eAAA,SAAAlkB,GACA,cAAAA,EAAApM,OAAAoC,KAAA+hB,cAAA/X,EAAA6M,IAAA,KAGAzM,EAAA+jB,wBAAA,SAAAnkB,GACA,cAAAA,EAAApM,OAAAoC,KAAA+hB,cAAA/X,EAAA6M,IAAA7W,KAAAouB,iBAAApkB,GAAA,GAGAI,EAAAgkB,iBAAA,SAAApkB,GACA,IACAqkB,GADAllB,EAAAnJ,KAAAsB,OAAAgtB,YAAAtuB,KAAAsB,OAAAgtB,WAAAtkB,GAAAhK,KAAAsB,OAAAgtB,YACA,IACA,OAAArlB,EAAAe,EAAApM,OAAAoC,KAAAuuB,cAAAvkB,GAAA,GAAAqkB,EAAA,GAGAjkB,EAAAokB,eAAA,WACA,OAAAxuB,KAAAisB,eAAA,KAGA7hB,EAAAqkB,GAAA,SAAAzkB,GACA,OAAAA,EAAAhK,KAAAuL,EAAAvB,EAAAuB,GAAA,MAGAnB,EAAAugB,GAAA,SAAA3gB,GACA,IAAAgK,EAAAhU,KACApC,EAAAoM,EAAApM,MAQA,OANAoW,EAAA0B,eACA9X,EAAAoW,EAAA2B,UAAA3L,EAAApM,OACKoW,EAAAoB,iBAAA,kBAAApL,EAAApM,QACLA,EAAAoW,EAAA1S,OAAAotB,kBAAA/V,QAAA3O,EAAApM,QAGA+L,KAAAC,KAAAoK,EAAAzI,EAAA3N,KAGAwM,EAAAukB,GAAA,SAAA3kB,GACA,IACA4kB,EAAA5kB,EAAA3G,MAAA,OAAA2G,EAAA3G,KADArD,KACA8U,GADA9U,KACA0L,EACA,OAAA/B,KAAAC,KAAAglB,EAAA5kB,EAAApM,SAGAwM,EAAAykB,MAAA,SAAA7kB,GACA,OAAAA,EAAAhK,KAAA4jB,KAAA5Z,EAAAuB,GAAA,MAGAnB,EAAA0kB,cAAA,SAAAjT,EAAAuB,GACA,IACAhH,EACAuB,EACAG,EAHA9D,EAAAhU,KAKAod,KAAAxV,MACAwO,EAAAgH,EAAAxV,OAEAwO,EAAApC,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAmD,OAEAiU,IACAzF,IAAAvT,eAIAua,KAAAtV,MACA6P,EAAAyF,EAAAtV,OAEA6P,EAAA3D,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAqD,OAEA+T,IACAlE,IAAA9U,eAIAua,KAAApV,OACA8P,EAAAsF,EAAApV,QAEA8P,EAAA9D,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAuD,QAEA6T,IACA/D,IAAAjV,gBAIAgZ,EAAA7H,EAAAC,KAAApR,aAAAmR,EAAAC,MAAA7G,KAAA,YAAA4G,EAAAK,aAAA,SACA+B,EAAAhJ,KAAA,YAAA4G,EAAAK,aAAA,MACAsD,EAAAvK,KAAA,YAAA4G,EAAAK,aAAA,MACAyD,EAAA1K,KAAA,YAAA4G,EAAAK,aAAA,OACAL,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAQ,WAAAmI,KAAA,YAAA4G,EAAAK,aAAA,SAGAjK,EAAAujB,aAAA,SAAA9R,EAAAuB,GACA,IAAApJ,EAAAhU,KACAgU,EAAA8a,cAAAjT,EAAAuB,GAEApJ,EAAA1S,OAAAwlB,eACA9S,EAAA+a,iBAAAlT,EAAAuB,GAGApJ,EAAAvQ,QACAuQ,EAAAgb,gBAAAnT,IAIAzR,EAAAqa,cAAA,WACA,IAAAzQ,EAAAhU,KACA8F,EAAAkO,EAAA8G,IAAApM,OAAA,yBACAsF,EAAA8G,IAAA1N,KAAA,QAAA4G,EAAAgT,cAAA5Z,KAAA,SAAA4G,EAAAkT,eACAlT,EAAA8G,IAAAjJ,UAAA,KAAAmC,EAAAgL,OAAA,IAAAhL,EAAAmL,gBAAAzQ,OAAA,QAAAtB,KAAA,QAAA4G,EAAArI,OAAAyB,KAAA,SAAA4G,EAAApI,QACAoI,EAAA8G,IAAApM,OAAA,IAAAsF,EAAAiL,gBAAAvQ,OAAA,QAAAtB,KAAA,IAAA4G,EAAAib,cAAAxa,KAAAT,IAAA5G,KAAA,IAAA4G,EAAAkb,cAAAza,KAAAT,IAAA5G,KAAA,QAAA4G,EAAAmb,kBAAA1a,KAAAT,IAAA5G,KAAA,SAAA4G,EAAAob,mBAAA3a,KAAAT,IACAA,EAAA8G,IAAApM,OAAA,IAAAsF,EAAAkL,gBAAAxQ,OAAA,QAAAtB,KAAA,IAAA4G,EAAAqb,cAAA5a,KAAAT,IAAA5G,KAAA,IAAA4G,EAAAsb,cAAA7a,KAAAT,IAAA5G,KAAA,QAAA4G,EAAAub,kBAAA9a,KAAAT,IAAA5G,KAAA,SAAA4G,EAAAwb,mBAAA/a,KAAAT,IACAA,EAAA8G,IAAApM,OAAA,IAAAsF,EAAAoL,mBAAA1Q,OAAA,QAAAtB,KAAA,QAAA4G,EAAArI,OAAAyB,KAAA,SAAAtH,EAAArD,OAAAqD,EAAAsH,KAAA,aACA4G,EAAA8G,IAAApM,OAAA,IAAAjK,EAAAoB,UAAAuH,KAAA,QAAA4G,EAAArI,OAAAyB,KAAA,SAAA4G,EAAApI,QAEAoI,EAAA4O,YAAAzgB,MAAA,aAAA6R,EAAAkT,cAAA,OAGA9c,EAAAmb,gBAAA,SAAAkK,GACA,IAAAzb,EAAAhU,KAEAyvB,IACAzb,EAAA1S,OAAAiT,cACAP,EAAAE,KAAA3I,EAAAhN,KAAAyV,EAAAoC,OACApC,EAAAE,KAAAgJ,KAAA3e,KAAAyV,EAAAqC,YAEArC,EAAAE,KAAAxI,EAAAnN,KAAAyV,EAAA2D,OACA3D,EAAAE,KAAAY,GAAAvW,KAAAyV,EAAA8D,UAIA9D,EAAAyP,cACAzP,EAAA0P,eACA1P,EAAAyQ,gBACAzQ,EAAA2Z,cAAA,IAGAvjB,EAAA0Y,gBAAA,SAAA3V,GACA,IACAuiB,EADA1b,EAAAhU,KAGA,qBAAA2vB,kBAKAD,EAAA,IAAAC,iBAAA,SAAAC,GACAA,EAAAjlB,QAAA,SAAAklB,GACA,cAAAA,EAAA7J,MAAA6J,EAAAC,kBACAJ,EAAAK,aAEA/b,EAAAgO,2BAAAhE,OAAAgS,YAAA,WAEA7iB,EAAAiG,OAAA6c,aACAjS,OAAAkS,cAAAlc,EAAAgO,4BACAhO,EAAAuR,kBAEAvR,EAAAlO,OACAkO,EAAAlO,MAAAqqB,SAGAnc,EAAA1S,OAAAwB,OAAAvE,KAAAyV,GACAA,EAAAmJ,OAAA,CACAqI,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACA7J,gBAAA,EACA6R,4BAAA,EACAxE,YAAA,IAEA/b,EAAAtK,aAAAV,MAAA,eAEW,UAIXiuB,QAAAjjB,EAAAiG,OAAA,CACAid,YAAA,EACAC,WAAA,EACAC,eAAA,IArCAvS,OAAAwS,QAAAC,MAAA,kCAyCArmB,EAAAwb,WAAA,WACA,IAAA5R,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAiCA,GAhCA0S,EAAA0c,eAAA1c,EAAA2c,iBAEA3c,EAAA0c,eAAAlD,IAAA,WACAlsB,EAAA6B,SAAA5E,KAAAyV,KAGA1S,EAAAsvB,aACA5c,EAAA0c,eAAAlD,IAAA,gBACA5e,IAAAoF,EAAA6c,eACA7S,OAAA8S,aAAA9c,EAAA6c,eAGA7c,EAAA6c,cAAA7S,OAAA+S,WAAA,kBACA/c,EAAA6c,cACA7c,EAAA+J,IAAAiT,SACS,OAIThd,EAAA0c,eAAAlD,IAAA,WACAlsB,EAAA8B,UAAA7E,KAAAyV,KAGAA,EAAAid,yBAAA,WAEA,MAAAjd,EAAA+J,KAAA/J,EAAA+J,IAAA8H,QAAAqL,cAIAld,EAAA0c,kBAGA1S,OAAAmT,YACAnT,OAAAmT,YAAA,WAAAnd,EAAAid,+BACK,GAAAjT,OAAAoT,iBACLpT,OAAAoT,iBAAA,SAAApd,EAAAid,0BAAA,OACK,CAEL,IAAAI,EAAArT,OAAA7a,SAEAkuB,EAGOA,EAAA7D,KAAA6D,EAAAlf,SAEPkf,EAAArd,EAAA2c,kBACAnD,IAAAxP,OAAA7a,UAJAkuB,EAAArd,EAAA2c,iBAQAU,EAAA7D,IAAAxZ,EAAA0c,gBAEA1S,OAAA7a,SAAA,WAEA6Q,EAAA+J,IAAA8H,QAAAqL,cAIAG,OAKAjnB,EAAAumB,eAAA,WACA,IAAAW,EAAA,GAEA,SAAAC,IACAD,EAAA3mB,QAAA,SAAA6mB,GACAA,MAiBA,OAbAD,EAAA/D,IAAA,SAAAgE,GACAF,EAAA3jB,KAAA6jB,IAGAD,EAAApf,OAAA,SAAAqf,GACA,QAAAxzB,EAAA,EAAqBA,EAAAszB,EAAApzB,OAA4BF,IACjD,GAAAszB,EAAAtzB,KAAAwzB,EAAA,CACAF,EAAAG,OAAAzzB,EAAA,GACA,QAKAuzB,GAGAnnB,EAAAsnB,OAAA,SAAA7uB,EAAA8uB,GACA,IAAA7nB,EAAA,EACAjH,EAAA8L,KAAA,aACA7E,IACK6E,KAAA,mBACL7E,GACA6nB,EAAArxB,MAAAN,KAAA/B,cAKAmM,EAAAkjB,aAAA,WACA,IAAAR,EAAA,GACA0E,EAAA,SAAA3uB,EAAA8uB,GACA,IAAAC,EAAA5B,YAAA,WACA,IAAA6B,EAAA,EACA/E,EAAAniB,QAAA,SAAA4iB,GACA,GAAAA,EAAAzmB,QACA+qB,GAAA,OAIA,IACAtE,EAAA1qB,aACW,MAAAuoB,GACXyG,GAAA,KAIAA,IAAA/E,EAAA5uB,SACAgyB,cAAA0B,GAEAD,GACAA,MAGO,KAOP,OAJAH,EAAAhE,IAAA,SAAA3qB,GACAiqB,EAAAnf,KAAA9K,IAGA2uB,GAGApnB,EAAAuL,UAAA,SAAAyB,GACA,IACA0a,EAgBA,OAdA1a,aAAAuF,KACAmV,EAAA1a,EACK,kBAAAA,EACL0a,EANA9xB,KAMAkgB,eANAlgB,KAMAsB,OAAAywB,cAAAC,MAAA5a,GACK,iCAAAA,EAAA,YAAAxO,EAAAwO,IACL0a,EAAA,IAAAnV,MAAAvF,GACK,kBAAAA,GAAA6a,MAAA7a,KACL0a,EAAA,IAAAnV,MAAAvF,IAGA0a,IAAAG,OAAAH,IACA9T,OAAAwS,QAAAC,MAAA,sBAAArZ,EAAA,oBAGA0a,GAGA1nB,EAAAyiB,aAAA,WACA,IAAAqF,EAaA,MAXA,qBAAArP,SAAAqP,OAEAA,EAAA,SACK,qBAAArP,SAAAsP,UACLD,EAAA,YACK,qBAAArP,SAAAuP,SACLF,EAAA,WACK,qBAAArP,SAAAwP,eACLH,EAAA,iBAGArP,SAAAqP,IAGA9nB,EAAAnB,UACAmB,EAAAjB,aACAiB,EAAAb,WACAa,EAAAZ,cACAY,EAAAX,YACAW,EAAAV,SACAU,EAAAP,cACAO,EAAAL,aACAK,EAAAH,UACAG,EAAAD,WACAC,EAAAD,WACAC,EAAAC,YACAD,EAAAI,WACAJ,EAAAQ,WACAR,EAAAW,aACAX,EAAA3F,QAMA6tB,SAAAj0B,UAAAoW,OACA6d,SAAAj0B,UAAAoW,KAAA,SAAA8d,GACA,uBAAAvyB,KAGA,UAAAF,UAAA,wEAGA,IAAA0yB,EAAAlpB,MAAAjL,UAAA+R,MAAA7R,KAAAN,UAAA,GACAw0B,EAAAzyB,KACA0yB,EAAA,aACAC,EAAA,WACA,OAAAF,EAAAnyB,MAAAN,gBAAA0yB,EAAA1yB,KAAAuyB,EAAAC,EAAApjB,OAAA9F,MAAAjL,UAAA+R,MAAA7R,KAAAN,cAKA,OAFAy0B,EAAAr0B,UAAA2B,KAAA3B,UACAs0B,EAAAt0B,UAAA,IAAAq0B,EACAC,IAWA,eAAA3U,SAEAA,OAAA4U,WAAA,SAAA5M,EAAA6M,EAAAC,GACA9yB,KAAA+yB,YAAA/M,EACAhmB,KAAAgzB,oBAAAH,EACA7yB,KAAAizB,mBAAAH,GAGA9U,OAAA4U,WAAAv0B,UAAA60B,UAAA,aACAlV,OAAA4U,WAAAO,gBAAA,EACAnV,OAAA4U,WAAAQ,kBAAA,EACApV,OAAA4U,WAAAS,mBAAA,EACArV,OAAA4U,WAAAU,mBAAA,EACAtV,OAAA4U,WAAAW,mBAAA,EACAvV,OAAA4U,WAAAY,mBAAA,EACAxV,OAAA4U,WAAAa,0BAAA,EACAzV,OAAA4U,WAAAc,0BAAA,EACA1V,OAAA4U,WAAAe,8BAAA,EACA3V,OAAA4U,WAAAgB,8BAAA,EACA5V,OAAA4U,WAAAiB,gBAAA,GACA7V,OAAA4U,WAAAkB,gBAAA,GACA9V,OAAA4U,WAAAmB,8BAAA,GACA/V,OAAA4U,WAAAoB,8BAAA,GACAhW,OAAA4U,WAAAqB,4BAAA,GACAjW,OAAA4U,WAAAsB,4BAAA,GACAlW,OAAA4U,WAAAuB,iCAAA,GACAnW,OAAA4U,WAAAwB,iCAAA,GACApW,OAAA4U,WAAAyB,qCAAA,GACArW,OAAA4U,WAAA0B,qCAAA,GAEAtW,OAAA4U,WAAAv0B,UAAAk2B,gBAAA,WACAv0B,KAAAizB,oBAAAjzB,KAAAizB,mBAAAuB,eAAAx0B,OAGAge,OAAAyW,oBAAA,SAAA3B,GACA9U,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAQ,kBAAA,IAAAN,IAGA9U,OAAAyW,oBAAAp2B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAyW,oBAAAp2B,UAAA2R,SAAA,WACA,sCAGAgO,OAAAyW,oBAAAp2B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,qBAGAhV,OAAAyW,oBAAAp2B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAyW,yBAAA7lB,IAGAoP,OAAA4W,oBAAA,SAAA9B,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAS,mBAAA,IAAAP,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAA4W,oBAAAv2B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA4W,oBAAAv2B,UAAA2R,SAAA,WACA,sCAGAgO,OAAA4W,oBAAAv2B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA4W,oBAAAv2B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA4W,yBAAAhmB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAA4W,oBAAAv2B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA4W,oBAAAv2B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAgX,oBAAA,SAAAlC,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAU,mBAAA,IAAAR,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAAgX,oBAAA32B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAgX,oBAAA32B,UAAA2R,SAAA,WACA,sCAGAgO,OAAAgX,oBAAA32B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAgX,oBAAA32B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAgX,yBAAApmB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAAgX,oBAAA32B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAgX,oBAAA32B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAiX,oBAAA,SAAAnC,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAW,mBAAA,IAAAT,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAAiX,oBAAA52B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAiX,oBAAA52B,UAAA2R,SAAA,WACA,sCAGAgO,OAAAiX,oBAAA52B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAiX,oBAAA52B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAiX,yBAAArmB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAAiX,oBAAA52B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAiX,oBAAA52B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAkX,oBAAA,SAAApC,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAY,mBAAA,IAAAV,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAAkX,oBAAA72B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAkX,oBAAA72B,UAAA2R,SAAA,WACA,sCAGAgO,OAAAkX,oBAAA72B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAkX,oBAAA72B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAkX,yBAAAtmB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAAkX,oBAAA72B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAkX,oBAAA72B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAmX,0BAAA,SAAArC,EAAAvnB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACAkJ,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAa,0BAAA,IAAAX,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAo1B,IAAAnP,EACAjmB,KAAAq1B,IAAAlP,EACAnmB,KAAAs1B,IAAApP,EACAlmB,KAAAu1B,IAAAzgB,GAGAkJ,OAAAmX,0BAAA92B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAmX,0BAAA92B,UAAA2R,SAAA,WACA,4CAGAgO,OAAAmX,0BAAA92B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAo1B,IAAA,IAAAp1B,KAAAq1B,IAAA,IAAAr1B,KAAAs1B,IAAA,IAAAt1B,KAAAu1B,IAAA,IAAAv1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAmX,0BAAA92B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAmX,+BAAAvmB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAo1B,IAAAp1B,KAAAq1B,IAAAr1B,KAAAs1B,IAAAt1B,KAAAu1B,MAGA93B,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAo1B,KAEAL,IAAA,SAAA9O,GACAjmB,KAAAo1B,IAAAnP,EAEAjmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAq1B,KAEAN,IAAA,SAAA5O,GACAnmB,KAAAq1B,IAAAlP,EAEAnmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAs1B,KAEAP,IAAA,SAAA7O,GACAlmB,KAAAs1B,IAAApP,EAEAlmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAmX,0BAAA92B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAu1B,KAEAR,IAAA,SAAAjgB,GACA9U,KAAAu1B,IAAAzgB,EAEA9U,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAwX,0BAAA,SAAA1C,EAAAvnB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACAkJ,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAc,0BAAA,IAAAZ,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAo1B,IAAAnP,EACAjmB,KAAAq1B,IAAAlP,EACAnmB,KAAAs1B,IAAApP,EACAlmB,KAAAu1B,IAAAzgB,GAGAkJ,OAAAwX,0BAAAn3B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAwX,0BAAAn3B,UAAA2R,SAAA,WACA,4CAGAgO,OAAAwX,0BAAAn3B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAo1B,IAAA,IAAAp1B,KAAAq1B,IAAA,IAAAr1B,KAAAs1B,IAAA,IAAAt1B,KAAAu1B,IAAA,IAAAv1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAwX,0BAAAn3B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAwX,+BAAA5mB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAo1B,IAAAp1B,KAAAq1B,IAAAr1B,KAAAs1B,IAAAt1B,KAAAu1B,MAGA93B,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAo1B,KAEAL,IAAA,SAAA9O,GACAjmB,KAAAo1B,IAAAnP,EAEAjmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAq1B,KAEAN,IAAA,SAAA5O,GACAnmB,KAAAq1B,IAAAlP,EAEAnmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAs1B,KAEAP,IAAA,SAAA7O,GACAlmB,KAAAs1B,IAAApP,EAEAlmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAwX,0BAAAn3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAu1B,KAEAR,IAAA,SAAAjgB,GACA9U,KAAAu1B,IAAAzgB,EAEA9U,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAyX,8BAAA,SAAA3C,EAAAvnB,EAAAG,EAAAua,EAAAE,GACAnI,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAe,8BAAA,IAAAb,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAo1B,IAAAnP,EACAjmB,KAAAq1B,IAAAlP,GAGAnI,OAAAyX,8BAAAp3B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAyX,8BAAAp3B,UAAA2R,SAAA,WACA,gDAGAgO,OAAAyX,8BAAAp3B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAo1B,IAAA,IAAAp1B,KAAAq1B,IAAA,IAAAr1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAyX,8BAAAp3B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAyX,mCAAA7mB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAo1B,IAAAp1B,KAAAq1B,MAGA53B,OAAAC,eAAAsgB,OAAAyX,8BAAAp3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAyX,8BAAAp3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAyX,8BAAAp3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAo1B,KAEAL,IAAA,SAAA9O,GACAjmB,KAAAo1B,IAAAnP,EAEAjmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAyX,8BAAAp3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAq1B,KAEAN,IAAA,SAAA5O,GACAnmB,KAAAq1B,IAAAlP,EAEAnmB,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA0X,8BAAA,SAAA5C,EAAAvnB,EAAAG,EAAAua,EAAAE,GACAnI,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAgB,8BAAA,IAAAd,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAo1B,IAAAnP,EACAjmB,KAAAq1B,IAAAlP,GAGAnI,OAAA0X,8BAAAr3B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA0X,8BAAAr3B,UAAA2R,SAAA,WACA,gDAGAgO,OAAA0X,8BAAAr3B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAo1B,IAAA,IAAAp1B,KAAAq1B,IAAA,IAAAr1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA0X,8BAAAr3B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA0X,mCAAA9mB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAo1B,IAAAp1B,KAAAq1B,MAGA53B,OAAAC,eAAAsgB,OAAA0X,8BAAAr3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA0X,8BAAAr3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA0X,8BAAAr3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAo1B,KAEAL,IAAA,SAAA9O,GACAjmB,KAAAo1B,IAAAnP,EAEAjmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA0X,8BAAAr3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAq1B,KAEAN,IAAA,SAAA5O,GACAnmB,KAAAq1B,IAAAlP,EAEAnmB,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA2X,iBAAA,SAAA7C,EAAAvnB,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,GACAhY,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAiB,gBAAA,IAAAf,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAi2B,IAAAL,EACA51B,KAAAk2B,IAAAL,EACA71B,KAAAm2B,OAAAL,EACA91B,KAAAo2B,cAAAL,EACA/1B,KAAAq2B,WAAAL,GAGAhY,OAAA2X,iBAAAt3B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA2X,iBAAAt3B,UAAA2R,SAAA,WACA,mCAGAgO,OAAA2X,iBAAAt3B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAi2B,IAAA,IAAAj2B,KAAAk2B,IAAA,IAAAl2B,KAAAm2B,OAAA,KAAAn2B,KAAAo2B,cAAA,cAAAp2B,KAAAq2B,WAAA,aAAAr2B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA2X,iBAAAt3B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA2X,sBAAA/mB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAi2B,IAAAj2B,KAAAk2B,IAAAl2B,KAAAm2B,OAAAn2B,KAAAo2B,cAAAp2B,KAAAq2B,aAGA54B,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAi2B,KAEAlB,IAAA,SAAAa,GACA51B,KAAAi2B,IAAAL,EAEA51B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAk2B,KAEAnB,IAAA,SAAAc,GACA71B,KAAAk2B,IAAAL,EAEA71B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,SACAgE,IAAA,WACA,OAAArC,KAAAm2B,QAEApB,IAAA,SAAAe,GACA91B,KAAAm2B,OAAAL,EAEA91B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,gBACAgE,IAAA,WACA,OAAArC,KAAAo2B,eAEArB,IAAA,SAAAgB,GACA/1B,KAAAo2B,cAAAL,EAEA/1B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2X,iBAAAt3B,UAAA,aACAgE,IAAA,WACA,OAAArC,KAAAq2B,YAEAtB,IAAA,SAAAiB,GACAh2B,KAAAq2B,WAAAL,EAEAh2B,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAsY,iBAAA,SAAAxD,EAAAvnB,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,GACAhY,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAkB,gBAAA,IAAAhB,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAi2B,IAAAL,EACA51B,KAAAk2B,IAAAL,EACA71B,KAAAm2B,OAAAL,EACA91B,KAAAo2B,cAAAL,EACA/1B,KAAAq2B,WAAAL,GAGAhY,OAAAsY,iBAAAj4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAsY,iBAAAj4B,UAAA2R,SAAA,WACA,mCAGAgO,OAAAsY,iBAAAj4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAi2B,IAAA,IAAAj2B,KAAAk2B,IAAA,IAAAl2B,KAAAm2B,OAAA,KAAAn2B,KAAAo2B,cAAA,cAAAp2B,KAAAq2B,WAAA,aAAAr2B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAAsY,iBAAAj4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAsY,sBAAA1nB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAi2B,IAAAj2B,KAAAk2B,IAAAl2B,KAAAm2B,OAAAn2B,KAAAo2B,cAAAp2B,KAAAq2B,aAGA54B,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAi2B,KAEAlB,IAAA,SAAAa,GACA51B,KAAAi2B,IAAAL,EAEA51B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAk2B,KAEAnB,IAAA,SAAAc,GACA71B,KAAAk2B,IAAAL,EAEA71B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,SACAgE,IAAA,WACA,OAAArC,KAAAm2B,QAEApB,IAAA,SAAAe,GACA91B,KAAAm2B,OAAAL,EAEA91B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,gBACAgE,IAAA,WACA,OAAArC,KAAAo2B,eAEArB,IAAA,SAAAgB,GACA/1B,KAAAo2B,cAAAL,EAEA/1B,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAAsY,iBAAAj4B,UAAA,aACAgE,IAAA,WACA,OAAArC,KAAAq2B,YAEAtB,IAAA,SAAAiB,GACAh2B,KAAAq2B,WAAAL,EAEAh2B,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAuY,8BAAA,SAAAzD,EAAAvnB,GACAyS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAmB,8BAAA,IAAAjB,GACA9yB,KAAA60B,GAAAtpB,GAGAyS,OAAAuY,8BAAAl4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAuY,8BAAAl4B,UAAA2R,SAAA,WACA,gDAGAgO,OAAAuY,8BAAAl4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,IAGA7W,OAAAuY,8BAAAl4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAuY,mCAAA3nB,EAAA5O,KAAA60B,KAGAp3B,OAAAC,eAAAsgB,OAAAuY,8BAAAl4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAwY,8BAAA,SAAA1D,EAAAvnB,GACAyS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAoB,8BAAA,IAAAlB,GACA9yB,KAAA60B,GAAAtpB,GAGAyS,OAAAwY,8BAAAn4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAwY,8BAAAn4B,UAAA2R,SAAA,WACA,gDAGAgO,OAAAwY,8BAAAn4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,IAGA7W,OAAAwY,8BAAAn4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAwY,mCAAA5nB,EAAA5O,KAAA60B,KAGAp3B,OAAAC,eAAAsgB,OAAAwY,8BAAAn4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAAyY,4BAAA,SAAA3D,EAAApnB,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAqB,4BAAA,IAAAnB,GACA9yB,KAAA80B,GAAAppB,GAGAsS,OAAAyY,4BAAAp4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAAyY,4BAAAp4B,UAAA2R,SAAA,WACA,8CAGAgO,OAAAyY,4BAAAp4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA80B,IAGA9W,OAAAyY,4BAAAp4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAAyY,iCAAA7nB,EAAA5O,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAAyY,4BAAAp4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA0Y,4BAAA,SAAA5D,EAAApnB,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAsB,4BAAA,IAAApB,GACA9yB,KAAA80B,GAAAppB,GAGAsS,OAAA0Y,4BAAAr4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA0Y,4BAAAr4B,UAAA2R,SAAA,WACA,8CAGAgO,OAAA0Y,4BAAAr4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA80B,IAGA9W,OAAA0Y,4BAAAr4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA0Y,iCAAA9nB,EAAA5O,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAA0Y,4BAAAr4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA2Y,gCAAA,SAAA7D,EAAAvnB,EAAAG,EAAAwa,EAAApR,GACAkJ,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAuB,iCAAA,IAAArB,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAs1B,IAAApP,EACAlmB,KAAAu1B,IAAAzgB,GAGAkJ,OAAA2Y,gCAAAt4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA2Y,gCAAAt4B,UAAA2R,SAAA,WACA,kDAGAgO,OAAA2Y,gCAAAt4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAs1B,IAAA,IAAAt1B,KAAAu1B,IAAA,IAAAv1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA2Y,gCAAAt4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA2Y,qCAAA/nB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAs1B,IAAAt1B,KAAAu1B,MAGA93B,OAAAC,eAAAsgB,OAAA2Y,gCAAAt4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2Y,gCAAAt4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2Y,gCAAAt4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAs1B,KAEAP,IAAA,SAAA7O,GACAlmB,KAAAs1B,IAAApP,EAEAlmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA2Y,gCAAAt4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAu1B,KAEAR,IAAA,SAAAjgB,GACA9U,KAAAu1B,IAAAzgB,EAEA9U,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA4Y,gCAAA,SAAA9D,EAAAvnB,EAAAG,EAAAwa,EAAApR,GACAkJ,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAwB,iCAAA,IAAAtB,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,EACA1L,KAAAs1B,IAAApP,EACAlmB,KAAAu1B,IAAAzgB,GAGAkJ,OAAA4Y,gCAAAv4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA4Y,gCAAAv4B,UAAA2R,SAAA,WACA,kDAGAgO,OAAA4Y,gCAAAv4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAAs1B,IAAA,IAAAt1B,KAAAu1B,IAAA,IAAAv1B,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA4Y,gCAAAv4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA4Y,qCAAAhoB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,GAAA90B,KAAAs1B,IAAAt1B,KAAAu1B,MAGA93B,OAAAC,eAAAsgB,OAAA4Y,gCAAAv4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA4Y,gCAAAv4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA4Y,gCAAAv4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAs1B,KAEAP,IAAA,SAAA7O,GACAlmB,KAAAs1B,IAAApP,EAEAlmB,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA4Y,gCAAAv4B,UAAA,MACAgE,IAAA,WACA,OAAArC,KAAAu1B,KAEAR,IAAA,SAAAjgB,GACA9U,KAAAu1B,IAAAzgB,EAEA9U,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA6Y,oCAAA,SAAA/D,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAAyB,qCAAA,IAAAvB,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAA6Y,oCAAAx4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA6Y,oCAAAx4B,UAAA2R,SAAA,WACA,sDAGAgO,OAAA6Y,oCAAAx4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA6Y,oCAAAx4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA6Y,yCAAAjoB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAA6Y,oCAAAx4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA6Y,oCAAAx4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAGAof,OAAA8Y,oCAAA,SAAAhE,EAAAvnB,EAAAG,GACAsS,OAAA4U,WAAAr0B,KAAAyB,KAAAge,OAAA4U,WAAA0B,qCAAA,IAAAxB,GACA9yB,KAAA60B,GAAAtpB,EACAvL,KAAA80B,GAAAppB,GAGAsS,OAAA8Y,oCAAAz4B,UAAAZ,OAAAgD,OAAAud,OAAA4U,WAAAv0B,WAEA2f,OAAA8Y,oCAAAz4B,UAAA2R,SAAA,WACA,sDAGAgO,OAAA8Y,oCAAAz4B,UAAAq2B,cAAA,WACA,OAAA10B,KAAAgzB,oBAAA,IAAAhzB,KAAA60B,GAAA,IAAA70B,KAAA80B,IAGA9W,OAAA8Y,oCAAAz4B,UAAAs2B,MAAA,WACA,WAAA3W,OAAA8Y,yCAAAloB,EAAA5O,KAAA60B,GAAA70B,KAAA80B,KAGAr3B,OAAAC,eAAAsgB,OAAA8Y,oCAAAz4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA60B,IAEAE,IAAA,SAAAxpB,GACAvL,KAAA60B,GAAAtpB,EAEAvL,KAAAu0B,mBAEA31B,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA8Y,oCAAAz4B,UAAA,KACAgE,IAAA,WACA,OAAArC,KAAA80B,IAEAC,IAAA,SAAArpB,GACA1L,KAAA80B,GAAAppB,EAEA1L,KAAAu0B,mBAEA31B,YAAA,IAIAof,OAAA+Y,eAAA14B,UAAA24B,0BAAA,WACA,WAAAhZ,OAAAyW,yBAAA7lB,IAGAoP,OAAA+Y,eAAA14B,UAAA44B,0BAAA,SAAA1rB,EAAAG,GACA,WAAAsS,OAAA4W,yBAAAhmB,EAAArD,EAAAG,IAGAsS,OAAA+Y,eAAA14B,UAAA64B,0BAAA,SAAA3rB,EAAAG,GACA,WAAAsS,OAAAgX,yBAAApmB,EAAArD,EAAAG,IAGAsS,OAAA+Y,eAAA14B,UAAA84B,0BAAA,SAAA5rB,EAAAG,GACA,WAAAsS,OAAAiX,yBAAArmB,EAAArD,EAAAG,IAGAsS,OAAA+Y,eAAA14B,UAAA+4B,0BAAA,SAAA7rB,EAAAG,GACA,WAAAsS,OAAAkX,yBAAAtmB,EAAArD,EAAAG,IAGAsS,OAAA+Y,eAAA14B,UAAAg5B,gCAAA,SAAA9rB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACA,WAAAkJ,OAAAmX,+BAAAvmB,EAAArD,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,IAGAkJ,OAAA+Y,eAAA14B,UAAAi5B,gCAAA,SAAA/rB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACA,WAAAkJ,OAAAwX,+BAAA5mB,EAAArD,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,IAGAkJ,OAAA+Y,eAAA14B,UAAAk5B,oCAAA,SAAAhsB,EAAAG,EAAAua,EAAAE,GACA,WAAAnI,OAAAyX,mCAAA7mB,EAAArD,EAAAG,EAAAua,EAAAE,IAGAnI,OAAA+Y,eAAA14B,UAAAm5B,oCAAA,SAAAjsB,EAAAG,EAAAua,EAAAE,GACA,WAAAnI,OAAA0X,mCAAA9mB,EAAArD,EAAAG,EAAAua,EAAAE,IAGAnI,OAAA+Y,eAAA14B,UAAAo5B,uBAAA,SAAAlsB,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAhY,OAAA2X,sBAAA/mB,EAAArD,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,IAGAhY,OAAA+Y,eAAA14B,UAAAq5B,uBAAA,SAAAnsB,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAhY,OAAAsY,sBAAA1nB,EAAArD,EAAAG,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,IAGAhY,OAAA+Y,eAAA14B,UAAAs5B,oCAAA,SAAApsB,GACA,WAAAyS,OAAAuY,mCAAA3nB,EAAArD,IAGAyS,OAAA+Y,eAAA14B,UAAAu5B,oCAAA,SAAArsB,GACA,WAAAyS,OAAAwY,mCAAA5nB,EAAArD,IAGAyS,OAAA+Y,eAAA14B,UAAAw5B,kCAAA,SAAAnsB,GACA,WAAAsS,OAAAyY,iCAAA7nB,EAAAlD,IAGAsS,OAAA+Y,eAAA14B,UAAAy5B,kCAAA,SAAApsB,GACA,WAAAsS,OAAA0Y,iCAAA9nB,EAAAlD,IAGAsS,OAAA+Y,eAAA14B,UAAA05B,sCAAA,SAAAxsB,EAAAG,EAAAwa,EAAApR,GACA,WAAAkJ,OAAA2Y,qCAAA/nB,EAAArD,EAAAG,EAAAwa,EAAApR,IAGAkJ,OAAA+Y,eAAA14B,UAAA25B,sCAAA,SAAAzsB,EAAAG,EAAAwa,EAAApR,GACA,WAAAkJ,OAAA4Y,qCAAAhoB,EAAArD,EAAAG,EAAAwa,EAAApR,IAGAkJ,OAAA+Y,eAAA14B,UAAA45B,0CAAA,SAAA1sB,EAAAG,GACA,WAAAsS,OAAA6Y,yCAAAjoB,EAAArD,EAAAG,IAGAsS,OAAA+Y,eAAA14B,UAAA65B,0CAAA,SAAA3sB,EAAAG,GACA,WAAAsS,OAAA8Y,yCAAAloB,EAAArD,EAAAG,IAGA,uBAAAsS,OAAA+Y,eAAA14B,YAIA2f,OAAA+Y,eAAA14B,UAAA85B,mBAAA,SAAAC,GACA,QAAAxpB,IAAAwpB,IAAAC,SAAAD,GAAA,0BACA,IAAAE,EAAAzV,SAAA0V,gBAAA,qCACAD,EAAAE,aAAA,IAAAx4B,KAAAy4B,aAAA,MACA,IAAAC,EAAAJ,EAAAltB,YAAAutB,cAAA,EAEA,GAAAD,GAAA,WAEA,GAEA,GADAJ,EAAAltB,YAAAwtB,WAAAF,GACAN,EAAAE,EAAAjlB,iBAAA,MACAqlB,UACWA,EAAA,GAEX,OAAAA,KAKA,mBAAA1a,SAEAA,OAAA6a,eAAA,SAAAC,GACA94B,KAAA+4B,aAAAD,EACA94B,KAAAg5B,MAAAh5B,KAAAi5B,WAAAj5B,KAAA+4B,aAAAN,aAAA,MAEAz4B,KAAAk5B,wBAAA,CACA7I,YAAA,EACA8I,gBAAA,OAEAn5B,KAAAo5B,6BAAA,IAAAzJ,iBAAA3vB,KAAAq5B,6BAAA5kB,KAAAzU,OAEAA,KAAAo5B,6BAAAhJ,QAAApwB,KAAA+4B,aAAA/4B,KAAAk5B,0BAGAlb,OAAA6a,eAAAx6B,UAAA60B,UAAA,iBACAz1B,OAAAC,eAAAsgB,OAAA6a,eAAAx6B,UAAA,iBACAgE,IAAA,WAGA,OAFArC,KAAAs5B,+BAEAt5B,KAAAg5B,MAAA96B,QAEAU,YAAA,IAIAnB,OAAAC,eAAAsgB,OAAA+Y,eAAA14B,UAAA,eACAgE,IAAA,WAEA,OADArC,KAAAu5B,eAAAv5B,KAAAu5B,aAAA,IAAAvb,OAAA6a,eAAA74B,OACAA,KAAAu5B,cAEA36B,YAAA,IAGAnB,OAAAC,eAAAsgB,OAAA+Y,eAAA14B,UAAA,yBACAgE,IAAA,WACA,OAAArC,KAAAoL,aAEAxM,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA+Y,eAAA14B,UAAA,uBACAgE,IAAA,WACA,OAAArC,KAAAoL,aAEAxM,YAAA,IAEAnB,OAAAC,eAAAsgB,OAAA+Y,eAAA14B,UAAA,iCACAgE,IAAA,WACA,OAAArC,KAAAoL,aAEAxM,YAAA,IAKAof,OAAA6a,eAAAx6B,UAAAi7B,6BAAA,WACAt5B,KAAAq5B,6BAAAr5B,KAAAo5B,6BAAAI,gBAGAxb,OAAA6a,eAAAx6B,UAAAg7B,6BAAA,SAAAI,GACA,GAAAz5B,KAAA+4B,aAAA,CACA,IAAAW,GAAA,EACAD,EAAA9uB,QAAA,SAAAgvB,GACA,KAAAA,EAAAC,gBAAAF,GAAA,KAEAA,IAAA15B,KAAAg5B,MAAAh5B,KAAAi5B,WAAAj5B,KAAA+4B,aAAAN,aAAA,SAIAza,OAAA6a,eAAAx6B,UAAAw7B,iBAAA,WACA75B,KAAAo5B,6BAAArJ,aAEA/vB,KAAA+4B,aAAAP,aAAA,IAAAxa,OAAA6a,eAAAiB,sBAAA95B,KAAAg5B,QAEAh5B,KAAAo5B,6BAAAhJ,QAAApwB,KAAA+4B,aAAA/4B,KAAAk5B,0BAIAlb,OAAA6a,eAAAx6B,UAAAm2B,eAAA,SAAAuF,GACA/5B,KAAA65B,oBAGA7b,OAAA6a,eAAAx6B,UAAA27B,MAAA,WACAh6B,KAAAs5B,+BAEAt5B,KAAAg5B,MAAAruB,QAAA,SAAAovB,GACAA,EAAA9G,mBAAA,OAGAjzB,KAAAg5B,MAAA,GAEAh5B,KAAA65B,oBAGA7b,OAAA6a,eAAAx6B,UAAA47B,WAAA,SAAAC,GAQA,OAPAl6B,KAAAs5B,+BAEAt5B,KAAAg5B,MAAA,CAAAkB,GACAA,EAAAjH,mBAAAjzB,KAEAA,KAAA65B,mBAEAK,GAGAlc,OAAA6a,eAAAx6B,UAAA87B,iBAAA,SAAA1qB,GACA,GAAAwiB,MAAAxiB,MAAA,GAAAA,GAAAzP,KAAA24B,cAAA,uBAGA3a,OAAA6a,eAAAx6B,UAAAgN,QAAA,SAAAoE,GAKA,OAJAzP,KAAAs5B,+BAEAt5B,KAAAm6B,iBAAA1qB,GAEAzP,KAAAg5B,MAAAvpB,IAGAuO,OAAA6a,eAAAx6B,UAAA+7B,iBAAA,SAAAF,EAAAzqB,GAiBA,OAhBAzP,KAAAs5B,+BAGA7pB,EAAAzP,KAAA24B,gBAAAlpB,EAAAzP,KAAA24B,eAEAuB,EAAAjH,qBAEAiH,IAAAvF,SAGA30B,KAAAg5B,MAAAvH,OAAAhiB,EAAA,EAAAyqB,GAEAA,EAAAjH,mBAAAjzB,KAEAA,KAAA65B,mBAEAK,GAGAlc,OAAA6a,eAAAx6B,UAAAg8B,YAAA,SAAAH,EAAAzqB,GAeA,OAdAzP,KAAAs5B,+BAEAY,EAAAjH,qBAEAiH,IAAAvF,SAGA30B,KAAAm6B,iBAAA1qB,GAEAzP,KAAAg5B,MAAAvpB,GAAAyqB,EACAA,EAAAjH,mBAAAjzB,KAEAA,KAAA65B,mBAEAK,GAGAlc,OAAA6a,eAAAx6B,UAAAu6B,WAAA,SAAAnpB,GACAzP,KAAAs5B,+BAEAt5B,KAAAm6B,iBAAA1qB,GAEA,IAAA6qB,EAAAt6B,KAAAg5B,MAAAvpB,GAMA,OAJAzP,KAAAg5B,MAAAvH,OAAAhiB,EAAA,GAEAzP,KAAA65B,mBAEAS,GAGAtc,OAAA6a,eAAAx6B,UAAAk8B,WAAA,SAAAL,GAcA,OAbAl6B,KAAAs5B,+BAEAY,EAAAjH,qBAEAiH,IAAAvF,SAGA30B,KAAAg5B,MAAArrB,KAAAusB,GAEAA,EAAAjH,mBAAAjzB,KAEAA,KAAA65B,mBAEAK,GAGAlc,OAAA6a,eAAAiB,sBAAA,SAAAU,GACA,IAAAp2B,EAAA,GACAq2B,GAAA,EASA,OARAD,EAAA7vB,QAAA,SAAAovB,GACAU,GACAA,GAAA,EACAr2B,GAAA21B,EAAArF,iBAEAtwB,GAAA,IAAA21B,EAAArF,kBAGAtwB,GAIA4Z,OAAA6a,eAAAx6B,UAAA46B,WAAA,SAAA70B,GACA,IAAAA,GAAA,GAAAA,EAAAlG,OAAA,SACA,IAAA40B,EAAA9yB,KAEA06B,EAAA,WACA16B,KAAAoL,YAAA,IAGAsvB,EAAAr8B,UAAAs8B,cAAA,SAAAZ,GACA/5B,KAAAoL,YAAAuC,KAAAosB,IAGA,IAAAa,EAAA,SAAAx2B,GACApE,KAAA66B,QAAAz2B,EACApE,KAAA86B,cAAA,EACA96B,KAAA+6B,UAAA/6B,KAAA66B,QAAA38B,OACA8B,KAAAg7B,iBAAAhd,OAAA4U,WAAAO,gBAEAnzB,KAAAi7B,uBAGAL,EAAAv8B,UAAA68B,gBAAA,WACA,IAAAC,EAAAn7B,KAAA66B,QAAA76B,KAAA86B,eACA,OAAAK,GAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,IAGAP,EAAAv8B,UAAA48B,oBAAA,WACA,KAAAj7B,KAAA86B,cAAA96B,KAAA+6B,WAAA/6B,KAAAk7B,mBACAl7B,KAAA86B,gBAGA,OAAA96B,KAAA86B,cAAA96B,KAAA+6B,WAGAH,EAAAv8B,UAAA+8B,+BAAA,WACA,QAAAp7B,KAAA86B,cAAA96B,KAAA+6B,YAAA/6B,KAAAk7B,mBAAA,KAAAl7B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,kBAEA96B,KAAAi7B,uBACAj7B,KAAA86B,cAAA96B,KAAA+6B,WAAA,KAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,iBACA96B,KAAA86B,gBAEA96B,KAAAi7B,uBAIAj7B,KAAA86B,cAAA96B,KAAA+6B,YAGAH,EAAAv8B,UAAAg9B,YAAA,WACA,OAAAr7B,KAAA86B,cAAA96B,KAAA+6B,WAGAH,EAAAv8B,UAAAi9B,gBAAA,WACA,IAAAC,EAAAv7B,KAAA66B,QAAA76B,KAAA86B,eACA,OAAA96B,KAAAw7B,qBAAAD,IAGAX,EAAAv8B,UAAAm9B,qBAAA,SAAAD,GACA,OAAAA,GACA,QACA,QACA,OAAAvd,OAAA4U,WAAAQ,kBAEA,QACA,OAAApV,OAAA4U,WAAAS,mBAEA,QACA,OAAArV,OAAA4U,WAAAU,mBAEA,QACA,OAAAtV,OAAA4U,WAAAW,mBAEA,QACA,OAAAvV,OAAA4U,WAAAY,mBAEA,QACA,OAAAxV,OAAA4U,WAAAa,0BAEA,QACA,OAAAzV,OAAA4U,WAAAc,0BAEA,QACA,OAAA1V,OAAA4U,WAAAe,8BAEA,QACA,OAAA3V,OAAA4U,WAAAgB,8BAEA,QACA,OAAA5V,OAAA4U,WAAAiB,gBAEA,QACA,OAAA7V,OAAA4U,WAAAkB,gBAEA,QACA,OAAA9V,OAAA4U,WAAAmB,8BAEA,QACA,OAAA/V,OAAA4U,WAAAoB,8BAEA,QACA,OAAAhW,OAAA4U,WAAAqB,4BAEA,QACA,OAAAjW,OAAA4U,WAAAsB,4BAEA,QACA,OAAAlW,OAAA4U,WAAAuB,iCAEA,QACA,OAAAnW,OAAA4U,WAAAwB,iCAEA,QACA,OAAApW,OAAA4U,WAAAyB,qCAEA,QACA,OAAArW,OAAA4U,WAAA0B,qCAEA,QACA,OAAAtW,OAAA4U,WAAAO,kBAIAyH,EAAAv8B,UAAAo9B,mBAAA,SAAAF,EAAAG,GAEA,YAAAH,GAAA,KAAAA,GAAA,KAAAA,MAAA,KAAAA,GAAA,MAAAG,GAAA1d,OAAA4U,WAAAQ,kBACAsI,GAAA1d,OAAA4U,WAAAS,mBAAArV,OAAA4U,WAAAW,mBACAmI,GAAA1d,OAAA4U,WAAAU,mBAAAtV,OAAA4U,WAAAY,mBACAkI,EAGA1d,OAAA4U,WAAAO,iBAGAyH,EAAAv8B,UAAAs9B,uBAAA,WAEA,IAAA37B,KAAAq7B,cAAA,SACA,IAAAO,EAAA57B,KAAAs7B,kBAEA,OAAAM,GAAA5d,OAAA4U,WAAAS,oBAAAuI,GAAA5d,OAAA4U,WAAAU,oBAKAsH,EAAAv8B,UAAAw9B,aAAA,WACA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAAp8B,KAAA86B,cASA,GAPA96B,KAAAi7B,sBAGAj7B,KAAA86B,cAAA96B,KAAA+6B,WAAA,KAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA96B,KAAA86B,gBAA0H96B,KAAA86B,cAAA96B,KAAA+6B,WAAA,KAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,iBAC1H96B,KAAA86B,gBACAoB,GAAA,KAEAl8B,KAAA86B,eAAA96B,KAAA+6B,YAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,WAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,CAKA,IAFA,IAAAuB,EAAAr8B,KAAA86B,cAEA96B,KAAA86B,cAAA96B,KAAA+6B,WAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KACA96B,KAAA86B,gBAIA,GAAA96B,KAAA86B,eAAAuB,EAIA,IAHA,IAAAC,EAAAt8B,KAAA86B,cAAA,EACAyB,EAAA,EAEAD,GAAAD,GACAN,GAAAQ,GAAAv8B,KAAA66B,QAAA3qB,OAAAosB,KAAA,KACAC,GAAA,GAKA,GAAAv8B,KAAA86B,cAAA96B,KAAA+6B,WAAA,KAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,CAGA,GAFA96B,KAAA86B,gBAEA96B,KAAA86B,eAAA96B,KAAA+6B,WAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,WAEA,KAAA96B,KAAA86B,cAAA96B,KAAA+6B,WAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KACAkB,GAAA,GACAC,IAAAj8B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,KAAAkB,EACAh8B,KAAA86B,eAAA,EAKA,GAAA96B,KAAA86B,eAAAsB,GAAAp8B,KAAA86B,cAAA,EAAA96B,KAAA+6B,YAAA,KAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,iBAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,cAAA,SAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,cAAA,IAWA,GAVA96B,KAAA86B,gBAEA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eACA96B,KAAA86B,gBACa,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,iBACb96B,KAAA86B,gBACAqB,GAAA,GAIAn8B,KAAA86B,eAAA96B,KAAA+6B,WAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,WAEA,KAAA96B,KAAA86B,cAAA96B,KAAA+6B,WAAA/6B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KAAA96B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,gBAAA,KACAgB,GAAA,GACAA,GAAA97B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,eAAA,IACA96B,KAAA86B,gBAIA,IAAA0B,EAAAT,EAAAE,EAGA,GAFAO,GAAAN,EACAJ,IAAAU,GAAA7yB,KAAA8yB,IAAA,GAAAN,EAAAL,IACAM,GAAAp8B,KAAA86B,cAIA,OAFA96B,KAAAo7B,iCAEAoB,IAGA5B,EAAAv8B,UAAAq+B,cAAA,WACA,KAAA18B,KAAA86B,eAAA96B,KAAA+6B,WAAA,CACA,IAAA4B,GAAA,EAEAC,EAAA58B,KAAA66B,QAAA3qB,OAAAlQ,KAAA86B,iBAEA,QAAA8B,EAAAD,GAAA,MAA4C,SAAAC,EAAsC,OAAtCD,GAAA,EAI5C,OAFA38B,KAAAo7B,iCAEAuB,IAGA/B,EAAAv8B,UAAAw+B,aAAA,WACA,IAAAtB,EAAAv7B,KAAA66B,QAAA76B,KAAA86B,eAEAc,EAAA57B,KAAAw7B,qBAAAD,GAEA,GAAAK,GAAA5d,OAAA4U,WAAAO,gBAAA,CAEA,GAAAnzB,KAAAg7B,kBAAAhd,OAAA4U,WAAAO,gBAAA,YAEA,IADAyI,EAAA57B,KAAAy7B,mBAAAF,EAAAv7B,KAAAg7B,oBACAhd,OAAA4U,WAAAO,gBAAA,iBAEAnzB,KAAA86B,gBAKA,OAFA96B,KAAAg7B,iBAAAY,EAEAA,GACA,KAAA5d,OAAA4U,WAAAU,mBACA,WAAAtV,OAAAgX,oBAAAlC,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAS,mBACA,WAAArV,OAAA4W,oBAAA9B,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAY,mBACA,WAAAxV,OAAAkX,oBAAApC,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAW,mBACA,WAAAvV,OAAAiX,oBAAAnC,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAoB,8BACA,WAAAhW,OAAAwY,8BAAA1D,EAAA9yB,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAmB,8BACA,WAAA/V,OAAAuY,8BAAAzD,EAAA9yB,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAsB,4BACA,WAAAlW,OAAA0Y,4BAAA5D,EAAA9yB,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAqB,4BACA,WAAAjW,OAAAyY,4BAAA3D,EAAA9yB,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAQ,kBAGA,OAFApzB,KAAAi7B,sBAEA,IAAAjd,OAAAyW,oBAAA3B,GAEA,KAAA9U,OAAA4U,WAAAc,0BACA,IAAAoJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACA3V,GAAAlmB,KAAA67B,eACA/mB,GAAA9U,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,WAAA7d,OAAAwX,0BAAA1C,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,GAAA2W,EAAA5W,GAAA4W,EAAAhoB,IAEA,KAAAkJ,OAAA4U,WAAAa,0BASA,OARAqJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACA3V,GAAAlmB,KAAA67B,eACA/mB,GAAA9U,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAAmX,0BAAArC,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,GAAA2W,EAAA5W,GAAA4W,EAAAhoB,IAEA,KAAAkJ,OAAA4U,WAAAwB,iCAOA,OANA0I,EAAA,CACA5W,GAAAlmB,KAAA67B,eACA/mB,GAAA9U,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAA4Y,gCAAA9D,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA5W,GAAA4W,EAAAhoB,IAEA,KAAAkJ,OAAA4U,WAAAuB,iCAOA,OANA2I,EAAA,CACA5W,GAAAlmB,KAAA67B,eACA/mB,GAAA9U,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAA2Y,gCAAA7D,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA5W,GAAA4W,EAAAhoB,IAEA,KAAAkJ,OAAA4U,WAAAgB,8BAOA,OANAkJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAA0X,8BAAA5C,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,IAEA,KAAAnI,OAAA4U,WAAAe,8BAOA,OANAmJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACAtwB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAAyX,8BAAA3C,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,IAEA,KAAAnI,OAAA4U,WAAA0B,qCACA,WAAAtW,OAAA8Y,oCAAAhE,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAyB,qCACA,WAAArW,OAAA6Y,oCAAA/D,EAAA9yB,KAAA67B,eAAA77B,KAAA67B,gBAEA,KAAA7d,OAAA4U,WAAAkB,gBAUA,OATAgJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACAkB,SAAA/8B,KAAA67B,eACAmB,SAAAh9B,KAAA08B,gBACAO,SAAAj9B,KAAA08B,gBACAnxB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAAsY,iBAAAxD,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,GAAA2W,EAAAC,SAAAD,EAAAE,SAAAF,EAAAG,UAEA,KAAAjf,OAAA4U,WAAAiB,gBAUA,OATAiJ,EAAA,CACA7W,GAAAjmB,KAAA67B,eACA1V,GAAAnmB,KAAA67B,eACAkB,SAAA/8B,KAAA67B,eACAmB,SAAAh9B,KAAA08B,gBACAO,SAAAj9B,KAAA08B,gBACAnxB,EAAAvL,KAAA67B,eACAnwB,EAAA1L,KAAA67B,gBAEA,IAAA7d,OAAA2X,iBAAA7C,EAAAgK,EAAAvxB,EAAAuxB,EAAApxB,EAAAoxB,EAAA7W,GAAA6W,EAAA3W,GAAA2W,EAAAC,SAAAD,EAAAE,SAAAF,EAAAG,UAEA,QACA,gCAIA,IAAAC,EAAA,IAAAxC,EACAv8B,EAAA,IAAAy8B,EAAAx2B,GACA,IAAAjG,EAAAw9B,yBAAA,SAEA,KAAAx9B,EAAAk9B,eAAA,CACA,IAAAtB,EAAA57B,EAAA0+B,eACA,IAAA9C,EAAA,SACAmD,EAAAvC,cAAAZ,GAGA,OAAAmD,EAAA9xB,cASA+xB,OAAA9+B,UAAAoS,SACA0sB,OAAA9+B,UAAAoS,OAAA,SAAA2sB,EAAAC,GAKA,OAJAD,IAAA,EAEAC,EAAAF,OAAA,qBAAAE,IAAA,KAEAr9B,KAAA9B,OAAAk/B,EACAD,OAAAn9B,QAEAo9B,GAAAp9B,KAAA9B,QAEAm/B,EAAAn/B,SACAm/B,KAAAC,OAAAF,EAAAC,EAAAn/B,SAGAi/B,OAAAn9B,MAAAq9B,EAAAjtB,MAAA,EAAAgtB,MAOA9f,EAAAja,KAAA,aAEAia,EAAAja,KAAAk6B,OAAA,SAAAA,GACA,IAAAvpB,EAAAhU,KAAAuO,SAEAtQ,UAAAC,SACAT,OAAAyM,KAAAqzB,GAAA5yB,QAAA,SAAAqN,GACAhE,EAAA3Q,KAAAiV,aAAAN,EAAAulB,EAAAvlB,MAEAhE,EAAA3Q,KAAAuY,iBAKA0B,EAAAja,KAAAgN,IAAA,SAAAA,GACA,IAAA2D,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,IAAArD,UAAAC,OAsBA,OACAqN,EAAAjK,EAAAk8B,WACA9xB,EAAApK,EAAAm8B,WACA3oB,GAAAxT,EAAAo8B,aAxBA,iCAAArtB,EAAA,YAAAzH,EAAAyH,KACApH,EAAAoH,EAAA9E,KACAjK,EAAAk8B,WAAAntB,EAAA9E,GAGAtC,EAAAoH,EAAA3E,KACApK,EAAAm8B,WAAAptB,EAAA3E,GAGAzC,EAAAoH,EAAAyE,MACAxT,EAAAo8B,YAAArtB,EAAAyE,KAGAxT,EAAAm8B,WAAAn8B,EAAAo8B,YAAArtB,EAGA2D,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,KAWAnI,EAAAja,KAAAoI,IAAA,SAAAA,GACA,IAAAuI,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,IAAArD,UAAAC,OAsBA,OACAqN,EAAAjK,EAAAq8B,WACAjyB,EAAApK,EAAAs8B,WACA9oB,GAAAxT,EAAAu8B,aAxBA,iCAAApyB,EAAA,YAAA7C,EAAA6C,KACAxC,EAAAwC,EAAAF,KACAjK,EAAAq8B,WAAAlyB,EAAAF,GAGAtC,EAAAwC,EAAAC,KACApK,EAAAs8B,WAAAnyB,EAAAC,GAGAzC,EAAAwC,EAAAqJ,MACAxT,EAAAu8B,YAAApyB,EAAAqJ,KAGAxT,EAAAs8B,WAAAt8B,EAAAu8B,YAAApyB,EAGAuI,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,KAWAnI,EAAAja,KAAA8I,MAAA,SAAAA,GACA,IAAAlO,UAAAC,OASA,OACAmS,IAAArQ,KAAAqD,KAAAgN,MACA5E,IAAAzL,KAAAqD,KAAAoI,OAVAhC,EAAA0C,EAAAkE,MACArQ,KAAAqD,KAAAgN,IAAAlE,EAAAkE,KAGA5G,EAAA0C,EAAAV,MACAzL,KAAAqD,KAAAoI,IAAAU,EAAAV,MAUA6R,EAAAwgB,SAAA,SAAA9/B,EAAA8/B,GACA,IAAA9pB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAOA,OALArD,UAAAC,OAAA,IACAoD,EAAAotB,kBAAA1wB,GAAA8/B,EACA9pB,EAAAmJ,UAGA7b,EAAAotB,kBAAA1wB,IAGAsf,EAAAygB,WAAA,SAAAA,GACA,IAAA/pB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAArD,UAAAC,QAIAoD,EAAAotB,kBAAAqP,EACA/pB,EAAAmJ,SACA7b,EAAAotB,mBALAptB,EAAAotB,mBAQApR,EAAA0gB,OAAA,SAAAv7B,GACA,IACAnB,EADAtB,KAAAuO,SACAjN,OACAA,EAAA28B,WAAAx7B,IAAAkJ,MAAA,KACArK,EAAA48B,YAAAz7B,IAAAmJ,OAAA,KACA5L,KAAAgxB,SAGA1T,EAAA0T,MAAA,WACAhxB,KAAAuO,SACAkf,gBAAA,CACAvE,YAAA,EACArN,gBAAA,EACA6R,4BAAA,KAIApQ,EAAApc,QAAA,WACA,IAAA8S,EAAAhU,KAAAuO,SAOA,GANAyP,OAAAkS,cAAAlc,EAAAgO,iCAEApT,IAAAoF,EAAA6c,eACA7S,OAAA8S,aAAA9c,EAAA6c,eAGA7S,OAAAmgB,YACAngB,OAAAmgB,YAAA,WAAAnqB,EAAAid,+BACK,GAAAjT,OAAAogB,oBACLpgB,OAAAogB,oBAAA,SAAApqB,EAAAid,8BACK,CACL,IAAAI,EAAArT,OAAA7a,SAEAkuB,KAAA7D,KAAA6D,EAAAlf,QACAkf,EAAAlf,OAAA6B,EAAA0c,gBAWA,OANA1c,EAAA0c,eAAAve,SACA6B,EAAA4O,YAAAjH,QAAA,SAAAoH,KAAA,IAEAtlB,OAAAyM,KAAA8J,GAAArJ,QAAA,SAAAvM,GACA4V,EAAA5V,GAAA,OAEA,MAIAkf,EAAA3a,MAAA,SAAAkU,GAEA,OADA7W,KAAAuO,SACA5L,MAAAkU,IAGAyG,EAAA5b,KAAA,SAAA28B,GACA,IAAAtoB,EAAA/V,KAAAuO,SAAA7M,KAAAqU,QACA,2BAAAsoB,EAAAtoB,IAAAoN,OAAA,SAAAoK,GACA,SAAAne,OAAAivB,GAAA1lB,QAAA4U,EAAA1W,KAAA,KAIAyG,EAAA5b,KAAA48B,MAAA,SAAAD,GACA,OAAAr+B,KAAAuO,SAAAwM,oBAAA/a,KAAA0B,KAAA28B,KAGA/gB,EAAA5b,KAAA0a,OAAA,SAAAmiB,GACA,IAAAxoB,EACAqG,EAAA,KASA,OAPAmiB,IAEAniB,GADArG,EAAA/V,KAAA0B,KAAA68B,IACA,GAAAxoB,EAAA,GAAAqG,OAAA7M,IAAA,SAAAvF,GACA,OAAAA,EAAApM,QACO,MAGPwe,GAGAkB,EAAA5b,KAAA88B,MAAA,SAAAA,GAEA,OADAx+B,KAAAuO,SAAAkwB,8BACAz+B,KAAAuO,SAAAmwB,qBAAA,QAAAF,IAGAlhB,EAAA5b,KAAAi9B,OAAA,SAAAA,GACA,OAAA3+B,KAAAuO,SAAAmwB,qBAAA,SAAAC,IAGArhB,EAAA5b,KAAAwS,KAAA,SAAAA,GACA,OAAAlU,KAAAuO,SAAAmwB,qBAAA,OAAAxqB,IAGAoJ,EAAAwM,KAAA,SAAA8U,GACA,IACA7oB,EACArU,EAIA4L,EACAuxB,EACAC,EAGAC,EACAC,EAZAhrB,EAAAhU,KAAAuO,SAGA0wB,EAAA,GACAC,EAAAlrB,EAAAmrB,kBAKAjhC,EAAA,EACAkhC,EAAA,EAIA,GAAAR,EAAAS,KACA39B,EAAAsS,EAAA2K,kBAAAigB,EAAAS,KAAAT,EAAA10B,WACK,GAAA00B,EAAAU,KACL59B,EAAAsS,EAAA6K,kBAAA+f,EAAAU,UACK,KAAAV,EAAAW,QAGL,OAFA79B,EAAAsS,EAAA+K,qBAAA6f,EAAAW,SAKAxpB,EAAA/B,EAAAiP,qBAAAvhB,GAAA,GAEAsS,EAAAtS,KAAAqU,QAAApL,QAAA,SAAA4iB,GACA,IACAvvB,EACAwhC,EAFA90B,GAAA,EAIA,IAAA1M,EAAA,EAAiBA,EAAA+X,EAAA7X,OAAoBF,IACrC,GAAAuvB,EAAA1W,KAAAd,EAAA/X,GAAA6Y,GAAA,CASA,IARAnM,GAAA,EAEA6iB,EAAAnR,OAAAmR,EAAAnR,OAAAle,OAAA,KACAkhC,EAAA7R,EAAAnR,OAAAmR,EAAAnR,OAAAle,OAAA,GAAAuR,MAAA,GAGAvR,EAAA6X,EAAA/X,GAAAoe,OAAAle,OAEAshC,EAAA,EAAqBA,EAAAthC,EAAYshC,IACjCzpB,EAAA/X,GAAAoe,OAAAojB,GAAA/vB,MAAA2vB,EAAAI,EAEAxrB,EAAA0B,iBACAK,EAAA/X,GAAAoe,OAAAojB,GAAAj0B,EAAA6zB,EAAAI,GAIAjS,EAAAnR,OAAAmR,EAAAnR,OAAAhN,OAAA2G,EAAA/X,GAAAoe,QACArG,EAAA0b,OAAAzzB,EAAA,GACA,MAIA0M,GACAu0B,EAAAtxB,KAAA4f,EAAA1W,MAIA7C,EAAAtS,KAAAqU,QAAApL,QAAA,SAAA4iB,GACA,IAAAvvB,EAAAwhC,EAEA,IAAAxhC,EAAA,EAAiBA,EAAAihC,EAAA/gC,OAAwBF,IACzC,GAAAuvB,EAAA1W,KAAAooB,EAAAjhC,GAGA,IAFAohC,EAAA7R,EAAAnR,OAAAmR,EAAAnR,OAAAle,OAAA,GAAAuR,MAAA,EAEA+vB,EAAA,EAAqBA,EAAAthC,EAAYshC,IACjCjS,EAAAnR,OAAAzO,KAAA,CACAkJ,GAAA0W,EAAA1W,GACApH,MAAA2vB,EAAAI,EACAj0B,EAAAyI,EAAA0B,eAAA1B,EAAAyrB,gBAAAL,EAAAI,GAAAJ,EAAAI,EACA5hC,MAAA,SAOAoW,EAAAtS,KAAAqU,QAAA7X,QACA6X,EAAApL,QAAA,SAAA4iB,GACA,IAAAvvB,EACA0hC,EAAA,GAEA,IAAA1hC,EAAAgW,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAA,GAAA3M,MAAoDzR,EAAAohC,EAAUphC,IAC9D0hC,EAAA/xB,KAAA,CACAkJ,GAAA0W,EAAA1W,GACApH,MAAAzR,EACAuN,EAAAyI,EAAA0B,eAAA1B,EAAAyrB,gBAAAzhC,KACAJ,MAAA,OAIA2vB,EAAAnR,OAAAzR,QAAA,SAAAzB,GACAA,EAAAuG,OAAA2vB,EAEAprB,EAAA0B,iBACAxM,EAAAqC,GAAA6zB,KAGA7R,EAAAnR,OAAAsjB,EAAAtwB,OAAAme,EAAAnR,UAIApI,EAAAtS,KAAAqU,QAAA/B,EAAAtS,KAAAqU,QAAA3G,OAAA2G,GAGA/B,EAAAmrB,kBAEAL,GADAD,EAAA7qB,EAAAtS,KAAAqU,QAAA,IACAqG,OAAA,GAEA3S,EAAAm1B,EAAAI,KACA9gC,EAAA,EACA8gC,EAAAhrB,EAAA0B,eAAA1B,EAAA2B,UAAAipB,EAAAI,IAAAJ,EAAAI,GACAH,EAAAziB,OAAAzR,QAAA,SAAAzB,GACAA,EAAAqC,EAAAyzB,GACA9gC,OAGKuL,EAAAm1B,EAAA1gC,UACLA,EAAA0gC,EAAA1gC,QAIAghC,EAaK,IAAAA,GACLlrB,EAAA0B,iBACAqpB,GAAAF,EAAAziB,OAAAyiB,EAAAziB,OAAAle,OAAA,GAAAqN,EAAAuzB,EAAAvzB,GAAA,EACA+B,EAAA,KAAAqP,MAAAmiB,EAAAvzB,EAAAwzB,GAAA,IAAApiB,MAAAmiB,EAAAvzB,EAAAwzB,IACA/qB,EAAA8W,cAAA,cAAAxd,KAdAyxB,EAFA/qB,EAAA0B,eACAmpB,EAAAziB,OAAAle,OAAA,EACA2gC,EAAAziB,OAAAyiB,EAAAziB,OAAAle,OAAA,GAAAqN,EAAAuzB,EAAAvzB,EAEAuzB,EAAAvzB,EAAAyI,EAAAuH,WAAAvH,EAAAtS,KAAAqU,SAAA,GAGA,EAGAzI,EAAA,CAAAwxB,EAAAvzB,EAAAwzB,EAAAD,EAAAvzB,GACAyI,EAAA8W,cAAA,cAAAxd,IAUA0G,EAAAsR,cAAAtR,EAAAtS,KAAAqU,SAEA/B,EAAAmJ,OAAA,CACA2M,KAAA,CACAra,MAAAqvB,EAAArvB,MACAvR,SACA8e,SAAA/T,EAAA21B,EAAA5hB,UAAA4hB,EAAA5hB,SAAAhJ,EAAA1S,OAAAunB,oBACAgJ,KAAA+M,EAAA/M,KACAqN,gBAEAhW,YAAA,EACArN,eAAAqjB,EAAA,EACAjW,iBAAA,EACAI,iBAAA,KAIAjf,EAAAwiB,aAAA,SAAAgS,GACA,IAAA5qB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GACA,kBACA,IAYA2zB,EACAC,EACAC,EAMAvyB,EApBAyI,EAAA6oB,EAAA7oB,QACA+T,EAAA8U,EAAA9U,KACAP,EAAAqV,EAAArV,QACAC,EAAAoV,EAAApV,SACAF,EAAAsV,EAAAtV,SACAW,EAAA2U,EAAA3U,GACAC,EAAA0U,EAAA1U,GACAS,EAAAiU,EAAAjU,GACAlB,EAAAmV,EAAAnV,SACAC,EAAAkV,EAAAlV,SACA1M,EAAA4hB,EAAA5hB,SAKA8iB,EAAAhW,EAAAra,MACAswB,EAAAjW,EAAA5rB,OACA8hC,EAAAhsB,EAAAisB,gBAAAjsB,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAA0jB,GACAI,EAAAlsB,EAAAisB,gBAAAjsB,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAA0jB,EAAAC,GACA/U,EAAAhX,EAAAzI,EAAA+B,SAEA6yB,EAAArW,EAAA9M,YACA6U,EAAA/H,EAAA+H,MAAA,aACAuO,EAAApsB,EAAAsZ,eAEAnmB,EAAA6M,EAAA7M,OAAA6E,EAAA6F,UAAA,IACAvK,EAAA0M,EAAA1M,YAAA0E,EAAA6F,UAAA,IACAwuB,EAAArsB,EAAAqsB,YAAAr0B,EAAA6F,UAAA,IACAyuB,EAAAtsB,EAAAssB,UAAAt0B,EAAA6F,UAAA,IACA0uB,EAAAvsB,EAAAusB,SAAAv0B,EAAA6F,UAAA,IACA2uB,EAAAxsB,EAAAwsB,UAAAx0B,EAAA6F,UAAA,IACA4uB,EAAAzsB,EAAAysB,UAAAz0B,EAAA6F,UAAA,IACA6uB,EAAA1sB,EAAA0sB,YAAA10B,EAAA6F,UAAA,IAEAmC,EAAA2L,SAAA,EAEA3L,EAAAtS,KAAAqU,QAAApL,QAAA,SAAAX,GACAA,EAAAoS,OAAAqV,OAAA,EAAAsO,KAGAzyB,EAAA0G,EAAA8W,cAAA/U,GAAA,MAEA/B,EAAA2sB,aACA3sB,EAAA2sB,aAAA,GAIA7W,EAAAoV,aAcAS,EADO,IAAA7V,EAAAoV,eAAAc,KAAAz0B,MAAA20B,KAAA30B,GACPyI,EAAAzI,EAAAyf,EAAA,IAAAhX,EAAAzI,EAAA+B,EAAA,IAEA0G,EAAA0B,eACA1B,EAAAzI,EAAAyf,EAAA,IAAAhX,EAAAzI,EAAA+B,EAAA,IAEA0G,EAAAzI,EAAAy0B,EAAAz0B,GAAAyI,EAAAzI,EAAA20B,EAAA30B,GAjBA,IAAAyI,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAAle,OACAyhC,EAAA3rB,EAAAzI,EAAAyf,EAAA,IAAAhX,EAAAzI,EAAA+B,EAAA,IAEA0G,EAAA0B,gBACAsqB,EAAAhsB,EAAAisB,gBAAAjsB,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAA,GACA8jB,EAAAlsB,EAAAisB,gBAAAjsB,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAApI,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAAle,OAAA,GACAyhC,EAAA3rB,EAAAzI,EAAAy0B,EAAAz0B,GAAAyI,EAAAzI,EAAA20B,EAAA30B,IAEAo0B,EAAA51B,EAAAuD,GAAA,EAaAsyB,EAAA71B,EAAAihB,GAAAjhB,EAAAuD,GACAuyB,EAAA,aAAAF,EAAA,aAAAC,EAAA,MACA5rB,EAAA4sB,iBACA50B,EAAAnJ,aAAAg+B,KAAA,UAAA7jB,SAAAmjB,GAAAxxB,KAAA,WACAyxB,EAAA5S,IAAAxZ,EAAAE,KAAA3I,EAAA1I,aAAAtE,KAAAyV,EAAAoC,QACAgqB,EAAA5S,IAAA+S,EAAA19B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAAgT,EAAA39B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAAiT,EAAA59B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAAkT,EAAA79B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAA8S,EAAAz9B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAA6S,EAAAld,OAAAnP,EAAA8sB,aAAAj+B,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAArmB,EAAAtE,aAAAuK,KAAA,YAAAyyB,IACAO,EAAA5S,IAAAlmB,EAAAzE,aAAAuK,KAAA,YAAAyyB,MACOthC,KAAA6hC,EAAA,WACP,IAAApiC,EACAqI,EAAA,GACAW,EAAA,GACAtB,EAAA,GAEA,GAAAq6B,EAAA,CACA,IAAA/hC,EAAA,EAAqBA,EAAA+hC,EAAgB/hC,IACrCqI,EAAAsH,KAAA,IAAAlJ,EAAA2B,MAAA,KAAA05B,EAAA9hC,IACAgJ,EAAA2G,KAAA,IAAAlJ,EAAAsC,KAAA,KAAA+4B,EAAA9hC,IACA0H,EAAAiI,KAAA,IAAAlJ,EAAAgB,UAAA,KAAAq6B,EAAA9hC,IAGAgW,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAA4B,QAAAwL,UAAAxL,GAAA8L,SACA6B,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAAuC,OAAA6K,UAAA7K,GAAAmL,SACA6B,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAAiB,YAAAmM,UAAAnM,GAAAyM,SACA6B,EAAA8G,IAAApM,OAAA,IAAAjK,EAAA0C,OAAAgL,SAIAhL,EAAAiG,KAAA,kBAAAA,KAAA4G,EAAA+sB,WACAz5B,EAAA8F,KAAA,kBACA9F,EAAAoH,OAAA,QAAAtB,KAAA,KAAA9L,EAAAiT,aAAA,EAAAoW,GAAAvd,KAAA,KAAA9L,EAAAiT,aAAAP,EAAArI,MAAAgf,GACArjB,EAAAoH,OAAA,QAAAtB,KAAA,IAAA9L,EAAAiT,aAAAP,EAAArI,MAAA,GAAAyB,KAAA,IAAAud,GACA4V,EAAAnzB,KAAA,kBAAAA,KAAA,IAAAmc,GACAiX,EAAApzB,KAAA,kBAAAA,KAAA,IAAAoc,GACAiX,EAAArzB,KAAA,kBAAAA,KAAA,IAAAkc,GACAoX,EAAAtzB,KAAA,kBAAAA,KAAA,KAAA6c,GAAA7c,KAAA,KAAA8c,GACAoW,EAAAlzB,KAAA,kBAAAA,KAAA,IAAAqc,GAAArc,KAAA,IAAAsc,GAAAvnB,MAAA,eAAA6R,EAAAwa,eAAA/Z,KAAAT,IACAqsB,EAAAjzB,KAAA,kBACAizB,EAAA3xB,OAAA,QAAAyU,OAAAnP,EAAA8sB,aAAA1zB,KAAA,IAAA4G,EAAAgtB,QAAAvsB,KAAAT,IAAA5G,KAAA,QAAA4G,EAAAitB,YAAAxsB,KAAAT,IAEA1S,EAAAgrB,qBACAtY,EAAAuY,kBAIAsF,IACA7d,EAAA2L,SAAA,MAKArC,EAAA4jB,MAAA,SAAA7C,GACA,IACA8C,EADAntB,EAAAhU,KAAAuO,SAEA8vB,EAAArqB,EAAAotB,eAAA/C,GACA8C,EAAAntB,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,EAAAlb,OAAAnP,EAAA4U,eAAA5U,KAAAhU,KAAAshC,SACAthC,KAAAuhC,UACAJ,EAAAxlB,QAAAlX,EAAAsB,SAAA,GAAA4V,QAAAlX,EAAAuB,WAAA,GAEAgO,EAAA0S,cACA1S,EAAAwtB,UAAAnD,GAGArqB,EAAAytB,kBAAApD,GAAA,GACArqB,EAAAgN,iBAAAqd,EACArqB,EAAAiN,mBAAAjN,EAAAiN,mBAAAkC,OAAA,SAAAtM,GACA,OAAAwnB,EAAA1lB,QAAA9B,GAAA,KAIAyG,EAAAikB,QAAA,SAAAlD,GACA,IAAArqB,EAAAhU,KAAAuO,SAEA8vB,EAAArqB,EAAAotB,eAAA/C,GACArqB,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,EAAAlb,OAAAnP,EAAA4U,eAAA5U,KAAA2H,QAAAlX,EAAAsB,SAAA,GAAA4V,QAAAlX,EAAAuB,WAAA,GAEAgO,EAAA0S,cACA1S,EAAA0tB,YAAArD,GAGArqB,EAAAytB,kBAAApD,GAAA,GACArqB,EAAAgN,iBAAAhN,EAAAgN,iBAAAmC,OAAA,SAAAtM,GACA,OAAAwnB,EAAA1lB,QAAA9B,GAAA,IAEA7C,EAAAiN,mBAAAod,GAGA/gB,EAAAgkB,OAAA,SAAAjD,GACA,IAAArqB,EAAAhU,KAAAuO,SAEA8vB,EAAArqB,EAAAotB,eAAA/C,GACArqB,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,IAEA1iB,QAAAlX,EAAAsB,SAAA,GAAA4V,QAAAlX,EAAAuB,WAAA,GAEAgO,EAAA0S,cACA1S,EAAA0tB,YAAArD,GAGArqB,EAAA1S,OAAAspB,cACA5W,EAAA2tB,WAAAtD,EAAAlb,OAAAnP,EAAA4tB,eAAAntB,KAAAT,KACAA,EAAAvQ,OAAAoO,UAAAmC,EAAA6tB,gBAAAxD,IAAAlb,OAAA,WACA,OAAAnP,EAAAhI,GAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAA8D,qBACOoT,QAAAlX,EAAA8D,mBAAA,IAGPyL,EAAAgN,iBAAA,GACAhN,EAAAiN,mBAAA,IAGA3D,EAAAlW,OAAA,SAAA06B,GACA,IAAA9tB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAAwgC,GAIAxgC,EAAAygC,aAAAD,EACA9tB,EAAA4Z,uBACAtsB,EAAAygC,cALAzgC,EAAAygC,cAQAzkB,EAAAlW,OAAAomB,IAAA,SAAAsU,GACA,IAAA9tB,EAAAhU,KAAAuO,SACA,OAAAvO,KAAAoH,OAAA4M,EAAA1S,OAAAygC,aAAA3yB,OAAA0yB,GAAA,MAGAxkB,EAAAlW,OAAA+K,OAAA,SAAApG,GAEA/L,KAAAuO,SACAyzB,gBAAAj2B,GAAA,IAGAuR,EAAA7V,OAAA,SAAAq6B,GACA,IAAA9tB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAAwgC,GAIAxgC,EAAA2gC,aAAAH,EACA9tB,EAAA4Z,uBACAtsB,EAAA2gC,cALA3gC,EAAA2gC,cAQA3kB,EAAA7V,OAAA+lB,IAAA,SAAAsU,GACA,IAAA9tB,EAAAhU,KAAAuO,SACA,OAAAvO,KAAAyH,OAAAuM,EAAA1S,OAAA2gC,aAAA7yB,OAAA0yB,GAAA,MAGAxkB,EAAA7V,OAAA0K,OAAA,SAAApG,GAEA/L,KAAAuO,SACAyzB,gBAAAj2B,GAAA,IAGAuR,EAAA4kB,OAAA,SAAAA,GACA,IAAAluB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAAkI,EAAA04B,GACA5gC,EAAA6gC,aAGA7gC,EAAA6gC,YAAAD,EACAluB,EAAAmJ,SACA7b,EAAA6gC,cAGA7kB,EAAA7Z,OAAA,aAEA6Z,EAAA7Z,OAAA2+B,KAAA,SAAA/D,GACA,IAAArqB,EAAAhU,KAAAuO,SACAyF,EAAA2tB,WAAA3tB,EAAAotB,eAAA/C,IACArqB,EAAAyZ,gBAAA,CACAvE,YAAA,KAIA5L,EAAA7Z,OAAA4+B,KAAA,SAAAhE,GACA,IAAArqB,EAAAhU,KAAAuO,SACAyF,EAAAsuB,WAAAtuB,EAAAotB,eAAA/C,IACArqB,EAAAyZ,gBAAA,CACAvE,YAAA,KAIA5L,EAAA3b,KAAA,SAAAi9B,GACA,IAAA5qB,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEAs9B,EAAA5b,IACAhP,EAAAuuB,MAAA3D,EAAA5b,IAIA,UAAA4b,GACAthB,EAAA5b,KAAA88B,MAAA/pB,KAAAzU,KAAAsd,CAAAshB,EAAAJ,OAIA,YAAAI,GACAnhC,OAAAyM,KAAA00B,EAAA4D,SAAA73B,QAAA,SAAAkM,GACAvV,EAAAmhC,aAAA5rB,GAAA+nB,EAAA4D,QAAA3rB,KAKA,eAAA+nB,GAAA5qB,EAAAoB,kBACA9T,EAAAotB,kBAAAkQ,EAAAb,YAIA,SAAAa,GACAnhC,OAAAyM,KAAA00B,EAAA1qB,MAAAvJ,QAAA,SAAAkM,GACAvV,EAAAwV,UAAAD,GAAA+nB,EAAA1qB,KAAA2C,KAKA,WAAA+nB,GACAnhC,OAAAyM,KAAA00B,EAAAD,QAAAh0B,QAAA,SAAAkM,GACAvV,EAAAohC,YAAA7rB,GAAA+nB,EAAAD,OAAA9nB,KAKA,aAAA+nB,GAAA5qB,EAAA2uB,UAAA/D,EAAAgE,UACA5uB,EAAArS,KAAAqS,EAAA6uB,UAAAjE,EAAAgE,UAAAhE,EAAA/M,MAKA,WAAA+M,EAEA5qB,EAAApS,OAAAoS,EAAAotB,eAAA,mBAAAxC,EAAAh9B,QAAAg9B,EAAAh9B,OAAA,KAAAg9B,EAAAh9B,QAAA,WACAoS,EAAA8uB,aAAAlE,KAGA5qB,EAAA8uB,aAAAlE,IAIAthB,EAAA1b,OAAA,SAAAg9B,GACA,IAAA5qB,EAAAhU,KAAAuO,UACAqwB,KAAA,cAEAt1B,MACAs1B,EAAA,CACAmE,IAAAnE,GAEK,kBAAAA,IACLA,EAAA,CACAmE,IAAA,CAAAnE,KAIA5qB,EAAApS,OAAAoS,EAAAotB,eAAAxC,EAAAmE,KAAA,WACA/uB,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,EACAyD,YAAA,IAGA0V,EAAA/M,MACA+M,EAAA/M,UAKAvU,EAAA/Z,QAAA,SAAAA,GACA,IAAAyQ,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAAiC,GAIAjC,EAAAiC,UACAyQ,EAAA4Z,uBACAtsB,EAAAiC,SALAjC,EAAAiC,SAQA+Z,EAAA/Z,QAAAiqB,IAAA,SAAAjqB,GACA,IAAAyQ,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAEA,OAAAiC,GAIAjC,EAAAiC,QAAAjC,EAAAiC,QAAA6L,OAAA7L,GACAyQ,EAAA4Z,uBACAtsB,EAAAiC,SALAjC,EAAAiC,SAQA+Z,EAAA/Z,QAAA4O,OAAA,SAAA7H,GACA,IAEA0S,EACAwlB,EACAj/B,EAJAyQ,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OAyBA,OArBAgJ,KAAA,GACA0S,EAAAhJ,EAAA3J,UAAAC,EAAA,WAAAhJ,EAAAunB,qBACA2Z,EAAAxuB,EAAA3J,UAAAC,EAAA,WAAA7F,EAAAwB,SACA1C,EAAAyQ,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAlB,SAAAsO,UAAA2wB,EAAAjzB,IAAA,SAAAyzB,GACA,UAAAA,MAEAhmB,EAAAzZ,EAAAV,aAAAma,YAAAzZ,GAAApB,MAAA,aAAAgQ,SACA7Q,EAAAiC,QAAAjC,EAAAiC,QAAA4f,OAAA,SAAAld,GACA,IAAAyE,GAAA,EAEA,OAAAzE,EAAA,QAIAA,EAAA,MAAAgK,MAAA,KAAAtF,QAAA,SAAAq4B,GACAR,EAAA7pB,QAAAqqB,IAAA,IACAt4B,GAAA,MAGAA,KAEApJ,EAAAiC,SAGA+Z,EAAA2lB,SAAA,SAAA1E,GACA,IAAAvqB,EAAAhU,KAAAuO,SACAvC,EAAAgI,EAAAhI,GACA,OAAAA,EAAAk3B,MAAAlvB,EAAAC,KAAApC,UAAA,IAAApN,EAAA4B,OAAA2N,EAAAmvB,wBAAA5E,IAAA1sB,UAAA,IAAApN,EAAA2B,OAAA+c,OAAA,WACA,OAAAnX,EAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAAiE,YACK6G,IAAA,SAAAvF,GACL,OAAAA,EAAAuF,IAAA,SAAAvF,GACA,IAAAtI,EAAAsI,EAAAo5B,SACA,OAAA1hC,sBAKA4b,EAAA5O,OAAA,SAAAq0B,EAAAM,EAAAC,GACA,IAAAtvB,EAAAhU,KAAAuO,SACAvC,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAEAA,EAAAiiC,wBAIAvvB,EAAAC,KAAApC,UAAA,IAAApN,EAAA4B,QAAAwL,UAAA,IAAApN,EAAA2B,OAAAuI,KAAA,SAAA3E,EAAAhM,GACA,IAAAoI,EAAA4F,EAAA0C,OAAA1O,MACA6W,EAAA7M,EAAAtI,KAAAsI,EAAAtI,KAAAmV,GAAA7M,EAAA6M,GACA2sB,EAAAxvB,EAAAyvB,UAAAzjC,KAAAgK,GAAAyK,KAAAT,GACA0vB,EAAApiC,EAAAqiC,yBAAAZ,KAAApqB,QAAA9B,IAAA,EACA+sB,GAAAP,KAAA1qB,QAAA3a,IAAA,EACA6lC,EAAAz9B,EAAAuV,QAAAlX,EAAAiE,UAEAtC,EAAAuV,QAAAlX,EAAAX,OAAAsC,EAAAuV,QAAAlX,EAAAV,QAIA2/B,GAAAE,EACAtiC,EAAAwiC,4BAAA95B,KAAA65B,GACAL,GAAA,EAAAp9B,EAAAuV,QAAAlX,EAAAiE,UAAA,GAAAsB,EAAAhM,GAEOyL,EAAA65B,OACPO,GACAL,GAAA,EAAAp9B,EAAAuV,QAAAlX,EAAAiE,UAAA,GAAAsB,EAAAhM,OAMAsf,EAAAymB,SAAA,SAAAhB,EAAAM,GACA,IAAArvB,EAAAhU,KAAAuO,SACAvC,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAEAA,EAAAiiC,wBAIAvvB,EAAAC,KAAApC,UAAA,IAAApN,EAAA4B,QAAAwL,UAAA,IAAApN,EAAA2B,OAAAuI,KAAA,SAAA3E,EAAAhM,GACA,IAAAoI,EAAA4F,EAAA0C,OAAA1O,MACA6W,EAAA7M,EAAAtI,KAAAsI,EAAAtI,KAAAmV,GAAA7M,EAAA6M,GACA2sB,EAAAxvB,EAAAyvB,UAAAzjC,KAAAgK,GAAAyK,KAAAT,GACA0vB,EAAApiC,EAAAqiC,yBAAAZ,KAAApqB,QAAA9B,IAAA,EACA+sB,GAAAP,KAAA1qB,QAAA3a,IAAA,EACA6lC,EAAAz9B,EAAAuV,QAAAlX,EAAAiE,UAEAtC,EAAAuV,QAAAlX,EAAAX,OAAAsC,EAAAuV,QAAAlX,EAAAV,OAIA2/B,GAAAE,GACAtiC,EAAAwiC,4BAAA95B,IACA65B,GACAL,GAAA,EAAAp9B,EAAAuV,QAAAlX,EAAAiE,UAAA,GAAAsB,EAAAhM,MAOAsf,EAAA8kB,KAAA,SAAA/D,EAAA/zB,GACA,IACAyL,EADA/B,EAAAhU,KAAAuO,SAEA8vB,EAAArqB,EAAAotB,eAAA/C,GACA/zB,KAAA,GACA0J,EAAAgwB,sBAAA3F,IACAtoB,EAAA/B,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,KACAx7B,aAAAV,MAAA,yBAAA5D,KAAAyV,EAAA0d,OAAA,WACA3b,EAAA5T,MAAA,gBAAAA,MAAA,eAGAmI,EAAA4e,YACAlV,EAAA2tB,WAAAtD,GAGArqB,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,EACAyD,YAAA,KAIA5L,EAAA+kB,KAAA,SAAAhE,EAAA/zB,GACA,IACAyL,EADA/B,EAAAhU,KAAAuO,SAEA8vB,EAAArqB,EAAAotB,eAAA/C,GACA/zB,KAAA,GACA0J,EAAAqP,mBAAAgb,IACAtoB,EAAA/B,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,KACAx7B,aAAAV,MAAA,yBAAA5D,KAAAyV,EAAA0d,OAAA,WACA3b,EAAA5T,MAAA,gBAAAA,MAAA,eAGAmI,EAAA4e,YACAlV,EAAAsuB,WAAAjE,GAGArqB,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,EACAyD,YAAA,KAIA5L,EAAAkmB,OAAA,SAAAnF,EAAA/zB,GACA,IAAA25B,EAAAjkC,KACAgU,EAAAhU,KAAAuO,SACAyF,EAAAotB,eAAA/C,GAAA1zB,QAAA,SAAA4zB,GACAvqB,EAAA4U,eAAA2V,GAAA0F,EAAA5B,KAAA9D,EAAAj0B,GAAA25B,EAAA7B,KAAA7D,EAAAj0B,MAIAgT,EAAA5Z,QAAA,aAEA4Z,EAAA5Z,QAAA0+B,KAAA,SAAAxD,GACA,IACAnvB,EACAy0B,EAFAlwB,EAAAhU,KAAAuO,SAIAqwB,EAAAsF,QACAA,EAAAtF,EAAAsF,OAIAtF,EAAAl9B,KACAsS,EAAAmwB,eAEAD,EAAA,CAAAlwB,EAAAzI,EAAAqzB,EAAAl9B,KAAA6J,GAAAyI,EAAAowB,UAAAxF,EAAAl9B,KAAAmV,GAAA7C,CAAA4qB,EAAAl9B,KAAA9D,QACA6R,EAAA,MAGAA,EAAAxG,EAAA21B,EAAAl9B,KAAA+N,OAAAmvB,EAAAl9B,KAAA+N,MAAAuE,EAAAqwB,YAAAzF,EAAAl9B,KAAA6J,GAEK,qBAAAqzB,EAAArzB,EACLkE,EAAAuE,EAAAqwB,YAAAzF,EAAArzB,GACK,qBAAAqzB,EAAAnvB,QACLA,EAAAmvB,EAAAnvB,OAIAuE,EAAAswB,cAAA,YAAA70B,EAAAy0B,GACAlwB,EAAAswB,cAAA,YAAA70B,EAAAy0B,GACAlwB,EAAA1S,OAAAijC,eAAAhmC,KAAAyV,EAAA4qB,EAAAl9B,OAGA4b,EAAA5Z,QAAA2+B,KAAA,WAEAriC,KAAAuO,SAAA+1B,cAAA,cACAtkC,KAAAuO,SAAAjN,OAAAkjC,eAAAjmC,KAAAyB,OAGAsd,EAAAuiB,UAAA,SAAA7Z,EAAAqY,GACA,IAAArqB,EAAAhU,KAAAuO,SACAjE,EAAA,gBAAAqO,QAAAqN,IAAA,GACAR,eAAA,GACK,KACLxR,EAAAywB,YAAApG,EAAArY,EAAA1b,IAGAF,EAAAq6B,YAAA,SAAApG,EAAArY,EAAA0e,GACA,IAAA1wB,EAAAhU,KACA2lB,GAAA3R,EAAA0S,aACApc,EAAAo6B,GAAA,CACA/e,yBAEArb,EAAAojB,4BAAA,EACA1Z,EAAA8L,YAAA,EACA9L,EAAA2wB,cAAAtG,EAAArY,GACAhS,EAAAsR,cAAAtR,EAAAtS,KAAAqU,SAEA/B,EAAAyZ,gBAAAnjB,IAGAgT,EAAA/R,EAAA,SAAAA,GACA,IAAAyI,EAAAhU,KAAAuO,SAUA,OARAtQ,UAAAC,SACA8V,EAAA4wB,cAAA5wB,EAAAtS,KAAAqU,QAAAxK,GACAyI,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,KAIAzR,EAAAtS,KAAAshB,IAGA1F,EAAA0F,GAAA,SAAAA,GACA,IAAAhP,EAAAhU,KAAAuO,SAUA,OARAtQ,UAAAC,SACA8V,EAAA6wB,eAAA7wB,EAAAtS,KAAAqU,QAAAiN,GACAhP,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,KAIAzR,EAAAtS,KAAAshB,IAGA1F,EAAA1Z,KAAA,SAAA0J,GACA,IAAA0G,EAAAhU,KAAAuO,SAiBA,OAfAjB,IACA0G,EAAA0B,iBACApI,IAAAiC,IAAA,SAAAhE,GACA,OAAAyI,EAAA2B,UAAApK,MAIAyI,EAAAlO,MAAA6d,OAAArW,GACA0G,EAAAmJ,OAAA,CACAsI,mBAAA,EACAqD,MAAA9U,EAAA1S,OAAAypB,eAEA/W,EAAA1S,OAAAwjC,YAAAvmC,KAAAyB,KAAAgU,EAAAzI,EAAAyf,cAGAhX,EAAAlO,MAAA6d,UAGArG,EAAA1Z,KAAAmhC,OAAA,SAAAC,GACA,IAAAhxB,EAAAhU,KAAAuO,SACAyF,EAAA1S,OAAA0iB,aAAAghB,EACAhxB,EAAAyZ,mBAGAnQ,EAAA2nB,OAAA,WACA,IAAAjxB,EAAAhU,KAAAuO,SACAyF,EAAAlO,MAAAk0B,QAAA7J,SACAnc,EAAAmJ,OAAA,CACAsI,mBAAA,KAIAnI,EAAA1Z,KAAAyM,IAAA,SAAAA,GACA,IAAA2D,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GAEA,OAAAqE,MAGA,OAAA/O,EAAA4jC,WAFA5jC,EAAA4jC,WAAAl5B,EAAAqE,IAAA,CAAA2D,EAAA+P,WAAA,GAAA1T,KAMAiN,EAAA1Z,KAAA6H,IAAA,SAAAA,GACA,IAAAuI,EAAAhU,KAAAuO,SACAjN,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GAEA,OAAAP,MAGA,OAAAnK,EAAA6jC,WAFA7jC,EAAA6jC,WAAAn5B,EAAAP,IAAA,CAAAuI,EAAA+P,WAAA,GAAAtY,KAMA6R,EAAA1Z,KAAAuI,MAAA,SAAAA,GACA,IAAAlO,UAAAC,OASA,OACAmS,IAAArQ,KAAAsN,OAAA+C,MACA5E,IAAAzL,KAAAsN,OAAA7B,OAVAhC,EAAA0C,EAAAkE,MACArQ,KAAAsN,OAAA+C,IAAAlE,EAAAkE,KAGA5G,EAAA0C,EAAAV,MACAzL,KAAAsN,OAAA7B,IAAAU,EAAAV,MAUArB,EAAAqY,QAAA,WACA,IACAzW,EADAhM,KACAgM,GADAhM,KAEAiE,IAAA+H,EAAAo5B,OAAAnhC,MAAArG,MAAA,SAAAoM,GACA,OAAAA,EAAAoS,OAAAipB,OAAA,SAAAxoB,EAAAC,GACA,OAAAD,EAAAC,EAAAlf,OACO,KALPoC,KAOAiE,IAAA2Y,KAPA5c,KAOAslC,oBAAA,OAGAl7B,EAAAge,aAAA,WACA,IAAApU,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAmN,EAAAnN,EAAAikC,aAAAjkC,EAAAkkC,YACAC,EAAAzxB,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OAAA8V,EAAA1S,OAAAokC,oBACA1xB,EAAAqU,eAAA1e,KAAA8B,IAAAuI,EAAA+T,SAAA/T,EAAAgU,WAAA,GAAAhU,EAAAiU,QAAA,gBACAjU,EAAA2xB,OAAA,IAAA3xB,EAAAqU,eACArU,EAAA4xB,iBAAAn3B,GAAAuF,EAAA2xB,OAAAl3B,GAAAuF,EAAA2xB,OAAA,GACA3xB,EAAA6xB,YAAA7xB,EAAAiU,QAAA,UAAAjU,EAAAiU,QAAA,SAAAjU,EAAA2xB,OAAA3xB,EAAA4xB,iBAAA,EACA5xB,EAAAyxB,cAAAh3B,IAAAg3B,GAAAzxB,EAAA2xB,OAAA3xB,EAAA6xB,YAAA7xB,EAAA2xB,OAAA3xB,EAAA6xB,YAAAJ,GAAAzxB,EAAA2xB,OAAAF,EAAAzxB,EAAA2xB,SAGAv7B,EAAA07B,UAAA,WACA,IAAA9xB,EAAAhU,KACAgU,EAAA+xB,OAAA/xB,EAAAgyB,YACAhyB,EAAAiyB,eAAAjyB,EAAAkyB,oBACAlyB,EAAAmyB,kBAAAnyB,EAAAkyB,kBAAA,MAGA97B,EAAAg8B,YAAA,SAAAp8B,GACA,IAIAq8B,EACAC,EACAC,EACAC,EAPAxyB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAoJ,GAAA,EACA+E,EAAA,EAMA,OAAAnO,GAIA0S,EAAA/P,IAAA+P,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,UAAApL,QAAA,SAAA4iB,GACA7iB,GAAA6iB,EAAA7rB,KAAAmV,KAAA7M,EAAAtI,KAAAmV,KACAnM,GAAA,GACAV,EAAAujB,GACA9d,SAGAA,MAGAwiB,MAAAjoB,EAAAy8B,cACAz8B,EAAAy8B,WAAA,GAGAxU,MAAAjoB,EAAA08B,YACA18B,EAAA08B,SAAA18B,EAAAy8B,YAGAzyB,EAAA2yB,YAAA38B,EAAAtI,QACA2kC,EAAA/kC,EAAAslC,UACAN,EAAAhlC,EAAAulC,UACAN,EAAA58B,KAAAwH,IAAA7P,EAAA4mB,iBAAA,MAAAoe,EAAAD,GACAG,EAAAx8B,EAAApM,MAAAyoC,EAAA,EAAAr8B,EAAApM,MAAA0oC,EAAAt8B,EAAApM,MAAAyoC,EAAAC,EAAAD,EACAr8B,EAAAy8B,WAAAnlC,EAAAwlC,oBACA98B,EAAA08B,SAAA18B,EAAAy8B,WAAAF,EAAAC,GAGA97B,EAAAV,EAAA,MA9BA,MAiCAI,EAAA47B,UAAA,WACA,IAAAhyB,EAAAhU,KACA+mC,EAAA/yB,EAAAiU,QAAA,SACA+e,EAAAhzB,EAAAyxB,cAAAzxB,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OACAwI,EAAAsN,EAAAhI,GAAA8O,IAAApU,MAAAugC,YAAA,SAAAj9B,GACA,OAAA+8B,EAAA/yB,EAAA2xB,OAAAqB,EAAAh9B,EAAAyF,MAAAuE,EAAA2xB,SACKE,YAAA,SAAA77B,GACL,OAAA+8B,EAAA/yB,EAAA2xB,OAAAqB,GAAAh9B,EAAAyF,MAAA,GAAAuE,EAAA6xB,cAEAqB,EAAA,SAAAl9B,EAAAm9B,GACA,IAAAC,EAEA,OAAAD,EACAzgC,EAAAsD,IAIAo9B,EAAApzB,EAAAoyB,YAAAp8B,IACAtD,EAAA0gC,GAAA,SAKA,OADAF,EAAAG,SAAA3gC,EAAA2gC,SACAH,GAGA98B,EAAA87B,kBAAA,SAAAoB,GACAA,KAAA,EACA,IAAAtzB,EAAAhU,KACA+mC,EAAA/yB,EAAAiU,QAAA,SACA+e,EAAAhzB,EAAAyxB,cAAAzxB,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OACAqpC,EAAA59B,KAAA8B,IAAAuI,EAAAqU,eAAAif,EAAAtzB,EAAA2xB,OAAA,GAAAqB,EAAA,OAAAM,IACA5gC,EAAAsN,EAAAhI,GAAA8O,IAAApU,MAAAugC,YAAA,SAAAj9B,GACA,OAAA+8B,EAAA/yB,EAAA2xB,OAAAqB,EAAAh9B,EAAAyF,MAAA83B,EAAAvzB,EAAAqU,eAAAif,IACKzB,YAAA,SAAA77B,GACL,OAAA+8B,EAAA/yB,EAAA2xB,OAAAqB,GAAAh9B,EAAAyF,MAAA,GAAAuE,EAAA6xB,cAEA,gBAAA77B,GACA,IAAAo9B,EAAApzB,EAAAoyB,YAAAp8B,GACA,OAAAo9B,EAAA1gC,EAAA0gC,GAAA,UAIAh9B,EAAAo9B,OAAA,SAAAx9B,EAAAm9B,EAAAM,GACA,OAAAA,GAAAznC,KAAA0nC,UAAA19B,EAAAtI,MAAA1B,KAAA+lC,OAAA/7B,EAAAm9B,GAAA,SAGA/8B,EAAAu9B,qBAAA,SAAA39B,GACA,IAGAg5B,EACAz3B,EACAG,EACA8C,EACAo5B,EAPA5zB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA8lC,EAAApzB,EAAAoyB,YAAAp8B,GAMA69B,EAAA,GACAC,EAAA9zB,EAAAiU,QAAA,SAEA,GAAAmf,IAAAU,EACA9E,EAAAhjC,KAAA+lC,OAAAsB,SAAAD,GACA77B,EAAA0mB,MAAA+Q,EAAA,MAAAA,EAAA,GACAt3B,EAAAumB,MAAA+Q,EAAA,MAAAA,EAAA,GACAx0B,EAAA7E,KAAAo+B,KAAAx8B,IAAAG,KAUAm8B,EAAA,aAAAt8B,GAPAq8B,EADA5zB,EAAAiU,QAAA,UAAA3mB,EAAA0mC,kBACA7+B,EAAA7H,EAAA0mC,mBAAA1mC,EAAA0mC,kBAAAh+B,EAAAgK,EAAA2xB,OAAAn3B,GAAAlN,EAAA0mC,kBACOh0B,EAAAiU,QAAA,QAAA3mB,EAAA2mC,gBACP9+B,EAAA7H,EAAA2mC,iBAAA3mC,EAAA2mC,gBAAAj+B,EAAAgK,EAAA2xB,OAAAn3B,GAAAlN,EAAA2mC,gBAEAj0B,EAAA2xB,QAAAn3B,GAAA,GAAAwF,EAAA2xB,OAAA,cAAA3xB,EAAA2xB,OAAA,IAAA3xB,EAAA2xB,OAAAn3B,EAAA,GAGA,IAAA9C,EAAAk8B,EAAA,SACK,GAAAR,GAAAU,GAAA9zB,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OAAA,GACL,IAAAioB,EAAAxc,KAAAuH,IAAAk2B,EAAAV,SAAA/8B,KAAAwH,GAAA,GAGA02B,EAAA,cAFAt8B,EAAA5B,KAAAu+B,IAAAd,EAAAV,SAAA/8B,KAAAwH,GAAA,IAAA6C,EAAAqU,eAAA,KAEA,KADA3c,EAAAya,GAAAnS,EAAAqU,eAAA,GAAA1e,KAAAw+B,IAAA,GAAAhiB,IAAA,GACA,IAGA,OAAA0hB,GAGAz9B,EAAAg+B,YAAA,SAAAp+B,GACA,IACA1I,EADAtB,KACAsB,OACA+mC,EAAA1+B,KAAAwH,IAFAnR,KAEAioB,QAAA,WAAA3mB,EAAA4mB,iBAAA,KACA,OAAAle,KAAA08B,SAAA18B,EAAAy8B,YAAA4B,EAAA,MAGAj+B,EAAAk+B,iBAAA,SAAAt+B,GACA,OAAAhK,KAAAuoC,QAAA,CACA1xB,GAAA7M,EAAAtI,KAAAmV,GACAjZ,MAAAoM,EAAApM,MACAgqC,MAAA5nC,KAAAooC,YAAAp+B,GACAyF,MAAAzF,EAAAyF,SAIArF,EAAAo+B,gBAAA,SAAAx+B,GACA,IACAo9B,EACAxpC,EACAgqC,EACA/wB,EACA7D,EALAgB,EAAAhU,KAOA,OAAAgU,EAAAy0B,sBAKA7qC,GADAwpC,EAAApzB,EAAAoyB,YAAAp8B,IACAo9B,EAAAxpC,MAAA,KACAgqC,EAAA5zB,EAAAo0B,YAAAhB,GACAvwB,EAAA7M,EAAAtI,KAAAmV,GAEA7C,EAAAiU,QAAA,UAAAjU,EAAA00B,uBAAAd,IAIA50B,EAAAgB,EAAA20B,qBACA31B,EAAApV,EAAAgqC,EAAA/wB,GAAA7C,EAAA40B,sBAAAhrC,EAAAgqC,GAJA,IATA,IAgBAx9B,EAAAy+B,mBAAA,SAAAjrC,EAAAkrC,GACA,IACA91B,EADAhT,KACA+oC,uBACA,OAAA/1B,IAAApV,EAAAkrC,GAAAlrC,GAGAwM,EAAAo3B,UAAA,SAAAnD,GACA,IACAlrB,EADAa,EAAAhU,KAGAgU,EAAA8L,WACA3M,EAAA6K,OAAAgS,YAAA,WACAhc,EAAA8L,aACA9B,OAAAkS,cAAA/c,GAEAa,EAAAvQ,OAAAoO,UAAA,2BAAApP,OAAA,GACAuR,EAAAwtB,UAAAnD,KAGO,KAIPA,EAAArqB,EAAAotB,eAAA/C,GACArqB,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,EAAA,IAAA55B,EAAAO,WAAA2J,KAAA,SAAA3E,GACAgK,EAAAg1B,aAAAh/B,EAAAtI,KAAAmV,KAIA7C,EAAAhI,GAAA0C,OAAA1O,MAAA6R,UAAA,QAAAhP,aAAAma,SAAAhJ,EAAAi1B,eAAAj/B,EAAAtI,KAAAmV,KAAAzJ,KAAA,IAAA4G,EAAAiyB,gBAAApjC,aAAAma,SAAA,EAAAhJ,EAAAi1B,eAAAj/B,EAAAtI,KAAAmV,KAAAzJ,KAAA,IAAA4G,EAAAmyB,mBAAAx3B,KAAA,SAAA3E,GACAgK,EAAAk1B,YAAAl/B,EAAAtI,YAMA0I,EAAAs3B,YAAA,SAAArD,GACA,IAAArqB,EAAAhU,KAEAgU,EAAA8L,aAIAue,EAAArqB,EAAAotB,eAAA/C,GACArqB,EAAA8G,IAAAjJ,UAAAmC,EAAAqtB,gBAAAhD,EAAA,IAAA55B,EAAAO,WAAA6M,UAAA,QAAAhP,aAAAma,SAAA,SAAAhT,GACA,OAAAgK,EAAAi1B,eAAAj/B,EAAAtI,KAAAmV,MACKzJ,KAAA,IAAA4G,EAAA+xB,QACL/xB,EAAA8G,IAAAjJ,UAAA,IAAApN,EAAAiC,OAGA0D,EAAA6+B,eAAA,SAAApyB,GACA,IACAvV,EADAtB,KACAsB,OAEA,OAHAtB,KAGAkpC,YAAAryB,GACAvV,EAAA6nC,sBAJAnpC,KAKK2mC,YAAA9vB,GACLvV,EAAA8nC,sBANAppC,KAOKqpC,UAAAxyB,GACLvV,EAAAgoC,oBAEA,IAIAl/B,EAAA4+B,aAAA,SAAAnyB,GACA,IACAvV,EADAtB,KACAsB,OACA,OAFAtB,KAEAkpC,YAAAryB,IAAAvV,EAAAioC,cAFAvpC,KAEA2mC,YAAA9vB,IAAAvV,EAAAkoC,cAFAxpC,KAEAqpC,UAAAxyB,IAAAvV,EAAAmoC,YAGAr/B,EAAAq+B,mBAAA,WACA,IACAnnC,EADAtB,KACAsB,OACAooC,GAAA,EASA,OAXA1pC,KAIAioB,QAAA,SACAyhB,EAAApoC,EAAAqoC,iBALA3pC,KAMKioB,QAAA,SACLyhB,EAAApoC,EAAAsoC,gBAIAF,GAGAt/B,EAAAs+B,uBAAA,SAAAd,GACA,IACAtmC,EADAtB,KACAsB,OAEA,OAAAsmC,IAHA5nC,KAEAioB,QAAA,SAAA3mB,EAAAuoC,sBAAAvoC,EAAAwoC,sBAIA1/B,EAAAu+B,kBAAA,WACA,IACArnC,EADAtB,KACAsB,OACA0R,EAAA1R,EAAAyoC,iBAQA,OAVA/pC,KAIAioB,QAAA,SACAjV,EAAA1R,EAAA0oC,mBALAhqC,KAMKioB,QAAA,WACLjV,EAAA1R,EAAA2oC,oBAGAj3B,GAGA5I,EAAA2+B,qBAAA,WAGA,OAFA/oC,KACAsB,OACA4oC,qBAGA9/B,EAAA+/B,YAAA,WAEA,OADAnqC,KACAioB,QAAA,SADAjoB,KACAsB,OAAA8oC,YAAA,IAGAhgC,EAAAqe,oBAAA,SAAA1S,GACA,IAGAs0B,EAHAr2B,EAAAhU,KACAiU,EAAAD,EAAAC,KAGAq2B,EAAAt2B,EAAAs2B,cAAA71B,KAAAT,GACAu2B,EAAAv2B,EAAAu2B,UAAA91B,KAAAT,GACAw2B,EAAAx2B,EAAAw2B,WAAA/1B,KAAAT,IAIAq2B,EAHAp2B,EAAAvF,OAAA,IAAAjK,EAAAQ,WAAA4M,UAAA,IAAApN,EAAAO,UAAAtD,KAAAsS,EAAA/P,IAAA8R,IAAA3I,KAAA,iBAAApD,GACA,OAAAsgC,EAAAtgC,GAAAwgC,EAAAxgC,EAAAtI,QAEAqQ,QAAAM,OAAA,KAAAjF,KAAA,QAAAk9B,IACAj4B,OAAA,KAAAjF,KAAA,QAAAm9B,GACAF,EAAAh4B,OAAA,QAAAjF,KAAA,KAAA4G,EAAAiU,QAAA,0BAAA9lB,MAAA,aAAAA,MAAA,wBAAAA,MAAA,0BAIAiI,EAAAgY,QAAA,WACA,IAAApO,EAAAhU,KACAgU,EAAApN,KAAAoN,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAQ,WAAAmI,KAAA,YAAA4G,EAAAK,aAAA,QACAL,EAAApN,KAAAyL,OAAA,QAAAjF,KAAA,QAAA3I,EAAAS,gBAAA/C,MAAA,wBAAA4E,KAAAiN,EAAAm2B,gBAGA//B,EAAAgiB,UAAA,SAAApP,EAAA2M,EAAAnE,GACA,IAIAilB,EACAC,EACAC,EANA32B,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OACA2S,EAAAD,EAAAC,KAIA8yB,EAAA/yB,EAAAiU,QAAA,SAsKA,IArKAwiB,EAAAx2B,EAAApC,UAAA,IAAApN,EAAAmC,MAAAiL,UAAA,IAAApN,EAAAiC,KAAAhF,KAAAsS,EAAA42B,QAAAn2B,KAAAT,KACAjC,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAA62B,SAAAp2B,KAAAT,IAAA7R,MAAA,gBAAA6H,GACA,OAAAgK,EAAArR,MAAAqH,EAAAtI,QACKS,MAAA,kBAAA6H,GACL,OAAA1I,EAAAgrB,qBAAAhrB,EAAAwiC,4BAAA95B,GAAA,iBACK2E,KAAA,SAAA3E,GACLgK,EAAA2yB,YAAA38B,EAAAtI,QACAsI,EAAAy8B,WAAAz8B,EAAA08B,SAAAplC,EAAAwlC,qBAGA9mC,KAAA8qC,SAAA9gC,IAGA+8B,KACA4D,EAAA12B,EAAApC,UAAA,IAAApN,EAAAmC,MAAAiL,UAAA,IAAApN,EAAAkC,cAAAjF,KAAAsS,EAAA42B,QAAAn2B,KAAAT,KACAjC,QAAAM,OAAA,QAAAjF,KAAA,iBAAApD,GACA,OAAAvF,EAAAkC,aAAA,IAAAlC,EAAA1G,OAAA,IAAA0G,EAAA1G,OAAA,IAAAiM,EAAAtI,KAAAmV,KAGA,IAAA7C,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OACAysC,EAAAxoC,MAAA,kBAEAwoC,EAAAxoC,MAAA,gBAAA6H,GACA,OAAA1I,EAAAypC,cAAA7sC,OAAA,EAAA8V,EAAAgM,WAAAhW,EAAAtI,KAAA0a,OAAA,GAAAxe,OAAAoW,EAAArR,MAAAqH,EAAAtI,QACSS,MAAA,UAAAb,EAAA0pC,qBAAA,WAAAr8B,KAAA,SAAA3E,GACT,IAAAihC,EAAA,EAEA1/B,EAAA,EACAG,EAAA,EACAm0B,EAAA,GAEA,GAAA7rB,EAAA8M,gBAAAnI,QAAA3O,EAAAtI,KAAAmV,IAAA,GACA,IAAAuwB,EAAApzB,EAAAoyB,YAAAp8B,GACAkhC,EAAAl3B,EAAAyxB,cAAAzxB,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,QAAAkpC,EAAA33B,MAAA,GACA07B,EAAA/D,EAAAV,SAAA/8B,KAAAwH,GAAA,EACAi6B,EAAAp3B,EAAA2xB,OAAAuF,EACAG,EAAAF,GAAA,IAAAC,EAAA,IAAAA,GACAH,EAAAj3B,EAAAqU,eAAArU,EAAA2xB,OAAAuF,EACA3/B,EAAA5B,KAAAu+B,IAAAmD,GAAAD,EACA1/B,EAAA/B,KAAAuH,IAAAm6B,GAAAD,EACAvL,EAAA,cAAAsL,EAAAxhC,KAAAwH,GAAA,KAAA5F,EAAA,KAAAG,EAAA,IAGAM,EAAA0C,OAAA1O,MAAAoN,KAAA,CACA7B,IACAG,IACAC,MAAAs/B,EACAr/B,OArBA,EAsBAi0B,cACW19B,MAAA,0BAAA8oC,EAvBX,GAuBW,UAKXR,EAAAr9B,KAAA,qBAAApD,GACA,OAAAgK,EAAA2yB,YAAA38B,EAAAtI,OAAA8jB,EAAA,gBACKvB,GAAA,YAAA3iB,EAAAgrB,oBAAA,SAAAtiB,GACL,IAAAo9B,EAAAwD,EAEA52B,EAAA8L,aAKAsnB,EAAApzB,EAAAoyB,YAAAp8B,MAGA4gC,EAAA52B,EAAAs0B,iBAAAlB,GAEApzB,EAAAwtB,UAAA4F,EAAA1lC,KAAAmV,IACA7C,EAAA+J,IAAAmjB,MAAAkG,EAAA1lC,KAAAmV,IACA7C,EAAAytB,kBAAA2F,EAAA1lC,KAAAmV,IAAA,GACA7C,EAAA1S,OAAAgqC,iBAAAV,EAAA5qC,QAEK,MAAAikB,GAAA,YAAA3iB,EAAAgrB,oBAAA,SAAAtiB,GACL,IAEAuhC,EAFAnE,EAAApzB,EAAAoyB,YAAAp8B,GAIAo9B,IACAmE,EAAA,CAAAv3B,EAAAs0B,iBAAAlB,IACApzB,EAAAw3B,YAAAD,EAAAvrC,QAEK,MAAAikB,GAAA,WAAA3iB,EAAAgrB,oBAAA,SAAAtiB,GACL,IAAAo9B,EAAAwD,EAEA52B,EAAA8L,aAKAsnB,EAAApzB,EAAAoyB,YAAAp8B,MAGA4gC,EAAA52B,EAAAs0B,iBAAAlB,GAEApzB,EAAA0tB,YAAA0F,EAAA1lC,KAAAmV,IACA7C,EAAA+J,IAAAujB,SACAttB,EAAAy3B,eACAz3B,EAAA03B,cACA13B,EAAA1S,OAAAqqC,gBAAAf,EAAA5qC,QAEK,MAAAikB,GAAA,QAAA3iB,EAAAgrB,oBAAA,SAAAtiB,EAAAhM,GACL,IACA4sC,EADAxD,EAAApzB,EAAAoyB,YAAAp8B,GAGAo9B,IACAwD,EAAA52B,EAAAs0B,iBAAAlB,GAEApzB,EAAA43B,aACA53B,EAAA43B,YAAA5rC,KAAA4qC,EAAA5sC,GAGAgW,EAAA1S,OAAAuqC,aAAAttC,KAAAyV,EAAA+J,IAAA6sB,EAAA5qC,QAEK,MAAA2O,KAAA,WACLqF,EAAA8L,YAAA,IACKjd,aAAAma,YAAA8uB,UAAA,aAAA9hC,GACL,IACA+hC,EADA3E,EAAApzB,EAAAoyB,YAAAp8B,GAGA,OAAAo9B,GAYAnV,MAAAjyB,KAAA8qC,SAAArE,cACAzmC,KAAA8qC,SAAArE,WAAA,GAGAxU,MAAAjyB,KAAA8qC,SAAApE,YACA1mC,KAAA8qC,SAAApE,SAAA1mC,KAAA8qC,SAAArE,YAGAsF,EAAA//B,EAAA+/B,YAAA/rC,KAAA8qC,SAAA1D,GACApnC,KAAA8qC,SAAAiB,EAAA,GACA,SAAAxe,GACA,IAAAye,EAAAD,EAAAxe,GAGA,OAFAye,EAAAtqC,KAAAsI,EAAAtI,KAEAsS,EAAAwzB,OAAAwE,GAAA,KAzBA,WACA,iBA0BK5+B,KAAA,YAAAoY,EAAA,eAAArjB,MAAA,gBAAA6H,GACL,OAAAgK,EAAAgM,WAAAhM,EAAAgM,WAAAhW,EAAAtI,KAAA0a,OAAA,GAAAxe,OAAAoW,EAAArR,MAAAqH,EAAAtI,KAAAmV,MAEAtY,KAAAyV,EAAA0d,OAAA,WACA1d,EAAA8L,YAAA,IAEA2qB,EAAAv4B,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,SACA8B,EAAApC,UAAA,IAAApN,EAAAO,UAAA0J,OAAA,QAAAvM,MAAA,aAAAiL,KAAA,iBAAApD,GACA,OAAAgK,EAAA2yB,YAAA38B,EAAAtI,MAAA+C,EAAAwC,WAAA,KACKF,KAAAiN,EAAAw0B,gBAAA/zB,KAAAT,IAAA5G,KAAA,YAAA4G,EAAA2zB,qBAAAlzB,KAAAT,IAAA7R,MAAA,qBAAA6H,GACL,OAAAgK,EAAA2yB,YAAA38B,EAAAtI,OAAA,IAAAsS,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OAAAyL,KAAAsiC,MAAAj4B,EAAA2xB,OAAA,aACK9iC,aAAAma,YAAA7a,MAAA,mBAAA6H,GACL,OAAAgK,EAAA4U,eAAA5e,EAAAtI,KAAAmV,KAAA7C,EAAA0zB,UAAA19B,EAAAtI,MAAA,MAEAuS,EAAAvF,OAAA,IAAAjK,EAAAS,gBAAA/C,MAAA,UAAA6R,EAAAiU,QAAA,UAAA8e,EAAA,KAEAA,EAAA,CACA,IAAAt3B,EAAA,GACAi7B,EAAA12B,EAAApN,KAAA8H,OAAA,KAAAjK,EAAAU,qBAAA0M,UAAA,QAAApN,EAAAU,qBAAAzD,KAAAsS,EAAAtS,KAAAqU,UACAhE,QAAAM,OAAA,QACAq4B,EAAAt9B,KAAA,iBAAApD,EAAAhM,GACA,OAAAyG,EAAAU,oBAAA,IAAAV,EAAAU,oBAAA,IAAAnH,IACOoP,KAAA,aAAA8+B,GACP,GAAAl4B,EAAA8M,gBAAAnI,QAAAuzB,EAAAr1B,KAAA,EACA,cAGA,IAAA7M,EAAA,CACAtI,KAAA,EACA9D,MAAA0D,EAAAulC,YAEAJ,WAAAnlC,EAAAwlC,oBACAJ,UAAA,EAAAplC,EAAAwlC,qBAAAxlC,EAAA4mB,iBAAAve,KAAAwH,GAAA,GACA1B,WAEA,OAAAuE,EAAAwzB,OAAAx9B,GAAA,QAEA0gC,EAAAx4B,OAAAC,SACA6B,EAAApN,KAAA8H,OAAA,IAAAjK,EAAAW,oBAAAgI,KAAA,cAAArG,KAAAzF,EAAA6qC,iBAAA7qC,EAAA8qC,YAAA,IACAp4B,EAAApN,KAAA8H,OAAA,IAAAjK,EAAAa,mBAAA8H,KAAA,SAAA4G,EAAA6xB,aAAA7xB,EAAA2xB,OAAA3xB,EAAA6xB,cAAAvkC,EAAA4mB,iBAAA,YAAA9a,KAAA,cAAArG,KAAAzF,EAAA6qC,iBAAAn4B,EAAA60B,mBAAAvnC,EAAAslC,WAAA,OACA5yB,EAAApN,KAAA8H,OAAA,IAAAjK,EAAAY,mBAAA+H,KAAA,KAAA4G,EAAA6xB,aAAA7xB,EAAA2xB,OAAA3xB,EAAA6xB,cAAAvkC,EAAA4mB,iBAAA,WAAA9a,KAAA,cAAArG,KAAAzF,EAAA6qC,iBAAAn4B,EAAA60B,mBAAAvnC,EAAAulC,WAAA,SAIAz8B,EAAAiY,UAAA,WACA,IAAAzb,EAAA5G,KAAA4G,KAEA5G,KAAAioB,QAAA,WACArhB,EAAAyL,OAAA,KAAAjF,KAAA,QAAA3I,EAAAU,qBACAyB,EAAAyL,OAAA,QAAAjF,KAAA,QAAA3I,EAAAW,oBAAAjD,MAAA,wBAAAA,MAAA,yBACAyE,EAAAyL,OAAA,QAAAjF,KAAA,QAAA3I,EAAAa,mBAAAnD,MAAA,wBAAAA,MAAA,yBACAyE,EAAAyL,OAAA,QAAAjF,KAAA,QAAA3I,EAAAY,mBAAAlD,MAAA,wBAAAA,MAAA,2BAIAiI,EAAA+d,oBAAA,WACA,OAAAnoB,KAAAsB,OAAA6qC,iBAAA,MAGA/hC,EAAAu4B,UAAA,SAAAI,GACA,QAAA/kC,EAAA,EAAmBA,EAAA+kC,EAAA7kC,OAAgBF,IACnC,KAAA+kC,EAAA/kC,KAAAgC,KAAAke,OACA,SAIA,UAGA9T,EAAAiiC,SAAA,SAAAx1B,EAAA9Y,GACAiC,KAAAke,MAAArH,GAAA7W,KAAAssC,YAAAvuC,IAGAqM,EAAAy4B,UAAA,SAAAE,GACA,IACA/kC,EADA+X,EAAA,GAGA,IAAA/X,EAAA,EAAeA,EAAA+kC,EAAA7kC,OAAgBF,IAC/B+kC,EAAA/kC,KAAAgC,KAAAke,OACAnI,EAAApI,KAAA3N,KAAAssC,YAAAtsC,KAAAke,MAAA6kB,EAAA/kC,MAIA,OAAA+X,GAGA3L,EAAA6M,aAAA,SAAAjZ,GACA,IAAAsD,EAAAtB,KAAAsB,OACA,OAAAtD,EAAAsD,EAAAotB,kBAAAxwB,OAAAoD,EAAAotB,kBAAA1wB,MAGAoM,EAAAmiC,cAAA,SAAAC,EAAAjO,GACA,UAAAiO,EAAA,IAAAA,EAAAxsC,KAAAmjC,wBAAA5E,IAGAn0B,EAAAqiC,UAAA,SAAAziC,GACA,OAAAhK,KAAAusC,cAAA9nC,EAAAsC,KAAAiD,EAAAyF,QAGArF,EAAAsiC,WAAA,SAAA1iC,GACA,OAAAhK,KAAAusC,cAAA9nC,EAAAuC,MAAAgD,EAAA6M,KAGAzM,EAAAuiC,WAAA,SAAA3iC,GACA,OAAAhK,KAAAusC,cAAA9nC,EAAA2B,MAAA4D,EAAAyF,QAGArF,EAAAwiC,YAAA,SAAA5iC,GACA,OAAAhK,KAAAusC,cAAA9nC,EAAA4B,OAAA2D,EAAA6M,KAGAzM,EAAAyiC,UAAA,SAAA7iC,GACA,OAAAhK,KAAA2sC,WAAA3iC,GAAAhK,KAAAusC,cAAA9nC,EAAAX,KAAAkG,EAAA6M,KAGAzM,EAAA0iC,WAAA,SAAA9iC,GACA,OAAAhK,KAAA4sC,YAAA5iC,GAAAhK,KAAAusC,cAAA9nC,EAAA6B,MAAA0D,EAAA6M,KAGAzM,EAAA2iC,YAAA,SAAA/iC,GACA,OAAAhK,KAAA2sC,WAAA3iC,GAAAhK,KAAAusC,cAAA9nC,EAAA+B,OAAAwD,EAAAyF,QAGArF,EAAA4iC,aAAA,SAAAhjC,GACA,OAAAhK,KAAA4sC,YAAA5iC,GAAAhK,KAAAusC,cAAA9nC,EAAAgC,QAAAuD,EAAA6M,KAGAzM,EAAA6iC,SAAA,SAAAjjC,GACA,OAAAhK,KAAA2sC,WAAA3iC,GAAAhK,KAAAusC,cAAA9nC,EAAAT,IAAAgG,EAAAyF,QAGArF,EAAA8iC,UAAA,SAAAljC,GACA,OAAAhK,KAAA4sC,YAAA5iC,GAAAhK,KAAAusC,cAAA9nC,EAAA8B,KAAAyD,EAAA6M,KAGAzM,EAAAygC,SAAA,SAAA7gC,GACA,OAAAhK,KAAA2sC,WAAA3iC,EAAAtI,MAAA1B,KAAAusC,cAAA9nC,EAAAiC,IAAAsD,EAAAtI,KAAAmV,KAGAzM,EAAAmgC,UAAA,SAAAvgC,GACA,OAAAhK,KAAA4sC,YAAA5iC,EAAAtI,MAAA1B,KAAAusC,cAAA9nC,EAAAmC,KAAAoD,EAAAtI,KAAAmV,KAGAzM,EAAA+iC,UAAA,SAAAnjC,GACA,OAAAhK,KAAA2sC,WAAA3iC,GAAAhK,KAAAusC,cAAA9nC,EAAAV,KAAAiG,EAAA6M,KAGAzM,EAAAgjC,WAAA,SAAApjC,GACA,OAAAhK,KAAA4sC,YAAA5iC,GAAAhK,KAAAusC,cAAA9nC,EAAAoC,MAAAmD,EAAA6M,KAGAzM,EAAAijC,YAAA,SAAArjC,EAAAhM,GACA,OAAAgC,KAAAusC,cAAA9nC,EAAAwB,OAAAjI,GAAA,eAAAgM,IAAA,WAGAI,EAAAkjC,WAAA,SAAAtjC,GACA,OAAAhK,KAAAusC,cAAA9nC,EAAAgB,UAAAuE,EAAAyF,QAGArF,EAAAmjC,YAAA,SAAA12B,GACA,IACA22B,EADAxtC,KACAsB,OAAAmhC,aAAA5rB,GACA42B,EAAA,GAMA,OAJAD,IACAC,EAAA,IAAAhpC,EAAA1G,OAAA,IAAAyvC,GALAxtC,KAQAusC,cAAA9nC,EAAA1G,OAAA8Y,GAAA42B,GAGArjC,EAAAogC,WAAA,SAAAxgC,GACA,OAAAhK,KAAA0tC,aAAA1jC,GAAAhK,KAAA2tC,eAAA3jC,IAGAI,EAAAsjC,aAAA,SAAA1jC,GACA,WAAAhK,KAAAghB,iBAAArI,QAAA3O,EAAA6M,KAAA,EAAApS,EAAAsB,QAAA,KAGAqE,EAAAujC,eAAA,SAAA3jC,GACA,WAAAhK,KAAAihB,mBAAAtI,QAAA3O,EAAA6M,KAAA,EAAApS,EAAAuB,UAAA,KAGAoE,EAAAwjC,eAAA,SAAA5jC,GACA,OAAAvF,EAAAK,UAAA9E,KAAAutC,YAAAvjC,EAAA6M,KAGAzM,EAAAyjC,eAAA,SAAA7jC,GACA,OAAAvF,EAAAC,UAAA1E,KAAAutC,YAAAvjC,EAAA6M,KAGAzM,EAAA0jC,cAAA,SAAA9jC,GACA,OAAAvF,EAAAG,SAAA5E,KAAAutC,YAAAvjC,EAAA6M,KAGAzM,EAAAkgC,cAAA,SAAAtgC,GACA,OAAAvF,EAAAO,SAAAhF,KAAAutC,YAAAvjC,EAAAtI,KAAAmV,KAGAzM,EAAA+4B,wBAAA,SAAA5E,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAAzzB,QAAA,2CAAsG,SAGtGV,EAAA2jC,eAAA,SAAAl3B,EAAA21B,GACA,OAAAA,GAAA,QAAA/nC,EAAA1G,OAAAiC,KAAAmjC,wBAAAtsB,IAGAzM,EAAAi3B,gBAAA,SAAA0B,EAAAyJ,GACA,IAAAx4B,EAAAhU,KAEA,OADA+iC,KAAA,IACA7kC,OAAA6kC,EAAAxzB,IAAA,SAAAsH,GACA,OAAA7C,EAAA+5B,eAAAl3B,EAAA21B,KACK,MAGLpiC,EAAA4jC,eAAA,SAAAn3B,GACA,UAAApS,EAAA0D,WAAAnI,KAAAmjC,wBAAAtsB,IAGAzM,EAAAy3B,gBAAA,SAAAkB,GACA,IAAA/uB,EAAAhU,KACA,OAAA+iC,KAAA7kC,OAAA6kC,EAAAxzB,IAAA,SAAAsH,GACA,OAAA7C,EAAAg6B,eAAAn3B,KACK,MAGLzM,EAAAkV,YAAA,SAAAzI,GAEA,cADAmH,OAAAiwB,UAAAC,WAAAC,cAAAx1B,QAAA,cACA,GAAAkK,SAAAurB,IAAAn+B,MAAA,aAAA4G,EAAA,KAGAzM,EAAAga,WAAA,SAAAiqB,EAAAx3B,GACA,OAAAw3B,EAAAh8B,OAAA,YAAAjF,KAAA,KAAAyJ,GAAAxE,OAAA,SAGAjI,EAAAkkC,aAAA,SAAA30B,GAEA,IAAA5G,EAAApJ,KAAA0G,IAAA,GAAArQ,KAAAonB,OAAArU,MACA,OAAA4G,IAAA,EAAA5G,OAAA,IAGA3I,EAAAmkC,aAAA,SAAA50B,GACA,OAAAA,GAAA,IAAA3Z,KAAAonB,OAAAxU,KAGAxI,EAAA6kB,cAAA,WAEA,OADAjvB,KACAsuC,cADAtuC,KACAsB,OAAAiT,eAGAnK,EAAA8kB,cAAA,WAEA,OADAlvB,KACAuuC,cADAvuC,KACAsB,OAAAiT,eAGAnK,EAAAilB,cAAA,WAEA,OADArvB,KACAsB,OAAAoT,cAAA,EADA1U,KACAsuC,aADAtuC,KACAsB,OAAAiT,eAGAnK,EAAAklB,cAAA,WAEA,OADAtvB,KACAuuC,aADAvuC,KACAsB,OAAAiT,eAGAnK,EAAAokC,iBAAA,SAAA70B,GACA,IACA5G,EAAApJ,KAAA0G,IAAA,GADArQ,KACAonB,OAAArU,MACAF,EAAAlJ,KAAA0G,IAAA,GAFArQ,KAEAonB,OAAAvU,OAEA,OAAA8G,EAJA3Z,KAIA2L,MAAA,EAAAoH,EAAAF,EAJA7S,KAIAonB,OAAArU,KAAA,IAGA3I,EAAAqkC,kBAAA,SAAA90B,GAEA,OAAAA,EAAA3Z,KAAAonB,OAAAtU,OAAA9S,KAAAonB,OAAAxU,IAAA5S,KAAA4L,QAAA,IAGAxB,EAAA+kB,kBAAA,WAEA,OADAnvB,KACAwuC,kBADAxuC,KACAsB,OAAAiT,eAGAnK,EAAAglB,mBAAA,WAEA,OADApvB,KACAyuC,mBADAzuC,KACAsB,OAAAiT,eAGAnK,EAAAmlB,kBAAA,WAEA,OADAvvB,KACAwuC,iBADAxuC,KACAsB,OAAAiT,eADAvU,KACAsB,OAAAoT,aAAA,OAGAtK,EAAAolB,mBAAA,WAEA,OADAxvB,KACAyuC,kBADAzuC,KACAsB,OAAAiT,eAGAnK,EAAA2V,cAAA,WACA,IACAze,EADAtB,KACAsB,OACA0K,EAFAhM,KAEAgM,GACA2yB,EAAAr9B,EAAAohC,YACAgM,EAAAvkC,EAAA7I,EAAAypC,eAAAzpC,EAAAypC,cAAA/+B,EAAAC,MAAA0iC,aAAAxiC,QACAwlB,EAAArwB,EAAAstC,WACA7L,EAAA,GACA,gBAAA/4B,GACA,IACArH,EADAkU,EAAA7M,EAAA6M,IAAA7M,EAAAtI,MAAAsI,EAAAtI,KAAAmV,IAAA7M,EAkBA,OAfA20B,EAAA9nB,aAAAyb,SACA3vB,EAAAg8B,EAAA9nB,GAAA7M,GAEA20B,EAAA9nB,GACAlU,EAAAg8B,EAAA9nB,IAGAksB,EAAApqB,QAAA9B,GAAA,GACAksB,EAAAp1B,KAAAkJ,GAGAlU,EAAA+rC,EAAA3L,EAAApqB,QAAA9B,GAAA63B,EAAAxwC,QACAygC,EAAA9nB,GAAAlU,GAGAgvB,aAAAW,SAAAX,EAAAhvB,EAAAqH,GAAArH,IAIAyH,EAAA6V,mBAAA,WACA,IACA3e,EADAtB,KACAsB,OACAq9B,EAAAr9B,EAAAypC,cACA8D,EAAAvtC,EAAAwtC,gBACAC,EAAA,UAAAF,EAAA5yB,KACAG,EAAAyyB,EAAAzyB,QAAAyyB,EAAAzyB,OAAAle,OAAA2wC,EAAAzyB,OAAA,GACA/L,EAAAw+B,EAAAx+B,KAAA,IACA,OAAAlG,EAAA7I,EAAAwtC,iBAAA,SAAAlxC,GACA,IAAAI,EAEA2E,EAAAg8B,IAAAzgC,OAAA,GAEA,IAAAF,EAAA,EAAiBA,EAAAoe,EAAAle,OAAmBF,IAGpC,IAFA+wC,EAAAnxC,EAAA,IAAAA,EAAAyS,GAEA+L,EAAApe,GAAA,CACA2E,EAAAg8B,EAAA3gC,GACA,MAIA,OAAA2E,GACK,MAGLyH,EAAA6T,iBAAA,WACA,IAAA3c,EAAA,CACAE,OAAA,SACA0iB,mBAAAtV,EACAqvB,gBAAArvB,EACAsvB,iBAAAtvB,EACAogC,kBAAApgC,EACAqgC,mBAAArgC,EACAsgC,iBAAAtgC,EACAugC,oBAAAvgC,EACAgiB,aAAA,EACA5M,cAAA,EACAorB,iBAAAxgC,EACAuW,iBAAA,EACA4F,cAAA,EACA+Z,YAAA,aACAuK,iBAAA,aACAC,eAAA,aACAnK,gBAAAv2B,EACAs2B,gBAAAt2B,EACA2gC,sBAAA,EACAjjB,qBAAA,EACArpB,YAAA,aACAC,WAAA,aACAC,SAAA,aACAC,UAAA,aACAN,OAAA,aACAE,WAAA,aACA6lB,oBAAA,IACAkF,YAAAnf,EACAof,QAAA,GACA+D,aAAA,WACA5R,iBAAA,EACAqvB,YAAA,EACAC,iBAAA,SAAA54B,GACA,OAAAA,GAEA64B,WAAA,GACAjN,aAAA,GACAN,YAAA,GACArrB,UAAA,GACA64B,eAAA/gC,EACAghC,WAAA,GACAC,YAAA,GACAC,WAAA,OACAC,aAAA,GACAnB,gBAAAhgC,EACA8zB,YAAA,GACAtf,WAAA,EACAF,iBAAAtU,EACA20B,wBAAA,EACAI,wBAAA,EACAG,4BAAA,WACA,UAEAkM,yBAAA,EACAC,0BAAA,EACApE,aAAA,aACAP,iBAAA,aACAK,gBAAA,aACAuE,gBAAA,aACAC,kBAAA,aACA/xB,cAAAxP,EACA2P,kBAAA3P,EACA8P,eAAA9P,EACAgQ,eAAAhQ,EACAkQ,kBAAAlQ,EACA0P,mBAAA1P,EACA4P,eAAA5P,EAEA8c,sBAAA,GAEA5E,eAAA,EACAC,qBAAA,GACAqpB,sBAAA,EACAC,iBAAA,aAEAtF,cAAA,GACA+D,gBAAA,GAEAlkB,aAAA,EACArH,aAAA,EACAnC,gBAAA,SACAG,oBAAA,WACA+uB,eAAA,GACAC,eAAA,EACAC,uBAAA5hC,EACA6hC,yBAAA7hC,EACA8hC,6BAAA9hC,EACA+hC,4BAAA/hC,EACAgiC,gBAAA,EACAC,eAAA,EACAC,uBAAA,GACAC,wBAAA,GAEAx8B,cAAA,EACAD,aAAA,EACAuZ,YAAA,UACAxN,kBAAA,EACAqO,kBAAA,GACA9Y,sBAAA,EACAuB,wBAAAvI,EACAiH,oBAAA,GACAsV,wBAAA,GACAlV,uBAAArH,EACAoH,iBAAA,EACAwB,mBAAA,KACA/B,mBAAA,EACAu7B,mBAAA,EACA37B,uBAAA,EACAE,yBAAA,EACAC,kBAAA,KACAgoB,gBAAA5uB,EACA+uB,gBAAA/uB,EACAqiC,eAAA,GACA32B,mBAAA1L,EACAwW,mBAAAxW,EACAwJ,aAAA,GACAjE,kBAAAvF,EACAgG,aAAA,EACAqZ,iBAAArf,EACA6uB,gBAAA7uB,EACAgvB,gBAAAhvB,EACAsiC,iBAAA,EACAC,mBAAAviC,EACA8F,kBAAA9F,EACAsJ,aAAA,GACAgD,wBAAAtM,EACAwiC,mBAAA,EACA15B,mBAAA,KACAnB,mBAAA,EACA0U,uBAAArc,EACA8H,4BAAA9H,EACA+H,+BAAA/H,EACAyiC,eAAA,GACAC,oBAAA1iC,EACAmG,cAAA,EACA2oB,iBAAA9uB,EACAivB,iBAAAjvB,EACA2iC,kBAAA,EACAC,oBAAA5iC,EACA6L,mBAAA7L,EACAuJ,cAAA,GACAkD,yBAAAzM,EACA6iC,oBAAA,EACA55B,oBAAA,KACAqT,wBAAAtc,EACA8iC,gBAAA,GACAC,qBAAA/iC,EAEAgjC,aAAA,EACAC,YAAA,OACA9P,aAAA,GACA+P,aAAA,EAGA7P,aAAA,GACA8P,aAAA,GACAC,iBAAA,EACAhtB,kBAAA,EAEAsJ,YAAA,EACA2jB,QAAA,IACAC,kBAAA,GACAC,4BAAA,EACAC,0BAAAxjC,EACAyjC,oBAAAzjC,EAEA0jC,kBAAA,EACAC,eAAA,OAEAC,eAAA5jC,EACA6jC,gBAAA,GACAC,mBAAA9jC,EACA+jC,eAAA,EACAC,UAAA,EAEAC,gBAAA,EACAC,YAAA,EAEAlJ,gBAAA,EACAG,sBAAAn7B,EACAk7B,oBAAA,IACA7B,qBAAAr5B,EACA66B,WAAA,GACAH,oBAAA,GAEAphB,kBAAA,EACAikB,kBAAA,EACAnB,sBAAA,EACAhB,wBAAAp7B,EACAg4B,UAAA,EACAC,UAAA,IACAC,qBAAA,EAAAn9B,KAAAwH,GAAA,EACA+4B,yBAAAt7B,EACAw9B,iBAAAx9B,EACA22B,iBAAA32B,EACA82B,oBAAA,EACA8D,aAAA,GACAJ,sBAAA,GAEAO,kBAAA,EACAM,wBAAAr7B,EACAi7B,sBAAA,IACA7B,uBAAAp5B,EACA42B,iBAAA52B,EACAw7B,YAAA,GACAb,aAAA,GACAJ,sBAAA,GAEA4J,0BAAA,WAEAxvC,QAAA,GAEAyvC,cAAA,EACAC,iBAAA,EACAC,mBAAAtkC,EACAukC,0BAAAvkC,EACAwkC,yBAAAxkC,EACAykC,0BAAAzkC,EACA0kC,sBAAA1kC,EACA2kC,iBAAA,SAAAvpC,EAAAwpC,EAAAC,EAAA9wC,GACA,OAAA3C,KAAA0zC,kBAAA1zC,KAAA0zC,kBAAA1pC,EAAAwpC,EAAAC,EAAA9wC,GAAA,IAEAgxC,mBAAA,EACAC,eAAA,EACAC,sBAAA,CACAjhC,IAAA,MACAG,KAAA,QAEAwxB,eAAA,aACAC,eAAA,aAEAsP,gBAAAllC,EACAmlC,cAAA,CACAnhC,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAEAihC,eAAA,cAKA,OAHAv2C,OAAAyM,KAAAlK,KAAAi0C,kBAAAtpC,QAAA,SAAAvM,GACAkD,EAAAlD,GAAA4B,KAAAi0C,iBAAA71C,IACK4B,MACLsB,GAGA8I,EAAA6pC,iBAAA,GAEA7pC,EAAAsT,WAAA,SAAApc,GACA,IACAvD,EACAmM,EACAgqC,EAHAC,EAAAn0C,KAAAsB,OAkBA7D,OAAAyM,KAAAiqC,GAAAxpC,QAAA,SAAAvM,GACAL,EAAAuD,EACA4I,EAAA9L,EAAA6R,MAAA,KACAikC,EAhBA,SAAAE,IACA,IAAAh2C,EAAA8L,EAAAmqC,QAEA,OAAAj2C,GAAAL,GAAA,iCAAAA,EAAA,YAAA6K,EAAA7K,KAAAK,KAAAL,GACAA,IAAAK,GACAg2C,KACOh2C,OAGP,EAFAL,EASAq2C,GAEA3qC,EAAAyqC,KACAC,EAAA/1C,GAAA81C,MAKA9pC,EAAAiU,iBAAA,SAAAi2B,EAAAC,EAAAC,EAAAtqC,EAAA2nB,GACA,IAAA7d,EAAAhU,KACAgmB,EAAAuuB,GAAA,MACAE,EAAAzgC,EAAAhI,GAAA0oC,IAAAJ,GAEAE,GACA/2C,OAAAyM,KAAAsqC,GAAA7pC,QAAA,SAAAgqC,GACAF,EAAAE,SAAAH,EAAAG,MAIAF,EAAApyC,IAAA,SAAAouB,EAAA/uB,GACA,IAAAsI,EACA4qC,EAAAlzC,EAAAmzC,UAAAnzC,EAAAozC,aAEA,IAAApzC,EACA,UAAAN,MAAAqvB,EAAAskB,YAAA,IAAAtkB,EAAAukB,OAAA,KAAAvkB,EAAAwkB,WAAA,KAIAjrC,EADA,SAAAgc,EACAhS,EAAA2K,kBAAAu2B,KAAAljB,MAAA4iB,GAAA1qC,GACO,QAAA8b,EACPhS,EAAAmhC,iBAAAP,GAEA5gC,EAAAohC,iBAAAR,GAGA/iB,EAAAtzB,KAAAyV,EAAAhK,MAIAI,EAAAirC,iBAAA,SAAAC,EAAAC,GACA,IACAvrC,EADAs1B,EAAAiW,EAAAC,UAAAF,GAYA,OATA,IAAAhW,EAAAphC,QACA8L,EAAA,KACAs1B,EAAA,GAAA30B,QAAA,SAAAkM,GACA7M,EAAA,GAAA6M,GAAA,QAGA7M,EAAAurC,EAAAvjB,MAAAsjB,GAGAtrC,GAGAI,EAAAgrC,iBAAA,SAAAK,GACA,OAAAz1C,KAAAq1C,iBAAAI,EAAAz1C,KAAAgM,GAAAypC,MAGArrC,EAAA+qC,iBAAA,SAAAO,GACA,OAAA11C,KAAAq1C,iBAAAK,EAAA11C,KAAAgM,GAAA0pC,MAGAtrC,EAAAuU,kBAAA,SAAA0gB,EAAAn1B,GACA,IAEAyrC,EACAj0C,EAHAsS,EAAAhU,KACA41C,EAAA,GAoCA,OAhCA1rC,GAEAA,EAAAqB,GACAoqC,EAAAzrC,EAAAtM,MAAAwR,OAAAlF,EAAAqB,GACAyI,EAAA1S,OAAAysB,OAAA7jB,EAAAqB,GAEAoqC,EAAAzrC,EAAAtM,MAGAg4C,EAAAjoC,KAAAgoC,GACAtW,EAAA10B,QAAA,SAAAvB,GACA,IAAAysC,EAAA,GACAF,EAAAhrC,QAAA,SAAAvM,GAEA,IAAA8K,EAAA8K,EAAA8hC,gBAAA1sC,EAAAhL,GAEAoL,EAAAN,KACAA,EAAA,MAGA2sC,EAAAloC,KAAAzE,KAEA0sC,EAAAjoC,KAAAkoC,KAEAn0C,EAAAsS,EAAA6K,kBAAA+2B,KAEAn4C,OAAAyM,KAAAm1B,GAAA10B,QAAA,SAAAvM,GACAw3C,EAAAjoC,KAAA,CAAAvP,GAAAgR,OAAAiwB,EAAAjhC,OAEAsD,EAAAsS,EAAA+K,qBAAA62B,IAGAl0C,GAGA0I,EAAA0rC,gBAAA,SAAAxzC,EAAA0I,GAOA,IAFA,IAAA+qC,GAFA/qC,GAFAA,IAAAF,QAAA,qBAEAA,QAAA,WAEAmF,MAAA,KAEAjS,EAAA,EAAmBA,EAAA+3C,EAAA73C,SAAsBF,EAAA,CACzC,IAAAg4C,EAAAD,EAAA/3C,GAEA,KAAAg4C,KAAA1zC,GAGA,OAFAA,IAAA0zC,GAMA,OAAA1zC,GASA8H,EAAAyU,kBAAA,SAAAygB,GAIA,IAHA,IAAA2W,EAAA,GACA/rC,EAAAo1B,EAAA,GAEAthC,EAAA,EAAmBA,EAAAshC,EAAAphC,OAAiBF,IAAA,CAGpC,IAFA,IAAAk4C,EAAA,GAEA1W,EAAA,EAAqBA,EAAAF,EAAAthC,GAAAE,OAAoBshC,IAAA,CACzC,GAAAh2B,EAAA81B,EAAAthC,GAAAwhC,IACA,UAAAp+B,MAAA,0CAAApD,EAAA,IAAAwhC,EAAA,MAGA0W,EAAAhsC,EAAAs1B,IAAAF,EAAAthC,GAAAwhC,GAGAyW,EAAAtoC,KAAAuoC,GAGA,OAAAD,GASA7rC,EAAA2U,qBAAA,SAAAwgB,GAGA,IAFA,IAAA0W,EAAA,GAEAj4C,EAAA,EAAmBA,EAAAuhC,EAAArhC,OAAoBF,IAGvC,IAFA,IAAAI,EAAAmhC,EAAAvhC,GAAA,GAEAwhC,EAAA,EAAqBA,EAAAD,EAAAvhC,GAAAE,OAAuBshC,IAAA,CAK5C,GAJAh2B,EAAAysC,EAAAzW,EAAA,MACAyW,EAAAzW,EAAA,OAGAh2B,EAAA+1B,EAAAvhC,GAAAwhC,IACA,UAAAp+B,MAAA,0CAAApD,EAAA,IAAAwhC,EAAA,MAGAyW,EAAAzW,EAAA,GAAAphC,GAAAmhC,EAAAvhC,GAAAwhC,GAIA,OAAAyW,GAGA7rC,EAAA6Y,qBAAA,SAAAvhB,EAAAy0C,GACA,IAIApgC,EAJA/B,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAyhC,EAAA/uB,EAAAhI,GAAA9B,KAAAxI,EAAA,IAAAyhB,OAAAnP,EAAAoiC,OAAApiC,GACAgP,EAAAhP,EAAAhI,GAAA9B,KAAAxI,EAAA,IAAAyhB,OAAAnP,EAAAqiC,IAAAriC,GAgHA,OA7GA+uB,EAAAp4B,QAAA,SAAAkM,GACA,IAAAy/B,EAAAtiC,EAAAuiC,QAAA1/B,GAEA7C,EAAA8Z,aAAA9Z,EAAA0B,eAEAsN,EAAArK,QAAA29B,IAAA,EACAtiC,EAAAtS,KAAAshB,GAAAnM,IAAAs/B,GAAAniC,EAAAtS,KAAAshB,GAAAnM,GAAA7C,EAAAtS,KAAAshB,GAAAnM,GAAA,IAAAzH,OAAA1N,EAAA6N,IAAA,SAAAvF,GACA,OAAAA,EAAAssC,KACWnzB,OAAAla,GAAAsG,IAAA,SAAAinC,EAAAx4C,GACX,OAAAgW,EAAAyiC,gBAAAD,EAAA3/B,EAAA7Y,MAGAsD,EAAAysB,OACA/Z,EAAAtS,KAAAshB,GAAAnM,GAAA7C,EAAA0iC,mBAEAvsC,EAAA7I,EAAA0sB,WACAha,EAAAtS,KAAAshB,GAAAnM,GAAA7C,EAAA2iC,iBAAAL,EAAAtiC,EAAAtS,KAAAqU,UAIA/B,EAAAtS,KAAAshB,GAAAnM,GAAAnV,EAAA6N,IAAA,SAAAvF,EAAAhM,GACA,OAAAA,MAKA+kC,EAAAp4B,QAAA,SAAAkM,GACA,IAAA7C,EAAAtS,KAAAshB,GAAAnM,GACA,UAAAzV,MAAA,8BAAAyV,EAAA,SAIAd,EAAAgtB,EAAAxzB,IAAA,SAAAsH,EAAApH,GACA,IAAAmnC,EAAAt1C,EAAAmuC,iBAAA54B,GACA,OACAA,GAAA+/B,EACAC,OAAAhgC,EACAuF,OAAA1a,EAAA6N,IAAA,SAAAvF,EAAAhM,GACA,IAGAuN,EAFAirC,EAAAxsC,EADAgK,EAAAuiC,QAAA1/B,IAEAjZ,EAAA,OAAAoM,EAAA6M,IAAAob,MAAAjoB,EAAA6M,IAAA,MAAA7M,EAAA6M,GAuBA,OApBA7C,EAAA8Z,aAAA9Z,EAAAoB,kBAAA5L,EAAAgtC,IACA,IAAA/mC,GAAA,IAAAzR,IACAsD,EAAAotB,kBAAA,KAKA,KAFAnjB,EAAAjK,EAAAotB,kBAAA/V,QAAA69B,MAGAjrC,EAAAjK,EAAAotB,kBAAAxwB,OACAoD,EAAAotB,kBAAA/gB,KAAA6oC,KAGAjrC,EAAAyI,EAAAyiC,gBAAAD,EAAA3/B,EAAA7Y,IAIAwL,EAAAQ,EAAA6M,KAAA7C,EAAAtS,KAAAshB,GAAAnM,GAAA3Y,QAAAF,KACAuN,OAAAqD,GAGA,CACArD,IACA3N,QACAiZ,GAAA+/B,KAESzzB,OAAA,SAAAja,GACT,OAAAO,EAAAP,EAAAqC,SAKAZ,QAAA,SAAA4iB,GACA,IAAAvvB,EAEAsD,EAAAkuC,aACAjiB,EAAAnR,OAAAmR,EAAAnR,OAAAQ,KAAA,SAAAk6B,EAAAC,GAGA,OAFAD,EAAAvrC,GAAA,IAAAurC,EAAAvrC,EAAAurC,EAAAvrC,EAAA+H,MACAyjC,EAAAxrC,GAAA,IAAAwrC,EAAAxrC,EAAAwrC,EAAAxrC,EAAA+H,QAMAtV,EAAA,EACAuvB,EAAAnR,OAAAzR,QAAA,SAAAzB,GACAA,EAAAuG,MAAAzR,MAGAgW,EAAAtS,KAAAshB,GAAAuK,EAAA1W,IAAA+F,KAAA,SAAAk6B,EAAAC,GACA,OAAAD,EAAAC,MAIA/iC,EAAAgjC,iBAAAhjC,EAAAijC,0BAAAlhC,GACA/B,EAAAkjC,iBAAAljC,EAAAmjC,0BAAAphC,GAEAzU,EAAAquC,WACA37B,EAAA2wB,cAAA3wB,EAAAsP,SAAAvN,GAAAoN,OAAA,SAAAtM,GACA,QAAAA,KAAAvV,EAAAsuC,cACOtuC,EAAAquC,WAIP55B,EAAApL,QAAA,SAAAX,GACAgK,EAAAq4B,SAAAriC,EAAA6sC,OAAA7sC,KAEA+L,GAGA3L,EAAAisC,IAAA,SAAAj4C,GACA,IACAkD,EADAtB,KACAsB,OACA,OAAAA,EAAAysB,QAAA3vB,IAAAkD,EAAAysB,QAAA5jB,EAAA7I,EAAA0sB,UAAAxjB,EAAAlJ,EAAA0sB,QAAA5vB,IAGAgM,EAAAgsC,OAAA,SAAAh4C,GACA,OAAA4B,KAAAq2C,IAAAj4C,IAGAgM,EAAAmsC,QAAA,SAAA1/B,GACA,IACAvV,EADAtB,KACAsB,OACA,OAAAA,EAAAysB,OAAAzsB,EAAAysB,OAAA5jB,EAAA7I,EAAA0sB,SAAA1sB,EAAA0sB,QAAAnX,GAAA,MAGAzM,EAAAusC,iBAAA,SAAAv4C,EAAA2X,GACA,IACAqhC,EADApjC,EAAAhU,KAQA,OANA+V,GAAA5L,EAAA4L,GAAA/B,EAAAsP,SAAAvN,GAAA,IACApL,QAAA,SAAAkM,GACA7C,EAAAuiC,QAAA1/B,KAAAzY,IACAg5C,EAAApjC,EAAAtS,KAAAshB,GAAAnM,MAGAugC,GAGAhtC,EAAAi6B,YAAA,SAAA94B,GACA,IACA7J,EADA1B,KACAq3C,UADAr3C,KACA0B,KAAAqU,QAAAxK,GACA,OAAA7J,EAAAxD,OAAAwD,EAAA,GAAA+N,MAAA,MAGArF,EAAAktC,UAAA,SAAAzgC,EAAA7Y,GAEA,OAAA6Y,KADA7W,KACA0B,KAAAshB,IADAhjB,KACA0B,KAAAshB,GAAAnM,IAAA5N,EADAjJ,KACA0B,KAAAshB,GAAAnM,GAAA7Y,IADAgC,KACA0B,KAAAshB,GAAAnM,GAAA7Y,MAGAoM,EAAAssC,iBAAA,WACA,IACAa,EAAA95C,OAAAyM,KADAlK,KACA0B,KAAAshB,IACA,OAAAu0B,EAAAr5C,OAFA8B,KAEA0B,KAAAshB,GAAAu0B,EAAA,UAGAntC,EAAAq1B,gBAAA,SAAAhwB,GACA,IAAAuT,EAAAhjB,KAAA02C,mBACA,OAAA1zB,GAAAvT,EAAAuT,EAAA9kB,OAAA8kB,EAAAvT,GAAA,MAGArF,EAAAm4B,MAAA,SAAAvf,GACA,IAAAhP,EAAAhU,KACAvC,OAAAyM,KAAA8Y,GAAArY,QAAA,SAAAkM,GACA7C,EAAA1S,OAAA0sB,QAAAnX,GAAAmM,EAAAnM,MAIAzM,EAAAotC,aAAA,SAAAx0B,GACA,OAAAhjB,KAAAgM,GAAA+oB,IAAAt3B,OAAAyM,KAAA8Y,GAAAzT,IAAA,SAAAsH,GACA,OAAAmM,EAAAnM,MACKpU,OAAA,GAGL2H,EAAA+5B,YAAA,WACA,OAAAh6B,EAAAnK,KAAAsB,OAAA0sB,WAAAhuB,KAAAsB,OAAAkuC,YAAAxvC,KAAAioB,QAAA,YAGA7d,EAAAm+B,QAAA,SAAA7mC,GACA,IACA+1C,EAOA,OALA/1C,IACA+1C,EAJAz3C,KAIAsB,OAAAouC,WAAAhuC,EAAAmV,IACAnV,EAAA+1C,UAAA7oC,IAAA6oC,IAAA/1C,EAAAmV,IAGAnV,GAGA0I,EAAA61B,gBAAA,SAAA7jB,EAAA3M,GACA,IAAAioC,EAAAt7B,EAAA+G,OAAA,SAAAja,GACA,OAAAA,EAAAuG,YAEA,OAAAioC,EAAAx5C,OAAAw5C,EAAA,SAGAttC,EAAAw6B,cAAA,SAAA7uB,EAAAxK,GACA,IAAAyI,EAAAhU,KACA+V,EAAApL,QAAA,SAAA4iB,GACAA,EAAAnR,OAAAzR,QAAA,SAAAzB,EAAAlL,GACAkL,EAAAqC,EAAAyI,EAAAyiC,gBAAAlrC,EAAAvN,GAAAuvB,EAAA1W,GAAA7Y,KAEAgW,EAAAtS,KAAAshB,GAAAuK,EAAA1W,IAAAtL,KAIAnB,EAAAy6B,eAAA,SAAA9uB,EAAAiN,GACA,IAAAhP,EAAAhU,KACA+V,EAAApL,QAAA,SAAA4iB,GACAvK,EAAAuK,EAAA1W,KACA7C,EAAA4wB,cAAA,CAAArX,GAAAvK,EAAAuK,EAAA1W,QAKAzM,EAAAqsC,gBAAA,SAAAD,EAAA3/B,EAAApH,GACA,IAAAuE,EAAAhU,KAWA,OARAgU,EAAA0B,eACA8gC,EAAAxiC,EAAA2B,UAAA6gC,GAAAxiC,EAAA2B,UAAA3B,EAAAsjC,UAAAzgC,EAAApH,IACKuE,EAAA8Z,cAAA9Z,EAAAoB,gBACLnM,EAAAutC,MAAAxiC,EAAAsjC,UAAAzgC,EAAApH,GAEAA,GAMArF,EAAAkiC,YAAA,SAAAvuC,GACA,OACA8Y,GAAA9Y,EAAA8Y,GACAggC,OAAA94C,EAAA84C,OACAz6B,OAAAre,EAAAqe,OAAA7M,IAAA,SAAAvF,GACA,OACAuB,EAAAvB,EAAAuB,EACA3N,MAAAoM,EAAApM,MACAiZ,GAAA7M,EAAA6M,QAMAzM,EAAAutC,SAAA,WACA,IAAA3jC,EAAAhU,KAEAgU,EAAAtS,KAAAqU,QAAA7X,SACA8V,EAAAgP,GAAA,GACAhP,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAAzR,QAAA,SAAAzB,GACA8K,EAAAgP,GAAA9Z,EAAAuG,OAAAvG,EAAAqC,MAKAnB,EAAAwtC,SAAA,SAAA55C,GACA,IAAAuN,EAAAvL,KAAAgjB,GAAAhlB,EAAA,GACA,2BAAAuN,IAAA,MAGAnB,EAAAytC,SAAA,SAAA75C,GACA,IAAAuN,EAAAvL,KAAAgjB,GAAAhlB,EAAA,GACA,2BAAAuN,IAAA,MAGAnB,EAAA+0B,gBAAA,WAEA,OADAn/B,KACAgM,GAAAqE,IADArQ,KACA0B,KAAAqU,QAAA,SAAAwX,GACA,OAAAA,EAAAnR,OAAAle,UAIAkM,EAAA0tC,sBAAA,SAAA/hC,GACA,IAEAgiC,EAFA75C,EAAA6X,EAAA7X,OACAmS,EAAA,EAcA,OAXAnS,EAAA,EACA6X,EAAApL,QAAA,SAAA4iB,GACAA,EAAAnR,OAAAle,OAAAmS,IACA0nC,EAAAxqB,EACAld,EAAAkd,EAAAnR,OAAAle,UAIA65C,EAAA75C,EAAA6X,EAAA,QAGAgiC,GAGA3tC,EAAA4tC,SAAA,SAAAjiC,GAEA,OAAAA,EAAA7X,OAAA,CADA8B,KACAgM,GAAAP,IAAAsK,EAAA,SAAAwX,GACA,OAAAA,EAAAnR,OAAA,GAAA7Q,IAFAvL,KAGKgM,GAAAqE,IAAA0F,EAAA,SAAAwX,GACL,OAAAA,EAAAnR,OAAAmR,EAAAnR,OAAAle,OAAA,GAAAqN,KAHA,OAOAnB,EAAAkZ,SAAA,SAAAvN,GACA,OAAAA,EAAAxG,IAAA,SAAAvF,GACA,OAAAA,EAAA6M,MAIAzM,EAAAg3B,eAAA,SAAA2B,GAEA,OAAAA,EAAA,GAAA3zB,OAAA2zB,GADA/iC,KACAsjB,SADAtjB,KACA0B,KAAAqU,UAGA3L,EAAA6tC,UAAA,SAAAliC,EAAAc,GACA,IACA7Y,EADA+kC,EAAA/iC,KAAAsjB,SAAAvN,GAGA,IAAA/X,EAAA,EAAeA,EAAA+kC,EAAA7kC,OAAgBF,IAC/B,GAAA+kC,EAAA/kC,KAAA6Y,EACA,SAIA,UAGAzM,EAAAwe,eAAA,SAAA2V,GACA,OAAAv+B,KAAA8gB,gBAAAnI,QAAA4lB,GAAA,GAGAn0B,EAAAw3B,eAAA,SAAArD,GACA,OAAAv+B,KAAA+gB,gBAAApI,QAAA4lB,GAAA,GAGAn0B,EAAA2Q,oBAAA,SAAAhF,GACA,IAAA/B,EAAAhU,KACA,OAAA+V,EAAAoN,OAAA,SAAAoK,GACA,OAAAvZ,EAAA4U,eAAA2E,EAAA1W,OAIAzM,EAAA+L,qBAAA,SAAAJ,GACA,IACAiN,EADAhjB,KACAgM,GAAA+oB,IADA/0B,KACAgM,GAAAk3B,MAAAntB,EAAAxG,IAAA,SAAAge,GACA,OAAAA,EAAAnR,OAAA7M,IAAA,SAAArG,GACA,OAAAA,EAAAqC,QAEK6Q,SAML,OALA4G,EANAhjB,KAMA0V,eAAAsN,EAAAzT,IAAA,SAAAhE,GACA,WAAAoR,MAAApR,KACKyX,EAAAzT,IAAA,SAAAhE,GACL,OAAAA,KAEAqR,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA4K,OAIAtd,EAAAiZ,mBAAA,SAAAgb,GACAA,eAAA/0B,MAAA+0B,EAAA,IAAA/0B,MAAA+0B,GAEA,QAAArgC,EAAA,EAAmBA,EAAAqgC,EAAAngC,OAAsBF,IACzCgC,KAAA8gB,gBAAAnI,QAAA0lB,EAAArgC,IAAA,IACAgC,KAAA8gB,gBAAA9gB,KAAA8gB,gBAAA1R,OAAAivB,EAAArgC,MAKAoM,EAAA45B,sBAAA,SAAA3F,GACAr+B,KAAA8gB,gBAAA9gB,KAAA8gB,gBAAAqC,OAAA,SAAAtM,GACA,OAAAwnB,EAAA1lB,QAAA9B,GAAA,KAIAzM,EAAAoZ,mBAAA,SAAA6a,GACAA,eAAA/0B,MAAA+0B,EAAA,IAAA/0B,MAAA+0B,GAEA,QAAArgC,EAAA,EAAmBA,EAAAqgC,EAAAngC,OAAsBF,IACzCgC,KAAA+gB,gBAAApI,QAAA0lB,EAAArgC,IAAA,IACAgC,KAAA+gB,gBAAA/gB,KAAA+gB,gBAAA3R,OAAAivB,EAAArgC,MAKAoM,EAAA8tC,sBAAA,SAAA7Z,GACAr+B,KAAA+gB,gBAAA/gB,KAAA+gB,gBAAAoC,OAAA,SAAAtM,GACA,OAAAwnB,EAAA1lB,QAAA9B,GAAA,KAIAzM,EAAA+tC,mBAAA,SAAApiC,GACA,IAAAqiC,EAAA,GAOA,OANAriC,EAAApL,QAAA,SAAA4iB,GACA6qB,EAAA7qB,EAAA1W,IAAA,GACA0W,EAAAnR,OAAAzR,QAAA,SAAAzB,GACAkvC,EAAA7qB,EAAA1W,IAAAlJ,KAAAzE,EAAAtL,WAGAw6C,GAGAhuC,EAAAiuC,oBAAA,SAAAtiC,EAAAuiC,GACA,IACAt6C,EACAwhC,EACApjB,EAHA2mB,EAAAtlC,OAAAyM,KAAA6L,GAKA,IAAA/X,EAAA,EAAeA,EAAA+kC,EAAA7kC,OAAgBF,IAG/B,IAFAoe,EAAArG,EAAAgtB,EAAA/kC,IAAAoe,OAEAojB,EAAA,EAAiBA,EAAApjB,EAAAle,OAAmBshC,IACpC,GAAA8Y,EAAAl8B,EAAAojB,GAAA5hC,OACA,SAKA,UAGAwM,EAAA6sC,0BAAA,SAAAlhC,GACA,OAAA/V,KAAAq4C,oBAAAtiC,EAAA,SAAA7M,GACA,OAAAA,EAAA,KAIAkB,EAAA+sC,0BAAA,SAAAphC,GACA,OAAA/V,KAAAq4C,oBAAAtiC,EAAA,SAAA7M,GACA,OAAAA,EAAA,KAIAkB,EAAAmuC,YAAA,WACA,IAAAj3C,EAAAtB,KAAAsB,OACA,wBAAAA,EAAAwuC,YAAA,SAAAxuC,EAAAwuC,WAAA3B,eAGA/jC,EAAAouC,WAAA,WACA,IAAAl3C,EAAAtB,KAAAsB,OACA,wBAAAA,EAAAwuC,YAAA,QAAAxuC,EAAAwuC,WAAA3B,eAGA/jC,EAAAk7B,iBAAA,WACA,IACAhkC,EADAtB,KACAsB,OACAm3C,EAFAz4C,KAEAw4C,aACAE,EAHA14C,KAGAu4C,cAEA,GAAAE,GAAAC,EACA,gBAAAC,EAAAC,GACA,IAAAC,EAAA,SAAA78B,EAAAgnB,GACA,OAAAhnB,EAAArS,KAAAw+B,IAAAnF,EAAAplC,QAGAk7C,EAAAH,EAAAv8B,OAAAipB,OAAAwT,EAAA,GACAE,EAAAH,EAAAx8B,OAAAipB,OAAAwT,EAAA,GACA,OAAAH,EAAAK,EAAAD,IAAAC,GAEK,GAAA5vC,EAAA7H,EAAAwuC,YACL,OAAAxuC,EAAAwuC,WACK,GAAAzmC,EAAA/H,EAAAwuC,YAAA,CACL,IAAAkJ,EAAA13C,EAAAwuC,WACA,gBAAA6I,EAAAC,GACA,OAAAI,EAAArgC,QAAAggC,EAAA9hC,IAAAmiC,EAAArgC,QAAAigC,EAAA/hC,OAKAzM,EAAA6uC,aAAA,SAAAljC,GACA,IAAAmjC,EAAAl5C,KAAAslC,mBAUA,OARA4T,IACAnjC,EAAA6G,KAAAs8B,IAEAl5C,KAAAw4C,cAAAx4C,KAAAu4C,gBACAxiC,EAAAojC,WAIApjC,GAGA3L,EAAAitC,UAAA,SAAAthC,EAAAxK,GACA,OAAAvL,KAAAgM,GAAAk3B,MAAAntB,EAAAxG,IAAA,SAAAge,GACA,OAAAA,EAAAnR,UACK+G,OAAA,SAAAja,GACL,OAAAA,EAAAqC,MAAA,KAIAnB,EAAAgvC,iBAAA,SAAA13C,GACA,OAAAA,EAAAyhB,OAAA,SAAAnZ,GACA,OAAAf,EAAAe,EAAApM,UAIAwM,EAAAivC,gBAAA,SAAAtjC,EAAAujC,GACA,OAAAvjC,EAAAxG,IAAA,SAAAge,GACA,OACA1W,GAAA0W,EAAA1W,GACAggC,OAAAtpB,EAAAspB,OACAz6B,OAAAmR,EAAAnR,OAAA+G,OAAA,SAAAja,GACA,OAAAowC,EAAA,IAAApwC,EAAAqC,GAAArC,EAAAqC,GAAA+tC,EAAA,SAMAlvC,EAAA6hB,aAAA,WACA,IAAA3qB,EAAAtB,KAAAsB,OAEA,2BAAAA,EAAAuuC,cAAAvuC,EAAAuuC,gBAEK,WAAAjnC,EAAAtH,EAAAuuC,eAAA1lC,EAAA7I,EAAAuuC,eAOLzlC,EAAAmvC,mBAAA,SAAA9tC,EAAA4E,EAAAjS,GACA,IAAA4V,EAAAhU,KACAw5C,EAAA,MAOA,OALAxlC,EAAA4O,YAAAlU,OAAA,OAAAmD,UAAA,UAAAnQ,KAAA,CAAA+J,EAAA4E,IAAA0B,QAAAM,OAAA,QAAAtL,KAAA,SAAAiD,GACA,OAAAgK,EAAAylC,gBAAAzvC,EAAA6M,GAAA7C,CAAAhK,KACK2E,KAAA,SAAA3E,EAAAhM,GACLw7C,EAAAx7C,GAJA,IAIAgC,KAAAkL,wBAAA9M,KACK+T,SACLqnC,GAGApvC,EAAAsvC,UAAA,SAAA1vC,GACA,OAAAhK,KAAAi4C,UAAAj4C,KAAA0B,KAAAqU,QAAA/L,EAAA6M,KACGzM,EAAAuvC,MAAA,SAAA3vC,GACH,eAAAA,GAAAhK,KAAAi4C,UAAAj4C,KAAA0B,KAAAqU,QAAA/L,EAAAtI,KAAAmV,KAGAzM,EAAAwvC,kBAAA,SAAAx9B,EAAA3M,GACA,IAAAzR,EACA67C,EAAAz9B,EAAA3M,GAAAlE,EACAuuC,EAAA,GAEA,IAAA97C,EAAAyR,EAAA,EAAuBzR,GAAA,GACvB67C,IAAAz9B,EAAApe,GAAAuN,EAD+BvN,IAK/B87C,EAAAnsC,KAAAyO,EAAApe,IAGA,IAAAA,EAAAyR,EAAmBzR,EAAAoe,EAAAle,QACnB27C,IAAAz9B,EAAApe,GAAAuN,EADsCvN,IAKtC87C,EAAAnsC,KAAAyO,EAAApe,IAGA,OAAA87C,GAGA1vC,EAAA2vC,uBAAA,SAAAhkC,EAAAikC,GACA,IACA7Y,EADAntB,EAAAhU,KAOA,OAJAmhC,EAAAprB,EAAAxG,IAAA,SAAAxR,GACA,OAAAiW,EAAAimC,YAAAl8C,EAAAqe,OAAA49B,KAGAhmC,EAAAimC,YAAA9Y,EAAA6Y,IAGA5vC,EAAA6vC,YAAA,SAAA79B,EAAA49B,GACA,IAEAE,EAFAlmC,EAAAhU,KACAm6C,EAAAnmC,EAAA1S,OAAA4wC,kBAuBA,OApBA91B,EAAA+G,OAAA,SAAAja,GACA,OAAAA,GAAA8K,EAAAuW,UAAArhB,EAAA2N,MACKlM,QAAA,SAAAzB,GACL,IAAA9C,EAAA4N,EAAAC,KAAAvF,OAAA,IAAAjK,EAAA8B,KAAAyN,EAAAmvB,wBAAAj6B,EAAA2N,IAAA,KAAApS,EAAAT,IAAA,IAAAkF,EAAAuG,OAAA2D,QAEA8mC,GAAAlmC,EAAAomC,YAAAh0C,KACA8zC,EAAAhxC,KAIAkT,EAAA+G,OAAA,SAAAja,GACA,OAAAA,IAAA8K,EAAAuW,UAAArhB,EAAA2N,MACKlM,QAAA,SAAAzB,GACL,IAAAc,EAAAgK,EAAAqmC,KAAAnxC,EAAA8wC,GAEAhwC,EAAAmwC,IACAA,EAAAnwC,EACAkwC,EAAAhxC,KAGAgxC,GAGA9vC,EAAAiwC,KAAA,SAAA34C,EAAAs4C,GACA,IACA14C,EADAtB,KACAsB,OACAg5C,EAAAh5C,EAAAiT,aAAA,IACAgmC,EAAAj5C,EAAAiT,aAAA,IACA7I,EAJA1L,KAIA0sB,QAAAhrB,IAAA+N,OACAlE,EALAvL,KAKAuL,EAAA7J,EAAA6J,GACA,OAAA5B,KAAAo+B,KAAAp+B,KAAA8yB,IAAAlxB,EAAAyuC,EAAAM,GAAA,GAAA3wC,KAAA8yB,IAAA/wB,EAAAsuC,EAAAO,GAAA,KAGAnwC,EAAAowC,oBAAA,SAAAp+B,GACA,IACApe,EADAy8C,EAAA,GAAArrC,OAAAgN,GAGA,IAAApc,KAAAoV,gBACA,OAAAgH,EAGA,IAAApe,EAAAoe,EAAAle,OAAA,EAA+B,EAAAF,EAAOA,IACtCy8C,EAAAz8C,GAAAy8C,EAAAz8C,EAAA,GAaA,OAVAy8C,EAAA,IACAlvC,EAAAkvC,EAAA,GAAAlvC,EAAA,EACA3N,MAAA68C,EAAA,GAAA78C,MACAiZ,GAAA4jC,EAAA,GAAA5jC,IAEA4jC,EAAAr+B,EAAAle,OAAA,IACAqN,EAAAkvC,EAAAr+B,EAAAle,QAAAqN,EAAA,EACA3N,MAAA68C,EAAAr+B,EAAAle,QAAAN,MACAiZ,GAAA4jC,EAAAr+B,EAAAle,QAAA2Y,IAEA4jC,GAGArwC,EAAAs0B,qBAAA,SAAA+Y,EAAAiD,GACA,IAEAC,EAFA36C,KACAsB,OACA,QAAAm2C,GAEA,2BAAAiD,EACAC,GAGAl9C,OAAAyM,KAAAwwC,GAAA/vC,QAAA,SAAAkM,GACA8jC,EAAA9jC,GAAA6jC,EAAA7jC,KATA7W,KAWAmd,OAAA,CACA+L,YAAA,IAEAyxB,IAGAvwC,EAAAzI,KAAA,SAAAoU,EAAA6oB,GACA,IAAA5qB,EAAAhU,KAEA+V,IAEA6oB,EAAAzb,SACApN,IAAAoN,OAAAyb,EAAAzb,UAIAyb,EAAA5Y,MAAA4Y,EAAAgc,QACA7kC,EAAApL,QAAA,SAAA4iB,GACA,IAAAvH,EAAA4Y,EAAAgc,OAAAhc,EAAAgc,MAAArtB,EAAA1W,IAAA+nB,EAAAgc,MAAArtB,EAAA1W,IAAA+nB,EAAA5Y,KACAhS,EAAA2wB,cAAApX,EAAA1W,GAAAmP,KAKAhS,EAAAtS,KAAAqU,QAAApL,QAAA,SAAAX,GACA,QAAAhM,EAAA,EAAuBA,EAAA+X,EAAA7X,OAAoBF,IAC3C,GAAAgM,EAAA6M,KAAAd,EAAA/X,GAAA6Y,GAAA,CACA7M,EAAAoS,OAAArG,EAAA/X,GAAAoe,OACArG,EAAA0b,OAAAzzB,EAAA,GACA,SAIAgW,EAAAtS,KAAAqU,QAAA/B,EAAAtS,KAAAqU,QAAA3G,OAAA2G,IAIA/B,EAAAsR,cAAAtR,EAAAtS,KAAAqU,SAEA/B,EAAAmJ,OAAA,CACAuI,sBAAA,EACAD,mBAAA,EACAyD,YAAA,IAGA0V,EAAA/M,MACA+M,EAAA/M,QAIAznB,EAAA04B,aAAA,SAAAlE,GACA,IAAA5qB,EAAAhU,KAEA4+B,EAAAl9B,KACAsS,EAAArS,KAAAqS,EAAAiP,qBAAA2b,EAAAl9B,MAAAk9B,GACKA,EAAA0V,IACLtgC,EAAAqK,iBAAAugB,EAAA0V,IAAA1V,EAAA2V,SAAA3V,EAAA4V,QAAA5V,EAAA10B,KAAA,SAAAxI,GACAsS,EAAArS,KAAAqS,EAAAiP,qBAAAvhB,GAAAk9B,KAEKA,EAAAS,KACLrrB,EAAArS,KAAAqS,EAAAiP,qBAAAjP,EAAA2K,kBAAAigB,EAAAS,KAAAT,EAAA10B,OAAA00B,GACKA,EAAAU,KACLtrB,EAAArS,KAAAqS,EAAAiP,qBAAAjP,EAAA6K,kBAAA+f,EAAAU,OAAAV,GACKA,EAAAW,QACLvrB,EAAArS,KAAAqS,EAAAiP,qBAAAjP,EAAA+K,qBAAA6f,EAAAW,UAAAX,GAEA5qB,EAAArS,KAAA,KAAAi9B,IAIAx0B,EAAAxI,OAAA,SAAAy8B,EAAAxM,GACA,IAAA7d,EAAAhU,KAEA6xB,IACAA,EAAA,eAIAwM,IAAAlb,OAAA,SAAAtM,GACA,OAAA7C,EAAAikC,UAAAjkC,EAAAtS,KAAAqU,QAAAc,OAGA,IAAAwnB,EAAAngC,QAKA8V,EAAA8G,IAAAjJ,UAAAwsB,EAAA9uB,IAAA,SAAAsH,GACA,OAAA7C,EAAA+5B,eAAAl3B,MACKhU,aAAAV,MAAA,aAAAgQ,SAAA5T,KAAAyV,EAAA0d,OAAAG,GACLwM,EAAA1zB,QAAA,SAAAkM,GAEA7C,EAAA+N,cAAAlL,IAAA,EAEA7C,EAAAvQ,QACAuQ,EAAAvQ,OAAAoO,UAAA,IAAApN,EAAA0D,WAAA6L,EAAAmvB,wBAAAtsB,IAAA1E,SAIA6B,EAAAtS,KAAAqU,QAAA/B,EAAAtS,KAAAqU,QAAAoN,OAAA,SAAAoK,GACA,OAAAA,EAAA1W,YAjBAgb,KAsBAznB,EAAAywC,cAAA,SAAA9kC,GACA,IAIAypB,EACAwW,EACA8E,EACAC,EACAlkC,EACAmgC,EATAhjC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAyhC,EAAA/uB,EAAAsP,SAAAvN,GACAqiC,EAAApkC,EAAAmkC,mBAAApiC,GAQA,GAAAzU,EAAA6gC,YAAAjkC,OAAA,EAGA,IAFA84C,EAAAhjC,EAAAijC,0BAAAlhC,GAEAypB,EAAA,EAAiBA,EAAAl+B,EAAA6gC,YAAAjkC,OAA+BshC,IAMhD,QAJAub,EAAAz5C,EAAA6gC,YAAA3C,GAAArc,OAAA,SAAAtM,GACA,OAAAksB,EAAApqB,QAAA9B,IAAA,KAGA3Y,OAaA,IATA48C,EAAAC,EAAA,GAEA/D,GAAAoB,EAAA0C,IACA1C,EAAA0C,GAAAnwC,QAAA,SAAAzB,EAAAlL,GACAo6C,EAAA0C,GAAA98C,GAAAkL,EAAA,EAAAA,EAAA,IAKA8sC,EAAA,EAAmBA,EAAA+E,EAAA78C,OAAuB83C,IAC1Cn/B,EAAAkkC,EAAA/E,GAEAoC,EAAAvhC,IAIAuhC,EAAAvhC,GAAAlM,QAAA,SAAAzB,EAAAlL,GACAgW,EAAA3Q,KAAAuT,MAAAC,KAAA7C,EAAA3Q,KAAAuT,MAAAkkC,KAAA1C,EAAA0C,IAAA9D,IAAA9tC,EAAA,IACAkvC,EAAA0C,GAAA98C,KAAAkL,KAOA,OAAA8K,EAAAhI,GAAAP,IAAAhO,OAAAyM,KAAAkuC,GAAA7oC,IAAA,SAAAnR,GACA,OAAA4V,EAAAhI,GAAAP,IAAA2sC,EAAAh6C,QAIAgM,EAAA4wC,cAAA,SAAAjlC,GACA,IAIAypB,EACAwW,EACA8E,EACAC,EACAlkC,EACAqgC,EATAljC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAyhC,EAAA/uB,EAAAsP,SAAAvN,GACAqiC,EAAApkC,EAAAmkC,mBAAApiC,GAQA,GAAAzU,EAAA6gC,YAAAjkC,OAAA,EAGA,IAFAg5C,EAAAljC,EAAAmjC,0BAAAphC,GAEAypB,EAAA,EAAiBA,EAAAl+B,EAAA6gC,YAAAjkC,OAA+BshC,IAMhD,QAJAub,EAAAz5C,EAAA6gC,YAAA3C,GAAArc,OAAA,SAAAtM,GACA,OAAAksB,EAAApqB,QAAA9B,IAAA,KAGA3Y,OAaA,IATA48C,EAAAC,EAAA,GAEA7D,GAAAkB,EAAA0C,IACA1C,EAAA0C,GAAAnwC,QAAA,SAAAzB,EAAAlL,GACAo6C,EAAA0C,GAAA98C,GAAAkL,EAAA,EAAAA,EAAA,IAKA8sC,EAAA,EAAmBA,EAAA+E,EAAA78C,OAAuB83C,IAC1Cn/B,EAAAkkC,EAAA/E,GAEAoC,EAAAvhC,IAIAuhC,EAAAvhC,GAAAlM,QAAA,SAAAzB,EAAAlL,GACAgW,EAAA3Q,KAAAuT,MAAAC,KAAA7C,EAAA3Q,KAAAuT,MAAAkkC,KAAA1C,EAAA0C,IAAA5D,IAAAhuC,EAAA,IACAkvC,EAAA0C,GAAA98C,KAAAkL,KAOA,OAAA8K,EAAAhI,GAAAqE,IAAA5S,OAAAyM,KAAAkuC,GAAA7oC,IAAA,SAAAnR,GACA,OAAA4V,EAAAhI,GAAAqE,IAAA+nC,EAAAh6C,QAIAgM,EAAA4Q,WAAA,SAAAjF,EAAAiC,EAAAshC,GACA,IAUAhsC,EACAyO,EAEAmzB,EACAC,EAEA8L,EACAzB,EACAza,EACA6I,EACAsT,EACAC,EArBAnnC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA85C,EAAArlC,EAAAoN,OAAA,SAAAoK,GACA,OAAAvZ,EAAA3Q,KAAAuT,MAAA2W,EAAA1W,MAAAmB,IAEAqjC,EAAA/B,EAAAtlC,EAAAqlC,gBAAA+B,EAAA9B,GAAA8B,EACAE,EAAA,OAAAtjC,EAAA1W,EAAAu8B,YAAAv8B,EAAAs8B,WACA2d,EAAA,OAAAvjC,EAAA1W,EAAAo8B,YAAAp8B,EAAAm8B,WACA+d,EAAAxnC,EAAA6mC,cAAAQ,GACAI,EAAAznC,EAAAgnC,cAAAK,GAMAK,EAAA,OAAA1jC,EAAA1W,EAAAkwC,eAAAlwC,EAAA6vC,cAOAwK,EAAA3nC,EAAAiU,QAAA,MAAAozB,IAAA/5C,EAAAqxC,eAAA3+B,EAAAiU,QAAA,OAAAozB,IAAA/5C,EAAAuxC,eACA+I,EAAA,OAAA5jC,EAAA1W,EAAAiwC,iBAAAjwC,EAAA4vC,gBACA2K,EAAA7nC,EAAAiY,gBAAA3qB,EAAAiT,aACAunC,EAAA9nC,EAAAiY,iBAAA3qB,EAAAiT,aAKA,OAHAinC,EAAAvyC,EAAAqyC,KAAAryC,EAAAsyC,GAAAC,EAAAD,EAAAC,EAAAD,EAAA,GAAAC,EACAC,EAAAxyC,EAAAsyC,KAAAtyC,EAAAqyC,KAAAG,IAAAH,EAAA,GAAAG,EAEA,IAAAJ,EAAAn9C,OAEA,OAAA8Z,EAAAhE,EAAAc,GAAAxH,SAAA0G,EAAAtI,EAAA4B,UAGA2kB,MAAAupB,KAEAA,EAAA,GAGAvpB,MAAAwpB,KAEAA,EAAAD,GAGAA,IAAAC,IACAD,EAAA,EAAAC,EAAA,EAAAD,EAAA,GAGAN,EAAAM,GAAA,GAAAC,GAAA,EACAN,EAAAK,GAAA,GAAAC,GAAA,GAEAxyC,EAAAqyC,IAAAJ,GAAAjyC,EAAAsyC,IAAAJ,KACAQ,GAAA,GAIAA,IACAT,IACAM,EAAA,GAGAL,IACAM,EAAA,IAKAvM,EAAAC,EAAA,IADApzB,EAAApS,KAAAw+B,IAAAsT,EAAAD,IAGA,qBAAAE,IAEAD,EAAAC,GADAT,EAAAtxC,KAAA0G,IAAA1G,KAAAw+B,IAAAqT,GAAA7xC,KAAAw+B,IAAAsT,KAEAD,EAAAE,EAAAT,GAIAY,GACArC,EAAAxlC,EAAAulC,mBAAAiC,EAAAC,EAAA,SACA1c,EAAAh1B,EAAAiK,EAAAtI,EAAAS,SAEA+iC,GAAAnzB,IADA6rB,EAAA,CAAA4R,EAAA,GAAAza,EAAAya,EAAA,GAAAza,IACA,MAAA6I,EAAA,GAAAA,EAAA,KACAuH,GAAApzB,GAAA6rB,EAAA,MAAAA,EAAA,GAAAA,EAAA,MACKkU,IACLtC,EAAAxlC,EAAAulC,mBAAAiC,EAAAC,EAAA,UACAvM,GAAAl7B,EAAA3Q,KAAA6Y,2BAAAs9B,EAAA,GAAAz9B,GACAozB,GAAAn7B,EAAA3Q,KAAA6Y,2BAAAs9B,EAAA,GAAAz9B,IAGA,MAAA/D,GAAA7N,EAAA7I,EAAA+vC,kBACAnC,EAAAl7B,EAAA3Q,KAAAyY,WAAAxa,EAAA+vC,eAAA,MAAAnC,EAAAnzB,GACAozB,EAAAn7B,EAAA3Q,KAAAyY,WAAAxa,EAAA+vC,eAAA,SAAAlC,EAAApzB,IAGA,OAAA/D,GAAA7N,EAAA7I,EAAAowC,mBACAxC,EAAAl7B,EAAA3Q,KAAAyY,WAAAxa,EAAAowC,gBAAA,MAAAxC,EAAAnzB,GACAozB,EAAAn7B,EAAA3Q,KAAAyY,WAAAxa,EAAAowC,gBAAA,SAAAvC,EAAApzB,IAIA4/B,IACAT,IACA/L,EAAAqM,GAGAL,IACAjM,GAAAuM,IAIAnuC,EAAA,CAAAkuC,EAAArM,EAAAsM,EAAAvM,GACA0M,EAAAtuC,EAAA6rC,UAAA7rC,IAGAlD,EAAA2xC,cAAA,SAAAhmC,GACA,IAAA/B,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA,OAAAmI,EAAAnI,EAAAq8B,YAAA3pB,EAAA0B,eAAA1V,KAAA2V,UAAArU,EAAAq8B,YAAAr8B,EAAAq8B,WAAA3pB,EAAAhI,GAAAP,IAAAsK,EAAA,SAAAwX,GACA,OAAAvZ,EAAAhI,GAAAP,IAAA8hB,EAAAnR,OAAA,SAAAlT,GACA,OAAAA,EAAAqC,OAKAnB,EAAA4xC,cAAA,SAAAjmC,GACA,IAAA/B,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA,OAAAmI,EAAAnI,EAAAk8B,YAAAxpB,EAAA0B,eAAA1V,KAAA2V,UAAArU,EAAAk8B,YAAAl8B,EAAAk8B,WAAAxpB,EAAAhI,GAAAqE,IAAA0F,EAAA,SAAAwX,GACA,OAAAvZ,EAAAhI,GAAAqE,IAAAkd,EAAAnR,OAAA,SAAAlT,GACA,OAAAA,EAAAqC,OAKAnB,EAAA6xC,kBAAA,SAAA3uC,GACA,IAGA4uC,EACAx5C,EACAy5C,EACAC,EALA96C,EADAtB,KACAsB,OACAy9B,EAAAzxB,EAAA,GAAAA,EAAA,GAwBA,OAjBA5K,EATA1C,KAQAoV,gBACA,EATApV,KAUKioB,QAAA,QACLi0B,EAXAl8C,KAWAm/B,mBACA,EAAAJ,GAAAmd,EAAA,QAEA,IAAAnd,EAGA,WAAAn2B,EAAAtH,EAAA2vC,iBAAA9mC,EAAA7I,EAAA2vC,iBACAkL,EAAAlzC,EAAA3H,EAAA2vC,eAAAl+B,MAAAzR,EAAA2vC,eAAAl+B,KAAArQ,EACA05C,EAAAnzC,EAAA3H,EAAA2vC,eAAAp+B,OAAAvR,EAAA2vC,eAAAp+B,MAAAnQ,GAEAy5C,EAAAC,EADK,kBAAA96C,EAAA2vC,eACL3vC,EAAA2vC,eAEAvuC,EAGA,CACAqQ,KAAAopC,EACAtpC,MAAAupC,IAIAhyC,EAAAmR,WAAA,SAAAxF,GACA,IAAA/B,EAAAhU,KACAs5C,EAAA,CAAAtlC,EAAA+nC,cAAAhmC,GAAA/B,EAAAgoC,cAAAjmC,IACAsmC,EAAA/C,EAAA,GACAgD,EAAAhD,EAAA,GACA52C,EAAAsR,EAAAioC,kBAAA3C,GACA7tC,EAAA,EACA4E,EAAA,EAoBA,OAlBAgsC,EAAAC,IAAA,GAAAtoC,EAAAoB,kBACApB,EAAA0B,gBACA2mC,EAAA,IAAA1/B,KAAA,GAAA0/B,EAAAE,WACAD,EAAA,IAAA3/B,KAAA,IAAA2/B,EAAAC,aAEAF,EAAA,IAAAA,EAAA,KAAAA,EACAC,EAAA,IAAAA,GAAA,MAAAA,KAIAD,GAAA,IAAAA,KACA5wC,EAAAuI,EAAA0B,eAAA,IAAAiH,KAAA0/B,EAAAE,UAAA75C,EAAAqQ,MAAAspC,EAAA35C,EAAAqQ,OAGAupC,GAAA,IAAAA,KACAjsC,EAAA2D,EAAA0B,eAAA,IAAAiH,KAAA2/B,EAAAC,UAAA75C,EAAAmQ,OAAAypC,EAAA55C,EAAAmQ,OAGA,CAAApH,EAAA4E,IAGAjG,EAAA0gB,cAAA,SAAA/U,EAAA0P,EAAAC,EAAA82B,EAAAlvC,GACA,IAAA0G,EAAAhU,KACAsB,EAAA0S,EAAA1S,OA8BA,OA5BAokB,IACA1R,EAAAzI,EAAA+B,UAAA0G,EAAAhI,GAAA2X,OAAA3P,EAAAuH,WAAAxF,KACA/B,EAAA+P,WAAA/P,EAAAzI,EAAA+B,SAEAhM,EAAA0iB,cACAhQ,EAAApQ,KAAAqI,MAAA+H,EAAAzI,GAAAkxC,oBAGAzoC,EAAA4P,KAAAtW,OAAA0G,EAAAzI,EAAA+B,UAEA0G,EAAAlO,OACAkO,EAAAlO,MAAAmG,MAAA+H,EAAA4P,OAIA6B,IACAzR,EAAAzI,EAAA+B,YAAA0G,EAAAlO,OAAAkO,EAAAlO,MAAAgB,QAAAkN,EAAA+P,WAAA/P,EAAAlO,MAAA6d,WAEAriB,EAAA0iB,cACAhQ,EAAApQ,KAAAqI,MAAA+H,EAAAzI,GAAAkxC,qBAKAD,GACAxoC,EAAAzI,EAAA+B,OAAA0G,EAAA0oC,YAAA1oC,EAAAzI,EAAAyf,cAGAhX,EAAAzI,EAAA+B,UAGAlD,EAAAsyC,YAAA,SAAApvC,GACA,IAAAqvC,EAAA38C,KAAA48C,gBACAnxC,EAAAkxC,EAAA,GACAtsC,EAAAssC,EAAA,GAYA,OAVArvC,EAAA,IAAA7B,IACA6B,EAAA,IAAAA,EAAA,IAAA7B,EAAA6B,EAAA,IACAA,EAAA,GAAA7B,GAGA4E,GAAA/C,EAAA,KACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA+C,GACA/C,EAAA,GAAA+C,GAGA/C,GAGAlD,EAAAyyC,KAAA,SAAA3Y,GACA,IAIA4Y,EAAAC,EAAAC,EAAAC,EAAA3xC,EAAA4xC,EAAA1xC,EAAA2xC,EAJAnpC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA2S,EAAAD,EAAAC,KACAjI,EAAAgI,EAAAhI,GAGAgI,EAAA0S,cAIAplB,EAAAiiC,yBAKAjiC,EAAA0iB,eAAAhQ,EAAApQ,KAAAw5C,WAKA97C,EAAA0uC,0BAKA8M,EAAA9oC,EAAAyL,UAAA,GACAs9B,EAAA/oC,EAAAyL,UAAA,GACAu9B,EAAA9Y,EAAA,GACA+Y,EAAA/Y,EAAA,GACA54B,EAAA3B,KAAA8B,IAAAqxC,EAAAE,GACAE,EAAAvzC,KAAA0G,IAAAysC,EAAAE,GACAxxC,EAAAlK,EAAAqiC,uBAAA3vB,EAAAoT,OAAAxU,IAAAjJ,KAAA8B,IAAAsxC,EAAAE,GACAE,EAAA77C,EAAAqiC,uBAAA3vB,EAAApI,OAAAjC,KAAA0G,IAAA0sC,EAAAE,GACAhpC,EAAAvF,OAAA,IAAAjK,EAAA+D,UAAA4E,KAAA,IAAA9B,GAAA8B,KAAA,IAAA5B,GAAA4B,KAAA,QAAA8vC,EAAA5xC,GAAA8B,KAAA,SAAA+vC,EAAA3xC,GAEAyI,EAAApC,UAAA,IAAApN,EAAA4B,QAAAwL,UAAA,IAAApN,EAAA2B,OAAA+c,OAAA,SAAAnZ,GACA,OAAA1I,EAAAwiC,4BAAA95B,KACK2E,KAAA,SAAA3E,EAAAhM,GACL,IAGA62B,EACAC,EACAuoB,EACAC,EACA9Z,EAEAv4B,EATA7E,EAAA4F,EAAA0C,OAAA1O,MACA6jC,EAAAz9B,EAAAuV,QAAAlX,EAAAiE,UACA60C,EAAAn3C,EAAAuV,QAAAlX,EAAAkE,UAMA60C,GAAA,EAGA,GAAAp3C,EAAAuV,QAAAlX,EAAA+B,QACAquB,EAAA,EAAAzuB,EAAAgH,KAAA,MACA0nB,EAAA,EAAA1uB,EAAAgH,KAAA,MACAo2B,EAAAxvB,EAAAypC,YACAD,EAAAlyC,EAAAupB,KAAAqoB,GAAA1xC,EAAAspB,KAAAqoB,MACO,KAAA/2C,EAAAuV,QAAAlX,EAAAT,KAUP,OARA6wB,GADA5pB,EAAAF,EAAA/K,OACAuL,EACAupB,EAAA7pB,EAAAS,EACA2xC,EAAApyC,EAAAU,MACA2xC,EAAAryC,EAAAW,OACA43B,EAAAxvB,EAAA0pC,WACAF,IAAAN,EAAAroB,KAAAwoB,EAAA/xC,MAAA6xC,EAAAroB,KAAAwoB,EAAA9xC,GAMAgyC,EAAAD,IACAn3C,EAAAuV,QAAAlX,EAAAkE,UAAA40C,GAEAn3C,EAAAuV,QAAAlX,EAAAiE,UAAAm7B,GACAL,EAAAjlC,KAAAyV,GAAA6vB,EAAAz9B,EAAA4D,EAAAhM,SAKAoM,EAAAuzC,UAAA,SAAAzZ,GACA,IAAAlwB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEA0S,EAAA0S,cAIAplB,EAAAiiC,yBAKAvvB,EAAAyL,UAAAykB,EACAlwB,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,QAAAjF,KAAA,QAAA3I,EAAA+D,UAAArG,MAAA,cACA6R,EAAA0L,UAAA,IAGAtV,EAAAwzC,QAAA,WACA,IAAA5pC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEA0S,EAAA0S,cAIAplB,EAAAiiC,yBAKAvvB,EAAAC,KAAAvF,OAAA,IAAAjK,EAAA+D,UAAA3F,aAAAma,SAAA,KAAA7a,MAAA,aAAAgQ,SACA6B,EAAAC,KAAApC,UAAA,IAAApN,EAAA2B,OAAAuV,QAAAlX,EAAAkE,UAAA,GACAqL,EAAA0L,UAAA,IAGAtV,EAAAyzC,WAAA,SAAAC,GACA,IAAA9pC,EAAAhU,KACA+9C,EAAAD,IAAA9pC,EAAAiU,QAAA,SAAAjU,EAAA40B,sBAAA50B,EAAAgqC,QACAC,EAAAH,IAAA9pC,EAAAiU,QAAA,SAAAjU,EAAA40B,sBAAA50B,EAAAkqC,SACA,gBAAAh1C,EAAA0+B,EAAA/wB,GAEA,OADA,OAAA7C,EAAA3Q,KAAAuT,MAAAC,GAAAonC,EAAAF,GACAx/C,KAAAyV,EAAA9K,EAAA0+B,KAIAx9B,EAAA4zC,QAAA,SAAA90C,GACA,IACA5H,EADAtB,KACAsB,OAEA,OADAA,EAAA4Z,mBAAA5Z,EAAA4Z,mBAFAlb,KAEAyzC,oBACAvqC,IAGAkB,EAAA8zC,SAAA,SAAAh1C,GACA,IACA5H,EADAtB,KACAsB,OAEA,OADAA,EAAA+Z,oBAAA/Z,EAAA+Z,oBAFArb,KAEAyzC,oBACAvqC,IAGAkB,EAAAqpC,mBAAA,SAAAvqC,GACA,OAAAD,EAAAC,MAAA,IAGAkB,EAAAw+B,sBAAA,SAAA1/B,EAAA0+B,GACA,WAAAA,GAAA1wB,QAAA,QAGA9M,EAAAqvC,gBAAA,SAAAlb,GACA,IACAsR,EADA7vC,KACAsB,OAAAuuC,YAEAsO,EAAA,SAAAj1C,GACA,OAAAD,EAAAC,MAAA,IAkBA,MAdA,oBAAA2mC,EAAA78B,OACA68B,EAAA78B,OACK,WAAApK,EAAAinC,EAAA78B,QACL68B,EAAA78B,OAAAurB,IACA,IAAAsR,EAAA78B,OAAAurB,GAAA4f,EAAAtO,EAAA78B,OAAAurB,GAEA,WACA,UAIA4f,GAMA/zC,EAAA2a,SAAA,WACA,IAAA/Q,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GACAgI,EAAA1Q,KAAA0Q,EAAAC,KAAA5B,OAAA,KAAAjF,KAAA,YAAA4G,EAAAuL,iBAAAnS,KAAA,QAAA3I,EAAAnB,MAEAhC,EAAAswC,aACA59B,EAAA1Q,KAAA+O,OAAA,KAAAjF,KAAA,QAAA3I,EAAA2C,QAGA9F,EAAAwwC,aACA99B,EAAA1Q,KAAA+O,OAAA,KAAAjF,KAAA,QAAA3I,EAAAgD,QAGAnG,EAAA0wC,iBACAh+B,EAAA1Q,KAAA+O,OAAA,KAAAjF,KAAA,QAAA3I,EAAA8C,YAAA8K,OAAA,QAAAjF,KAAA,QAAA3I,EAAA8C,YAGAyM,EAAA7M,MAAA6E,EAAA6F,UAAA,IAEAvQ,EAAA0jB,kBACAhR,EAAAiR,iBAIA7a,EAAA6a,cAAA,WACA,IAAAjR,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACAgI,EAAA9M,UAAA8M,EAAAC,KAAA5B,OAAA,KAAAjF,KAAA,YAAA4G,EAAAuL,iBAAAnS,KAAA,QAAA3I,EAAAnB,KAAA,IAAAmB,EAAAyC,WACA8M,EAAA9M,UAAAmL,OAAA,KAAAjF,KAAA,QAAA3I,EAAA6C,YACA0M,EAAA9M,UAAAmL,OAAA,KAAAjF,KAAA,QAAA3I,EAAAkD,YACAqM,EAAA1M,WAAA0E,EAAA6F,UAAA,KAGAzH,EAAAu2B,YAAA,SAAAwG,GACA,IAAAnzB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GACAoyC,EAAApqC,EAAAqqC,iBAAA/8C,EAAAuwC,YAAA79B,EAAAzI,GACAqB,EAAAoH,EAAAoB,gBAAApB,EAAAoC,MAAAxJ,aAAA,EACAoH,EAAA+sB,UAAAz/B,EAAAiT,aAAA,CACA0R,GAAA,EACAC,GAAAlS,EAAArI,MACAwa,GAAA,SAAAnc,GACA,OAAAgK,EAAAzI,EAAAvB,GAAA4C,GAEAkI,GAAA,SAAA9K,GACA,OAAAgK,EAAAzI,EAAAvB,GAAA4C,IAEK,CACLqZ,GAAA,SAAAjc,GACA,OAAAgK,EAAAzI,EAAAvB,GAAA4C,GAEAsZ,GAAA,SAAAlc,GACA,OAAAgK,EAAAzI,EAAAvB,GAAA4C,GAEAuZ,GAAA,EACArR,GAAAd,EAAApI,QAEAoI,EAAA7M,MAAA6M,EAAAC,KAAAvF,OAAA,IAAAjK,EAAA2C,QAAAyK,UAAA,IAAApN,EAAA0C,OAAAzF,KAAA08C,GACApqC,EAAA7M,MAAA4K,QAAAM,OAAA,QAAAjF,KAAA,QAAA3I,EAAA0C,OAEAggC,GACAnzB,EAAA7M,MAAAiG,KAAA4G,EAAA+sB,WAAA5+B,MAAA,qBACA,OAAA6J,EAAA0C,OAAA1O,MAAAoN,KAAA9L,EAAAiT,aAAA,cAAAjT,EAAAiT,aAAAP,EAAApI,OAAA,SAIAoI,EAAA7M,MAAA+K,OAAAC,UAGA/H,EAAAk0C,YAAA,WACA,IAAAtqC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAi9C,EAAAvqC,EAAA2D,MAAAlL,cAAAuH,EAAAtI,EAAAgC,MAAApM,EAAAywC,cACA/9B,EAAAxM,MAAAwM,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAgD,QAAAoK,UAAA,IAAApN,EAAA+C,OAAA9F,KAAA68C,GACAvqC,EAAAxM,MAAAuK,QAAAM,OAAA,QAAAjF,KAAA,QAAA3I,EAAA+C,OACAwM,EAAAxM,MAAA4F,KAAA,KAAA9L,EAAAiT,aAAAP,EAAAtI,EAAA,GAAA0B,KAAA,KAAA9L,EAAAiT,aAAAP,EAAAtI,EAAAsI,EAAArI,OAAAyB,KAAA,KAAA9L,EAAAiT,aAAA,EAAAP,EAAAtI,GAAA0B,KAAA,KAAA9L,EAAAiT,aAAAP,EAAApI,OAAAoI,EAAAtI,GACAsI,EAAAxM,MAAA0K,OAAAC,SACA6B,EAAA8R,YAAA9R,EAAAxM,MAAA,SAGA4C,EAAAo0C,eAAA,SAAAx0C,GACA,OAAAA,EAAAyO,SAAAzO,EAAAyO,SAAA,OAGArO,EAAAq0C,WAAA,SAAAz0C,GACA,gBAAAA,EAAAyO,SAAA,aAAAzO,EAAAyO,SAAA,MAGArO,EAAAs0C,WAAA,SAAA10C,GACA,gBAAAA,EAAAyO,UAAAzY,KAAA4L,OAAA,WAAA5B,EAAAyO,UAAAzY,KAAA4L,OAAA,KAGAxB,EAAAu0C,WAAA,SAAA30C,GACA,gBAAAA,EAAAyO,SAAA,aAAAzO,EAAAyO,SAAAzY,KAAA2L,MAAA,EAAA3L,KAAA2L,OAGAvB,EAAAuhB,WAAA,SAAA3O,GACA,IAGA3V,EACAK,EACAinB,EALA3a,EAAAhU,KACAiU,EAAAD,EAAAC,KACA3S,EAAA0S,EAAA1S,OAKA0S,EAAA1Q,KAAAnB,MAAA,aAAA6R,EAAA0S,aAAA,oBACAzS,EAAAvF,OAAA,QAAAjK,EAAA8C,YAAApF,MAAA,uBAEAb,EAAAswC,aACA59B,EAAA2sB,cAGA3sB,EAAA1M,WAAA2M,EAAAvF,OAAA,IAAAjK,EAAA6C,YAAAuK,UAAA,IAAApN,EAAA4C,WAAA3F,KAAAJ,EAAAygC,eAEA16B,EAAA2M,EAAA1M,WAAAyK,QAAAM,OAAA,KAAAjF,KAAA,iBAAApD,GACA,OAAAvF,EAAA4C,WAAA2C,EAAA,UAAAA,EAAA,aAEAqI,OAAA,QAAAlQ,MAAA,aACAkF,EAAAgL,OAAA,QAAAjF,KAAA,cAAA4G,EAAAwqC,gBAAApxC,KAAA,YAAA9L,EAAAiT,aAAA,kBAAAnH,KAAA,KAAA4G,EAAAyqC,YAAArxC,KAAA,SAAAjL,MAAA,aAIA6R,EAAA1M,WAAA4K,OAAArP,aAAAma,YAAA7a,MAAA,aAAAgQ,SAEA7Q,EAAAwwC,aACA99B,EAAAsqC,cAGAtqC,EAAArM,WAAAsM,EAAAvF,OAAA,IAAAjK,EAAAkD,YAAAkK,UAAA,IAAApN,EAAAiD,WAAAhG,KAAAJ,EAAA2gC,eAEAv6B,EAAAsM,EAAArM,WAAAoK,QAAAM,OAAA,KAAAjF,KAAA,iBAAApD,GACA,OAAAvF,EAAAiD,WAAAsC,EAAA,UAAAA,EAAA,aAEAqI,OAAA,QAAAlQ,MAAA,aACAuF,EAAA2K,OAAA,QAAAjF,KAAA,cAAA4G,EAAAwqC,gBAAApxC,KAAA,YAAA9L,EAAAiT,aAAA,kBAAAnH,KAAA,KAAA4G,EAAAyqC,YAAArxC,KAAA,SAAAjL,MAAA,aAEAwsB,EAAA3a,EAAA2a,GAAAla,KAAAT,GACAA,EAAArM,WAAA+G,OAAA,QAAA7L,aAAAma,YAAA5P,KAAA,KAAA9L,EAAAiT,aAAAoa,EAAA,GAAAvhB,KAAA,KAAA9L,EAAAiT,aAAAoa,EAAA3a,EAAArI,OAAAyB,KAAA,KAAA9L,EAAAiT,aAAA,EAAAoa,GAAAvhB,KAAA,KAAA9L,EAAAiT,aAAAP,EAAApI,OAAA+iB,GAAAxsB,MAAA,aACA6R,EAAArM,WAAA+G,OAAA,QAAA7L,aAAAma,YAAA5P,KAAA,IAAA9L,EAAAiT,aAAAP,EAAA0qC,WAAAjqC,KAAAT,KAAA2qC,WAAAlqC,KAAAT,IAAA5G,KAAA,IAAAuhB,GAAA5nB,KAAA,SAAAiD,GACA,OAAAA,EAAAjD,OACK5E,MAAA,aAEL6R,EAAArM,WAAAuK,OAAArP,aAAAma,YAAA7a,MAAA,aAAAgQ,UAGA/H,EAAAijB,WAAA,SAAAxR,GACA,IAAA7H,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAqpB,EAAA3W,EAAA2W,GAAAlW,KAAAT,GACA1N,EAAA0N,EAAA1M,WAAAoH,OAAA,QACA1H,EAAAgN,EAAA1M,WAAAoH,OAAA,QACA,QAAAmN,EAAAvV,EAAAzD,aAAAyD,GAAA8G,KAAA,KAAA9L,EAAAiT,aAAA,EAAAoW,GAAAvd,KAAA,KAAA9L,EAAAiT,aAAAP,EAAArI,MAAAgf,GAAAvd,KAAA,KAAA9L,EAAAiT,aAAAoW,EAAA,GAAAvd,KAAA,KAAA9L,EAAAiT,aAAAoW,EAAA3W,EAAApI,QAAAzJ,MAAA,cAAA0Z,EAAA7U,EAAAnE,aAAAmE,GAAAoG,KAAA,IAAA9L,EAAAiT,aAAAP,EAAA2qC,WAAAlqC,KAAAT,KAAA0qC,WAAAjqC,KAAAT,IAAA5G,KAAA,IAAAud,GAAA5jB,KAAA,SAAAiD,GACA,OAAAA,EAAAjD,OACK5E,MAAA,eAGLiI,EAAAw0C,eAAA,SAAArT,GACA,IAAAv3B,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAu9C,EAAAtT,EAAApoB,OAAA,SAAAnZ,GACA,OAAAA,GAAAf,EAAAe,EAAApM,SAEAkhD,EAAA9qC,EAAAC,KAAApC,UAAA,QAAApN,EAAA8C,YACAknB,EAAAza,EAAAya,GAAAha,KAAAT,GAEA1S,EAAA0xC,eAKAh/B,EAAAiU,QAAA,YAAAjU,EAAA0S,eAIAo4B,EAAA38C,MAAA,wBAAAT,KAAA,CAAAm9C,EAAA,KAAAzxC,KAAA9L,EAAAiT,aAAA,UAAAka,GAAArhB,KAAA9L,EAAAiT,aAAA,UAAAka,GACAza,EAAA8R,YAAAg5B,EAAA,WAGA10C,EAAAw2B,eAAA,WACA5gC,KAAAiU,KAAAvF,OAAA,QAAAjK,EAAA8C,YAAApF,MAAA,wBAGAiI,EAAAqhB,iBAAA,WACA,IACAnqB,EADAtB,KACAsB,OADAtB,KAEAiU,KAAAvF,OAAA,QAAAjK,EAAA8C,YAAA6F,KAAA,KAAA9L,EAAAiT,aAAA,OAAAnH,KAAA,KAAA9L,EAAAiT,aAFAvU,KAEA2L,OAAA,IAAAyB,KAAA,KAAA9L,EAAAiT,cAAA,MAAAnH,KAAA,KAAA9L,EAAAiT,cAAA,GAFAvU,KAEA4L,SAGAxB,EAAAi0C,iBAAA,SAAAr4B,EAAA/Z,GACA,IAEAqtC,EACAyF,EACAC,EACAhhD,EAJAihD,EAAA,GAKAC,EANAl/C,KAMAiU,KAAAvF,OAAA,IAAAjK,EAAAmD,OAAAiK,UAAA,SAAApP,OAEA,YAAAujB,EAKA,IAHA+4B,GADAzF,EATAt5C,KASAub,cACA,GAAA4jC,cACAH,EAAA1F,EAAA,GAAA6F,cAEAnhD,EAAA+gD,EAAyB/gD,GAAAghD,EAAehhD,IACxCihD,EAAAtxC,KAAA,IAAAgP,KAAA3e,EAAA,yBAGAihD,EAAAhzC,EAAAyB,MAAA,KAEAxP,OAAAghD,IAEAD,IAAA97B,OAAA,SAAAnZ,GACA,UAAAA,GAAA2O,QAAA,UAKA,OAAAsmC,GAGA70C,EAAAg1C,sBAAA,SAAArzC,GACA,OAAAA,EAAA,SAAAjI,GACA,IAAA4G,GAAA,EAMA,MALA,GAAA0E,OAAArD,GAAApB,QAAA,SAAA00C,IACA,UAAAA,GAAAv7C,EAAAlG,QAAAyhD,EAAAzhD,OAAA,UAAAyhD,GAAAv7C,EAAA,QAAAu7C,EAAA,SACA30C,GAAA,KAGAA,GACK,WACL,WAIAN,EAAA43B,gBAAA,SAAAj2B,EAAAuzC,GACA,IACAh+C,EADAtB,KACAsB,OACAi+C,EAFAv/C,KAEAo/C,sBAAArzC,GACAyzC,EAAA,SAAA17C,GACA,OAAAy7C,EAAAz7C,IAEAgpC,EAAAwS,EAAA76C,EAAA6C,WAAA7C,EAAAkD,WACAklC,EAAAyS,EAAA76C,EAAA4C,UAAA5C,EAAAiD,UAPA1H,KASAiU,KAAAvF,OAAA,IAAAo+B,GAAAj7B,UAAA,IAAAg7B,GAAA1pB,OAAAo8B,GAAA18C,aAAAma,SAAA1b,EAAAunB,qBAAA1mB,MAAA,aAAAgQ,SAEAmtC,EACAh+C,EAAAygC,aAAAzgC,EAAAygC,aAAA5e,OAAAq8B,GAEAl+C,EAAA2gC,aAAA3gC,EAAA2gC,aAAA9e,OAAAq8B,IAIAp1C,EAAA8a,cAAA,WACAllB,KACAiU,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAiB,YAAAvD,MAAA,mBAGAiI,EAAAmiB,gBAAA,WACA,IAEAkzB,EACAC,EAHA1rC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAGA6iC,EAAAnwB,EAAAmwB,cAEAz+B,EAAAsO,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAiB,YAAAvD,MAAA,SAAAb,EAAA0iB,aAAA1iB,EAAAiT,aAAA,8BAAAoH,QAAAlX,EAAAmB,mBAAAu+B,GAAAxoB,QAAAlX,EAAAkB,kBAAAw+B,GAEAz+B,EAAAmM,UAAA,IAAApN,EAAAgB,WAAA0M,SAEA6B,EAAAvO,UAAAC,EAAAmM,UAAA,IAAApN,EAAAgB,WAEA0+B,GACAsb,EAAAzrC,EAAAvO,UAAA/D,KAAA,KAEAsS,EAAA2rC,gCAAAF,EAAA1tC,SAEAiC,EAAA4rC,gBAAAH,KAGAC,EAAA1rC,EAAA8jC,sBAAA9jC,EAAAtS,KAAAqU,SACArQ,EAAAm6C,MAAAH,IAAAtjC,OAAA,IACApI,EAAAvO,UAAAC,EAAAmM,UAAA,IAAApN,EAAAgB,WACAg6C,EAAAzrC,EAAAvO,UAAA/D,KAAA,SAAAsI,GACA,OAAAA,IAGAgK,EAAA8rC,6BAAAL,EAAA1tC,SAEAiC,EAAA4rC,gBAAAH,GAEAA,EAAAvtC,OAAAC,WAIA/H,EAAAw1C,gBAAA,SAAAH,GACA,IAEAl0C,EACAG,EACA+C,EACAD,EACAuxC,EACAC,EAPAhsC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAQAm+C,KAAAzrC,EAAAvO,UAAA/D,KAAA,SAAAsI,GACA,OAAAA,IAGAgK,EAAAmwB,eAEA54B,EAAA,EACAG,EAAA,EACA+C,EAAAuF,EAAArI,MACA6C,EAAAwF,EAAApI,UAEAoI,EAAA8Z,cAAA9Z,EAAA0B,gBAAA1B,EAAAoB,iBAuCA2qC,EAAA/rC,EAAAisC,oBAEAD,EAAA,SAAAh2C,GACA,OAAAgK,EAAAzI,EAAAvB,EAAAuB,GAAAw0C,EAAA,KAxCA/rC,EAAA2jC,WAEAoI,EAAA,SAAA/1C,GACA,IAAAk2C,EAAAlsC,EAAA4jC,SAAA5tC,EAAAyF,OACA0wC,EAAAnsC,EAAA6jC,SAAA7tC,EAAAyF,OAEA,cAAAywC,GAAA,OAAAC,EACA7+C,EAAAiT,aAAAP,EAAApI,OAAAoI,EAAArI,OAGA,OAAAu0C,IACAA,EAAAlsC,EAAAzI,EAAA+B,SAAA,IAGA,OAAA6yC,IACAA,EAAAnsC,EAAAzI,EAAA+B,SAAA,IAGA3D,KAAA0G,IAAA,GAAA2D,EAAAzI,EAAA40C,GAAAnsC,EAAAzI,EAAA20C,IAAA,KAGAF,EAAA,SAAAh2C,GACA,IAAAk2C,EAAAlsC,EAAA4jC,SAAA5tC,EAAAyF,OACA0wC,EAAAnsC,EAAA6jC,SAAA7tC,EAAAyF,OACA2wC,EAAApsC,EAAAtS,KAAAshB,GAAAhZ,EAAA6M,IAAA7M,EAAAyF,OAEA,cAAAywC,GAAA,OAAAC,EACA,GAGA,OAAAD,IACAA,EAAAlsC,EAAAzI,EAAA+B,SAAA,KAGA0G,EAAAzI,EAAA60C,GAAApsC,EAAAzI,EAAA20C,IAAA,KAUA30C,EAAAjK,EAAAiT,aAAA,EAAAyrC,EACAt0C,EAAApK,EAAAiT,aAAAyrC,EAAA,EACAvxC,EAAAnN,EAAAiT,aAAAP,EAAArI,MAAAo0C,EACAvxC,EAAAlN,EAAAiT,aAAAwrC,EAAA/rC,EAAApI,QAGA6zC,EAAAryC,KAAA,QAAA4G,EAAAs5B,WAAA74B,KAAAT,IAAA5G,KAAA,IAAA7B,GAAA6B,KAAA,IAAA1B,GAAA0B,KAAA,QAAAqB,GAAArB,KAAA,SAAAoB,IAGApE,EAAA01C,6BAAA,SAAAO,GACA,IAAArsC,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OACA++C,EAAAhuC,OAAA,QAAAjF,KAAA,QAAA4G,EAAAs5B,WAAA74B,KAAAT,IAAA7R,MAAA,SAAAb,EAAAiiC,wBAAAjiC,EAAAqiC,uBAAA,gBAAA1f,GAAA,qBAAAja,GACA,IAAAyF,EAAAzF,EAAAyF,MAEAuE,EAAA0L,UAAA1L,EAAA2L,SAKA3L,EAAA0S,eAKAplB,EAAA6wC,4BACAn+B,EAAAssC,cAAA7wC,EAAA,SAGAuE,EAAAusC,WAAA9wC,EAAA,SAEAuE,EAAAC,KAAApC,UAAA,IAAApN,EAAA2B,MAAA,IAAAqJ,GAAAd,KAAA,SAAA3E,GACA1I,EAAAgqC,iBAAA/sC,KAAAyV,EAAA+J,IAAA/T,QAEKia,GAAA,oBAAAja,GACL,IAAAyF,EAAAzF,EAAAyF,MAEAuE,EAAA1S,SAKA0S,EAAA0S,eAIA1S,EAAA4sB,iBACA5sB,EAAA03B,cAEA13B,EAAAwsC,kBACAxsC,EAAAysC,eAEAzsC,EAAAC,KAAApC,UAAA,IAAApN,EAAA2B,MAAA,IAAAqJ,GAAAd,KAAA,SAAA3E,GACA1I,EAAAqqC,gBAAAptC,KAAAyV,EAAA+J,IAAA/T,SAEKia,GAAA,qBAAAja,GACL,IAAAuhC,EACA97B,EAAAzF,EAAAyF,MACAhK,EAAAuO,EAAA8G,IAAApM,OAAA,IAAAjK,EAAAgB,UAAA,IAAAgK,GAEAuE,EAAA0L,UAAA1L,EAAA2L,SAKA3L,EAAA0S,eAIA1S,EAAA0sC,WAAA12C,IAAA,eAAAgK,EAAA1S,OAAAixC,gBAAAvmC,EAAAk4B,MAAAlkC,MAAA,GAAAgU,EAAAzI,EAAAyI,EAAAsjC,UAAAttC,EAAA6M,GAAApH,MACAA,GAAA,GAIA87B,EAAAv3B,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAAxG,IAAA,SAAAge,GACA,OAAAvZ,EAAAu0B,QAAAv0B,EAAAisB,gBAAA1S,EAAAnR,OAAA3M,MAGAnO,EAAA2xC,kBACAj/B,EAAAw3B,YAAAD,EAAAvrC,MACAgU,EAAA4qC,eAAArT,MAGAjqC,EAAA2xC,iBAAA3xC,EAAAiiC,yBAAAjiC,EAAAqiC,yBAIA3vB,EAAAC,KAAApC,UAAA,IAAApN,EAAA2B,MAAA,IAAAqJ,GAAAd,KAAA,WACA3C,EAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAAgE,UAAA,GAEAnH,EAAAiiC,wBACA99B,EAAAtD,MAAA,SAAAb,EAAAqiC,uBAAA,gBAGAriC,EAAA2xC,kBACAj/B,EAAA4sB,iBACA5sB,EAAA03B,cAEApqC,EAAAqiC,yBACA3vB,EAAAwsC,gBAAA/wC,GACAuE,EAAAysC,aAAAhxC,OAGO0T,OAAA,SAAAnZ,GACP,OAAAgK,EAAA2sC,cAAA3gD,KAAAgK,KACO2E,KAAA,SAAA3E,GACP1I,EAAAiiC,yBAAAjiC,EAAAqiC,wBAAAriC,EAAAwiC,4BAAA95B,KACAvE,EAAAtD,MAAA,oBAGAb,EAAA2xC,kBACAj/B,EAAAw3B,YAAA,CAAAxhC,GAAAhK,MACAgU,EAAA4qC,eAAA,CAAA50C,IAEA1I,EAAA6wC,4BACAn+B,EAAAssC,cAAA7wC,EAAAzF,EAAA6M,IAAA,GAGA7C,EAAAusC,WAAA9wC,EAAAzF,EAAA6M,IAAA,SAGKoN,GAAA,iBAAAja,GACL,IAAAyF,EAAAzF,EAAAyF,OAEAuE,EAAA0S,cAAA1S,EAAA43B,cAIA53B,EAAA4L,YACA5L,EAAA4L,aAAA,GAIA5L,EAAA0sC,WAAA12C,IAAA,eAAA1I,EAAAixC,gBAAAvmC,EAAAk4B,MAAAlkC,MAAA,GAAAgU,EAAAzI,EAAAyI,EAAAsjC,UAAAttC,EAAA6M,GAAApH,MACAA,GAAA,GAGAuE,EAAAC,KAAApC,UAAA,IAAApN,EAAA2B,MAAA,IAAAqJ,GAAAd,KAAA,SAAA3E,IACA1I,EAAAqiC,wBAAA3vB,EAAA2sC,cAAA3gD,KAAAgK,MACAgK,EAAA43B,YAAA5rC,KAAAgK,EAAAyF,GACAuE,EAAA1S,OAAAuqC,aAAAttC,KAAAyV,EAAA+J,IAAA/T,EAAAhK,aAGKzB,KAAA+C,EAAA2uC,0BAAAj8B,EAAA6oC,KAAA7wC,EAAA40C,SAAA/D,OAAAgE,OAAApjD,QAAAwmB,GAAA,kBACLjQ,EAAA6oC,KAAA7wC,EAAAk4B,MAAAlkC,SACKikB,GAAA,uBACLjQ,EAAA2pC,UAAA3xC,EAAAk4B,MAAAlkC,SACKikB,GAAA,qBACLjQ,EAAA4pC,YACK,eAGLxzC,EAAAu1C,gCAAA,SAAAU,GACA,IAAArsC,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAEA,SAAAw/C,IACA9sC,EAAA8G,IAAApM,OAAA,IAAAjK,EAAAgB,WAAAtD,MAAA,eACA6R,EAAA4sB,iBACA5sB,EAAA03B,cACA13B,EAAAwsC,kBACAxsC,EAAAysC,eAGAJ,EAAAhuC,OAAA,QAAAjF,KAAA,OAAAA,KAAA,OAAAA,KAAA,QAAA4G,EAAArI,OAAAyB,KAAA,SAAA4G,EAAApI,QAAAwB,KAAA,QAAA3I,EAAAgB,WAAAwe,GAAA,sBACAjQ,EAAA1S,SAKA0S,EAAA0S,cAIAo6B,OACK78B,GAAA,uBACL,IACAigB,EAAAgW,EAAA3O,EADA5wB,EAAA3G,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAGA/B,EAAA0L,UAKA1L,EAAA0S,WAAA/L,KAIAupB,EAAAl4B,EAAAk4B,MAAAlkC,MACAk6C,EAAAlmC,EAAA+lC,uBAAAp/B,EAAAupB,IAEAlwB,EAAA6L,WAAAq6B,KAAArjC,KAAA7C,EAAA6L,UAAAhJ,KACAvV,EAAAqqC,gBAAAptC,KAAAyV,EAAA+J,IAAA/J,EAAA6L,WACA7L,EAAA6L,eAAAjR,GAGAsrC,GAYA3O,GAPAv3B,EAAAua,cAAA2rB,KAAA54C,EAAA2xC,gBACA,CAAAiH,GAEAlmC,EAAAqjC,UAAA18B,EAAAu/B,EAAA3uC,IAIAgE,IAAA,SAAAvF,GACA,OAAAgK,EAAAu0B,QAAAv+B,KAEAgK,EAAAw3B,YAAAD,EAAAvrC,MAEAsB,EAAA6wC,4BACAn+B,EAAAssC,cAAApG,EAAAzqC,MAAAyqC,EAAArjC,IAAA,GAGA7C,EAAAusC,WAAArG,EAAAzqC,MAAAyqC,EAAArjC,IAAA,GAEA7C,EAAA4qC,eAAArT,IAEAv3B,EAAAuW,UAAA2vB,EAAArjC,KAAA7C,EAAAqmC,KAAAH,EAAAhW,GAAA5iC,EAAA4wC,qBACAl+B,EAAA8G,IAAApM,OAAA,IAAAjK,EAAAgB,WAAAtD,MAAA,oBAEA6R,EAAA6L,YACAve,EAAAgqC,iBAAA/sC,KAAAyV,EAAA+J,IAAAm8B,GACAlmC,EAAA6L,UAAAq6B,KA7BA4G,OAgCK78B,GAAA,mBACL,IACAigB,EAAAgW,EADAv/B,EAAA3G,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAGA/B,EAAA0S,WAAA/L,KAIAupB,EAAAl4B,EAAAk4B,MAAAlkC,OACAk6C,EAAAlmC,EAAA+lC,uBAAAp/B,EAAAupB,MAOAlwB,EAAAuW,UAAA2vB,EAAArjC,KAAA7C,EAAAqmC,KAAAH,EAAAhW,GAAA5iC,EAAA4wC,oBACAl+B,EAAAC,KAAApC,UAAA,IAAApN,EAAA4B,OAAA2N,EAAAmvB,wBAAA+W,EAAArjC,KAAAhF,UAAA,IAAApN,EAAA2B,MAAA,IAAA8zC,EAAAzqC,OAAAd,KAAA,YACArN,EAAAqiC,wBAAA3vB,EAAA2sC,cAAA3gD,KAAAk6C,MACAlmC,EAAA43B,YAAA5rC,KAAAk6C,IAAAzqC,OACAuE,EAAA1S,OAAAuqC,aAAAttC,KAAAyV,EAAA+J,IAAAm8B,EAAAl6C,YAIKzB,KAAA+C,EAAA2uC,0BAAAj8B,EAAA6oC,KAAA7wC,EAAA40C,SAAA/D,OAAAgE,OAAApjD,QAAAwmB,GAAA,kBACLjQ,EAAA6oC,KAAA7wC,EAAAk4B,MAAAlkC,SACKikB,GAAA,uBACLjQ,EAAA2pC,UAAA3xC,EAAAk4B,MAAAlkC,SACKikB,GAAA,qBACLjQ,EAAA4pC,YACK,eAGLxzC,EAAAk6B,cAAA,SAAAte,EAAAvW,EAAAy0B,GACA,IACA6c,EAAA,IAAAt8C,EAAAgB,WADAzF,KACAmkC,cAAA,OAAA10B,GACAhK,EAFAzF,KAEAiU,KAAAvF,OAAAqyC,GAAA3tC,OACAnI,EAAAxF,EAAAyF,wBACAK,EAAAN,EAAA8H,MAAAmxB,IAAA,MACAx4B,EAAAT,EAAA2H,KAAAsxB,IAAA,MACA8c,EAAAn+B,SAAAo+B,YAAA,eACAD,EAAAE,eAAAl7B,GAAA,KAAAhI,OAAA,EAAAzS,EAAAG,EAAAH,EAAAG,GAAA,mBACAjG,EAAA6+B,cAAA0c,IAGA52C,EAAAwa,WAAA,WACA,IAAA5Q,EAAAhU,KAKA,GAJAgU,EAAAmtC,kBAAA,GACAntC,EAAAotC,mBAAA,EACAptC,EAAAvQ,OAAAuQ,EAAA8G,IAAAzI,OAAA,KAAAjF,KAAA,YAAA4G,EAAAK,aAAA,YAEAL,EAAA1S,OAAAspB,YAGA,OAFA5W,EAAAvQ,OAAAtB,MAAA,4BACA6R,EAAA+M,gBAAA/M,EAAAsP,SAAAtP,EAAAtS,KAAAqU,UAMA/B,EAAAqtC,4BAGAj3C,EAAAi3C,yBAAA,WACArhD,KACA6qB,aADA7qB,KACAsjB,SADAtjB,KACA0B,KAAAqU,SAAA,CACAyP,eAAA,EACAkI,4BAAA,EACA7R,gBAAA,KAIAzR,EAAAwd,oBAAA,SAAAxB,EAAAE,GACA,IAAAtS,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAggD,EAAA,CACA1uC,IAAAoB,EAAAsN,YAAAtN,EAAAqT,uBAAA/lB,EAAAivC,eAAA,IAAAv8B,EAAAkT,cAAAd,EAAApS,EAAAuT,0BAAAjmB,EAAAivC,eACAx9B,KAAAiB,EAAAwN,aAAAxN,EAAAwT,wBAAAlmB,EAAAgvC,eAAA,GAAAt8B,EAAAgT,aAAAV,EAAAtS,EAAAsT,yBAAAhmB,EAAAgvC,eAAA,IAEAt8B,EAAA2T,QAAA,CACA/U,IAAAoB,EAAAmN,cAAA,EAAAnN,EAAAqN,cAAAigC,EAAA1uC,IAAAoB,EAAAkT,cAAAd,EACAvT,MAAA6U,IACA5U,OAAA,EACAC,KAAAiB,EAAAmN,cAAAnN,EAAAgT,aAAAV,EAAAtS,EAAAqN,cAAAigC,EAAAvuC,KAAA,IAIA3I,EAAA4kB,gBAAA,SAAAnT,IAEAA,EADA7b,KACAyD,OAAAZ,aADA7C,KACAyD,QAAA2J,KAAA,YADApN,KACAqU,aAAA,YAGAjK,EAAAm3C,iBAAA,SAAAC,GACAxhD,KAAAyhB,WAAA+/B,GAGAp3C,EAAAq3C,sBAAA,SAAAhzC,GACAzO,KAAA0hB,gBAAAjT,GAGArE,EAAAs3C,uBAAA,SAAAlzC,GACAxO,KAAA2hB,iBAAAnT,GAGApE,EAAAmc,eAAA,WACA,IAAAvS,EAAAhU,KACA,OAAAgU,EAAA1S,OAAAspB,YAAA5W,EAAAmN,eAAAnN,EAAAqN,cAAArN,EAAA0N,iBAAA1N,EAAAyN,WAAA,GAAAzN,EAAAgT,aAAA,GAGA5c,EAAAic,gBAAA,WACA,IAAArS,EAAAhU,KACAwO,EAAA,EAUA,OARAwF,EAAA1S,OAAAspB,cAEApc,EADAwF,EAAAmN,cACAnN,EAAAkT,cAEAvd,KAAA0G,IAAA,GAAA2D,EAAA2N,mBAAA3N,EAAAyN,WAAA,IAIAjT,GAGApE,EAAAu3C,iBAAA,SAAAx5C,GACA,OAAAA,EAAAwT,QAAAlX,EAAA6D,kBAAA,QAGA8B,EAAAw3C,0BAAA,SAAAz5C,GACA,OAAAA,EAAAwT,QAAAlX,EAAA6D,kBAAA,SAGA8B,EAAAq3B,kBAAA,SAAApD,EAAA6C,GACA,IAAAltB,EAAAhU,KACAq+B,EAAArqB,EAAAotB,eAAA/C,GACArqB,EAAAvQ,OAAAoO,UAAA,IAAApN,EAAA0D,YAAAgb,OAAA,SAAAtM,GACA,OAAAwnB,EAAA1lB,QAAA9B,IAAA,IACK8E,QAAAlX,EAAA8D,kBAAA24B,GAAAr+B,aAAAma,SAAA,KAAA7a,MAAA,qBAEL,OADA++B,EAAAltB,EAAA2tC,iBAAA3tC,EAAA4tC,2BACArjD,KAAAyV,IAAAhI,GAAA0C,OAAA1O,UAIAoK,EAAAqhC,aAAA,WACA,IAAAz3B,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACAgI,EAAAvQ,OAAAoO,UAAA,IAAApN,EAAA0D,YAAAwT,QAAAlX,EAAA8D,mBAAA,GAAA1F,aAAAma,SAAA,KAAA7a,MAAA,qBACA,OAAA6R,EAAA2tC,iBAAA31C,EAAA0C,OAAA1O,UAIAoK,EAAAu3B,WAAA,SAAAtD,GACA,IAAArqB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAA,EAAAspB,cACAtpB,EAAAspB,aAAA,EACA5W,EAAAvQ,OAAAtB,MAAA,wBAEA6R,EAAAotC,mBACAptC,EAAAqtC,4BAIArtC,EAAAkkC,sBAAA7Z,GACArqB,EAAAvQ,OAAAoO,UAAAmC,EAAA6tB,gBAAAxD,IAAAl8B,MAAA,wBAAAU,aAAAV,MAAA,qBACA,OAAA6R,EAAA2tC,iBAAA3tC,EAAAhI,GAAA0C,OAAA1O,UAIAoK,EAAAk4B,WAAA,SAAAjE,GACA,IAAArqB,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAA,EAAAspB,aAAA3gB,EAAAo0B,KACA/8B,EAAAspB,aAAA,EACA5W,EAAAvQ,OAAAtB,MAAA,wBAGA6R,EAAAwP,mBAAA6a,GACArqB,EAAAvQ,OAAAoO,UAAAmC,EAAA6tB,gBAAAxD,IAAAl8B,MAAA,aAAAA,MAAA,wBAGAiI,EAAAq0B,4BAAA,WACAz+B,KAAAmhD,kBAAA,IAGA/2C,EAAAygB,aAAA,SAAAwT,EAAA/zB,EAAA8S,GACA,IAEAykC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOAC,EAQAzmC,EAAA6R,EACA1mB,EAAAu7C,EAAAC,EAAAC,EAlBAzuC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAohD,EAAA,EACAtG,EAAA,GACAtsC,EAAA,EACA6yC,EAAA,EACAC,EAAA,GACAC,EAAAvhD,EAAAwvC,uBAAA,EAEAgS,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACA3B,EAAA,EAmBA,SAAA4B,EAAAC,EAAAxsC,EAAApH,GACA,IAOA2X,EACAk8B,EARAC,EAAA,IAAA9zC,EACA+zC,EAAA/zC,IAAA4uB,EAAAngC,OAAA,EACA+M,EAXA,SAAAo4C,EAAAxsC,GAKA,OAJA7C,EAAAmtC,kBAAAtqC,KACA7C,EAAAmtC,kBAAAtqC,GAAA7C,EAAAyvC,YAAAJ,EAAAK,YAAAj/C,EAAA0D,WAAAk7C,IAGArvC,EAAAmtC,kBAAAtqC,GAMA8sC,CAAAN,EAAAxsC,GACA+sC,EAAA34C,EAAAU,MAAAk3C,IAAAW,GAAAxvC,EAAAmN,eAAAnN,EAAAqN,cAAA+6B,EAAA,GAAA96C,EAAAuvC,eACAgT,EAAA54C,EAAAW,OAAA82C,EACAoB,EAAA9vC,EAAAmN,eAAAnN,EAAAqN,cAAAwiC,EAAAD,EACAG,EAAA/vC,EAAAmN,eAAAnN,EAAAqN,cAAArN,EAAAqS,kBAAArS,EAAAuS,iBAIA,SAAAy9B,EAAAntC,EAAAotC,GACAA,IACA78B,GAAA28B,EAAAjB,EAAAgB,GAAA,GAEAlB,IACAx7B,GAAA28B,EAAAD,GAAA,EACAhB,EAAA,EACAtB,KAIA2B,EAAAtsC,GAAA2qC,EACA0B,EAAA1B,GAAAxtC,EAAAqN,cAAA,GAAA+F,EACA27B,EAAAlsC,GAAAisC,EACAA,GAAAgB,EAGAP,IACAT,EAAA,EACAtB,EAAA,EACA1xC,EAAA,EACA6yC,EAAA,IAGArhD,EAAAspB,aAAA5W,EAAA4tB,eAAA/qB,IAKAmsC,EAAAnsC,GAAA+sC,EACAX,EAAApsC,GAAAgtC,IAEA/zC,GAAA8zC,GAAA9zC,KACAA,EAAA8zC,KAGAjB,GAAAkB,GAAAlB,KACAA,EAAAkB,GAGAP,EAAAtvC,EAAAmN,eAAAnN,EAAAqN,cAAAshC,EAAA7yC,EAEAxO,EAAAsvC,gBACAnzC,OAAAyM,KAAA84C,GAAAr4C,QAAA,SAAAkM,GACAmsC,EAAAnsC,GAAA/G,IAEArS,OAAAyM,KAAA+4C,GAAAt4C,QAAA,SAAAkM,GACAosC,EAAApsC,GAAA8rC,KAEAv7B,GAAA28B,EAAAT,EAAAjlB,EAAAngC,QAAA,GAEA0kD,GACAE,EAAA,EACAtB,EAAA,EACAnjB,EAAA1zB,QAAA,SAAAkM,GACAmtC,EAAAntC,MAGAmtC,EAAAntC,GAAA,IAGAmtC,EAAAntC,IApCAmsC,EAAAnsC,GAAAosC,EAAApsC,GAAAssC,EAAAtsC,GAAAksC,EAAAlsC,GAAA,EAnDAwnB,IAAAlb,OAAA,SAAAtM,GACA,OAAApN,EAAAnI,EAAAouC,WAAA74B,KAAA,OAAAvV,EAAAouC,WAAA74B,KAGAgF,EAAAxR,EADAC,KAAA,GACA,qBACAojB,EAAArjB,EAAAC,EAAA,iCAsFA0J,EAAAqN,gBACAmgC,EAAAlgD,EAAAkvC,kBAAAlvC,EAAAkvC,kBAAAnS,EAAAngC,OACA8V,EAAAutC,iBAAAC,IAGAxtC,EAAAmN,eACA0gC,EAAA,SAAAhrC,GACA,OAAA/G,EAAAqzC,EAAAtsC,IAGAmrC,EAAA,SAAAnrC,GACA,OAAAqsC,EAAAC,EAAAtsC,IAAAksC,EAAAlsC,KAEK7C,EAAAqN,eACLwgC,EAAA,SAAAhrC,GACA,OAAA/G,EAAAqzC,EAAAtsC,GAAA,IAGAmrC,EAAA,SAAAnrC,GACA,OAAAqsC,EAAAC,EAAAtsC,IAAAksC,EAAAlsC,MAGAgrC,EAAA,SAAAhrC,GACA,OAAAqsC,EAAAC,EAAAtsC,IAAAksC,EAAAlsC,IAGAmrC,EAAA,SAAAnrC,GACA,OAAA8rC,EAAAQ,EAAAtsC,KAIAirC,EAAA,SAAAjrC,EAAA7Y,GACA,OAAA6jD,EAAAhrC,EAAA7Y,GAAA,EAAAsD,EAAAwvC,wBAGAmR,EAAA,SAAAprC,EAAA7Y,GACA,OAAAgkD,EAAAnrC,EAAA7Y,GAAA,GAGA+jD,EAAA,SAAAlrC,EAAA7Y,GACA,OAAA6jD,EAAAhrC,EAAA7Y,IAGAkkD,EAAA,SAAArrC,EAAA7Y,GACA,OAAAgkD,EAAAnrC,EAAA7Y,GAAA,GAGAmkD,EAAA,SAAAtrC,EAAA7Y,GACA,OAAA6jD,EAAAhrC,EAAA7Y,GAAA,GAGAokD,EAAA,SAAAvrC,EAAA7Y,GACA,OAAA6jD,EAAAhrC,EAAA7Y,GAAA,EAAAsD,EAAAwvC,wBAGAuR,EAAA,SAAAxrC,EAAA7Y,GACA,OAAAgkD,EAAAnrC,EAAA7Y,GAAA,IAIAskD,EAAAtuC,EAAAvQ,OAAAoO,UAAA,IAAApN,EAAA0D,YAAAzG,KAAA28B,GAAAtsB,QAAAM,OAAA,KAAAjF,KAAA,iBAAAyJ,GACA,OAAA7C,EAAAu4B,cAAA9nC,EAAA0D,WAAA0O,KACK1U,MAAA,sBAAA0U,GACL,OAAA7C,EAAA4tB,eAAA/qB,GAAA,qBACK1U,MAAA,oBAAA8hB,GAAA,iBAAApN,GACLvV,EAAAmvC,oBACAnvC,EAAAmvC,oBAAAlyC,KAAAyV,EAAA6C,GAEA7C,EAAAhI,GAAAg1C,MAAAkD,QACAlwC,EAAA+J,IAAAskB,OACAruB,EAAA+J,IAAAqkB,KAAAvrB,KAEA7C,EAAA+J,IAAAylB,OAAA3sB,GACA7C,EAAA4U,eAAA/R,GAAA7C,EAAA+J,IAAAmjB,MAAArqB,GAAA7C,EAAA+J,IAAAujB,YAGKrd,GAAA,qBAAApN,GACLvV,EAAAovC,wBACApvC,EAAAovC,wBAAAnyC,KAAAyV,EAAA6C,IAEA7C,EAAAhI,GAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAA8D,mBAAA,IAEAyL,EAAA8L,YAAA9L,EAAA4U,eAAA/R,IACA7C,EAAA+J,IAAAmjB,MAAArqB,MAGKoN,GAAA,oBAAApN,GACLvV,EAAAqvC,uBACArvC,EAAAqvC,uBAAApyC,KAAAyV,EAAA6C,IAEA7C,EAAAhI,GAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAA8D,mBAAA,GACAyL,EAAA+J,IAAAujB,aAGAjvB,OAAA,QAAAtL,KAAA,SAAA8P,GACA,OAAApN,EAAAnI,EAAAouC,WAAA74B,IAAAvV,EAAAouC,WAAA74B,OACKlI,KAAA,SAAAkI,EAAA7Y,GACLolD,EAAApjD,KAAA6W,EAAA7Y,KACKmE,MAAA,yBAAAiL,KAAA,IAAA4G,EAAAmN,eAAAnN,EAAAqN,cAAAygC,GAAA,KAAA10C,KAAA,IAAA4G,EAAAmN,eAAAnN,EAAAqN,eAAA,IAAA4gC,GACLK,EAAAjwC,OAAA,QAAAjF,KAAA,QAAA3I,EAAA2D,iBAAAjG,MAAA,kBAAAiL,KAAA,IAAA4G,EAAAmN,eAAAnN,EAAAqN,cAAA0gC,GAAA,KAAA30C,KAAA,IAAA4G,EAAAmN,eAAAnN,EAAAqN,eAAA,IAAA6gC,GACAI,EAAAjwC,OAAA,QAAAjF,KAAA,QAAA3I,EAAA4D,gBAAAlG,MAAA,SAAA6R,EAAArR,OAAAR,MAAA,yBAAAiL,KAAA,KAAA4G,EAAAmN,eAAAnN,EAAAqN,cAAA8gC,GAAA,KAAA/0C,KAAA,KAAA4G,EAAAmN,eAAAnN,EAAAqN,eAAA,IAAAghC,GAAAj1C,KAAA,KAAA4G,EAAAmN,eAAAnN,EAAAqN,cAAA+gC,GAAA,KAAAh1C,KAAA,KAAA4G,EAAAmN,eAAAnN,EAAAqN,eAAA,IAAAghC,GAAAj1C,KAAA,eAAA9L,EAAAyvC,yBAEA0R,EAAAzuC,EAAAvQ,OAAAiL,OAAA,IAAAjK,EAAAyD,iBAAA,SAEA8L,EAAAqN,eAAAvR,EAAA,OAAA2yC,EAAAhgD,SACAggD,EAAAzuC,EAAAvQ,OAAAuO,OAAA,QAAAvN,EAAA0D,YAAAiF,KAAA,QAAA3I,EAAAyD,kBAAAmK,OAAA,SAGArL,EAAAgN,EAAAvQ,OAAAoO,UAAA,QAAAnQ,KAAA28B,GAAAt3B,KAAA,SAAA8P,GACA,OAAApN,EAAAnI,EAAAouC,WAAA74B,IAAAvV,EAAAouC,WAAA74B,OAEAlI,KAAA,SAAAkI,EAAA7Y,GACAolD,EAAApjD,KAAA6W,EAAA7Y,MAEA6d,EAAA7U,EAAAnE,aAAAmE,GAAAoG,KAAA,IAAA00C,GAAA10C,KAAA,IAAA60C,GACAM,EAAAvuC,EAAAvQ,OAAAoO,UAAA,QAAApN,EAAA2D,iBAAA1G,KAAA28B,IACAxiB,EAAA0mC,EAAA1/C,aAAA0/C,GAAAn1C,KAAA,iBAAAyJ,GACA,OAAAmsC,EAAAnsC,KACKzJ,KAAA,kBAAAyJ,GACL,OAAAosC,EAAApsC,KACKzJ,KAAA,IAAA20C,GAAA30C,KAAA,IAAA80C,GACLM,EAAAxuC,EAAAvQ,OAAAoO,UAAA,QAAApN,EAAA4D,gBAAA3G,KAAA28B,IACAxiB,EAAA2mC,EAAA3/C,aAAA2/C,GAAArgD,MAAA,SAAA6R,EAAAgM,WAAA,SAAAnJ,GACA,OAAA7C,EAAAgM,WAAAhM,EAAAkK,MAAArH,GAAAuF,OAAA,GAAAxe,QACKoW,EAAArR,OAAAyK,KAAA,KAAA+0C,GAAA/0C,KAAA,KAAAi1C,GAAAj1C,KAAA,KAAAg1C,GAAAh1C,KAAA,KAAAi1C,GAELI,IACA5mC,EAAA4mC,EAAA5/C,aAAA4/C,GAAAr1C,KAAA,SAAA4G,EAAAqS,kBAAA,IAAAjZ,KAAA,QAAA0C,GAAA0xC,EAAA,OAIAxtC,EAAAvQ,OAAAoO,UAAA,IAAApN,EAAA0D,YAAAwT,QAAAlX,EAAA6D,iBAAA,SAAAuO,GACA,OAAA7C,EAAA4U,eAAA/R,KAGA7C,EAAAytC,sBAAA3xC,GACAkE,EAAA0tC,uBAAAiB,GACA3uC,EAAAutC,iBAAAC,GAEAxtC,EAAAyP,cACAzP,EAAA0P,eACA1P,EAAAyQ,gBAEAzQ,EAAA2Z,aAAAD,EAAAtQ,GACApJ,EAAAotC,mBAAA,GAGAh3C,EAAA0a,WAAA,WACA9kB,KACAiG,OADAjG,KACAiU,KAAA5B,OAAA,KAAAjF,KAAA,YADApN,KACAqf,UAAAjS,KAAA,QAAA3I,EAAAlB,UAGA6G,EAAAwhB,aAAA,SAAA5O,GACA,IAAAhJ,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEA0S,EAAA/N,OAAA9D,MAAA,aAAA6R,EAAA0S,aAAA,oBACA1S,EAAAqsB,WAAArsB,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAlB,SAAAsO,UAAA,IAAApN,EAAAwB,QAAAvE,KAAAJ,EAAAiC,SACAyQ,EAAAqsB,WAAAtuB,QAAAM,OAAA,KAAAA,OAAA,QAAAlQ,MAAA,kBACA6R,EAAAqsB,WAAAjzB,KAAA,QAAA4G,EAAAq5B,YAAA54B,KAAAT,IACAA,EAAAqsB,WAAAnuB,OAAArP,aAAAma,YAAA7a,MAAA,aAAAgQ,UAGA/H,EAAAgjB,aAAA,SAAAvR,GACA,IAAA7H,EAAAhU,KACAuD,EAAAyQ,EAAAqsB,WAAAxuB,UAAA,QAAAlD,KAAA,WAIA,IAAAw1C,EAAAnwC,EAAAhI,GAAA0C,OAAA1O,KAAAiwB,YAAA4vB,QACA7rC,EAAAhI,GAAA0C,OAAA1O,MAAA6/C,MAAAsE,KAEA54C,EAAAyI,EAAAgtB,QAAAvsB,KAAAT,GACAtI,EAAAsI,EAAAowC,QAAA3vC,KAAAT,GACAvF,EAAAuF,EAAAitB,YAAAxsB,KAAAT,GACAxF,EAAAwF,EAAAqwC,aAAA5vC,KAAAT,GACA,QAAA6H,EAAAtY,EAAAV,aAAAU,GAAA6J,KAAA,IAAA7B,GAAA6B,KAAA,IAAA1B,GAAA0B,KAAA,QAAAqB,GAAArB,KAAA,SAAAoB,GAAArM,MAAA,wBAAA6H,GACA,OAAAf,EAAAe,EAAAqkB,SAAArkB,EAAAqkB,QAAA,OAIAjkB,EAAA42B,QAAA,SAAAh3B,GACA,IAAAgK,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAstB,EAAA,MAAA5kB,EAAA3G,KAAA2Q,EAAAtI,EAAAsI,EAAAc,GAQA,MANA,MAAA9K,EAAA3G,MAAA,OAAA2G,EAAA3G,KACA/B,EAAAiT,cAAA,UAAAvK,EAAA4kB,EAAA5kB,EAAAuD,OAAA,EAEAjM,EAAAiT,aAAA,YAAAvK,EAAAgK,EAAAzI,EAAAyI,EAAA0B,eAAA1B,EAAA2B,UAAA3L,EAAAuD,OAAAvD,EAAAuD,OAAA,GAMAnD,EAAAg6C,QAAA,SAAAp6C,GACA,IAAAgK,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAstB,EAAA,MAAA5kB,EAAA3G,KAAA2Q,EAAAtI,EAAAsI,EAAAc,GAQA,MANA,MAAA9K,EAAA3G,MAAA,OAAA2G,EAAA3G,KACA/B,EAAAiT,aAAA,UAAAvK,EAAA4kB,EAAA5kB,EAAAwS,KAAA,EAEAlb,EAAAiT,cAAA,UAAAvK,EAAAgK,EAAAzI,EAAAyI,EAAA0B,eAAA1B,EAAA2B,UAAA3L,EAAAuD,OAAAvD,EAAAuD,OAAA,GAMAnD,EAAA62B,YAAA,SAAAj3B,GACA,IAGAwS,EAHAxI,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAiM,EAAAyG,EAAAgtB,QAAAh3B,GAEA4kB,EAAA,MAAA5kB,EAAA3G,KAAA2Q,EAAAtI,EAAAsI,EAAAc,GAQA,OALA0H,EADA,MAAAxS,EAAA3G,MAAA,OAAA2G,EAAA3G,KACA/B,EAAAiT,cAAA,QAAAvK,EAAA4kB,EAAA5kB,EAAAwS,KAAAxI,EAAArI,MAEArK,EAAAiT,aAAAP,EAAArI,MAAA,QAAA3B,EAAAgK,EAAAzI,EAAAyI,EAAA0B,eAAA1B,EAAA2B,UAAA3L,EAAAwS,KAAAxS,EAAAwS,KAAAxI,EAAArI,OAGA4B,EAAA,EAAAiP,EAAAjP,GAGAnD,EAAAi6C,aAAA,SAAAr6C,GACA,IAGAwS,EAHAxI,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAiM,EAAAvN,KAAAokD,QAAAp6C,GAEA4kB,EAAA,MAAA5kB,EAAA3G,KAAA2Q,EAAAtI,EAAAsI,EAAAc,GAQA,OALA0H,EADA,MAAAxS,EAAA3G,MAAA,OAAA2G,EAAA3G,KACA/B,EAAAiT,aAAAP,EAAApI,OAAA,UAAA5B,EAAA4kB,EAAA5kB,EAAAuD,OAAAyG,EAAApI,OAEAtK,EAAAiT,cAAA,QAAAvK,EAAAgK,EAAAzI,EAAAyI,EAAA0B,eAAA1B,EAAA2B,UAAA3L,EAAAwS,KAAAxS,EAAAwS,KAAAxI,EAAApI,QAGA2B,EAAA,EAAAiP,EAAAjP,GAGAnD,EAAA02B,YAAA,SAAA92B,GACA,OAAAA,EAAA3G,MAAA,MAAA2G,EAAA3G,MAGA+G,EAAAk6C,SAAA,SAAA74C,EAAA4E,EAAAk0C,GACA,OAAAA,EAAAvkD,KAAAgM,GAAAyK,KAAAxK,QAAAjM,KAAAgM,GAAAC,MAAAC,UAAAC,MAAA,CAAAV,EAAA4E,KAGAjG,EAAAo6C,KAAA,SAAA/4C,EAAA4E,EAAA/C,EAAAm3C,GACA,IAGArmD,EAFA6N,EADAjM,KACAskD,SAAA74C,EAAA4E,EADArQ,KACA0V,gBACAgvC,EAAAp3C,EAAArB,EAAAqB,UAAArB,EAsBA,IAAA7N,KAxBA4B,KAMAoV,iBACAqvC,KAAA,WACA,UAGAx4C,EAAA,SAAAjC,EAAA26C,GACA,IAAAz7C,EAAAw7C,EAAA16C,GAAAy6C,EAAAz6C,GACA,OAAA26C,EAAAz7C,EAAAS,KAAAC,KAAAV,KAGA+C,EAAA,SAAAjC,EAAA26C,GACA,IAAAz7C,EAAAw7C,EAAA16C,GAEA,OAAA26C,EAAAz7C,EAAAS,KAAAC,KAAAV,IAKAw7C,EACAz4C,EAAA7N,GAAAsmD,EAAAtmD,GAqBA,OAlBA6N,EAAA+e,UAAA,WACA,OAAA05B,EAAAp3C,UA7BAtN,KAiCAoV,kBACAnJ,EAAAqB,OAAA,SAAAA,GACA,OAAArP,UAAAC,QAKAwmD,EAAAp3C,UAEArB,GALA,EADAqB,EAAAtN,KAAAgrB,aACA,GAAA1d,EAAA,QASArB,GAGA7B,EAAAw6C,KAAA,SAAAn5C,EAAA4E,EAAA/C,GACA,IAAArB,EAAAjM,KAAAskD,SAAA74C,EAAA4E,EAAArQ,KAAAwW,iBAMA,OAJAlJ,GACArB,EAAAqB,UAGArB,GAGA7B,EAAAg6B,UAAA,SAAAvtB,GACA,aAAA7W,KAAAqD,KAAAuT,MAAAC,GAAA7W,KAAA8U,GAAA9U,KAAA0L,GAGAtB,EAAAy6C,aAAA,SAAAhuC,GACA,aAAA7W,KAAAqD,KAAAuT,MAAAC,GAAA7W,KAAA8jB,MAAA9jB,KAAA6jB,MAGAzZ,EAAAsZ,aAAA,WACA,IAAA1P,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAwjD,GAAA9wC,EAAAzI,EAEAyI,EAAA+wC,KAAAzjD,EAAAiT,aAAA,IACAP,EAAAgxC,KAAA1jD,EAAAiT,aAAAP,EAAApI,OAAAoI,EAAArI,MACAqI,EAAAsnC,KAAAh6C,EAAAiT,aAAA,EAAAP,EAAApI,OACAoI,EAAAunC,KAAAj6C,EAAAiT,aAAAP,EAAArI,MAAA,EACAqI,EAAAixC,QAAAjxC,EAAA+wC,KACA/wC,EAAAkxC,QAAAlxC,EAAAgxC,KACAhxC,EAAAmxC,QAAA7jD,EAAAiT,aAAA,EAAAP,EAAA8T,QACA9T,EAAAoxC,QAAA9jD,EAAAiT,aAAAP,EAAA6T,OAAA,EAEA7T,EAAAzI,EAAAyI,EAAAwwC,KAAAxwC,EAAA+wC,KAAA/wC,EAAAgxC,KAAAF,OAAAl2C,EAAAoF,EAAAzI,EAAAyf,YAAA,WACA,OAAAhX,EAAAoC,MAAAxJ,eAEAoH,EAAAtI,EAAAsI,EAAA4wC,KAAA5wC,EAAAsnC,KAAAtnC,EAAAunC,KAAAuJ,EAAAxjD,EAAAgwC,eAAAt9B,EAAAtI,EAAA4B,UACA0G,EAAAc,GAAAd,EAAA4wC,KAAA5wC,EAAAsnC,KAAAtnC,EAAAunC,KAAAuJ,EAAAxjD,EAAAqwC,gBAAA39B,EAAAc,GAAAxH,UACA0G,EAAA4P,KAAA5P,EAAAwwC,KAAAxwC,EAAA+wC,KAAA/wC,EAAAgxC,KAAAhxC,EAAA+P,WAAA,SAAA/Z,GACA,OAAAA,EAAA,IAAAgK,EAAAqC,SAAAzJ,eAEAoH,EAAA6P,KAAA7P,EAAA4wC,KAAA5wC,EAAAmxC,QAAAnxC,EAAAoxC,QAAAN,EAAAxjD,EAAAgwC,eAAAt9B,EAAA6P,KAAAvW,UACA0G,EAAA8P,MAAA9P,EAAA4wC,KAAA5wC,EAAAmxC,QAAAnxC,EAAAoxC,QAAAN,EAAAxjD,EAAAqwC,gBAAA39B,EAAA8P,MAAAxW,UAEA0G,EAAAyH,gBAAAzH,EAAA3Q,KAAA0T,qBACA/C,EAAA0H,gBAAA1H,EAAA3Q,KAAAkU,qBACAvD,EAAAmH,gBAAAnH,EAAA3Q,KAAAoU,qBACAzD,EAAAsH,iBAAAtH,EAAA3Q,KAAAuU,sBACA5D,EAAAoC,MAAApC,EAAA3Q,KAAA4R,SAAAjB,EAAAzI,EAAAyI,EAAAwH,QAAAxH,EAAAyH,gBAAAzH,EAAA0H,gBAAApa,EAAA0vC,mBACAh9B,EAAAqC,SAAArC,EAAA3Q,KAAA4R,SAAAjB,EAAA4P,KAAA5P,EAAAkN,WAAAlN,EAAAyH,gBAAAzH,EAAA0H,gBAAApa,EAAA0vC,mBACAh9B,EAAA2D,MAAA3D,EAAA3Q,KAAAiT,SAAAtC,EAAAtI,EAAAsI,EAAAiH,QAAA3Z,EAAA4Z,mBAAAlH,EAAAmH,gBAAA7Z,EAAA8vC,mBACAp9B,EAAA8D,OAAA9D,EAAA3Q,KAAAiT,SAAAtC,EAAAc,GAAAd,EAAAoH,SAAA9Z,EAAA+Z,oBAAArH,EAAAsH,iBAAAha,EAAAmwC,oBAEAqT,IACA9wC,EAAAlO,OACAkO,EAAAlO,MAAAmG,MAAA+H,EAAA4P,MAGAtiB,EAAA0iB,cACAhQ,EAAApQ,KAAAqI,MAAA+H,EAAAzI,IAKAyI,EAAA8xB,WACA9xB,EAAA8xB,aAIA17B,EAAAi7C,YAAA,SAAAtnD,EAAAiM,EAAAhM,GACA,IAAAgW,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA2oB,GAAA3oB,EAAAiT,aAAAP,EAAA0Y,QAAA1Y,EAAA2Y,SAAAlY,KAAAT,GACAkW,GAAA5oB,EAAAiT,aAAAP,EAAA2Y,QAAA3Y,EAAA0Y,SAAAjY,KAAAT,GACAsxC,EAAAtxC,EAAAuxC,aAAA9wC,KAAAT,GACA1S,EAAA4uC,gBAAA3xC,KAAAyV,EAAA+J,IAAA/T,EAAAjM,EAAAqV,QAEAY,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAe,gBAAAwO,EAAAmvB,wBAAAn5B,EAAA6M,KAAAhF,UAAA,IAAApN,EAAAc,eAAA,IAAAvH,GAAA0D,KAAA,CAAAsI,IAAA+H,QAAAM,OAAA,UAAAjF,KAAA,mBACA,OAAA4G,EAAAu4B,cAAA9nC,EAAAc,eAAAvH,KACKoP,KAAA,KAAA6c,GAAA7c,KAAA,KAAA8c,GAAA9c,KAAA,oBACL,OAAA4G,EAAArR,MAAAqH,KACKoD,KAAA,aAAApD,GACL,WAAAgK,EAAAuxC,aAAAv7C,KACKnH,aAAAma,SAAA,KAAA5P,KAAA,IAAAk4C,IAGLl7C,EAAAo7C,cAAA,SAAAznD,EAAAiM,EAAAhM,GACAgC,KACAsB,OAAA6uC,kBAAA5xC,KADAyB,KACA+d,IAAA/T,EAAAjM,EAAAqV,QADApT,KAGAiU,KAAAvF,OAAA,IAAAjK,EAAAe,gBAHAxF,KAGAmjC,wBAAAn5B,EAAA6M,KAAAhF,UAAA,IAAApN,EAAAc,eAAA,IAAAvH,GAAA6E,aAAAma,SAAA,KAAA5P,KAAA,OAAA+E,UAGA/H,EAAAqzC,YAAA,SAAAxa,EAAAllC,EAAAiM,EAAAhM,GACAilC,EAAAjjC,KAAAqlD,YAAAtnD,EAAAiM,EAAAhM,GAAAgC,KAAAwlD,cAAAznD,EAAAiM,EAAAhM,IAGAoM,EAAAq7C,WAAA,SAAA1nD,EAAAiM,GACA,IAAAgK,EAAAhU,KACAgU,EAAA1S,OAAA4uC,gBAAA3xC,KAAAyV,EAAAhK,EAAAjM,EAAAqV,QAEAY,EAAA1S,OAAAiuC,sBACAxxC,EAAA8E,aAAAma,SAAA,KAAA7a,MAAA,kBACA,OAAA6R,EAAAhI,GAAA05C,IAAA1xC,EAAArR,MAAAqH,IAAA27C,SAAA,QAKAv7C,EAAAw7C,aAAA,SAAA7nD,EAAAiM,GACA,IAAAgK,EAAAhU,KACAgU,EAAA1S,OAAA6uC,kBAAA5xC,KAAAyV,EAAAhK,EAAAjM,EAAAqV,QAEAY,EAAA1S,OAAAiuC,sBACAxxC,EAAA8E,aAAAma,SAAA,KAAA7a,MAAA,kBACA,OAAA6R,EAAArR,MAAAqH,MAKAI,EAAAszC,WAAA,SAAAza,EAAAllC,EAAAiM,EAAAhM,GACAilC,EAAAjjC,KAAAylD,WAAA1nD,EAAAiM,EAAAhM,GAAAgC,KAAA4lD,aAAA7nD,EAAAiM,EAAAhM,IAGAoM,EAAAq5B,UAAA,SAAAQ,EAAAj6B,GACA,IACAw5B,EAcA,MAZA,WAAAS,EAAA4hB,SAGAriB,EANAxjC,KAIA0gD,WAAA12C,GAEA,aANAhK,KASAy9C,YAEK,SAAAxZ,EAAA4hB,WACLriB,EAZAxjC,KAYA09C,YAGAla,GAGAp5B,EAAAwhC,YAAA,SAAA3H,EAAAj6B,EAAAhM,GACA,IAAAgW,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OACA8E,EAAA4F,EAAA0C,OAAAu1B,GACAJ,EAAAz9B,EAAAuV,QAAAlX,EAAAiE,UACA86B,EAAAxvB,EAAAyvB,UAAAQ,EAAAj6B,GAAAyK,KAAAT,GAEA1S,EAAAiiC,wBAAAjiC,EAAAwiC,4BAAA95B,KACA1I,EAAA0uC,yBACAh8B,EAAAC,KAAApC,UAAA,IAAApN,EAAA4B,QAAA/E,EAAAqiC,uBAAA3vB,EAAAmvB,wBAAAn5B,EAAA6M,IAAA,KAAAhF,UAAA,IAAApN,EAAA2B,OAAAuI,KAAA,SAAA3E,EAAAhM,GACA,IAAAoI,EAAA4F,EAAA0C,OAAA1O,MAEAoG,EAAAuV,QAAAlX,EAAAiE,WACA86B,GAAA,EAAAp9B,EAAAuV,QAAAlX,EAAAiE,UAAA,GAAAsB,EAAAhM,KAKAoI,EAAAuV,QAAAlX,EAAAiE,UAAAm7B,GACAL,GAAAK,EAAAz9B,EAAA4D,EAAAhM,KAIAoM,EAAA8X,QAAA,WACAliB,KACAiU,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAI,YAGAuF,EAAAme,oBAAA,SAAAxS,GACA,IAAA/B,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAGAwsC,EAAA95B,EAAA85B,cAAAr5B,KAAAT,GACAk5B,EAAAl5B,EAAAk5B,UAAAz4B,KAAAT,GACAw2B,EAAAx2B,EAAAw2B,WAAA/1B,KAAAT,GACAA,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAI,WAAAgN,UAAA,IAAApN,EAAAG,UAAAlD,KAAAqU,GAAA3I,KAAA,iBAAApD,GACA,OAAA8jC,EAAA9jC,GAAAwgC,EAAAxgC,KAEA+H,QAAAM,OAAA,KAAAjF,KAAA,QAAA0gC,GAAA3rC,MAAA,yBAEAkQ,OAAA,KAAAjF,KAAA,QAAA8/B,GAAA/qC,MAAA,kBAAA6H,GACA,OAAA1I,EAAAwiC,4BAAA95B,GAAA,kBAIAI,EAAAyhB,UAAA,SAAAlC,GACA,IAAA3V,EAAAhU,KACA8lD,EAAA9xC,EAAA8xC,QAAArxC,KAAAT,GACAi5B,EAAAj5B,EAAAi5B,SAAAx4B,KAAAT,GACAka,EAAAla,EAAAka,eAAAzZ,KAAAT,GACArR,EAAA,SAAAqH,GACA,OAAAgK,EAAArR,MAAAqH,EAAA6M,KAGA7C,EAAAusB,QAAAvsB,EAAAC,KAAApC,UAAA,IAAApN,EAAA8B,MAAAsL,UAAA,IAAApN,EAAAT,KAAAtC,KAAAokD,GACA9xC,EAAAusB,QAAAxuB,QAAAM,OAAA,QAAAjF,KAAA,QAAA6/B,GAAA9qC,MAAA,SAAAQ,GAAAR,MAAA,OAAAQ,GACAqR,EAAAusB,QAAAp+B,MAAA,UAAA+rB,GACAla,EAAAusB,QAAAruB,OAAArP,aAAAma,SAAA2M,GAAAxX,UAGA/H,EAAA2iB,UAAA,SAAAxD,EAAA1N,GACA,QAAAA,EAAA7b,KAAAugC,QAAA19B,WAAA8G,KAAAo8C,SAAA/1C,YAAAhQ,KAAAugC,SAAAnzB,KAAA,IAAAmc,GAAApnB,MAAA,SAAAnC,KAAA2C,OAAAR,MAAA,OAAAnC,KAAA2C,OAAAR,MAAA,eAGAiI,EAAA47C,QAAA,SAAA3iD,EAAA4iD,GACA,IACA3kD,EADAtB,KACAsB,OACAmN,EAAA,kBAAAnN,EAAAkxC,UAAAlxC,EAAAkxC,UAAAyT,EAAA5iD,EAAA6P,eAAA5R,EAAAmxC,gBAAAwT,EAAA,EACA,OAAA3kD,EAAAoxC,eAAAjkC,EAAAnN,EAAAoxC,cAAApxC,EAAAoxC,cAAAjkC,GAGArE,EAAA87C,QAAA,SAAAloD,EAAA6Y,GAEA,OAAAA,EADA7W,KACAiU,KAAApC,UAAA,IAAApN,EAAA8B,KADAvG,KACAmjC,wBAAAtsB,IADA7W,KACAiU,MAAApC,UAAA,IAAApN,EAAAT,KAAAiF,EAAAjL,GAAA,IAAAA,EAAA,MAGAoM,EAAAm2C,WAAA,SAAAviD,EAAA6Y,EAAA0sC,GAGAA,GAFAvjD,KAGAygD,eAHAzgD,KAMAkmD,QAAAloD,EAAA6Y,GAAA8E,QAAAlX,EAAAgE,UAAA,IAGA2B,EAAAq2C,aAAA,SAAAziD,GACAgC,KACAkmD,QAAAloD,GAAA2d,QAAAlX,EAAAgE,UAAA,IAGA2B,EAAAkhB,gBAAA,SAAAhB,EAAA67B,GACA,IACA7kD,EADAtB,KACAsB,OACA8kD,EAFApmD,KAEAqmD,qBAAA/7B,EAAA67B,GACA,gBAAAn8C,EAAAhM,GAEA,IAAA8+B,EAAAspB,EAAAp8C,EAAAhM,GAEAsoD,EAAAhlD,EAAAiT,aAAA,IACAgyC,EAAAjlD,EAAAiT,aAAA,IAEA,MADA,KAAAuoB,EAAA,GAAAwpB,GAAA,IAAAxpB,EAAA,GAAAypB,GAAA,KAAAzpB,EAAA,GAAAwpB,GAAA,IAAAxpB,EAAA,GAAAypB,GAAA,KAAAzpB,EAAA,GAAAwpB,GAAA,IAAAxpB,EAAA,GAAAypB,GAAA,KAAAzpB,EAAA,GAAAwpB,GAAA,IAAAxpB,EAAA,GAAAypB,GAAA,OAKAn8C,EAAAi8C,qBAAA,SAAA/7B,EAAA67B,GACA,IAAAnyC,EAAAhU,KACAqD,EAAA8iD,EAAAnyC,EAAAqC,SAAArC,EAAAoC,MACA6vC,EAAA37B,EAAAk8B,QAAA,EACAC,EAAAzyC,EAAAgyC,QAAA3iD,EAAA4iD,GACAS,EAAA1yC,EAAA2yC,UAAAF,EAAAR,EAAA37B,IAAA67B,GACAS,EAAA5yC,EAAA6yC,YAAAV,GACAW,EAAA9yC,EAAA+yC,eAAA/yC,EAAAuW,UAAAD,IAAA67B,GACAa,EAAAP,GAAAzyC,EAAA1S,OAAAsxC,UAAA,GACAhkB,EAAAu3B,EAAAnyC,EAAA6wC,aAAA7wC,EAAAowB,UACA,gBAAAp6B,EAAAhM,GACA,IAAAipD,EAAAr4B,EAAArwB,KAAAyV,EAAAhK,EAAA6M,GAAA+X,CAAA,GACA61B,EAAAqC,EAAA98C,EAAAhM,IAAAipD,EAEAC,EAAAR,EAAA18C,GACAm9C,EAAAP,EAAA58C,GASA,OAPAgK,EAAA1S,OAAAiT,eACA,EAAAvK,EAAApM,OAAAupD,EAAAF,GAAAj9C,EAAApM,MAAA,GAAAqpD,EAAAE,KACAA,EAAAF,GAKA,EAAAC,EAAAF,EAAAvC,GAAA,CAAAyC,EAAAF,EAAAG,GAAAF,EAAAxC,IAAA,CAAAyC,EAAAT,EAAAO,EAAAG,GAAAF,EAAAxC,IAAA,CAAAyC,EAAAT,EAAAO,EAAAvC,MAIAr6C,EAAAgwC,YAAA,SAAAnW,GACA,IAAAC,EAAAlkC,KAAAgM,GAAAk4B,MAAAD,GACAh5B,EAAAg5B,EAAA/4B,wBACAk8C,EAAAnjB,EAAA74B,YAAAC,QAAA,GACAg8C,EAAApjB,EAAA74B,YAAAC,QAAA,GACAE,EAAA5B,KAAA8B,IAAA27C,EAAA77C,EAAA87C,EAAA97C,GACAG,EAAA/B,KAAA8B,IAAA27C,EAAA17C,EAAA27C,EAAA37C,GAKA47C,EAAA/7C,EAJAN,EAAAU,MAEA,EAGAoxC,EAAArxC,EAJAT,EAAAW,OACA,EAIA27C,EAAA77C,EAJA,EAKA,OAJAH,EADA,EAKA24B,EAAA,IAAAA,EAAA,GAAAojB,GAAAC,EAAArjB,EAAA,IAAAA,EAAA,GAAA6Y,GAGA3yC,EAAAggB,gBAAA,SAAAo9B,GACA,IAIAhoB,EACAwW,EAJA10C,EADAtB,KACAsB,OACA+hC,EAAA,GACArlC,EAAA,EAsBA,OAzBAgC,KAMA+a,oBANA/a,KAMA0B,KAAAqU,QAAAoN,OAAAqkC,EANAxnD,OAMA2K,QAAA,SAAAX,GACA,IAAAw1B,EAAA,EAAiBA,EAAAl+B,EAAA6gC,YAAAjkC,OAA+BshC,IAChD,KAAAl+B,EAAA6gC,YAAA3C,GAAA7mB,QAAA3O,EAAA6M,IAAA,GAIA,IAAAm/B,EAAA,EAAmBA,EAAA10C,EAAA6gC,YAAA3C,GAAAthC,OAAkC83C,IACrD,GAAA10C,EAAA6gC,YAAA3C,GAAAwW,KAAA3S,EAAA,CACAA,EAAAr5B,EAAA6M,IAAAwsB,EAAA/hC,EAAA6gC,YAAA3C,GAAAwW,IACA,MAKAxsC,EAAA65B,EAAAr5B,EAAA6M,OACAwsB,EAAAr5B,EAAA6M,IAAA7Y,OAGAqlC,EAAAmjB,QAAAxoD,EAAA,EACAqlC,GAGAj5B,EAAAu8C,UAAA,SAAAlC,EAAAgD,EAAApkB,EAAA8iB,GACA,IACAl6C,EAAAk6C,EADAnmD,KACA4jB,KADA5jB,KACAuL,EACA,gBAAAvB,GACA,IAAAyF,EAAAzF,EAAA6M,MAAAwsB,IAAAr5B,EAAA6M,IAAA,EACA,OAAA7M,EAAAuB,GAAA,IAAAvB,EAAAuB,EAAAU,EAAAjC,EAAAuB,GAAAk5C,GAAAgD,EAAA,EAAAh4C,GAAA,IAIArF,EAAAy8C,UAAA,SAAAV,GACA,IAAAnyC,EAAAhU,KACA,gBAAAgK,GAEA,OADAm8C,EAAAnyC,EAAA6wC,aAAA76C,EAAA6M,IAAA7C,EAAAowB,UAAAp6B,EAAA6M,KACA7M,EAAApM,SAIAwM,EAAA28C,eAAA,SAAAS,EAAAnkB,EAAA8iB,GACA,IAAAnyC,EAAAhU,KACA+V,EAAA/B,EAAAilC,aAAAjlC,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,QAAAoN,OAAAqkC,EAAAxzC,KACAqqB,EAAAtoB,EAAAxG,IAAA,SAAAge,GACA,OAAAA,EAAA1W,KAEA,gBAAA7M,EAAAhM,GACA,IAAAiO,EAAAk6C,EAAAnyC,EAAA6wC,aAAA76C,EAAA6M,IAAA7C,EAAAowB,UAAAp6B,EAAA6M,IACAowC,EAAAh7C,EAAA,GACAw4C,EAAAwC,EA0BA,OAzBAlxC,EAAApL,QAAA,SAAA4iB,GACA,IAAAnR,EAAApI,EAAA0sC,WAAA12C,GAAAgK,EAAAwmC,oBAAAjtB,EAAAnR,QAAAmR,EAAAnR,OAEAmR,EAAA1W,KAAA7M,EAAA6M,IAAAwsB,EAAA9V,EAAA1W,MAAAwsB,EAAAr5B,EAAA6M,KAIAwnB,EAAA1lB,QAAA4U,EAAA1W,IAAAwnB,EAAA1lB,QAAA3O,EAAA6M,MAEA,qBAAAuF,EAAApe,KAAAoe,EAAApe,GAAAuN,KAAAvB,EAAAuB,IAGAvN,GAAA,EACAoe,EAAAzR,QAAA,SAAAzB,EAAAs2B,GACAt2B,EAAAqC,IAAAvB,EAAAuB,IACAvN,EAAAwhC,MAKAxhC,KAAAoe,KAAApe,GAAAJ,MAAAoM,EAAApM,OAAA,IACA6mD,GAAAx4C,EAAAmQ,EAAApe,GAAAJ,OAAAqpD,MAIAxC,IAIAr6C,EAAAu2C,cAAA,SAAA1c,EAAAj6B,GACA,IAEAwzC,EAFAxpC,EAAAhU,KACAoG,EAAA4N,EAAAhI,GAAA0C,OAAAu1B,GAWA,OARAjwB,EAAA4U,eAAA5e,EAAA6M,IAEK,WAAAotB,EAAA4hB,SACLrI,EAAAxpC,EAAA0sC,WAAA12C,GAAAgK,EAAA0zC,aAAAzjB,EAAAjwB,EAAAowB,UAAAp6B,EAAA6M,GAAA7C,CAAAhK,EAAApM,QAAAoW,EAAA2zC,eAAA1jB,EAAA,IAAAjwB,EAAAuxC,aAAAv7C,IACK,SAAAi6B,EAAA4hB,WACLrI,GAAAp3C,EAAAuV,QAAAlX,EAAAT,MAAAgQ,EAAAomC,YAAAnW,IAJAuZ,GAAA,EAOAA,GAGApzC,EAAAw9C,eAAA,SAAA59C,GACA,IAAAgK,EAAAhU,KACA6nD,EAAA7zC,EAAA8zC,oBAAA9zC,EAAA1S,OAAAyxC,2BAAA/+B,EAAA1S,OAAAyxC,0BAAA,WACA,OAAA/+B,EAAA+zC,aAAA/9C,GAAA69C,EAAA7zC,EAAA0sC,WAAA12C,GAAAgK,EAAA1S,OAAAixC,eAAA,UAGAnoC,EAAA+X,SAAA,WACAniB,KACAiU,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAE,aAGAyF,EAAAoe,qBAAA,SAAAzS,GACA,IAGAiyC,EAHAh0C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAGAusC,EAAA75B,EAAA65B,eAAAp5B,KAAAT,GACA84B,EAAA94B,EAAA84B,WAAAr4B,KAAAT,GACAo5B,EAAAp5B,EAAAo5B,WAAA34B,KAAAT,GACAg5B,EAAAh5B,EAAAg5B,aAAAv4B,KAAAT,GACAw2B,EAAAx2B,EAAAw2B,WAAA/1B,KAAAT,IAIAg0C,EAHAh0C,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAE,YAAAkN,UAAA,IAAApN,EAAAC,WAAAhD,KAAAqU,GAAA3I,KAAA,iBAAApD,GACA,OAAA6jC,EAAA7jC,GAAAwgC,EAAAxgC,KAEA+H,QAAAM,OAAA,KAAAjF,KAAA,QAAAygC,GAAA1rC,MAAA,aAAAA,MAAA,0BAEAkQ,OAAA,KAAAjF,KAAA,QAAA0/B,GAEAkb,EAAA31C,OAAA,KAAAjF,KAAA,QAAAggC,GAEA4a,EAAA31C,OAAA,KAAAjF,KAAA,iBAAApD,GACA,OAAAgK,EAAAu4B,cAAA9nC,EAAAe,gBAAAwE,EAAA6M,MAEAmxC,EAAA31C,OAAA,KAAAjF,KAAA,QAAA4/B,GAAA7qC,MAAA,kBAAA6H,GACA,OAAA1I,EAAAwiC,4BAAA95B,GAAA,iBAGA+L,EAAApL,QAAA,SAAA4iB,GACAvZ,EAAAC,KAAApC,UAAA,IAAApN,EAAAe,gBAAAwO,EAAAmvB,wBAAA5V,EAAA1W,KAAAhF,UAAA,IAAApN,EAAAc,gBAAAoJ,KAAA,SAAA3E,GACAA,EAAApM,MAAA2vB,EAAAnR,OAAApS,EAAAyF,OAAA7R,WAMAwM,EAAA0hB,WAAA,SAAAnC,GACA,IAAA3V,EAAAhU,KACAgU,EAAAwsB,SAAAxsB,EAAAC,KAAApC,UAAA,IAAApN,EAAA6B,OAAAuL,UAAA,IAAApN,EAAAX,MAAApC,KAAAsS,EAAAi0C,SAAAxzC,KAAAT,IACAA,EAAAwsB,SAAAzuB,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAA64B,UAAAp4B,KAAAT,IAAA7R,MAAA,SAAA6R,EAAArR,OACAqR,EAAAwsB,SAAAr+B,MAAA,UAAA6R,EAAAka,eAAAzZ,KAAAT,IAAA7R,MAAA,2BAAA6H,GACA,OAAAgK,EAAA0sC,WAAA12C,GAAA,kBACKoD,KAAA,kBACL4G,EAAAwsB,SAAAtuB,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,UAGA/H,EAAA4iB,WAAA,SAAAxD,EAAA3N,GACA,QAAAA,EAAA7b,KAAAwgC,SAAA39B,WAAA8G,KAAAo8C,SAAA/1C,YAAAhQ,KAAAwgC,UAAApzB,KAAA,IAAAoc,GAAArnB,MAAA,SAAAnC,KAAA2C,OAAAR,MAAA,eAGAiI,EAAAmhB,iBAAA,SAAAf,EAAA27B,GACA,IAAAnyC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAwC,EAAAkQ,EAAAhI,GAAA8O,IAAAhX,OACAsiD,EAAApyC,EAAAk0C,sBAAA19B,EAAA27B,GACAgC,EAAAhC,EAAAnyC,EAAA6wC,aAAA7wC,EAAAowB,UACAgkB,EAAA,SAAAp+C,GACA,OAAAm8C,EAAAnyC,EAAA6a,MAAA7a,EAAAya,IAAAlwB,KAAAyV,EAAAhK,IAEAq+C,EAAA,SAAAr+C,EAAAhM,GACA,OAAAsD,EAAA6gC,YAAAjkC,OAAA,EAAAkoD,EAAAp8C,EAAAhM,GAAA,MAAAmqD,EAAA5pD,KAAAyV,EAAAhK,EAAA6M,GAAAsxC,CAAAn+C,EAAApM,QAWA,OARAkG,EAAAxC,EAAAiT,aAAAzQ,EAAAyH,EAAA88C,GAAA38C,EAAA08C,GAAAtkD,EAAAyH,EAAA68C,GAAA18C,EAAA28C,GAEA/mD,EAAAgxC,mBACAxuC,IAAAwkD,QAAA,SAAAt+C,GACA,aAAAA,EAAApM,SAIA,SAAAoM,GACA,IAKAgB,EALAoR,EAAA9a,EAAAgxC,iBAAAt+B,EAAAolC,iBAAApvC,EAAAoS,QAAApS,EAAAoS,OACA7Q,EAAA46C,EAAAnyC,EAAAzI,EAAAyI,EAAA4P,KACAlY,EAAAy8C,EAAA5pD,KAAAyV,EAAAhK,EAAA6M,IACA0xC,EAAA,EACAtB,EAAA,EAsBA,OAnBAjzC,EAAAyW,WAAAzgB,GACA1I,EAAAyuC,aAAA/lC,EAAA6M,IACA7L,EAAAgJ,EAAAw0C,gBAAApsC,EAAA7Q,EAAAG,EAAApK,EAAAyuC,aAAA/lC,EAAA6M,MAEA7C,EAAA0sC,WAAA12C,KACAoS,EAAApI,EAAAwmC,oBAAAp+B,IAGApR,EAAAlH,EAAAioC,YAAA/3B,EAAA4zC,eAAA59C,GAAAlG,CAAAsY,KAGAA,EAAA,KACAmsC,EAAAh9C,EAAA6Q,EAAA,GAAA7Q,GACA07C,EAAAv7C,EAAA0Q,EAAA,GAAAxe,QAGAoN,EAAA1J,EAAAiT,aAAA,KAAA0yC,EAAA,IAAAsB,EAAA,KAAAA,EAAA,IAAAtB,GAGAj8C,GAAA,UAIAZ,EAAA89C,sBAAA,SAAA19B,EAAA27B,GAEA,IAAAnyC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAmnD,EAAAj+B,EAAAg8B,QAAA,EACAj7C,EAAAyI,EAAA2yC,UAAA,EAAA8B,EAAAj+B,IAAA27B,GACAz6C,EAAAsI,EAAA6yC,YAAAV,GACAuC,EAAA10C,EAAA+yC,eAAA/yC,EAAAyW,WAAAD,IAAA27B,GACAv3B,EAAAu3B,EAAAnyC,EAAA6wC,aAAA7wC,EAAAowB,UACA,gBAAAp6B,EAAAhM,GACA,IAAAipD,EAAAr4B,EAAArwB,KAAAyV,EAAAhK,EAAA6M,GAAA+X,CAAA,GACA61B,EAAAiE,EAAA1+C,EAAAhM,IAAAipD,EAEAC,EAAA37C,EAAAvB,GACAm9C,EAAAz7C,EAAA1B,GASA,OAPA1I,EAAAiT,eACA,EAAAvK,EAAApM,OAAAupD,EAAAF,GAAAj9C,EAAApM,MAAA,GAAAqpD,EAAAE,KACAA,EAAAF,GAKA,EAAAC,EAAAC,GAAAF,EAAAxC,IAAA,CAAAyC,EAAAC,GAAAF,EAAAxC,IACA,CAAAyC,EAAAC,GAAAF,EAAAxC,IACA,CAAAyC,EAAAC,GAAAF,EAAAxC,OAKAr6C,EAAAo+C,gBAAA,SAAAx+C,EAAAuB,EAAAG,EAAAi9C,GACA,IAGA3qD,EACAwhC,EAEAopB,EACAC,EACAC,EACAn2C,EACAtB,EAEA0tB,EACAgqB,EAEAX,EACAC,EAhBAr0C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAIAkO,EAAA,IASAw5C,EAAAh1C,EAAAoB,gBAAA,KAGA7R,EAAA,GAEA,SAAA0lD,EAAA19C,EAAAhI,GACA,IAAAvF,EAEA,IAAAA,EAAA,EAAiBA,EAAAuF,EAAArF,OAAoBF,IACrC,GAAAuF,EAAAvF,GAAAuP,MAAAhC,MAAAhI,EAAAvF,GAAAwe,IACA,SAIA,SAIA,GAAA/S,EAAAk/C,GACA,IAAA3qD,EAAA,EAAiBA,EAAA2qD,EAAAzqD,OAAqBF,IACtCuF,EAAAvF,GAAA,GAEAwL,EAAAm/C,EAAA3qD,GAAAuP,OACAhK,EAAAvF,GAAAuP,MAAAvD,EAAA,GAAAuB,EAEAhI,EAAAvF,GAAAuP,MAAAyG,EAAA0B,eAAA1B,EAAA2B,UAAAgzC,EAAA3qD,GAAAuP,OAAAo7C,EAAA3qD,GAAAuP,MAGA/D,EAAAm/C,EAAA3qD,GAAAwe,KACAjZ,EAAAvF,GAAAwe,IAAAxS,IAAA9L,OAAA,GAAAqN,EAEAhI,EAAAvF,GAAAwe,IAAAxI,EAAA0B,eAAA1B,EAAA2B,UAAAgzC,EAAA3qD,GAAAwe,KAAAmsC,EAAA3qD,GAAAwe,IAiBA,SAAA0sC,EAAApsB,GACA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,MAkCA,IA9CAsrB,EAAA9mD,EAAAiT,aAAA,SAAAvK,GACA,OAAA0B,EAAA1B,EAAApM,QACK,SAAAoM,GACL,OAAAuB,EAAAvB,EAAAuB,IAEA88C,EAAA/mD,EAAAiT,aAAA,SAAAvK,GACA,OAAAuB,EAAAvB,EAAAuB,IACK,SAAAvB,GACL,OAAA0B,EAAA1B,EAAApM,QAQAgrD,EADA50C,EAAA0B,eACA,SAAAyzC,EAAAjd,EAAA1M,EAAAT,GACA,IAAAwpB,EAAAY,EAAA59C,EAAAgxC,UACA6M,EAAAld,EAAA3gC,EAAA49C,EAAA59C,EACA89C,EAAA,IAAA1sC,KAAA4rC,EAAAa,EAAA5pB,GACA8pB,EAAA,IAAA3sC,KAAA4rC,EAAAa,GAAA5pB,EAAAT,IASA,OAAAmqB,EANA5nD,EAAAiT,aACA,EAAA7I,EAAAo9C,EAAAtpB,IAAAj0B,EAAA89C,IAAA,CAAA39C,EAAAo9C,EAAAtpB,EAAAT,IAAAxzB,EAAA+9C,KAEA,EAAA/9C,EAAA89C,GAAA39C,EAAAo9C,EAAAtpB,KAAA,CAAAj0B,EAAA+9C,GAAA59C,EAAAo9C,EAAAtpB,EAAAT,QAMA,SAAAoqB,EAAAjd,EAAA1M,EAAAT,GASA,OAAAmqB,EANA5nD,EAAAiT,aACA,EAAA7I,EAAAo9C,EAAAtpB,IAAA,GAAAj0B,EAAAs9C,EAAArpB,KAAA,CAAA9zB,EAAAo9C,EAAAtpB,EAAAT,IAAA,GAAAxzB,EAAAs9C,EAAArpB,EAAAT,MAEA,EAAAxzB,EAAAs9C,EAAArpB,IAAA,GAAA9zB,EAAAo9C,EAAAtpB,KAAA,CAAAj0B,EAAAs9C,EAAArpB,EAAAT,IAAA,GAAArzB,EAAAo9C,EAAAtpB,EAAAT,QAQA/gC,EAAA,EAAeA,EAAAgM,EAAA9L,OAAcF,IAAA,CAE7B,GAAAwL,EAAAjG,KAAA0lD,EAAAj/C,EAAAhM,GAAAuN,EAAAhI,GACAiM,GAAA,IAAA44C,EAAAp+C,EAAAhM,IAAA,IAAAqqD,EAAAr+C,EAAAhM,SAWA,IARA6qD,EAAA70C,EAAAswC,SAAAt6C,EAAAhM,EAAA,GAAAuN,EAAAy9C,EAAAh/C,EAAAhM,GAAAuN,EAAAy9C,EAAAh1C,EAAA0B,gBACAozC,EAAA90C,EAAAswC,SAAAt6C,EAAAhM,EAAA,GAAAJ,MAAAoM,EAAAhM,GAAAJ,OACA+U,EAAApH,EAAAvB,EAAAhM,GAAAuN,KAAAvB,EAAAhM,EAAA,GAAAuN,GACA8F,EAAA3F,EAAA1B,EAAAhM,GAAAJ,OAAA8N,EAAA1B,EAAAhM,EAAA,GAAAJ,OAGAmrD,EAAA,GADAhqB,EAAA,EADAp1B,KAAAo+B,KAAAp+B,KAAA8yB,IAAA9pB,EAAA,GAAAhJ,KAAA8yB,IAAAprB,EAAA,KAIAmuB,EAAAT,EAAwBS,GAAA,EAAQA,GAAAupB,EAChCv5C,GAAAo5C,EAAA5+C,EAAAhM,EAAA,GAAAgM,EAAAhM,GAAAwhC,EAAAT,GAIA/0B,EAAAhM,GAAAuN,EAGA,OAAAiE,GAGApF,EAAA2hB,WAAA,SAAApC,GACA,IAAA3V,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACAgI,EAAAysB,SAAAzsB,EAAAC,KAAApC,UAAA,IAAApN,EAAAoC,OAAAgL,UAAA,IAAApN,EAAAV,MAAArC,KAAAsS,EAAAi0C,SAAAxzC,KAAAT,IACAA,EAAAysB,SAAA1uB,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAAm5B,UAAA14B,KAAAT,IAAA7R,MAAA,OAAA6R,EAAArR,OAAAR,MAAA,qBAEA,OADA6R,EAAAu1C,gBAAAv9C,EAAA0C,OAAA1O,MAAAmC,MAAA,WACA,IAEA6R,EAAAysB,SAAAt+B,MAAA,UAAA6R,EAAAu1C,gBACAv1C,EAAAysB,SAAAvuB,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,UAGA/H,EAAA6iB,WAAA,SAAA3D,EAAAzN,GACA,QAAAA,EAAA7b,KAAAygC,SAAA59B,WAAA8G,KAAAo8C,SAAA/1C,YAAAhQ,KAAAygC,UAAArzB,KAAA,IAAAkc,GAAAnnB,MAAA,OAAAnC,KAAA2C,OAAAR,MAAA,UAAAnC,KAAAupD,kBAGAn/C,EAAAihB,iBAAA,SAAAlB,EAAAg8B,GACA,IAAAnyC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAyC,EAAAiQ,EAAAhI,GAAA8O,IAAA/W,OACAqiD,EAAApyC,EAAAw1C,sBAAAr/B,EAAAg8B,GACAgC,EAAAhC,EAAAnyC,EAAA6wC,aAAA7wC,EAAAowB,UACAgkB,EAAA,SAAAp+C,GACA,OAAAm8C,EAAAnyC,EAAA6a,MAAA7a,EAAAya,IAAAlwB,KAAAyV,EAAAhK,IAEAy/C,EAAA,SAAAz/C,EAAAhM,GACA,OAAAsD,EAAA6gC,YAAAjkC,OAAA,EAAAkoD,EAAAp8C,EAAAhM,GAAA,MAAAmqD,EAAA5pD,KAAAyV,EAAAhK,EAAA6M,GAAAsxC,CAAAn0C,EAAA01C,iBAAA1/C,EAAA6M,MAEA8yC,EAAA,SAAA3/C,EAAAhM,GACA,OAAAsD,EAAA6gC,YAAAjkC,OAAA,EAAAkoD,EAAAp8C,EAAAhM,GAAA,MAAAmqD,EAAA5pD,KAAAyV,EAAAhK,EAAA6M,GAAAsxC,CAAAn+C,EAAApM,QAWA,OARAmG,EAAAzC,EAAAiT,aAAAxQ,EAAAwkD,GAAAkB,GAAAxjC,GAAA0jC,GAAAj+C,EAAA08C,GAAArkD,EAAAwH,EAAA68C,GAAAnB,GAAA3lD,EAAAwxC,WAAA,EAAA2W,GAAAtjC,GAAAwjC,GAEAroD,EAAAgxC,mBACAvuC,IAAAukD,QAAA,SAAAt+C,GACA,cAAAA,EAAApM,SAIA,SAAAoM,GACA,IAGAgB,EAHAoR,EAAA9a,EAAAgxC,iBAAAt+B,EAAAolC,iBAAApvC,EAAAoS,QAAApS,EAAAoS,OACAmsC,EAAA,EACAtB,EAAA,EAkBA,OAfAjzC,EAAAqW,WAAArgB,IACAgK,EAAA0sC,WAAA12C,KACAoS,EAAApI,EAAAwmC,oBAAAp+B,IAGApR,EAAAjH,EAAAgoC,YAAA/3B,EAAA4zC,eAAA59C,GAAAjG,CAAAqY,KAEAA,EAAA,KACAmsC,EAAAv0C,EAAAzI,EAAA6Q,EAAA,GAAA7Q,GACA07C,EAAAjzC,EAAAowB,UAAAp6B,EAAA6M,GAAA7C,CAAAoI,EAAA,GAAAxe,QAGAoN,EAAA1J,EAAAiT,aAAA,KAAA0yC,EAAA,IAAAsB,EAAA,KAAAA,EAAA,IAAAtB,GAGAj8C,GAAA,UAIAZ,EAAAs/C,iBAAA,WACA,UAGAt/C,EAAAo/C,sBAAA,SAAAr/B,EAAAg8B,GAEA,IAAAnyC,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAsoD,EAAAz/B,EAAAq8B,QAAA,EACAj7C,EAAAyI,EAAA2yC,UAAA,EAAAiD,EAAAz/B,IAAAg8B,GACAz6C,EAAAsI,EAAA6yC,YAAAV,GACA0D,EAAA71C,EAAA+yC,eAAA/yC,EAAAqW,WAAAF,IAAAg8B,GACAv3B,EAAAu3B,EAAAnyC,EAAA6wC,aAAA7wC,EAAAowB,UACA,gBAAAp6B,EAAAhM,GACA,IAAAipD,EAAAr4B,EAAArwB,KAAAyV,EAAAhK,EAAA6M,GAAA+X,CAAA,GACA61B,EAAAoF,EAAA7/C,EAAAhM,IAAAipD,EAEAC,EAAA37C,EAAAvB,GACAm9C,EAAAz7C,EAAA1B,GASA,OAPA1I,EAAAiT,eACA,EAAAvK,EAAApM,OAAAupD,EAAAF,GAAAj9C,EAAApM,MAAA,GAAAqpD,EAAAE,KACAA,EAAAF,GAKA,EAAAC,EAAAzC,GAAA,CAAAyC,EAAAC,GAAAF,EAAAxC,IAAA,CAAAyC,EAAAC,GAAAF,EAAAxC,IACA,CAAAyC,EAAAzC,MAKAr6C,EAAA4hB,aAAA,WACA,IAAAhY,EAAAhU,KACAgU,EAAA0sB,WAAA1sB,EAAAC,KAAApC,UAAA,IAAApN,EAAAgC,SAAAoL,UAAA,IAAApN,EAAA+B,QAAA9E,KAAAsS,EAAA81C,kBAAAr1C,KAAAT,IACAA,EAAA0sB,WAAA3uB,QAAAM,OAAA,UAAAjF,KAAA,QAAA4G,EAAA+4B,YAAAt4B,KAAAT,IAAA5G,KAAA,IAAA4G,EAAA+1C,OAAAt1C,KAAAT,IAAA7R,MAAA,OAAA6R,EAAArR,OACAqR,EAAA0sB,WAAAv+B,MAAA,UAAA6R,EAAAma,wBAAA1Z,KAAAT,IACAA,EAAA0sB,WAAAxuB,OAAAC,UAGA/H,EAAA8iB,aAAA,SAAAjD,EAAAC,EAAArO,GACA,IAAArW,EAAAxF,KAAAiU,KAAApC,UAAA,IAAApN,EAAAc,gBACA,QAAAsW,EAAA7b,KAAA0gC,WAAA79B,WAAA8G,KAAAo8C,SAAA/1C,YAAAhQ,KAAA0gC,YAAAv+B,MAAA,UAAAnC,KAAAouB,iBAAA3Z,KAAAzU,OAAAmC,MAAA,OAAAnC,KAAA2C,OAAAyK,KAAA,KAAA6c,GAAA7c,KAAA,KAAA8c,IAAArO,EAAArW,EAAA3C,WAAA8G,KAAAo8C,SAAA/1C,YAAAxK,GAAA4H,KAAA,KAAA6c,GAAA7c,KAAA,KAAA8c,KAGA9f,EAAAuiB,QAAA,SAAA3iB,GACA,OAAAA,EAAAuB,GAAA,IAAAvB,EAAAuB,EAAAvL,KAAAuL,EAAAvB,EAAAuB,GAAA,MAGAnB,EAAAqiB,cAAA,WACA,IACAjC,EACA47B,EAFApyC,EAAAhU,KAIAgU,EAAA1S,OAAA6gC,YAAAjkC,OAAA,GACAssB,EAAAxW,EAAAoW,gBAAApW,EAAAyW,YAAA27B,EAAApyC,EAAAk0C,sBAAA19B,GAEAxW,EAAA0Y,QAAA,SAAA1iB,EAAAhM,GACA,OAAAooD,EAAAp8C,EAAAhM,GAAA,QAGAgW,EAAA0Y,QAAA,SAAA1iB,GACA,OAAAgK,EAAAowB,UAAAp6B,EAAA6M,GAAA7C,CAAAhK,EAAApM,SAKAwM,EAAA4/C,WAAA,SAAAhsD,EAAA6Y,GAEA,OAAAA,EADA7W,KACAiU,KAAApC,UAAA,IAAApN,EAAAgC,QADAzG,KACAmjC,wBAAAtsB,IADA7W,KACAiU,MAAApC,UAAA,IAAApN,EAAA+B,QAAAyC,EAAAjL,GAAA,IAAAA,EAAA,MAGAoM,EAAAk2C,cAAA,SAAAtiD,EAAA6Y,EAAA0sC,GACA,IACA+B,EADAtlD,KACAiqD,eAAAx1C,KADAzU,MAGAujD,GAHAvjD,KAIAwgD,kBAJAxgD,KAOAgqD,WAAAhsD,EAAA6Y,GAAA8E,QAAAlX,EAAAgE,UAAA,GAAA2E,KAAA,IAAAk4C,IAGAl7C,EAAAo2C,gBAAA,SAAAxiD,GACA,IAAAgW,EAAAhU,KACAslD,EAAAtxC,EAAA+1C,OAAAt1C,KAAAT,GACAA,EAAAg2C,WAAAhsD,GAAAmlB,OAAA,WACA,OAAAnP,EAAAhI,GAAA0C,OAAA1O,MAAA2b,QAAAlX,EAAAgE,YACKkT,QAAAlX,EAAAgE,UAAA,GAAA2E,KAAA,IAAAk4C,IAGLl7C,EAAA2/C,OAAA,SAAA//C,GACA,IACA1I,EADAtB,KACAsB,OACA,OAFAtB,KAEA0gD,WAAA12C,GAAA,EAAAb,EAAA7H,EAAA2wC,SAAA3wC,EAAA2wC,QAAAjoC,GAAA1I,EAAA2wC,SAGA7nC,EAAA6/C,eAAA,SAAAjgD,GACA,IACA1I,EADAtB,KACAsB,OAEA,OAAAA,EAAA6wC,2BACAhpC,EAAA7H,EAAA8wC,sBAAA9wC,EAAA8wC,qBAAApoC,GAAA1I,EAAA8wC,qBAAA9wC,EAAA8wC,qBAAA,KAJApyC,KAIA+pD,OAAA//C,GAJAhK,KAMA+pD,OAAA//C,IAIAI,EAAAm7C,aAAA,SAAAv7C,GACA,IACA1I,EADAtB,KACAsB,OACA,OAAA6H,EAAA7H,EAAA+wC,gBAAA/wC,EAAA+wC,eAAAroC,GAAA1I,EAAA+wC,eAAA/wC,EAAA+wC,eAAA,EAFAryC,KAEA+pD,OAAA//C,IAGAI,EAAAu9C,eAAA,SAAA1jB,EAAAqhB,GACA,IAAAt5C,EAAAhM,KAAAgM,GACAk4B,EAAAl4B,EAAAk4B,MAAAD,GACAimB,EAAAl+C,EAAA0C,OAAAu1B,GACAha,GAAAigC,EAAA98C,KAAA,MACA8c,GAAAggC,EAAA98C,KAAA,MACA,OAAAzD,KAAAo+B,KAAAp+B,KAAA8yB,IAAAxS,EAAAia,EAAA,MAAAv6B,KAAA8yB,IAAAvS,EAAAga,EAAA,OAAAohB,GAGAl7C,EAAAs9C,aAAA,SAAAzjB,EAAAv4B,GACA,OAAA/B,KAAAw+B,IAAAz8B,EAAA1L,KAAAgM,GAAAk4B,MAAAD,GAAA,QAGA75B,EAAA6c,gBAAA,WACA,IACA3lB,EADAtB,KACAsB,OACA,OAAAA,EAAA28B,WAAA38B,EAAA28B,WAFAj+B,KAEAmqD,kBAGA//C,EAAA+c,iBAAA,WACA,IACA7lB,EADAtB,KACAsB,OACAkN,EAAAlN,EAAA48B,YAAA58B,EAAA48B,YAFAl+B,KAEAoqD,kBACA,OAAA57C,EAAA,EAAAA,EAAA,KAHAxO,KAGAioB,QAAA,WAAA3mB,EAAA4mB,iBAAA,MAGA9d,EAAAid,qBAAA,WACA,IACA/lB,EADAtB,KACAsB,OACAoB,EAAAuG,EAAA3H,EAAA4tC,aAAA5tC,EAAA4tC,YAAA,EAMA,OARAlvC,KAIAwC,OAJAxC,KAIAwC,MAAA4Q,SACA1Q,GALA1C,KAKAqqD,mBAGA3nD,GAGA0H,EAAAmd,wBAAA,WACA,IAAAjmB,EAAAtB,KAAAsB,OACA,OAAA2H,EAAA3H,EAAA6tC,gBAAA7tC,EAAA6tC,eAAA,GAGA/kC,EAAAod,sBAAA,SAAA9M,GACA,IACApZ,EADAtB,KACAsB,OAEA,OAAA2H,EAAA3H,EAAA0tC,cACA1tC,EAAA0tC,aACK1tC,EAAAiT,cACLjT,EAAAgT,aAAAhT,EAAA6S,aAAA,EAAAxK,KAAA0G,IAAA3G,EANA1J,KAMAsqD,qBAAA,IAAA5vC,IAAA,KACKpZ,EAAAsT,aAAAtT,EAAAoT,aAPL1U,KASAqD,KAAA+V,wBAAAR,QAAA,KAEAlP,EAXA1J,KAWAsqD,qBAAA,IAAA5vC,KAIAtQ,EAAAkd,uBAAA,WACA,IAAAtT,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAipD,EAAAv2C,EAAAmN,cAAAnN,EAAAuS,iBAAA,KAEA,OAAAtd,EAAA3H,EAAA2tC,eACA3tC,EAAA2tC,cAAA,EACK3tC,EAAAiT,aALL,GAMAg2C,GACKjpD,EAAAyT,cAAAzT,EAAAmZ,cAEL,EAAA8vC,GAAAv2C,EAAA3Q,KAAAgW,yBAAAT,QAAA,MAEAlP,EAAAsK,EAAAs2C,qBAAA,OAAAC,GAIAngD,EAAAogD,mBAAA,SAAApsD,GAIA,IAHA,IACA8K,EADAmlC,EAAAruC,KAAA4iB,YAAAxP,OAGAi7B,GAAA,SAAAA,EAAAoc,SAAA,CACA,IACAvhD,EAAAmlC,EAAAnjC,wBAAA9M,GACO,MAAAgtB,GACP,UAAAhtB,IAGA8K,EAAAmlC,EAAAqc,aAIA,GAAAxhD,EACA,MAGAmlC,IAAApe,WAGA,OAAA/mB,GAGAkB,EAAA+/C,eAAA,WACA,OAAAnqD,KAAAwqD,mBAAA,UAGApgD,EAAAggD,gBAAA,WACA,IAAA57C,EAAAxO,KAAA4iB,YAAAzgB,MAAA,UACA,OAAAqM,EAAAmK,QAAA,SAAAnK,EAAA1D,QAAA,YAGAV,EAAAugD,WAAA,SAAAjwC,GACA,IAAA1G,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAspD,EAAAtpD,EAAAiT,eAAAjT,EAAAiT,eAAAjT,EAAAoT,aACAm2C,EAAAvpD,EAAAiT,aAAA9P,EAAAmD,MAAAnD,EAAAqD,MACAgjD,EAAA92C,EAAAC,KAAAvF,OAAA,IAAAm8C,GAAAz3C,OACA23C,EAAAD,GAAAF,EAAAE,EAAA5/C,wBAAA,CACA2H,MAAA,GAEAm4C,EAAAh3C,EAAA4O,YAAAxP,OAAAlI,wBACAub,EAAAzS,EAAA0S,aACAukC,EAAAF,EAAAl4C,MAAAm4C,EAAAj4C,MAAA0T,EAAA,EAAAzS,EAAAwT,sBAAA9M,IACA,OAAAuwC,EAAA,EAAAA,EAAA,GAGA7gD,EAAAkgD,qBAAA,SAAAzzC,EAAA6D,GACA,IACAjC,EADAzY,KACAqD,KAAAiW,qBAAAzC,GACA,OAFA7W,KAEAqD,KAAAgX,gBAAAxD,EAAA6D,IAAAjC,EAAAC,QAAA,QAGAtO,EAAAwc,wBAAA,SAAA5O,GACA,IAAAhE,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAkN,EAAA,GAEA,YAAAwJ,GAAA1W,EAAAgT,YAIA,MAAA0D,GAAA1W,EAAAgZ,cACAhZ,EAAAgZ,cAGA,MAAAtC,GAAA1W,EAAAsT,YAIA,OAAAoD,GAAA1W,EAAAyT,cAKA,MAAAiD,IAAA1W,EAAAiT,cAAAjT,EAAAmU,qBACAjH,EAAA,GAAAwF,EAAA3Q,KAAAgX,gBAAArC,GAAArO,KAAAu+B,IAAAv+B,KAAAwH,IAAA,GAAA7P,EAAAmU,oBAAA,MAIA,MAAAuC,GAAA1W,EAAAiT,cAAAjT,EAAAiV,qBACA/H,EAAA,GAAAwF,EAAA3Q,KAAAgX,gBAAArC,GAAArO,KAAAu+B,IAAAv+B,KAAAwH,IAAA,GAAA7P,EAAAiV,oBAAA,MAGA/H,GAAAwF,EAAA3Q,KAAAiW,qBAAAtB,GAAAU,QAAA,cAAAV,GAAA,OAbAhE,EAAA8N,qBAJAxgB,EAAAspB,aAAA5W,EAAAmN,eAAAnN,EAAAqN,cAAA,KARA,GA4BAjX,EAAA61C,kBAAA,WACA,OAAAt2C,KAAA0G,IAAA,EAAArQ,KAAAoW,MAAAlD,iBAGA9I,EAAAsY,UAAA,WACA,IAAA1O,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACAgI,EAAAlO,MAAAkG,EAAA8O,IAAAhV,QAAAme,GAAA,mBACAjQ,EAAAk3C,mBAGAl3C,EAAAlO,MAAAqqB,OAAA,WAKA,OAJAnc,EAAAm3C,SACAn3C,EAAAm3C,QAAAz8C,OAAA,IAAAjK,EAAAqB,OAAAvH,KAAAyB,MAGAA,MAGAgU,EAAAlO,MAAAmG,MAAA,SAAAA,GACA,OAAA+H,EAAA1S,OAAAiT,aAAAvU,KAAA0L,EAAAO,GAAAjM,KAAAuL,EAAAU,KAIA7B,EAAAsa,aAAA,WACA,IAAA1Q,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA6pD,EAAAn3C,EAAAm3C,QAAAn3C,EAAA8G,IAAAzI,OAAA,KAAAjF,KAAA,YAAA4G,EAAAK,aAAA,YACA+2C,EAAA9pD,EAAAwlB,cAAA,mBACAqkC,EAAAhpD,MAAA,aAAAipD,GAEAD,EAAA94C,OAAA,KAAAjF,KAAA,YAAA4G,EAAAwL,qBAAApS,KAAA,QAAA3I,EAAAxD,OAEAkqD,EAAAz8C,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAI,WAEAsmD,EAAAz8C,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAE,YAEAwmD,EAAA94C,OAAA,KAAAjF,KAAA,YAAA4G,EAAAqL,UAAAjS,KAAA,QAAA3I,EAAAqB,OAAAvH,KAAAyV,EAAAlO,OAGAkO,EAAAE,KAAAgJ,KAAAiuC,EAAA94C,OAAA,KAAAjF,KAAA,QAAA3I,EAAAmD,OAAAwF,KAAA,YAAA4G,EAAAK,aAAA,SAAAjH,KAAA,YAAA9L,EAAAiT,aAAA,GAAAP,EAAAI,kBAAAjS,MAAA,aAAAb,EAAA8uC,qBAAAgb,EAAA,WAGAhhD,EAAAse,yBAAA,SAAA3S,GACA,IAGAs1C,EAHAr3C,EAAAhU,KACAmrD,EAAAn3C,EAAAm3C,QACA7pD,EAAA0S,EAAA1S,OAKAwsC,EAAA95B,EAAA85B,cAAAr5B,KAAAT,GACAk5B,EAAAl5B,EAAAk5B,UAAAz4B,KAAAT,GACA65B,EAAA75B,EAAA65B,eAAAp5B,KAAAT,GACA84B,EAAA94B,EAAA84B,WAAAr4B,KAAAT,GACAo5B,EAAAp5B,EAAAo5B,WAAA34B,KAAAT,GAEA1S,EAAAwlB,gBAEAqkC,EAAAz8C,OAAA,IAAAjK,EAAAI,WAAAgN,UAAA,IAAApN,EAAAG,UAAAlD,KAAAqU,GAAA3I,KAAA,QAAA0gC,GACA/7B,QAAAM,OAAA,KAAAlQ,MAAA,aAAAiL,KAAA,QAAA0gC,GAEAz7B,OAAA,KAAAjF,KAAA,QAAA8/B,IAGAme,EADAF,EAAAz8C,OAAA,IAAAjK,EAAAE,YAAAkN,UAAA,IAAApN,EAAAC,WAAAhD,KAAAqU,GAAA3I,KAAA,QAAAygC,GACA97B,QAAAM,OAAA,KAAAlQ,MAAA,aAAAiL,KAAA,QAAAygC,IAEAx7B,OAAA,KAAAjF,KAAA,QAAA0/B,GAEAue,EAAAh5C,OAAA,KAAAjF,KAAA,QAAAggC,GAEA+d,EAAAt5C,UAAA,IAAApN,EAAAqB,MAAA,SAAAsH,KAAA9L,EAAAiT,aAAA,iBAAAjT,EAAAiT,aAAAP,EAAA6T,OAAA7T,EAAA8T,WAIA1d,EAAAkhD,qBAAA,SAAA3hC,GACA,IAAA3V,EAAAhU,KACAgU,EAAAu3C,WAAAv3C,EAAAm3C,QAAAt5C,UAAA,IAAApN,EAAA8B,MAAAsL,UAAA,IAAApN,EAAAT,KAAAtC,KAAAsS,EAAA8xC,QAAArxC,KAAAT,IACAA,EAAAu3C,WAAAx5C,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAAi5B,SAAAx4B,KAAAT,IAAA7R,MAAA,iBAAAA,MAAA,OAAA6R,EAAArR,OACAqR,EAAAu3C,WAAAppD,MAAA,UAAA6R,EAAAka,eAAAzZ,KAAAT,IACAA,EAAAu3C,WAAAr5C,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,UAGA/H,EAAAohD,qBAAA,SAAAC,EAAA5vC,EAAAmB,IACAnB,EAAA7b,KAAAurD,WAAA1oD,WAAA8G,KAAAo8C,SAAA/1C,YAAAgN,YAAAhd,KAAAurD,YAAAn+C,KAAA,IAAAq+C,GAAAtpD,MAAA,cAGAiI,EAAAshD,sBAAA,SAAA/hC,GACA,IAAA3V,EAAAhU,KACAgU,EAAA23C,YAAA33C,EAAAm3C,QAAAt5C,UAAA,IAAApN,EAAA6B,OAAAuL,UAAA,IAAApN,EAAAX,MAAApC,KAAAsS,EAAAi0C,SAAAxzC,KAAAT,IACAA,EAAA23C,YAAA55C,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAA64B,UAAAp4B,KAAAT,IAAA7R,MAAA,SAAA6R,EAAArR,OACAqR,EAAA23C,YAAAxpD,MAAA,UAAA6R,EAAAka,eAAAzZ,KAAAT,IACAA,EAAA23C,YAAAz5C,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,UAGA/H,EAAAwhD,sBAAA,SAAAC,EAAAhwC,EAAAmB,IACAnB,EAAA7b,KAAA2rD,YAAA9oD,WAAA8G,KAAAo8C,SAAA/1C,YAAAgN,YAAAhd,KAAA2rD,aAAAv+C,KAAA,IAAAy+C,GAAA1pD,MAAA,cAGAiI,EAAA0hD,sBAAA,SAAAniC,GACA,IAAA3V,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACAgI,EAAA+3C,YAAA/3C,EAAAm3C,QAAAt5C,UAAA,IAAApN,EAAAoC,OAAAgL,UAAA,IAAApN,EAAAV,MAAArC,KAAAsS,EAAAi0C,SAAAxzC,KAAAT,IACAA,EAAA+3C,YAAAh6C,QAAAM,OAAA,QAAAjF,KAAA,QAAA4G,EAAAm5B,UAAA14B,KAAAT,IAAA7R,MAAA,OAAA6R,EAAArR,OAAAR,MAAA,qBAEA,OADA6R,EAAAu1C,gBAAAv9C,EAAA0C,OAAA1O,MAAAmC,MAAA,WACA,IAEA6R,EAAA+3C,YAAA5pD,MAAA,aACA6R,EAAA+3C,YAAA75C,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,aAAAgQ,UAGA/H,EAAA4hD,sBAAA,SAAAC,EAAApwC,EAAAmB,IACAnB,EAAA7b,KAAA+rD,YAAAlpD,WAAA8G,KAAAo8C,SAAA/1C,YAAAgN,YAAAhd,KAAA+rD,aAAA3+C,KAAA,IAAA6+C,GAAA9pD,MAAA,OAAAnC,KAAA2C,OAAAR,MAAA,UAAAnC,KAAAupD,iBAGAn/C,EAAAiiB,eAAA,SAAAtD,EAAA3L,EAAAJ,EAAA2M,EAAAQ,EAAAG,EAAAE,GACA,IAGAyhC,EACAR,EACAI,EALA73C,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAIA0S,EAAAm3C,QAAAhpD,MAAA,aAAAb,EAAAwlB,cAAA,oBAEAxlB,EAAAwlB,gBAEA9a,EAAAg1C,OAAA,SAAAh1C,EAAAg1C,MAAAh7B,MACAhS,EAAAlO,MAAA6d,OAAA3P,EAAAzI,EAAAyf,aAAAmF,SAIApH,IAEA/U,EAAAlO,MAAAgB,SACAkN,EAAAlO,MAAA6d,OAAA3P,EAAAzI,EAAAyf,aAAAmF,SAIA87B,EAAAj4C,EAAAqX,iBAAAlB,GAAA,GACAshC,EAAAz3C,EAAAsX,gBAAAhB,GAAA,GACAuhC,EAAA73C,EAAAuX,iBAAAf,GAAA,GACAxW,EAAAs3C,qBAAAtuC,GACAhJ,EAAA03C,sBAAA1uC,GACAhJ,EAAA83C,sBAAA9uC,GACAhJ,EAAAw3C,qBAAAC,EAAAzuC,KACAhJ,EAAA43C,sBAAAC,EAAA7uC,KACAhJ,EAAAg4C,sBAAAC,EAAAjvC,QAKA5S,EAAA8gD,eAAA,WACA,IAAAl3C,EAAAhU,KACAuL,EAAAyI,EAAAzI,EACAyI,EAAAmJ,OAAA,CACAtB,gBAAA,EACAiN,MAAA9U,EAAA1S,OAAAypB,aACAhC,cAAA,EACAtD,mBAAA,EACA2D,eAAA,IAEApV,EAAA1S,OAAA+uC,iBAAA9xC,KAAAyV,EAAA+J,IAAAxS,EAAAyf,cAGA5gB,EAAA2kB,iBAAA,SAAAlT,EAAAuB,GACA,IACA/G,EAEA+G,KAAAH,SACA5G,EAAA+G,EAAAH,UAEA5G,EANArW,KAMAmrD,QAAAz8C,OAAA,IAAAjK,EAAAmD,OAEAiU,IACAxF,IAAAxT,eATA7C,KAaAmrD,QAAA/9C,KAAA,YAbApN,KAaAqU,aAAA,YACAgC,EAAAjJ,KAAA,YAdApN,KAcAqU,aAAA,UAGAjK,EAAAib,iBAAA,WACA,IAAArR,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAqiB,EAAAxa,EAAA7H,EAAA8jB,eAAA9jB,EAAA8jB,cAAApR,EAAAuH,WAAAvH,EAAAtS,KAAAqU,UAAAzU,EAAA8jB,cAMA,OAJApR,EAAA0B,iBACAiO,EAAA,CAAA3P,EAAA2B,UAAAgO,EAAA,IAAA3P,EAAA2B,UAAAgO,EAAA,MAGAA,GAGAvZ,EAAAkY,SAAA,WACAtiB,KACAiU,KAAAvF,OAAA,IAAAjK,EAAAxD,OAAAoR,OAAA,KAAAjF,KAAA,QAAA3I,EAAAM,YADA/E,KAEAsgC,SAFAtgC,KAEAgM,GAAA6F,UAAA,KAGAzH,EAAAke,qBAAA,SAAAvS,GACA,IAAA/B,EAAAhU,KAGA4tC,EAAA55B,EAAA45B,eAAAn5B,KAAAT,GACA04B,EAAA14B,EAAA04B,WAAAj4B,KAAAT,GACAw2B,EAAAx2B,EAAAw2B,WAAA/1B,KAAAT,GACAA,EAAAC,KAAAvF,OAAA,IAAAjK,EAAAM,YAAA8M,UAAA,IAAApN,EAAAK,WAAApD,KAAAqU,GAAA3I,KAAA,iBAAApD,GACA,OAAA4jC,EAAA5jC,GAAAwgC,EAAAxgC,KAEA+H,QAAAM,OAAA,KAAAjF,KAAA,QAAAwgC,GAAAzrC,MAAA,aAAAA,MAAA,yBACAkQ,OAAA,KAAAjF,KAAA,QAAAs/B,IAGAtiC,EAAA8hB,WAAA,SAAAvC,GACA,IAAA3V,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA4qD,EAAAl4C,EAAAk4C,cAAAz3C,KAAAT,GACAy4B,EAAAz4B,EAAAy4B,UAAAh4B,KAAAT,GACAA,EAAAssB,SAAAtsB,EAAAC,KAAApC,UAAA,IAAApN,EAAAuC,OAAA6K,UAAA,IAAApN,EAAAsC,MAAArF,KAAAwqD,GACAl4C,EAAAssB,SAAAvuB,QAAAM,OAAA,QAAAjF,KAAA,QAAAq/B,GAAAr/B,KAAA,uBAAApD,GACA,OAAA1I,EAAAiT,aAAAvK,EAAApM,MAAA,2BACKuE,MAAA,iBAAAA,MAAA,gBAAA6H,GACL,OAAAgK,EAAArR,MAAAqH,KACK7H,MAAA,kBACL6R,EAAAssB,SAAAv5B,KAAA,SAAAiD,EAAAhM,EAAAwhC,GACA,OAAAxrB,EAAAylC,gBAAAzvC,EAAA6M,GAAA7C,CAAAhK,EAAApM,MAAAoM,EAAA6M,GAAA7Y,EAAAwhC,KAEAxrB,EAAAssB,SAAApuB,OAAArP,aAAAma,SAAA2M,GAAAxnB,MAAA,kBAAAgQ,UAGA/H,EAAA+iB,WAAA,SAAA1D,EAAAC,EAAAyiC,EAAAtwC,GACA,QAAAA,EAAA7b,KAAAsgC,SAAAz9B,aAAA7C,KAAAsgC,UAAAlzB,KAAA,IAAAqc,GAAArc,KAAA,IAAAsc,GAAAvnB,MAAA,OAAAnC,KAAA2C,OAAAR,MAAA,eAAAgqD,EAAA,EAAAnsD,KAAAwuB,eAAA/Z,KAAAzU,SAGAoK,EAAAq5C,YAAA,SAAA18C,EAAAqlD,EAAAvmC,GACA,IAGAwmC,EAHAzxC,EAAA5a,KAAAgM,GAAA0C,OAAA,QAAA2D,OAAA,OAAAsJ,QAAA,SACAb,EAAAF,EAAAvI,OAAA,OAAAlQ,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UACAmqD,EAAAtsD,KAAAgM,GAAA0C,OAAAmX,GAAA1jB,MAAA,QAMA,OAJA2Y,EAAAjJ,UAAA,UAAAnQ,KAAA,CAAAqF,IAAAgL,QAAAM,OAAA,QAAAsJ,QAAAywC,GAAA,OAAAjqD,MAAA,OAAAmqD,GAAAvlD,QAAA4H,KAAA,WACA09C,EAAArsD,KAAAkL,0BAEA0P,EAAAzI,SACAk6C,GAGAjiD,EAAAohB,kBAAA,SAAArB,EAAAG,EAAAE,EAAA80B,GACA,IAAAtrC,EAAAhU,KACAusD,EAAAv4C,EAAAw1C,sBAAAr/B,GAAA,GACAqiC,EAAAx4C,EAAAqyC,qBAAA/7B,GAAA,GACAmiC,EAAAz4C,EAAAk0C,sBAAA19B,GAAA,GACAkiC,EAAApN,EAAAtrC,EAAA24C,YAAA34C,EAAA44C,YACA,gBAAA5iD,EAAAhM,GACA,IAAAooD,EAAApyC,EAAAqW,WAAArgB,GAAAuiD,EAAAv4C,EAAAuW,UAAAvgB,GAAAwiD,EAAAC,EACA,OAAAC,EAAAnuD,KAAAyV,EAAAoyC,EAAAp8C,EAAAhM,GAAAgM,EAAAhK,QAIAoK,EAAAuiD,YAAA,SAAA7vB,EAAA9yB,EAAAq5C,GACA,IAEAwJ,EACAnqD,EAHAsR,EAAAhU,KACAiL,EAAAo4C,EAAAn4C,wBAoBA,OAhBA8I,EAAA1S,OAAAiT,cACA7R,EAAAsR,EAAAuW,UAAAvgB,GAAA,IACA6iD,EAAA/vB,EAAA,MAAAp6B,GAAAsH,EAAApM,MAAA,SAEAivD,EAAA74C,EAAAiU,QAAA,QAAA6U,EAAA,MAAAA,EAAA,SAAAA,EAAA,MAIA,OAAA9yB,EAAApM,QACAivD,EAAA74C,EAAArI,MACAkhD,EAAA74C,EAAArI,MAAAV,EAAAU,MACOkhD,EAAA,IACPA,EAAA,IAIAA,GAGAziD,EAAAwiD,YAAA,SAAA9vB,EAAA9yB,EAAAq5C,GACA,IAEAyJ,EAFA94C,EAAAhU,KACAiL,EAAAo4C,EAAAn4C,wBA8BA,OA3BA8I,EAAA1S,OAAAiT,aACAu4C,GAAAhwB,EAAA,MAAAA,EAAA,SAAA7xB,EAAAW,QAAA,GAEAkhD,EAAAhwB,EAAA,MAEA9yB,EAAApM,MAAA,OAAAoM,EAAApM,QAAAoW,EAAAkjC,kBACA4V,GAAA7hD,EAAAW,OAEAoI,EAAAuW,UAAAvgB,IAAAgK,EAAA+4C,WACAD,GAAA,GACS94C,EAAAuW,UAAAvgB,IAAAgK,EAAAg5C,aACTF,GAAA,IAGAA,GAAA94C,EAAAuW,UAAAvgB,IAAA,MAKA,OAAAA,EAAApM,OAAAoW,EAAA1S,OAAAiT,eACAu4C,EAAA7hD,EAAAW,OACAkhD,EAAA7hD,EAAAW,OACOkhD,EAAA9sD,KAAA4L,SACPkhD,EAAA9sD,KAAA4L,OAAA,IAIAkhD,GAGA1iD,EAAAya,UAAA,WACA7kB,KACAwC,MADAxC,KACA8a,IAAAzI,OAAA,QAAAtL,KADA/G,KACAsB,OAAAwyC,YAAA1mC,KAAA,QADApN,KACAyE,MAAAjC,QAGA4H,EAAA+hB,YAAA,WACA,IAAAnY,EAAAhU,KACAgU,EAAAxR,MAAA4K,KAAA,IAAA4G,EAAAi5C,UAAAx4C,KAAAT,IAAA5G,KAAA,IAAA4G,EAAAk5C,UAAAz4C,KAAAT,KAGA5J,EAAA6iD,UAAA,WACA,IAAAj5C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAmX,EAAAnX,EAAA0yC,gBAAA,OAYA,OATAv7B,EAAAE,QAAA,YACA3E,EAAAgT,aAAAhT,EAAAyvC,YAAAzvC,EAAAxR,MAAA4Q,OAAAswC,YAAA1vC,EAAAvP,MAAAjC,MAAAwR,EAAAxR,MAAA4Q,QAAAzH,MAAArK,EAAAyyC,cAAAlhC,MACK4F,EAAAE,QAAA,cACL3E,EAAAgT,aAAAhT,EAAAyvC,YAAAzvC,EAAAxR,MAAA4Q,OAAAswC,YAAA1vC,EAAAvP,MAAAjC,MAAAwR,EAAAxR,MAAA4Q,QAAAzH,OAAA,EAGArK,EAAAyyC,cAAAhhC,MAMA3I,EAAA8iD,UAAA,WACA,IAAAl5C,EAAAhU,KACA,OAAAgU,EAAA1S,OAAAyyC,cAAAnhC,IAAAoB,EAAAyvC,YAAAzvC,EAAAxR,MAAA4Q,OAAAswC,YAAA1vC,EAAAvP,MAAAjC,MAAAwR,EAAAxR,MAAA4Q,QAAAxH,QAGAxB,EAAAigD,gBAAA,WAEA,OADArqD,KACAktD,YADAltD,KACAsB,OAAAyyC,cAAAjhC,QAGA1I,EAAAua,YAAA,WACA,IAEA3mB,EAFAgW,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAIA,GAFA0S,EAAAtQ,QAAAsQ,EAAA4O,YAAAzgB,MAAA,uBAAAkQ,OAAA,OAAAjF,KAAA,QAAA3I,EAAAyB,kBAAA/D,MAAA,uBAAAA,MAAA,yBAAAA,MAAA,kBAEAb,EAAAqyC,kBAAA,CACA,GAAA3/B,EAAA0B,gBAAAnM,EAAAjI,EAAAsyC,gBAAA,CAGA,IAFAtyC,EAAAsyC,eAAA5/B,EAAA2B,UAAArU,EAAAsyC,gBAEA51C,EAAA,EAAmBA,EAAAgW,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAAle,QACnB8V,EAAAtS,KAAAqU,QAAA,GAAAqG,OAAApe,GAAAuN,EAAAjK,EAAAsyC,iBAAA,EADyD51C,KAMzDsD,EAAAsyC,eAAA51C,EAGAgW,EAAAtQ,QAAAqf,KAAAzhB,EAAAiyC,iBAAAh1C,KAAAyV,IAAAtS,KAAAqU,QAAAxG,IAAA,SAAAvF,GACA,OAAAgK,EAAAu0B,QAAAv+B,EAAAoS,OAAA9a,EAAAsyC,mBACO5/B,EAAA3Q,KAAA0T,qBAAA/C,EAAA6pC,WAAA7pC,EAAA0S,cAAA1S,EAAArR,QACPqR,EAAAtQ,QAAAvB,MAAA,MAAAb,EAAAuyC,sBAAAjhC,KAAAzQ,MAAA,OAAAb,EAAAuyC,sBAAA9gC,MAAA5Q,MAAA,qBAIAiI,EAAA+iD,uBAAA,WACA,IAAAn5C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEA,OAAAA,EAAA6gC,YAAAjkC,aAAA0Q,IAAAtN,EAAA4xC,cA8CK,CAEL,IAAAnQ,EAAA/uB,EAAAilC,aAAAjlC,EAAAtS,KAAAqU,SAAAxG,IAAA,SAAAvR,GACA,OAAAA,EAAA6Y,KAQA,OAJA7C,EAAAwkC,cAAAxkC,EAAAukC,iBACAxV,IAAAoW,WAGA,SAAAt8B,EAAAC,GACA,OAAAimB,EAAApqB,QAAAkE,EAAAhG,IAAAksB,EAAApqB,QAAAmE,EAAAjG,KAvDA,IAAAmiC,EAAA13C,EAAA4xC,mBAEAtkC,IAAAoqC,IACAA,EAAA13C,EAAAwuC,YAGA,IAAAsd,EAAA,SAAA7tD,GACA,OAAAA,IAAA3B,MAAA,MAIA,GAAA2L,EAAAyvC,IAAA,QAAAA,EAAA7K,cACA,gBAAAtxB,EAAAC,GACA,OAAAswC,EAAAvwC,GAAAuwC,EAAAtwC,IAEO,GAAAvT,EAAAyvC,IAAA,SAAAA,EAAA7K,cACP,gBAAAtxB,EAAAC,GACA,OAAAswC,EAAAtwC,GAAAswC,EAAAvwC,IAEO,GAAA1T,EAAA6vC,GAAA,CAIP,IAAAqU,EAAArU,EAcA,YAZApqC,IAAAtN,EAAA4xC,gBACAma,EAAA,SAAAxwC,EAAAC,GACA,OAAAk8B,EAAAn8B,EAAA,CACAhG,GAAAgG,EAAAhG,GACAuF,OAAA,CAAAS,IACa,KAAAC,EAAA,CACbjG,GAAAiG,EAAAjG,GACAuF,OAAA,CAAAU,IACa,QAIbuwC,EACO,OAAAhkD,EAAA2vC,GACP,SAAAn8B,EAAAC,GACA,OAAAk8B,EAAArgC,QAAAkE,EAAAhG,IAAAmiC,EAAArgC,QAAAmE,EAAAjG,UAFO,GAsBPzM,EAAAspC,kBAAA,SAAA1pC,EAAAwpC,EAAAC,EAAA9wC,GACA,IAOAoE,EACA/I,EACAwE,EACA5E,EACA65C,EACA6V,EAZAt5C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACAisD,EAAAjsD,EAAA6xC,sBAAAK,EACAga,EAAAlsD,EAAA8xC,qBAAA,SAAAqE,GACA,OAAAA,GAEAgW,EAAAnsD,EAAA+xC,sBAAAI,EAQAia,EAAA1tD,KAAAmtD,yBAMA,IAJAO,GACA1jD,EAAA4S,KAAA8wC,GAGA1vD,EAAA,EAAeA,EAAAgM,EAAA9L,OAAcF,IAC7B,GAAAgM,EAAAhM,KAAAgM,EAAAhM,GAAAJ,OAAA,IAAAoM,EAAAhM,GAAAJ,SAIAmJ,IACAvE,EAAAoI,EAAA2iD,IAAAvjD,EAAAhM,GAAAuN,GAAAvB,EAAAhM,GAAAuN,GACAxE,EAAA,iBAAAiN,EAAAvP,MAAAf,QAAA,MAAAlB,GAAA,IAAAA,EAAA,uBAAAA,EAAA,uBAKAoM,KAFAhR,EAAAgN,EAAA6iD,EAAAzjD,EAAAhM,GAAAJ,MAAAoM,EAAAhM,GAAA4pC,MAAA59B,EAAAhM,GAAA6Y,GAAA7M,EAAAhM,GAAAyR,MAAAzF,MAEA,CAEA,UAAAA,EAAAhM,GAAAy5C,KACA,SAGAA,EAAA7sC,EAAA4iD,EAAAxjD,EAAAhM,GAAAy5C,KAAAztC,EAAAhM,GAAA4pC,MAAA59B,EAAAhM,GAAA6Y,GAAA7M,EAAAhM,GAAAyR,QACA69C,EAAAt5C,EAAAgM,WAAAhM,EAAAgM,WAAAhW,EAAAhM,GAAAJ,OAAA+E,EAAAqH,EAAAhM,GAAA6Y,IACA9P,GAAA,cAAAiN,EAAAvP,MAAA0B,YAAA,IAAA6N,EAAAmvB,wBAAAn5B,EAAAhM,GAAA6Y,IAAA,KACA9P,GAAA,kDAAAumD,EAAA,YAAA7V,EAAA,QACA1wC,GAAA,qBAAAnJ,EAAA,QACAmJ,GAAA,QAIA,OAAAA,EAAA,YAGAqD,EAAAujD,gBAAA,SAAA9O,EAAA+O,EAAAC,EAAAhoC,GACA,IAGAolC,EAAA6C,EAAAC,EAAAC,EAAAC,EAHAj6C,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA0K,EAAAgI,EAAAhI,GAEA8xC,EAAA9pC,EAAA0S,aACAwd,EAAAl4B,EAAAk4B,MAAAre,GAkCA,OAhCAi4B,GACAgQ,GAAA95C,EAAArI,OAAAqI,EAAAmN,cAAAnN,EAAAuS,iBAAA,MAAA2d,EAAA,GACA8pB,GAAAh6C,EAAAiU,QAAA,SAAAjU,EAAApI,OAAAoI,EAAApI,OAAA,GAAAs4B,EAAA,QAEA+mB,EAAAj3C,EAAA22C,YAAA,GAEArpD,EAAAiT,cAEAw5C,GADAD,EAAA7C,EAAA/mB,EAAA,QACA0pB,EACAK,EAAAj6C,EAAAgT,aAAAhT,EAAAsT,yBACA0mC,EAAAh6C,EAAAzI,EAAAszC,EAAA,GAAAtzC,GAAA,KAGAwiD,GADAD,EAAA7C,EAAAj3C,EAAAwT,uBAAA,GAAAxT,EAAAzI,EAAAszC,EAAA,GAAAtzC,GAAA,IACAqiD,EACAK,EAAAhD,EAAAj3C,EAAAgT,aAAAhT,EAAAsT,yBACA0mC,EAAA9pB,EAAA,OAGA6pB,EAAAE,IAEAH,GAAAC,EAAAE,EAAA,IAGAD,EAAAH,EAAA75C,EAAAkT,gBACA8mC,GAAAH,EAAA,KAIAG,EAAA,IACAA,EAAA,GAGA,CACAp7C,IAAAo7C,EACAj7C,KAAA+6C,IAIA1jD,EAAAohC,YAAA,SAAAD,EAAA1lB,GACA,IAEA+nC,EAAAC,EAAAp1C,EAFAzE,EAAAhU,KACAsB,EAAA0S,EAAA1S,OAEAw8C,EAAA9pC,EAAA0S,aACAm4B,EAAAtT,EAAApoB,OAAA,SAAAnZ,GACA,OAAAA,GAAAf,EAAAe,EAAApM,SAEAswD,EAAA5sD,EAAAgyC,kBAAAlpC,EAAAujD,gBAEA,IAAA9O,EAAA3gD,QAAAoD,EAAA0xC,eAIAh/B,EAAAtQ,QAAAqf,KAAAzhB,EAAAiyC,iBAAAh1C,KAAAyV,EAAAu3B,EAAAv3B,EAAA3Q,KAAA0T,qBAAA/C,EAAA6pC,WAAAC,GAAA9pC,EAAArR,QAAAR,MAAA,mBAEAyrD,EAAA55C,EAAAtQ,QAAAyqD,SAAA,eACAN,EAAA75C,EAAAtQ,QAAAyqD,SAAA,gBACA11C,EAAAy1C,EAAA3vD,KAAAyB,KAAA6+C,EAAA+O,EAAAC,EAAAhoC,GAEA7R,EAAAtQ,QAAAvB,MAAA,MAAAsW,EAAA7F,IAAA,MAAAzQ,MAAA,OAAAsW,EAAA1F,KAAA,QAGA3I,EAAAshC,YAAA,WACA1rC,KAAA0D,QAAAvB,MAAA,mBAGAiI,EAAAu6B,cAAA,SAAAtG,EAAArY,GACA,IAAAhS,EAAAhU,KACAsB,EAAA0S,EAAA1S,OACA0S,EAAAotB,eAAA/C,GAAA1zB,QAAA,SAAAkM,GACA7C,EAAA+N,cAAAlL,GAAAmP,IAAA1kB,EAAAsuC,WAAA/4B,GACAvV,EAAAsuC,WAAA/4B,GAAAmP,IAGAqY,IACA/8B,EAAAquC,UAAA3pB,IAIA5b,EAAA6d,QAAA,SAAAjC,EAAAjQ,GACA,IACA6kC,EADA56C,KACAsB,OAAAsuC,WACAwe,GAAA,EAqBA,OApBAr4C,KAHA/V,KAGA0B,KAAAqU,UAEAA,EAAA7X,OACA6X,EAAApL,QAAA,SAAA5M,GACA,IAAAwvB,EAAAqtB,EAAA78C,EAAA8Y,KAEA0W,KAAA5U,QAAAqN,IAAA,IAAAuH,GAAA,SAAAvH,KACAooC,GAAA,KAGK3wD,OAAAyM,KAAA0wC,GAAA18C,OACLT,OAAAyM,KAAA0wC,GAAAjwC,QAAA,SAAAkM,GACA+jC,EAAA/jC,KAAAmP,IACAooC,GAAA,KAIAA,EApBApuD,KAoBAsB,OAAAquC,YAAA3pB,EAGAooC,GAGAhkD,EAAAsc,WAAA,SAAA3Q,GACA,OAAA/V,KAAAioB,QAAA,MAAAlS,IAAA/V,KAAAioB,QAAA,QAAAlS,IAAA/V,KAAAioB,QAAA,QAAAlS,IAGA3L,EAAAqgB,WAAA,SAAAzgB,GACA,IAAA1I,EAAAtB,KAAAsB,OACAuV,EAAAtN,EAAAS,OAAA6M,GACA,OAAAvV,EAAAsuC,WAAA/4B,IAAA,0DAAA8B,QAAArX,EAAAsuC,WAAA/4B,KAAA,GAGAzM,EAAAs2C,WAAA,SAAA12C,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,2BAAA8B,QAAA3Y,KAAAsB,OAAAsuC,WAAA/4B,KAAA,GAGAzM,EAAA29C,aAAA,SAAA/9C,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,+BAAA8B,QAAA3Y,KAAAsB,OAAAsuC,WAAA/4B,KAAA,GAGAzM,EAAAigB,WAAA,SAAArgB,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,yCAAA8B,QAAA3Y,KAAAsB,OAAAsuC,WAAA/4B,KAAA,GAGAzM,EAAAmgB,UAAA,SAAAvgB,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,cAAA7W,KAAAsB,OAAAsuC,WAAA/4B,IAGAzM,EAAAmkB,cAAA,SAAAvkB,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,kBAAA7W,KAAAsB,OAAAsuC,WAAA/4B,IAGAzM,EAAAi/B,UAAA,SAAAr/B,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,cAAA7W,KAAAsB,OAAAsuC,WAAA/4B,IAGAzM,EAAAu8B,YAAA,SAAA38B,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,gBAAA7W,KAAAsB,OAAAsuC,WAAA/4B,IAGAzM,EAAA8+B,YAAA,SAAAl/B,GACA,IAAA6M,EAAAtN,EAAAS,OAAA6M,GACA,gBAAA7W,KAAAsB,OAAAsuC,WAAA/4B,IAGAzM,EAAAs9B,UAAA,SAAA19B,GACA,OAAAhK,KAAAqpC,UAAAr/B,IAAAhK,KAAAkpC,YAAAl/B,IAAAhK,KAAA2mC,YAAA38B,IAGAI,EAAA69C,SAAA,SAAAj+C,GACA,OAAAhK,KAAAyqB,WAAAzgB,GAAA,CAAAA,GAAA,IAGAI,EAAAwgC,QAAA,SAAA5gC,GACA,OAAAhK,KAAA0nC,UAAA19B,EAAAtI,MAAA,CAAAsI,GAAA,IASAI,EAAA07C,QAAA,SAAA97C,GACA,OAAAhK,KAAAuqB,UAAAvgB,KAAAoS,OAAA,IAGAhS,EAAA0/C,kBAAA,SAAA9/C,GACA,OAAAhK,KAAAyqB,WAAAzgB,IAAAhK,KAAAuuB,cAAAvkB,KAAAoS,OAAA,IAGAhS,EAAA8hD,cAAA,SAAAliD,GACA,OAAAhK,KAAAuqB,UAAAvgB,IAAAhK,KAAAyqB,WAAAzgB,KAAAoS,OAAA,IAGAhS,EAAA09C,oBAAA,SAAA9hC,GACA,sIAAArN,QAAAqN,IAAA,GAGA5b,EAAA2iD,SAAA,WACA,IAAAsB,EAAArwC,OAAAiwB,UAAAqgB,UACA,OAAAD,EAAA11C,QAAA,cAAA01C,EAAA11C,QAAA,aAGAvO,EAAA4iD,SAAA,WAEA,OADAhvC,OAAAiwB,UAAAqgB,UACA31C,QAAA,cAGAvO,EAAAuY,SAAA,WACA,IAGA4rC,EAHAv6C,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OAEA0S,EAAApQ,KAAAoI,EAAA40C,SAAAh9C,OAAAqgB,GAAA,uBACAsqC,EAAAviD,EAAAg1C,MAAAwN,YACAx6C,EAAApQ,KAAAw5C,UAAApxC,EAAAg1C,MAAAwN,YAAAtK,OAAAlwC,EAAAzI,EAAAyf,YAAA,KACA1pB,EAAA+tC,iBAAA9wC,KAAAyV,EAAA+J,IAAA/R,EAAAg1C,MAAAwN,eACKvqC,GAAA,kBACLjQ,EAAAy6C,cAAAlwD,KAAAyV,KACKiQ,GAAA,qBACL,IAAA+8B,EAAAh1C,EAAAg1C,MAAAwN,YAEAxN,GAAAuN,EAAAG,UAAA1N,EAAA0N,SAAAH,EAAAI,UAAA3N,EAAA2N,UAIA36C,EAAAuY,kBACAvY,EAAAwY,aACAlrB,EAAAguC,eAAA/wC,KAAAyV,EAAA+J,IAAA/J,EAAAzI,EAAAyf,gBAGAhX,EAAApQ,KAAAqI,MAAA,SAAAA,GACA,OAAA3K,EAAAiT,aAAAvU,KAAA0L,EAAAO,GAAAjM,KAAAuL,EAAAU,IAGA+H,EAAApQ,KAAAgrD,eAAA,WACA,IAAAjrC,EAAAriB,EAAA8tC,YAAA9tC,EAAA8tC,YAAA,OACA,OAAAzrB,EAAA,GAAAha,KAAA0G,IAAA2D,EAAAmrB,kBAAAxb,EAAA,GAAAA,EAAA,MAGA3P,EAAApQ,KAAA64C,kBAAA,WACA,IAAA7U,EAAA79B,EAAAiK,EAAAzI,EAAAyf,aAAAjhB,EAAAiK,EAAA4oC,iBACAj5B,EAAA3jB,KAAA4uD,iBAEA,OADA5uD,KAAAqN,YAAA,CAAAsW,EAAA,GAAAikB,EAAAjkB,EAAA,GAAAikB,IACA5nC,OAIAoK,EAAAwyC,cAAA,WACA,IACAt7C,EADAtB,KACAsB,OACA0K,EAFAhM,KAEAgM,GAGA,OAFAA,EAAAP,IAAA,CAHAzL,KAGA+jB,WAAA,GAAAziB,EAAA6jC,aACAn5B,EAAAqE,IAAA,CAJArQ,KAIA+jB,WAAA,GAAAziB,EAAA4jC,eAIA96B,EAAAoiB,WAAA,WACA,IACAqiC,EADA7uD,KACAsB,OAAA0iB,aADAhkB,KACA4D,KAAA,aADA5D,KAEAiU,KAAAvF,OAAA,IAAAjK,EAAAoB,UAAAtH,KAAAswD,GAAA5qC,GAAA,sBAFAjkB,KAGAiU,KAAApC,UAAA,IAAApN,EAAAgB,WAAAlH,KAAAswD,GAAA5qC,GAAA,uBAGA7Z,EAAAqkD,cAAA,WACA,IAAAz6C,EAAAhU,KACAgM,EAAAgI,EAAAhI,GACA1K,EAAA0S,EAAA1S,OACAsC,EAAAoQ,EAAApQ,KACA2H,EAAAyI,EAAAzI,EAEA,GAAAjK,EAAA0iB,cAIA,IAAAhQ,EAAA+G,oBAAA/G,EAAAtS,KAAAqU,SAAA7X,OAAA,CAIA,iBAAA8N,EAAAg1C,MAAAwN,YAAAxoC,MAAApiB,EAAAw5C,UAGA,OAFA7xC,EAAA+B,OAAA1J,EAAAw5C,gBACAx5C,EAAAqI,MAAAV,GAAAkxC,oBAIAzoC,EAAAoB,iBAAA7J,EAAAyf,YAAA,KAAAhX,EAAA+P,WAAA,IACAxY,EAAA+B,OAAA,CAAA0G,EAAA+P,WAAA,SAAAxY,EAAAyf,YAAA,KAGAhX,EAAAmJ,OAAA,CACAtB,gBAAA,EACAiN,MAAAxnB,EAAAypB,aACAhC,cAAA,EACAI,eAAA,EACAC,eAAA,IAGA,cAAApd,EAAAg1C,MAAAwN,YAAAxoC,OACAhS,EAAA4L,aAAA,GAGAte,EAAAwjC,YAAAvmC,KAAAyV,EAAA+J,IAAAxS,EAAAyf,eAGAtrB,EA7kV8DovD,yBCF9D,IAAAC,EAAAC,GAAA,WACA,IAAAhjD,EAAA,CACAuR,QAAA,UAGA0xC,EAAA,GAAA7+C,MACA8+C,EAAA,SAAAC,GACA,OAAAF,EAAA1wD,KAAA4wD,IAGAC,EAAApvD,KAAA6iB,SAEA,SAAAwsC,EAAAj8C,GACA,OAAAA,MAAAk8C,eAAAl8C,EAAAyP,UAAAzP,GAAAm8C,gBAGA,SAAAC,EAAAp8C,GACA,OAAAA,MAAAk8C,eAAAl8C,EAAAk8C,cAAAG,aAAAr8C,EAAAyP,UAAAzP,KAAAq8C,aAGA,GAAAL,EACA,IACAF,EAAAE,EAAAG,gBAAAG,YAAA,GAAAC,SACK,MAAAvkC,IACL8jC,EAAA,SAAAC,GAIA,IAHA,IAAAnxD,EAAAmxD,EAAAjxD,OACAsF,EAAA,IAAA8F,MAAAtL,GAEAA,KACAwF,EAAAxF,GAAAmxD,EAAAnxD,GAGA,OAAAwF,GASA,GAJAmZ,KAAAizC,MAAAjzC,KAAAizC,IAAA,WACA,WAAAjzC,OAGAyyC,EACA,IACAA,EAAAhtD,cAAA,OAAAD,MAAA0tD,YAAA,gBACK,MAAAp/B,IACL,IAAAq/B,EAAA9vD,KAAA+vD,QAAA1xD,UACA2xD,EAAAF,EAAAt3B,aACAy3B,EAAAH,EAAAI,eACAC,EAAAnwD,KAAAowD,oBAAA/xD,UACAgyD,EAAAF,EAAAN,YAEAC,EAAAt3B,aAAA,SAAAif,EAAA75C,GACAoyD,EAAAzxD,KAAAyB,KAAAy3C,EAAA75C,EAAA,KAGAkyD,EAAAI,eAAA,SAAAI,EAAAC,EAAA3yD,GACAqyD,EAAA1xD,KAAAyB,KAAAswD,EAAAC,EAAA3yD,EAAA,KAGAuyD,EAAAN,YAAA,SAAApY,EAAA75C,EAAA4yD,GACAH,EAAA9xD,KAAAyB,KAAAy3C,EAAA75C,EAAA,GAAA4yD,IAOA,SAAAC,EAAA5zC,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA4K,IAiHA,SAAAgpC,EAAAnlD,GACA,cAAAA,EAAAmc,KAAAnc,EAGA,SAAAolD,EAAAplD,GACA,OAAA0mB,MAAA1mB,GAwGA,SAAAqlD,EAAAC,GACA,OACA99C,KAAA,SAAA8J,EAAAtR,EAAAulD,EAAAC,GAIA,IAHA9yD,UAAAC,OAAA,IAAA4yD,EAAA,GACA7yD,UAAAC,OAAA,IAAA6yD,EAAAl0C,EAAA3e,QAEA4yD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAAh0C,EAAAm0C,GAAAzlD,GAAA,EAAAulD,EAAAE,EAAA,EAAmDD,EAAAC,EAGnD,OAAAF,GAEAj+C,MAAA,SAAAgK,EAAAtR,EAAAulD,EAAAC,GAIA,IAHA9yD,UAAAC,OAAA,IAAA4yD,EAAA,GACA7yD,UAAAC,OAAA,IAAA6yD,EAAAl0C,EAAA3e,QAEA4yD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAAh0C,EAAAm0C,GAAAzlD,GAAA,EAAAwlD,EAAAC,EAA+CF,EAAAE,EAAA,EAG/C,OAAAF,IAvPA9kD,EAAAilD,UAAAR,EAMAzkD,EAAAklD,WAAA,SAAAr0C,EAAAC,GACA,OAAAA,EAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAA6K,KAGA1b,EAAAP,IAAA,SAAAjI,EAAAguB,GACA,IAEA3U,EACAC,EAHA9e,GAAA,EACA8L,EAAAtG,EAAAtF,OAIA,OAAAD,UAAAC,OAAA,CACA,OAAAF,EAAA8L,GACA,UAAAgT,EAAAtZ,EAAAxF,KAAA8e,KAAA,CACAD,EAAAC,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAAtZ,EAAAxF,KAAA6e,EAAAC,IAAAD,EAAAC,OAEK,CACL,OAAA9e,EAAA8L,GACA,UAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,QAAA8e,KAAA,CACAD,EAAAC,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,QAAA6e,EAAAC,IAAAD,EAAAC,GAIA,OAAAD,GAGA7Q,EAAAqE,IAAA,SAAA7M,EAAAguB,GACA,IAEA3U,EACAC,EAHA9e,GAAA,EACA8L,EAAAtG,EAAAtF,OAIA,OAAAD,UAAAC,OAAA,CACA,OAAAF,EAAA8L,GACA,UAAAgT,EAAAtZ,EAAAxF,KAAA8e,KAAA,CACAD,EAAAC,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAAtZ,EAAAxF,KAAA8e,EAAAD,MAAAC,OAEK,CACL,OAAA9e,EAAA8L,GACA,UAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,QAAA8e,KAAA,CACAD,EAAAC,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,QAAA8e,EAAAD,MAAAC,GAIA,OAAAD,GAGA7Q,EAAA2X,OAAA,SAAAngB,EAAAguB,GACA,IAEA3U,EACAC,EACAkmB,EAJAhlC,GAAA,EACA8L,EAAAtG,EAAAtF,OAKA,OAAAD,UAAAC,OAAA,CACA,OAAAF,EAAA8L,GACA,UAAAgT,EAAAtZ,EAAAxF,KAAA8e,KAAA,CACAD,EAAAmmB,EAAAlmB,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAAtZ,EAAAxF,MACA6e,EAAAC,IAAAD,EAAAC,GACAkmB,EAAAlmB,IAAAkmB,EAAAlmB,QAGK,CACL,OAAA9e,EAAA8L,GACA,UAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,QAAA8e,KAAA,CACAD,EAAAmmB,EAAAlmB,EACA,MAIA,OAAA9e,EAAA8L,GACA,OAAAgT,EAAA0U,EAAAjzB,KAAAiF,IAAAxF,SACA6e,EAAAC,IAAAD,EAAAC,GACAkmB,EAAAlmB,IAAAkmB,EAAAlmB,IAKA,OAAAD,EAAAmmB,IAWAh3B,EAAAmlD,IAAA,SAAA3tD,EAAAguB,GACA,IAEA3U,EAFArN,EAAA,EACA1F,EAAAtG,EAAAtF,OAEAF,GAAA,EAEA,OAAAC,UAAAC,OACA,OAAAF,EAAA8L,GACA6mD,EAAA9zC,GAAArZ,EAAAxF,MAAAwR,GAAAqN,QAGA,OAAA7e,EAAA8L,GACA6mD,EAAA9zC,GAAA2U,EAAAjzB,KAAAiF,IAAAxF,SAAAwR,GAAAqN,GAIA,OAAArN,GAGAxD,EAAAolD,KAAA,SAAA5tD,EAAAguB,GACA,IAEA3U,EAFArN,EAAA,EACA1F,EAAAtG,EAAAtF,OAEAF,GAAA,EACAwhC,EAAA11B,EAEA,OAAA7L,UAAAC,OACA,OAAAF,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAltD,EAAAxF,KAAAwR,GAAAqN,IAAwD2iB,OAGxD,OAAAxhC,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAl/B,EAAAjzB,KAAAiF,IAAAxF,QAAAwR,GAAAqN,IAA0E2iB,EAI1E,GAAAA,EAAA,OAAAhwB,EAAAgwB,GAGAxzB,EAAAqlD,SAAA,SAAAj1C,EAAAJ,GACA,IAAAs1C,GAAAl1C,EAAAle,OAAA,GAAA8d,EAAA,EACAxN,EAAA7E,KAAA4nD,MAAAD,GACApoD,GAAAkT,EAAA5N,EAAA,GACA4c,EAAAkmC,EAAA9iD,EACA,OAAA4c,EAAAliB,EAAAkiB,GAAAhP,EAAA5N,GAAAtF,MAGA8C,EAAAwlD,OAAA,SAAAhuD,EAAAguB,GACA,IAEA3U,EAFA40C,EAAA,GACA3nD,EAAAtG,EAAAtF,OAEAF,GAAA,EAEA,OAAAC,UAAAC,OACA,OAAAF,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAltD,EAAAxF,MAAAyzD,EAAA9jD,KAAAkP,QAGA,OAAA7e,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAl/B,EAAAjzB,KAAAiF,IAAAxF,SAAAyzD,EAAA9jD,KAAAkP,GAIA,GAAA40C,EAAAvzD,OAAA,OAAA8N,EAAAqlD,SAAAI,EAAA70C,KAAA6zC,GAAA,KAGAzkD,EAAA0lD,SAAA,SAAAluD,EAAAguB,GACA,IAEA3U,EACA7S,EAHAF,EAAAtG,EAAAtF,OACAyzD,EAAA,EAGAniD,EAAA,EACAxR,GAAA,EACAwhC,EAAA,EAEA,OAAAvhC,UAAAC,OACA,OAAAF,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAltD,EAAAxF,OAGAwR,IAFAxF,EAAA6S,EAAA80C,IAEA90C,GADA80C,GAAA3nD,IAAAw1B,UAKA,OAAAxhC,EAAA8L,GACA6mD,EAAA9zC,EAAA6zC,EAAAl/B,EAAAjzB,KAAAiF,IAAAxF,UAGAwR,IAFAxF,EAAA6S,EAAA80C,IAEA90C,GADA80C,GAAA3nD,IAAAw1B,KAMA,GAAAA,EAAA,SAAAhwB,GAAAgwB,EAAA,IAGAxzB,EAAA4lD,UAAA,WACA,IAAA1oD,EAAA8C,EAAA0lD,SAAApxD,MAAAN,KAAA/B,WACA,OAAAiL,EAAAS,KAAAo+B,KAAA7+B,MA8BA,IAAA2oD,EAAAjB,EAAAH,GAiEA,SAAAqB,EAAA9nD,GACA,OAAAA,EAAA9L,OAjEA8N,EAAA+lD,WAAAF,EAAA9+C,KACA/G,EAAAgmD,OAAAhmD,EAAAimD,YAAAJ,EAAAh/C,MAEA7G,EAAAkmD,SAAA,SAAA1gC,GACA,OAAAo/B,EAAA,IAAAp/B,EAAAtzB,OAAA,SAAA8L,EAAAuB,GACA,OAAAklD,EAAAj/B,EAAAxnB,GAAAuB,IACKimB,IAGLxlB,EAAAmmD,QAAA,SAAA3uD,EAAA4uD,EAAAC,IACAV,EAAA1zD,UAAAC,QAAA,IACAm0D,EAAA7uD,EAAAtF,OACAyzD,EAAA,IAAAS,EAAA,IAOA,IAJA,IACA7kC,EACAvvB,EAFA2zD,EAAAU,EAAAD,EAIAT,GACA3zD,EAAA2L,KAAAo8C,SAAA4L,IAAA,EACApkC,EAAA/pB,EAAAmuD,EAAAS,GAAA5uD,EAAAmuD,EAAAS,GAAA5uD,EAAAxF,EAAAo0D,GAAA5uD,EAAAxF,EAAAo0D,GAAA7kC,EAGA,OAAA/pB,GAGAwI,EAAAsmD,QAAA,SAAA9uD,EAAA+uD,GAIA,IAHA,IAAAv0D,EAAAu0D,EAAAr0D,OACAs0D,EAAA,IAAAlpD,MAAAtL,GAEAA,KACAw0D,EAAAx0D,GAAAwF,EAAA+uD,EAAAv0D,IAGA,OAAAw0D,GAGAxmD,EAAAymD,MAAA,SAAAjvD,GAOA,IANA,IAAAxF,EAAA,EACA8L,EAAAtG,EAAAtF,OAAA,EAEAw0D,EAAAlvD,EAAA,GACAivD,EAAA,IAAAnpD,MAAAQ,EAAA,IAAAA,GAEA9L,EAAA8L,GACA2oD,EAAAz0D,GAAA,CAAA00D,IAAAlvD,IAAAxF,IAGA,OAAAy0D,GAGAzmD,EAAA2mD,UAAA,SAAAC,GACA,KAAA9oD,EAAA8oD,EAAA10D,QAAA,SAEA,QAAAF,GAAA,EAAA2zD,EAAA3lD,EAAAP,IAAAmnD,EAAAd,GAAAa,EAAA,IAAArpD,MAAAqoD,KAAsF3zD,EAAA2zD,GACtF,QAAA7nD,EAAA01B,GAAA,EAAAqzB,EAAAF,EAAA30D,GAAA,IAAAsL,MAAAQ,KAA4D01B,EAAA11B,GAC5D+oD,EAAArzB,GAAAozB,EAAApzB,GAAAxhC,GAIA,OAAA20D,GAOA3mD,EAAA8mD,IAAA,WACA,OAAA9mD,EAAA2mD,UAAA10D,YAGA+N,EAAA9B,KAAA,SAAAqF,GACA,IAAArF,EAAA,GAEA,QAAA9L,KAAAmR,EACArF,EAAAyD,KAAAvP,GAGA,OAAA8L,GAGA8B,EAAAoQ,OAAA,SAAA7M,GACA,IAAA6M,EAAA,GAEA,QAAAhe,KAAAmR,EACA6M,EAAAzO,KAAA4B,EAAAnR,IAGA,OAAAge,GAGApQ,EAAA+mD,QAAA,SAAAxjD,GACA,IAAAwjD,EAAA,GAEA,QAAA30D,KAAAmR,EACAwjD,EAAAplD,KAAA,CACAvP,MACAR,MAAA2R,EAAAnR,KAIA,OAAA20D,GAGA/mD,EAAAk3B,MAAA,SAAA8vB,GAQA,IAPA,IACArB,EAGAsB,EACAzvD,EALAsG,EAAAkpD,EAAA90D,OAEAF,GAAA,EACAwhC,EAAA,IAIAxhC,EAAA8L,GACA01B,GAAAwzB,EAAAh1D,GAAAE,OAKA,IAFA+0D,EAAA,IAAA3pD,MAAAk2B,KAEA11B,GAAA,GAIA,IAFA6nD,GADAnuD,EAAAwvD,EAAAlpD,IACA5L,SAEAyzD,GAAA,GACAsB,IAAAzzB,GAAAh8B,EAAAmuD,GAIA,OAAAsB,GAGA,IAAA9qB,EAAAx+B,KAAAw+B,IAoCA,SAAA+qB,EAAAC,EAAAC,GACA,QAAAh1D,KAAAg1D,EACA31D,OAAAC,eAAAy1D,EAAA90D,UAAAD,EAAA,CACAR,MAAAw1D,EAAAh1D,GACAQ,YAAA,IA8BA,SAAAy0D,IACArzD,KAAAszD,EAAA71D,OAAAgD,OAAA,MArEAuL,EAAAG,MAAA,SAAAoB,EAAAC,EAAAg0C,GAUA,GATAvjD,UAAAC,OAAA,IACAsjD,EAAA,EAEAvjD,UAAAC,OAAA,IACAsP,EAAAD,EACAA,EAAA,KAIAC,EAAAD,GAAAi0C,IAAAluC,IAAA,UAAAlS,MAAA,kBACA,IAGAo+B,EAHArzB,EAAA,GACA6pC,EAYA,SAAAzqC,GACA,IAAAyqC,EAAA,EAEA,KAAAzqC,EAAAyqC,EAAA,GACAA,GAAA,GAGA,OAAAA,EAnBAud,CAAAprB,EAAAqZ,IACAxjD,GAAA,EAGA,GADAuP,GAAAyoC,EAAAxoC,GAAAwoC,GAAAwL,GAAAxL,GACA,QAAAxW,EAAAjyB,EAAAi0C,IAAAxjD,GAAAwP,GACArB,EAAAwB,KAAA6xB,EAAAwW,QACK,MAAAxW,EAAAjyB,EAAAi0C,IAAAxjD,GAAAwP,GACLrB,EAAAwB,KAAA6xB,EAAAwW,GAEA,OAAA7pC,GAsBAH,EAAAuD,IAAA,SAAAjN,EAAAkvB,GACA,IAAAjiB,EAAA,IAAA8jD,EAEA,GAAA/wD,aAAA+wD,EACA/wD,EAAAqI,QAAA,SAAAvM,EAAAR,GACA2R,EAAAwlB,IAAA32B,EAAAR,UAEK,GAAA0L,MAAAD,QAAA/G,GAAA,CACL,IAEA8G,EAFApL,GAAA,EACA8L,EAAAxH,EAAApE,OAEA,OAAAD,UAAAC,OAAA,OAAAF,EAAA8L,GACAyF,EAAAwlB,IAAA/2B,EAAAsE,EAAAtE,SACO,OAAAA,EAAA8L,GACPyF,EAAAwlB,IAAAvD,EAAAjzB,KAAA+D,EAAA8G,EAAA9G,EAAAtE,MAAAoL,QAGA,QAAAhL,KAAAkE,EACAiN,EAAAwlB,IAAA32B,EAAAkE,EAAAlE,IAIA,OAAAmR,GAOA,IAAAikD,EAAA,YACAC,EAAA,KAyCA,SAAAC,EAAAt1D,GACA,OAAAA,GAAA,MAAAo1D,GAAAp1D,EAAA,KAAAq1D,IAAAr1D,IAGA,SAAAu1D,EAAAv1D,GACA,OAAAA,GAAA,SAAAq1D,EAAAr1D,EAAAgS,MAAA,GAAAhS,EAGA,SAAAw1D,EAAAx1D,GACA,OAAAs1D,EAAAt1D,KAAA4B,KAAAszD,EAGA,SAAAO,EAAAz1D,GACA,OAAAA,EAAAs1D,EAAAt1D,MAAA4B,KAAAszD,UAAAtzD,KAAAszD,EAAAl1D,GAGA,SAAA01D,IACA,IAAA5pD,EAAA,GAEA,QAAA9L,KAAA4B,KAAAszD,EACAppD,EAAAyD,KAAAgmD,EAAAv1D,IAGA,OAAA8L,EAGA,SAAA6pD,IACA,IAAAtxD,EAAA,EAEA,QAAArE,KAAA4B,KAAAszD,IACA7wD,EAGA,OAAAA,EAGA,SAAAuxD,IACA,QAAA51D,KAAA4B,KAAAszD,EACA,SAGA,SAqGA,SAAAW,IACAj0D,KAAAszD,EAAA71D,OAAAgD,OAAA,MAqBA,SAAAyzD,EAAAlqD,GACA,OAAAA,EAeA,SAAAmqD,EAAAp2D,EAAAI,EAAAi2D,GACA,kBACA,IAAAx2D,EAAAw2D,EAAA9zD,MAAAnC,EAAAF,WACA,OAAAL,IAAAO,EAAAJ,EAAAH,GAIA,SAAAy2D,EAAA/xD,EAAAm1C,GACA,GAAAA,KAAAn1C,EAAA,OAAAm1C,EACAA,IAAAvnC,OAAA,GAAAokD,cAAA7c,EAAArnC,MAAA,GAEA,QAAApS,EAAA,EAAA8L,EAAAyqD,EAAAr2D,OAAiDF,EAAA8L,IAAO9L,EAAA,CACxD,IAAAw2D,EAAAD,EAAAv2D,GAAAy5C,EACA,GAAA+c,KAAAlyD,EAAA,OAAAkyD,GAzOAtB,EAAAG,EAAA,CACAjF,IAAAwF,EACAvxD,IAAA,SAAAjE,GACA,OAAA4B,KAAAszD,EAAAI,EAAAt1D,KAEA22B,IAAA,SAAA32B,EAAAR,GACA,OAAAoC,KAAAszD,EAAAI,EAAAt1D,IAAAR,GAEAuU,OAAA0hD,EACA3pD,KAAA4pD,EACA13C,OAAA,WACA,IAAAA,EAAA,GAEA,QAAAhe,KAAA4B,KAAAszD,EACAl3C,EAAAzO,KAAA3N,KAAAszD,EAAAl1D,IAGA,OAAAge,GAEA22C,QAAA,WACA,IAAAA,EAAA,GAEA,QAAA30D,KAAA4B,KAAAszD,EACAP,EAAAplD,KAAA,CACAvP,IAAAu1D,EAAAv1D,GACAR,MAAAoC,KAAAszD,EAAAl1D,KAIA,OAAA20D,GAEAtwD,KAAAsxD,EACAjtD,MAAAktD,EACArpD,QAAA,SAAA6mB,GACA,QAAApzB,KAAA4B,KAAAszD,EACA9hC,EAAAjzB,KAAAyB,KAAA2zD,EAAAv1D,GAAA4B,KAAAszD,EAAAl1D,OAiDA4N,EAAAyoD,KAAA,WACA,IAGAC,EACAC,EAJAF,EAAA,GACAvqD,EAAA,GACA0qD,EAAA,GAIA,SAAArlD,EAAAslD,EAAArxD,EAAAsxD,GACA,GAAAA,GAAA5qD,EAAAhM,OAAA,OAAAy2D,IAAAp2D,KAAAk2D,EAAAjxD,GAAAkxD,EAAAlxD,EAAAoZ,KAAA83C,GAAAlxD,EAUA,IATA,IAGAuxD,EACAzyD,EACA0yD,EAEA54C,EAPApe,GAAA,EACA8L,EAAAtG,EAAAtF,OACAE,EAAA8L,EAAA4qD,KAIAG,EAAA,IAAA5B,IAGAr1D,EAAA8L,IACAsS,EAAA64C,EAAA5yD,IAAA0yD,EAAA32D,EAAAkE,EAAAkB,EAAAxF,MACAoe,EAAAzO,KAAArL,GAEA2yD,EAAAlgC,IAAAggC,EAAA,CAAAzyD,IAmBA,OAfAuyD,GACAvyD,EAAAuyD,IAEAG,EAAA,SAAAD,EAAA34C,GACA9Z,EAAAyyB,IAAAggC,EAAAxlD,EAAAslD,EAAAz4C,EAAA04C,OAGAxyD,EAAA,GAEA0yD,EAAA,SAAAD,EAAA34C,GACA9Z,EAAAyyD,GAAAxlD,EAAAslD,EAAAz4C,EAAA04C,KAIAG,EAAAtqD,QAAAqqD,GACA1yD,EA8CA,OA5BAmyD,EAAAllD,IAAA,SAAA/L,EAAAqxD,GACA,OAAAtlD,EAAAslD,EAAArxD,EAAA,IAGAixD,EAAA1B,QAAA,SAAAvvD,GACA,OApBA,SAAAuvD,EAAAxjD,EAAAulD,GACA,GAAAA,GAAA5qD,EAAAhM,OAAA,OAAAqR,EACA,IAAA/L,EAAA,GACA0xD,EAAAN,EAAAE,KAOA,OANAvlD,EAAA5E,QAAA,SAAAvM,EAAA+2D,GACA3xD,EAAAmK,KAAA,CACAvP,MACAge,OAAA22C,EAAAoC,EAAAL,OAGAI,EAAA1xD,EAAAoZ,KAAA,SAAAC,EAAAC,GACA,OAAAo4C,EAAAr4C,EAAAze,IAAA0e,EAAA1e,OACOoF,EAQPuvD,CAAAxjD,EAAAvD,EAAAuD,IAAA/L,EAAA,OAGAixD,EAAAr2D,IAAA,SAAA4L,GAEA,OADAE,EAAAyD,KAAA3D,GACAyqD,GAGAA,EAAAG,SAAA,SAAA5b,GAEA,OADA4b,EAAA1qD,EAAAhM,OAAA,GAAA86C,EACAyb,GAGAA,EAAAC,WAAA,SAAA1b,GAEA,OADA0b,EAAA1b,EACAyb,GAGAA,EAAAE,OAAA,SAAAnjC,GAEA,OADAmjC,EAAAnjC,EACAijC,GAGAA,GAGAzoD,EAAA+oB,IAAA,SAAAvxB,GACA,IAAAuxB,EAAA,IAAAk/B,EACA,GAAAzwD,EAAA,QAAAxF,EAAA,EAAA8L,EAAAtG,EAAAtF,OAAgDF,EAAA8L,IAAO9L,EACvD+2B,EAAAvH,IAAAhqB,EAAAxF,IAEA,OAAA+2B,GAOAm+B,EAAAe,EAAA,CACA7F,IAAAwF,EACApmC,IAAA,SAAApvB,GAEA,OADA4B,KAAAszD,EAAAI,EAAAt1D,GAAA,QACAA,GAEA+T,OAAA0hD,EACAz3C,OAAA03C,EACArxD,KAAAsxD,EACAjtD,MAAAktD,EACArpD,QAAA,SAAA6mB,GACA,QAAApzB,KAAA4B,KAAAszD,EACA9hC,EAAAjzB,KAAAyB,KAAA2zD,EAAAv1D,OAIA4N,EAAA40C,SAAA,GAMA50C,EAAAopD,OAAA,SAAAr3D,EAAAI,GAKA,IAJA,IAEAi2D,EAFAp2D,EAAA,EACA8L,EAAA7L,UAAAC,SAGAF,EAAA8L,GACA/L,EAAAq2D,EAAAn2D,UAAAD,IAAAm2D,EAAAp2D,EAAAI,IAAAi2D,IAGA,OAAAr2D,GAoBA,IAAAw2D,EAAA,oCAEA,SAAAc,KAcA,SAAAC,KAqBA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,IAAArC,EAEA,SAAArS,IAMA,IALA,IAGAsB,EAHAuM,EAAA4G,EACAz3D,GAAA,EACA8L,EAAA+kD,EAAA3wD,SAGAF,EAAA8L,IACAw4C,EAAAuM,EAAA7wD,GAAAimB,KAAAq+B,EAAAhiD,MAAAN,KAAA/B,WAGA,OAAAu3D,EAoBA,OAjBAxU,EAAA/8B,GAAA,SAAAwzB,EAAAke,GACA,IACA33D,EADAskD,EAAAoT,EAAArzD,IAAAo1C,GAEA,OAAAx5C,UAAAC,OAAA,EAAAokD,KAAAr+B,IAEAq+B,IACAA,EAAAr+B,GAAA,KACAwxC,IAAArlD,MAAA,EAAApS,EAAAy3D,EAAA98C,QAAA2pC,IAAAlzC,OAAAqmD,EAAArlD,MAAApS,EAAA,IACA03D,EAAAvjD,OAAAslC,IAGAke,GAAAF,EAAA9nD,KAAA+nD,EAAA3gC,IAAA0iB,EAAA,CACAxzB,GAAA0xC,KAEAH,IAGAxU,EAKA,SAAA4U,IACA5pD,EAAAg1C,MAAA6U,iBAGA,SAAAC,IAIA,IAHA,IACAtmD,EADA4b,EAAApf,EAAAg1C,MAGAxxC,EAAA4b,EAAAojC,aACApjC,EAAA5b,EAGA,OAAA4b,EAGA,SAAA2qC,EAAAh4D,GAKA,IAJA,IAAAy3D,EAAA,IAAAF,EACAt3D,EAAA,EACA8L,EAAA7L,UAAAC,SAEAF,EAAA8L,GACA0rD,EAAAv3D,UAAAD,IAAAu3D,EAAAC,GAgBA,OAbAA,EAAAQ,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,IAAAC,EAAAD,EAAA3H,YAAAxiD,EAAAg1C,MACAmV,EAAAp4D,SACAiO,EAAAg1C,MAAAmV,EACAX,EAAAW,EAAAnwC,MAAA1lB,MAAA21D,EAAAC,GACS,QACTlqD,EAAAg1C,MAAAoV,KAKAZ,EA7GAxpD,EAAAwpD,SAAA,WAKA,IAJA,IAAAA,EAAA,IAAAF,EACAt3D,GAAA,EACA8L,EAAA7L,UAAAC,SAEAF,EAAA8L,GACA0rD,EAAAv3D,UAAAD,IAAAu3D,EAAAC,GAGA,OAAAA,GAKAF,EAAAj3D,UAAA4lB,GAAA,SAAA+B,EAAA2vC,GACA,IAAA33D,EAAAgoB,EAAArN,QAAA,KACA8+B,EAAA,GAOA,GALAz5C,GAAA,IACAy5C,EAAAzxB,EAAA5V,MAAApS,EAAA,GACAgoB,IAAA5V,MAAA,EAAApS,IAGAgoB,EAAA,OAAA/nB,UAAAC,OAAA,EAAA8B,KAAAgmB,GAAA/B,GAAAwzB,GAAAz3C,KAAAgmB,GAAA/B,GAAAwzB,EAAAke,GAEA,OAAA13D,UAAAC,OAAA,CACA,SAAAy3D,EAAA,IAAA3vC,KAAAhmB,KACAA,KAAA1B,eAAA0nB,IAAAhmB,KAAAgmB,GAAA/B,GAAAwzB,EAAA,MAEA,OAAAz3C,OAyCAgM,EAAAg1C,MAAA,KA0CAh1C,EAAAqqD,QAAA,SAAA7mD,GACA,OAAAA,EAAA1E,QAAAwrD,EAAA,SAGA,IAAAA,EAAA,kCACAC,EAAA,GAAsBn2D,UAAA,SAAAkC,EAAAjE,GACtBiE,EAAAlC,UAAA/B,GACG,SAAAiE,EAAAjE,GACH,QAAA8vD,KAAA9vD,EACAiE,EAAA6rD,GAAA9vD,EAAA8vD,IAIA,SAAAqI,EAAAt0B,GAEA,OADAq0B,EAAAr0B,EAAAu0B,GACAv0B,EAGA,IAAAw0B,EAAA,SAAAlnD,EAAA1F,GACA,OAAAA,EAAA6sD,cAAAnnD,IAEAonD,EAAA,SAAApnD,EAAA1F,GACA,OAAAA,EAAA+sD,iBAAArnD,IAEAsnD,EAAA,SAAAhtD,EAAA0F,GACA,IAAAunD,EAAAjtD,EAAAktD,SAAAltD,EAAAuqD,EAAAvqD,EAAA,oBAMA,OAJAgtD,EAAA,SAAAhtD,EAAA0F,GACA,OAAAunD,EAAAx4D,KAAAuL,EAAA0F,KAGA1F,EAAA0F,IAGA,oBAAAynD,SACAP,EAAA,SAAAlnD,EAAA1F,GACA,OAAAmtD,OAAAznD,EAAA1F,GAAA,UAGA8sD,EAAAK,OACAH,EAAAG,OAAAC,iBAGAlrD,EAAAmB,UAAA,WACA,OAAAnB,EAAA0C,OAAA0gD,EAAAG,kBAGA,IAAAkH,EAAAzqD,EAAAmB,UAAA9O,UAAA,GA2BA,SAAA84D,EAAApW,GACA,0BAAAA,IAAA,WACA,OAAA2V,EAAA3V,EAAA/gD,OAsBA,SAAAo3D,EAAArW,GACA,0BAAAA,IAAA,WACA,OAAA6V,EAAA7V,EAAA/gD,OAnDAy2D,EAAA/nD,OAAA,SAAAqyC,GACA,IACAsW,EACAC,EACAC,EACAnkD,EAJAokD,EAAA,GAKAzW,EAAAoW,EAAApW,GAEA,QAAAvhB,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GAAS,CAC9C6F,EAAA7pD,KAAA0pD,EAAA,IACAA,EAAApnC,YAAAsnC,EAAAv3D,KAAAw/B,IAAAvP,WAEA,QAAAjyB,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAwCF,EAAA8L,IACxCsJ,EAAAmkD,EAAAv5D,KACAq5D,EAAA1pD,KAAA2pD,EAAAvW,EAAAxiD,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,IACA83B,GAAA,aAAAlkD,IAAAkkD,EAAAl0B,SAAAhwB,EAAAgwB,WAEAi0B,EAAA1pD,KAAA,MAKA,OAAA6oD,EAAAgB,IASAf,EAAA5kD,UAAA,SAAAkvC,GACA,IACAsW,EACAjkD,EAFAokD,EAAA,GAGAzW,EAAAqW,EAAArW,GAEA,QAAAvhB,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GACrC,QAAA4F,EAAAv3D,KAAAw/B,GAAAxhC,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAyDF,EAAA8L,IACzDsJ,EAAAmkD,EAAAv5D,MACAw5D,EAAA7pD,KAAA0pD,EAAAnI,EAAAnO,EAAAxiD,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,KACA63B,EAAApnC,WAAA7c,GAKA,OAAAojD,EAAAgB,IASA,IAAAC,GAAA,+BACAC,GAAA,CACA58C,IAAA,6BACA68C,MAAAF,GACAG,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAiCA,SAAAC,GAAAtgB,EAAA75C,GA6BA,OA5BA65C,EAAAzrC,EAAAgsD,GAAAC,QAAAxgB,GA4BA,MAAA75C,EAAA65C,EAAA8Y,MAtBA,WACAvwD,KAAAk4D,kBAAAzgB,EAAA6Y,MAAA7Y,EAAA8Y,QALA,WACAvwD,KAAAm4D,gBAAA1gB,IAyBA,oBAAA75C,EAAA65C,EAAA8Y,MALA,WACA,IAAAhlD,EAAA3N,EAAA0C,MAAAN,KAAA/B,WACA,MAAAsN,EAAAvL,KAAAk4D,kBAAAzgB,EAAA6Y,MAAA7Y,EAAA8Y,OAAoEvwD,KAAAkwD,eAAAzY,EAAA6Y,MAAA7Y,EAAA8Y,MAAAhlD,IAPpE,WACA,IAAAA,EAAA3N,EAAA0C,MAAAN,KAAA/B,WACA,MAAAsN,EAAAvL,KAAAm4D,gBAAA1gB,GAAgDz3C,KAAAw4B,aAAAif,EAAAlsC,IAQhDksC,EAAA8Y,MAdA,WACAvwD,KAAAkwD,eAAAzY,EAAA6Y,MAAA7Y,EAAA8Y,MAAA3yD,IALA,WACAoC,KAAAw4B,aAAAif,EAAA75C,IAoBA,SAAAw6D,GAAA5oD,GACA,OAAAA,EAAA6oD,OAAAvtD,QAAA,YAmCA,SAAAwtD,GAAA7gB,GACA,WAAA8gB,OAAA,aAAAvsD,EAAAqqD,QAAA5e,GAAA,kBAGA,SAAA+gB,GAAA/gB,GACA,OAAAA,EAAA,IAAA4gB,OAAApoD,MAAA,SAGA,SAAAwoD,GAAAhhB,EAAA75C,GAEA,IAAAkM,GADA2tC,EAAA+gB,GAAA/gB,GAAAloC,IAAAmpD,KACAx6D,OAmBA,0BAAAN,EATA,WAIA,IAHA,IAAAI,GAAA,EACAuN,EAAA3N,EAAA0C,MAAAN,KAAA/B,aAEAD,EAAA8L,GACA2tC,EAAAz5C,GAAAgC,KAAAuL,IAbA,WAGA,IAFA,IAAAvN,GAAA,IAEAA,EAAA8L,GACA2tC,EAAAz5C,GAAAgC,KAAApC,IAgBA,SAAA86D,GAAAjhB,GACA,IAAAkhB,EAAAL,GAAA7gB,GACA,gBAAArkC,EAAAxV,GACA,GAAAolC,EAAA5vB,EAAAwlD,UAAA,OAAAh7D,EAAAolC,EAAAxV,IAAAiqB,GAAAzU,EAAA7wB,OAAAslC,GACA,IAAAzU,EAAA5vB,EAAAqlB,aAAA,aAEA76B,GACA+6D,EAAAE,UAAA,EACAF,EAAAG,KAAA91B,IAAA5vB,EAAAolB,aAAA,QAAA4/B,GAAAp1B,EAAA,IAAAyU,KAEArkC,EAAAolB,aAAA,QAAA4/B,GAAAp1B,EAAAl4B,QAAA6tD,EAAA,QA8BA,SAAAI,GAAAthB,EAAA75C,EAAA4yD,GAcA,aAAA5yD,EAbA,WACAoC,KAAAmC,MAAA62D,eAAAvhB,IAYA,oBAAA75C,EALA,WACA,IAAA2N,EAAA3N,EAAA0C,MAAAN,KAAA/B,WACA,MAAAsN,EAAAvL,KAAAmC,MAAA62D,eAAAvhB,GAAqDz3C,KAAAmC,MAAA0tD,YAAApY,EAAAlsC,EAAAilD,IANrD,WACAxwD,KAAAmC,MAAA0tD,YAAApY,EAAA75C,EAAA4yD,IAyBA,SAAAyI,GAAAxhB,EAAA75C,GAcA,aAAAA,EAbA,kBACAoC,KAAAy3C,IAYA,oBAAA75C,EALA,WACA,IAAA2N,EAAA3N,EAAA0C,MAAAN,KAAA/B,WACA,MAAAsN,SAAAvL,KAAAy3C,GAAuCz3C,KAAAy3C,GAAAlsC,GANvC,WACAvL,KAAAy3C,GAAA75C,GAwCA,SAAAs7D,GAAAzhB,GAWA,0BAAAA,OAAAzrC,EAAAgsD,GAAAC,QAAAxgB,IAAA8Y,MAJA,WACA,OAAAvwD,KAAAsvD,cAAA/2B,gBAAAkf,EAAA6Y,MAAA7Y,EAAA8Y,QAPA,WACA,IAAA1tC,EAAA7iB,KAAAsvD,cACA6J,EAAAn5D,KAAAo5D,aACA,OAAAD,IAAA1B,IAAA50C,EAAA0sC,gBAAA6J,eAAA3B,GAAA50C,EAAAzgB,cAAAq1C,GAAA50B,EAAA0V,gBAAA4gC,EAAA1hB,IAsBA,SAAA4hB,KACA,IAAAhrB,EAAAruC,KAAAiwB,WACAoe,KAAAirB,YAAAt5D,MAuHA,SAAAu5D,GAAA73D,GACA,OACA0hC,SAAA1hC,GA6BA,SAAA83D,GAAAzY,GACA,kBACA,OAAA+V,EAAA92D,KAAA+gD,IAwCA,SAAA0Y,GAAAv3B,EAAAvQ,GACA,QAAA6N,EAAA,EAAAmyB,EAAAzvB,EAAAhkC,OAAsCshC,EAAAmyB,EAAOnyB,IAC7C,QAAApsB,EAAAmkD,EAAAr1B,EAAA1C,GAAAxhC,EAAA,EAAA8L,EAAAytD,EAAAr5D,OAAgEF,EAAA8L,EAAO9L,KACvEoV,EAAAmkD,EAAAv5D,KAAA2zB,EAAAve,EAAApV,EAAAwhC,GAIA,OAAA0C,EAgCA,SAAAw3B,GAAAvsD,GAEA,OADAopD,EAAAppD,EAAAwsD,IACAxsD,EA7fAnB,EAAAgsD,GAAA,CACAxrB,OAAAkrB,GACAO,QAAA,SAAAxgB,GACA,IAAAz5C,EAAAy5C,EAAA9+B,QAAA,KACA6zB,EAAAiL,EAEA,OADAz5C,GAAA,cAAAwuC,EAAAiL,EAAArnC,MAAA,EAAApS,MAAAy5C,IAAArnC,MAAApS,EAAA,IACA05D,GAAAp5D,eAAAkuC,GAAA,CACA8jB,MAAAoH,GAAAlrB,GACA+jB,MAAA9Y,GACOA,IAIPgf,EAAArpD,KAAA,SAAAqqC,EAAA75C,GACA,GAAAK,UAAAC,OAAA,GACA,qBAAAu5C,EAAA,CACA,IAAArkC,EAAApT,KAAAoT,OAEA,OADAqkC,EAAAzrC,EAAAgsD,GAAAC,QAAAxgB,IACA8Y,MAAAn9C,EAAAwmD,eAAAniB,EAAA6Y,MAAA7Y,EAAA8Y,OAAAn9C,EAAAqlB,aAAAgf,GAGA,IAAA75C,KAAA65C,EACAz3C,KAAA2O,KAAAopD,GAAAn6D,EAAA65C,EAAA75C,KAGA,OAAAoC,KAGA,OAAAA,KAAA2O,KAAAopD,GAAAtgB,EAAA75C,KAuCA64D,EAAA96C,QAAA,SAAA87B,EAAA75C,GACA,GAAAK,UAAAC,OAAA,GACA,qBAAAu5C,EAAA,CACA,IAAArkC,EAAApT,KAAAoT,OACAtJ,GAAA2tC,EAAA+gB,GAAA/gB,IAAAv5C,OACAF,GAAA,EAEA,GAAAJ,EAAAwV,EAAAwlD,WACA,OAAA56D,EAAA8L,GACA,IAAAlM,EAAAi8D,SAAApiB,EAAAz5C,IAAA,cAKA,IAFAJ,EAAAwV,EAAAqlB,aAAA,WAEAz6B,EAAA8L,GACA,IAAAwuD,GAAA7gB,EAAAz5C,IAAA86D,KAAAl7D,GAAA,SAIA,SAGA,IAAAA,KAAA65C,EACAz3C,KAAA2O,KAAA8pD,GAAA76D,EAAA65C,EAAA75C,KAGA,OAAAoC,KAGA,OAAAA,KAAA2O,KAAA8pD,GAAAhhB,EAAA75C,KAkDA64D,EAAAt0D,MAAA,SAAAs1C,EAAA75C,EAAA4yD,GACA,IAAA1mD,EAAA7L,UAAAC,OAEA,GAAA4L,EAAA,GACA,qBAAA2tC,EAAA,CAGA,IAAA+Y,KAFA1mD,EAAA,IAAAlM,EAAA,IAEA65C,EACAz3C,KAAA2O,KAAAoqD,GAAAvI,EAAA/Y,EAAA+Y,GAAA5yD,IAGA,OAAAoC,KAGA,GAAA8J,EAAA,GACA,IAAAsJ,EAAApT,KAAAoT,OACA,OAAAo8C,EAAAp8C,GAAA0mD,iBAAA1mD,EAAA,MAAA2mD,iBAAAtiB,GAGA+Y,EAAA,GAGA,OAAAxwD,KAAA2O,KAAAoqD,GAAAthB,EAAA75C,EAAA4yD,KAoBAiG,EAAAtI,SAAA,SAAA1W,EAAA75C,GACA,GAAAK,UAAAC,OAAA,GACA,qBAAAu5C,EAAA,OAAAz3C,KAAAoT,OAAAqkC,GAEA,IAAA75C,KAAA65C,EACAz3C,KAAA2O,KAAAsqD,GAAAr7D,EAAA65C,EAAA75C,KAGA,OAAAoC,KAGA,OAAAA,KAAA2O,KAAAsqD,GAAAxhB,EAAA75C,KAoBA64D,EAAA1vD,KAAA,SAAAnJ,GACA,OAAAK,UAAAC,OAAA8B,KAAA2O,KAAA,oBAAA/Q,EAAA,WACA,IAAAsL,EAAAtL,EAAA0C,MAAAN,KAAA/B,WACA+B,KAAA0jD,YAAA,MAAAx6C,EAAA,GAAAA,GACK,MAAAtL,EAAA,WACLoC,KAAA0jD,YAAA,IACK,WACL1jD,KAAA0jD,YAAA9lD,IACKoC,KAAAoT,OAAAswC,aAGL+S,EAAA1zC,KAAA,SAAAnlB,GACA,OAAAK,UAAAC,OAAA8B,KAAA2O,KAAA,oBAAA/Q,EAAA,WACA,IAAAsL,EAAAtL,EAAA0C,MAAAN,KAAA/B,WACA+B,KAAAg6D,UAAA,MAAA9wD,EAAA,GAAAA,GACK,MAAAtL,EAAA,WACLoC,KAAAg6D,UAAA,IACK,WACLh6D,KAAAg6D,UAAAp8D,IACKoC,KAAAoT,OAAA4mD,WAGLvD,EAAApkD,OAAA,SAAAolC,GAEA,OADAA,EAAAyhB,GAAAzhB,GACAz3C,KAAA0O,OAAA,WACA,OAAA1O,KAAAi6D,YAAAxiB,EAAAn3C,MAAAN,KAAA/B,eAkBAw4D,EAAAzkD,OAAA,SAAAylC,EAAAyiB,GAGA,OAFAziB,EAAAyhB,GAAAzhB,GACAyiB,EAAA/C,EAAA+C,GACAl6D,KAAA0O,OAAA,WACA,OAAA1O,KAAAm6D,aAAA1iB,EAAAn3C,MAAAN,KAAA/B,WAAAi8D,EAAA55D,MAAAN,KAAA/B,YAAA,SAIAw4D,EAAAtkD,OAAA,WACA,OAAAnS,KAAA2O,KAAA0qD,KAQA5C,EAAA/0D,KAAA,SAAA9D,EAAAQ,GACA,IAEAm5D,EACAnkD,EAHApV,GAAA,EACA8L,EAAA9J,KAAA9B,OAIA,IAAAD,UAAAC,OAAA,CAGA,IAFAN,EAAA,IAAA0L,MAAAQ,GAAAytD,EAAAv3D,KAAA,IAAA9B,UAEAF,EAAA8L,IACAsJ,EAAAmkD,EAAAv5D,MACAJ,EAAAI,GAAAoV,EAAAgwB,UAIA,OAAAxlC,EAGA,SAAA6W,EAAA8iD,EAAA6C,GACA,IAAAp8D,EAOAoV,EACAinD,EAPAvwD,EAAAytD,EAAAr5D,OACAyzD,EAAAyI,EAAAl8D,OACAo8D,EAAA3wD,KAAA8B,IAAA3B,EAAA6nD,GACA4I,EAAA,IAAAjxD,MAAAqoD,GACA6I,EAAA,IAAAlxD,MAAAqoD,GACA8I,EAAA,IAAAnxD,MAAAQ,GAIA,GAAA1L,EAAA,CACA,IAEA22D,EAFA2F,EAAA,IAAArH,EACAsH,EAAA,IAAArxD,MAAAQ,GAGA,IAAA9L,GAAA,IAAoBA,EAAA8L,IACpBsJ,EAAAmkD,EAAAv5D,MACA08D,EAAAtM,IAAA2G,EAAA32D,EAAAG,KAAA6U,IAAAgwB,SAAAplC,IACAy8D,EAAAz8D,GAAAoV,EAEAsnD,EAAA3lC,IAAAggC,EAAA3hD,GAGAunD,EAAA38D,GAAA+2D,GAIA,IAAA/2D,GAAA,IAAoBA,EAAA2zD,IACpBv+C,EAAAsnD,EAAAr4D,IAAA0yD,EAAA32D,EAAAG,KAAA67D,EAAAC,EAAAD,EAAAp8D,SAEW,IAAAoV,IACXmnD,EAAAv8D,GAAAoV,EACAA,EAAAgwB,SAAAi3B,GAHAG,EAAAx8D,GAAAu7D,GAAAc,GAMAK,EAAA3lC,IAAAggC,GAAA,GAGA,IAAA/2D,GAAA,IAAoBA,EAAA8L,GACpB9L,KAAA28D,IAAA,IAAAD,EAAAr4D,IAAAs4D,EAAA38D,MACAy8D,EAAAz8D,GAAAu5D,EAAAv5D,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAAs8D,GACpBlnD,EAAAmkD,EAAAv5D,GACAq8D,EAAAD,EAAAp8D,GAEAoV,GACAA,EAAAgwB,SAAAi3B,EACAE,EAAAv8D,GAAAoV,GAEAonD,EAAAx8D,GAAAu7D,GAAAc,GAIA,KAAcr8D,EAAA2zD,IAAO3zD,EACrBw8D,EAAAx8D,GAAAu7D,GAAAa,EAAAp8D,IAGA,KAAcA,EAAA8L,IAAO9L,EACrBy8D,EAAAz8D,GAAAu5D,EAAAv5D,GAIAw8D,EAAArqC,OAAAoqC,EACAC,EAAAvqC,WAAAsqC,EAAAtqC,WAAAwqC,EAAAxqC,WAAAsnC,EAAAtnC,WACAle,EAAApE,KAAA6sD,GACArqC,EAAAxiB,KAAA4sD,GACAroD,EAAAvE,KAAA8sD,GAGA,IAAA1oD,EAAA2nD,GAAA,IACAvpC,EAAAqmC,EAAA,IACAtkD,EAAAskD,EAAA,IAEA,uBAAA54D,EACA,OAAAI,EAAA8L,GACA2K,EAAA8iD,EAAAv3D,KAAAhC,GAAAJ,EAAAW,KAAAg5D,IAAAtnC,WAAAmT,SAAAplC,SAGA,OAAAA,EAAA8L,GACA2K,EAAA8iD,EAAAv3D,KAAAhC,GAAAJ,GAYA,OARAuyB,EAAApe,MAAA,WACA,OAAAA,GAGAoe,EAAAje,KAAA,WACA,OAAAA,GAGAie,GASAsmC,EAAA5W,MAAA,SAAAjiD,GACA,OAAAK,UAAAC,OAAA8B,KAAAmuD,SAAA,WAAAvwD,GAAAoC,KAAAmuD,SAAA,aAGAsI,EAAAtzC,OAAA,SAAAA,GACA,IACAk0C,EACAE,EACAnkD,EAHAokD,EAAA,GAIA,oBAAAr0C,MAAAq2C,GAAAr2C,IAEA,QAAAqc,EAAA,EAAAmyB,EAAA3xD,KAAA9B,OAAoCshC,EAAAmyB,EAAOnyB,IAAA,CAC3Cg4B,EAAA7pD,KAAA0pD,EAAA,IACAA,EAAApnC,YAAAsnC,EAAAv3D,KAAAw/B,IAAAvP,WAEA,QAAAjyB,EAAA,EAAA8L,EAAAytD,EAAAr5D,OAAuCF,EAAA8L,EAAO9L,KAC9CoV,EAAAmkD,EAAAv5D,KAAAmlB,EAAA5kB,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,IACA63B,EAAA1pD,KAAAyF,GAKA,OAAAojD,EAAAgB,IASAf,EAAAzd,MAAA,WACA,QAAAxZ,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GACrC,QAAAv+C,EAAAmkD,EAAAv3D,KAAAw/B,GAAAxhC,EAAAu5D,EAAAr5D,OAAA,EAAA08D,EAAArD,EAAAv5D,KAA4EA,GAAA,IAC5EoV,EAAAmkD,EAAAv5D,MACA48D,OAAAxnD,EAAAynD,aAAAD,EAAA3qC,WAAAkqC,aAAA/mD,EAAAwnD,GACAA,EAAAxnD,GAKA,OAAApT,MAGAy2D,EAAA75C,KAAA,SAAAk+C,GACAA,EASA,SAAAA,GACA78D,UAAAC,SAAA48D,EAAArK,GACA,gBAAA5zC,EAAAC,GACA,OAAAD,GAAAC,EAAAg+C,EAAAj+C,EAAAumB,SAAAtmB,EAAAsmB,WAAAvmB,GAAAC,IAZAxc,MAAAN,KAAA/B,WAEA,QAAAuhC,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GACrC3xD,KAAAw/B,GAAA5iB,KAAAk+C,GAGA,OAAA96D,KAAAg5C,SAUAyd,EAAA9nD,KAAA,SAAAgjB,GACA,OAAA8nC,GAAAz5D,KAAA,SAAAoT,EAAApV,EAAAwhC,GACA7N,EAAApzB,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,MAcAi3B,EAAAl4D,KAAA,SAAAozB,GACA,IAAAiN,EAAAswB,EAAAjxD,WAEA,OADA0zB,EAAArxB,MAAAs+B,EAAA,GAAA5+B,KAAA4+B,GACA5+B,MAGAy2D,EAAA3vD,MAAA,WACA,OAAA9G,KAAAoT,QAGAqjD,EAAArjD,KAAA,WACA,QAAAosB,EAAA,EAAAmyB,EAAA3xD,KAAA9B,OAAoCshC,EAAAmyB,EAAOnyB,IAC3C,QAAA+3B,EAAAv3D,KAAAw/B,GAAAxhC,EAAA,EAAA8L,EAAAytD,EAAAr5D,OAAwDF,EAAA8L,EAAO9L,IAAA,CAC/D,IAAAoV,EAAAmkD,EAAAv5D,GACA,GAAAoV,EAAA,OAAAA,EAIA,aAGAqjD,EAAAh0D,KAAA,WACA,IAAAqH,EAAA,EAIA,OAHA2vD,GAAAz5D,KAAA,aACA8J,IAEAA,GAQA,IAAA6vD,GAAA,GA0GA,SAAAoB,GAAA/0C,EAAA2vC,EAAAqF,GACA,IAAAvjB,EAAA,OAAAzxB,EACAhoB,EAAAgoB,EAAArN,QAAA,KACAsiD,EAAAC,GACAl9D,EAAA,IAAAgoB,IAAA5V,MAAA,EAAApS,IACA,IAAAmlB,EAAAg4C,GAAA94D,IAAA2jB,GAGA,SAAAo1C,IACA,IAAA9Y,EAAAtiD,KAAAy3C,GAEA6K,IACAtiD,KAAAo+B,oBAAApY,EAAAs8B,IAAA+Y,UACAr7D,KAAAy3C,IAwBA,OA/BAt0B,IAAA6C,EAAA7C,EAAA83C,EAAAK,IA+BAt9D,EAAA23D,EApBA,WACA,IAAArT,EAAA2Y,EAAAtF,EAAAzG,EAAAjxD,YACAm9D,EAAA78D,KAAAyB,MACAA,KAAAoxB,iBAAApL,EAAAhmB,KAAAy3C,GAAA6K,IAAA+Y,EAAAL,GACA1Y,EAAAgR,EAAAqC,GAgBAyF,EAAAzF,EAAAN,EAbA,WACA,IACAkG,EADA5C,EAAA,IAAAJ,OAAA,eAAAvsD,EAAAqqD,QAAArwC,GAAA,KAGA,QAAAyxB,KAAAz3C,KACA,GAAAu7D,EAAA9jB,EAAA8jB,MAAA5C,GAAA,CACA,IAAArW,EAAAtiD,KAAAy3C,GACAz3C,KAAAo+B,oBAAAm9B,EAAA,GAAAjZ,IAAA+Y,UACAr7D,KAAAy3C,KAzIAzrC,EAAAmB,UAAA4E,MAAA2nD,GACA1tD,EAAAmB,UAAA4E,MAAA1T,UAAAs7D,GACAA,GAAAtnD,OAAAokD,EAAApkD,OACAsnD,GAAA7yD,MAAA2vD,EAAA3vD,MACA6yD,GAAAvmD,KAAAqjD,EAAArjD,KACAumD,GAAAp7D,KAAAk4D,EAAAl4D,KACAo7D,GAAAl3D,KAAAg0D,EAAAh0D,KAEAk3D,GAAAjrD,OAAA,SAAAqyC,GAQA,IAPA,IACAsW,EACAC,EACAkE,EACAjE,EACAnkD,EALAokD,EAAA,GAOAh4B,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GAAS,CAC9C6J,GAAAjE,EAAAv3D,KAAAw/B,IAAArP,OACAqnC,EAAA7pD,KAAA0pD,EAAA,IACAA,EAAApnC,WAAAsnC,EAAAtnC,WAEA,QAAAjyB,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAwCF,EAAA8L,IACxCsJ,EAAAmkD,EAAAv5D,KACAq5D,EAAA1pD,KAAA6tD,EAAAx9D,GAAAs5D,EAAAvW,EAAAxiD,KAAAg5D,EAAAtnC,WAAA7c,EAAAgwB,SAAAplC,EAAAwhC,IACA83B,EAAAl0B,SAAAhwB,EAAAgwB,UAEAi0B,EAAA1pD,KAAA,MAKA,OAAA6oD,EAAAgB,IAGAmC,GAAA3nD,OAAA,SAAAylC,EAAAyiB,GAEA,OADAj8D,UAAAC,OAAA,IAAAg8D,EAIA,SAAAnoD,GACA,IAAAqgD,EAAAqJ,EACA,gBAAAzxD,EAAAhM,EAAAwhC,GACA,IAEApsB,EAFAmkD,EAAAxlD,EAAAytB,GAAArP,OACArmB,EAAAytD,EAAAr5D,OAKA,IAHAshC,GAAAi8B,MAAAj8B,EAAA4yB,EAAA,GACAp0D,GAAAo0D,MAAAp0D,EAAA,KAEAoV,EAAAmkD,EAAAnF,SAAAtoD,IAIA,OAAAsJ,GAjBAsoD,CAAA17D,OACAy2D,EAAAzkD,OAAAzT,KAAAyB,KAAAy3C,EAAAyiB,IAoBAluD,EAAA0C,OAAA,SAAA0E,GACA,IAAAmkD,EAUA,MARA,kBAAAnkD,GACAmkD,EAAA,CAAAb,EAAAtjD,EAAAg8C,KACAn/B,WAAAm/B,EAAAG,iBAEAgI,EAAA,CAAAnkD,IACA6c,WAAAo/B,EAAAj8C,GAGAojD,EAAA,CAAAe,KAGAvrD,EAAA6F,UAAA,SAAA8pD,GACA,IAAApE,EAUA,MARA,kBAAAoE,GACApE,EAAArI,EAAA0H,EAAA+E,EAAAvM,KACAn/B,WAAAm/B,EAAAG,iBAEAgI,EAAArI,EAAAyM,IACA1rC,WAAA,KAGAumC,EAAA,CAAAe,KAGAd,EAAAxyC,GAAA,SAAA+B,EAAA2vC,EAAAqF,GACA,IAAAlxD,EAAA7L,UAAAC,OAEA,GAAA4L,EAAA,GACA,qBAAAkc,EAAA,CAGA,IAAAg1C,KAFAlxD,EAAA,IAAA6rD,GAAA,GAEA3vC,EACAhmB,KAAA2O,KAAAosD,GAAAC,EAAAh1C,EAAAg1C,GAAArF,IAGA,OAAA31D,KAGA,GAAA8J,EAAA,SAAAA,EAAA9J,KAAAoT,OAAA,OAAA4S,KAAAlc,EAAAwpD,EACA0H,GAAA,EAGA,OAAAh7D,KAAA2O,KAAAosD,GAAA/0C,EAAA2vC,EAAAqF,KA2CA,IAAAG,GAAAnvD,EAAAuD,IAAA,CACAqsD,WAAA,YACAC,WAAA,aASA,SAAAX,GAAAvF,EAAAO,GACA,gBAAA9qC,GACA,IAAAhiB,EAAA4C,EAAAg1C,MACAh1C,EAAAg1C,MAAA51B,EACA8qC,EAAA,GAAAl2D,KAAAojC,SAEA,IACAuyB,EAAAr1D,MAAAN,KAAAk2D,GACO,QACPlqD,EAAAg1C,MAAA53C,IAKA,SAAAkyD,GAAA3F,EAAAO,GACA,IAAA5T,EAAA4Y,GAAAvF,EAAAO,GACA,gBAAA9qC,GACA,IACA0wC,EAAA1wC,EAAA2wC,cAEAD,QAHA97D,MAGA,EAAA87D,EAAAE,wBAHAh8D,QAIAsiD,EAAA/jD,KAJAyB,KAIAorB,IA3BAgkC,GACA+L,GAAAxwD,QAAA,SAAAqrC,GACA,KAAAA,KAAAoZ,GAAA+L,GAAAhpD,OAAA6jC,KA8BA,IAAAimB,GACAC,GAAA,EAEA,SAAAC,GAAA/oD,GACA,IAAAqkC,EAAA,oBAAAykB,GACAE,EAAA,QAAA3kB,EACAhpC,EAAAzC,EAAA0C,OAAA8gD,EAAAp8C,IAAA6Q,GAAA,YAAAwzB,EAAAme,GAAA3xC,GAAA,YAAAwzB,EAAAme,GAAA3xC,GAAA,cAAAwzB,EAAAme,GAMA,GAJA,MAAAqG,KACAA,KAAA,kBAAA7oD,IAAAihD,EAAAjhD,EAAAjR,MAAA,eAGA85D,GAAA,CACA,IAAA95D,EAAAktD,EAAAj8C,GAAAjR,MACAuM,EAAAvM,EAAA85D,IACA95D,EAAA85D,IAAA,OAGA,gBAAAI,GAIA,GAHA5tD,EAAAwV,GAAAwzB,EAAA,MACAwkB,KAAA95D,EAAA85D,IAAAvtD,GAEA2tD,EAAA,CACA,IAAAC,EAAA,WACA7tD,EAAAwV,GAAAm4C,EAAA,OAGA3tD,EAAAwV,GAAAm4C,EAAA,WACAxG,IACA0G,MACS,GACTvrC,WAAAurC,EAAA,KAKAtwD,EAAAk4B,MAAA,SAAAq4B,GACA,OAAAC,GAAAD,EAAAzG,MAGA,IAAA2G,GAAAz8D,KAAAiuC,WAAA,SAAA6qB,KAAA94D,KAAAiuC,UAAAqgB,YAAA,IAEA,SAAAkO,GAAAD,EAAAnxC,GACAA,EAAAsxC,iBAAAtxC,IAAAsxC,eAAA,IACA,IAAA5hD,EAAAyhD,EAAAI,iBAAAJ,EAEA,GAAAzhD,EAAA8hD,eAAA,CACA,IAAA/4D,EAAAiX,EAAA8hD,iBAEA,GAAAH,GAAA,GACA,IAAAz+C,EAAAwxC,EAAA+M,GAEA,GAAAv+C,EAAA6+C,SAAA7+C,EAAA8+C,QAAA,CASA,IAAAC,GARAjiD,EAAA9O,EAAA0C,OAAA,QAAA2D,OAAA,OAAAlQ,MAAA,CACAsW,SAAA,WACA7F,IAAA,EACAG,KAAA,EACAqU,OAAA,EACA1kB,QAAA,EACAs6D,OAAA,QACW,cACX,MAAAC,eACAR,KAAAM,EAAAvrC,GAAAurC,EAAA3xC,GACAtQ,EAAA3I,UAMA,OAFAsqD,IAAA54D,EAAA0H,EAAA6f,EAAA8xC,MAAAr5D,EAAA6H,EAAA0f,EAAA+xC,QAAkEt5D,EAAA0H,EAAA6f,EAAAsjC,QAAA7qD,EAAA6H,EAAA0f,EAAAujC,SAElE,EADA9qD,IAAAu5D,gBAAAb,EAAAU,eAAAI,YACA9xD,EAAA1H,EAAA6H,GAGA,IAAA2gD,EAAAkQ,EAAArxD,wBACA,OAAAkgB,EAAAsjC,QAAArC,EAAAt5C,KAAAwpD,EAAAe,WAAAlyC,EAAAujC,QAAAtC,EAAAz5C,IAAA2pD,EAAAgB,WAqFA,SAAAC,KACA,OAAAxxD,EAAAg1C,MAAA0b,eAAA,GAAAe,WAnFAzxD,EAAA0xD,MAAA,SAAAnB,EAAAoB,EAAAF,GAEA,GADAx/D,UAAAC,OAAA,IAAAu/D,EAAAE,IAAA7H,IAAA4G,gBACAiB,EAAA,QAAAD,EAAA1/D,EAAA,EAAA8L,EAAA6zD,EAAAz/D,OAA2DF,EAAA8L,IAAO9L,EAClE,IAAA0/D,EAAAC,EAAA3/D,IAAAy/D,eACA,OAAAjB,GAAAD,EAAAmB,IAKA1xD,EAAA40C,SAAA/D,KAAA,WACA,IAAAmE,EAAA+U,EAAAlZ,EAAA,8BACAgE,EAAA,KACA+c,EAAAjgB,EAAA0X,EAAArpD,EAAAk4B,MAAAsrB,EAAA,uBACAqO,EAAAlgB,EAAA6f,GAAAxxD,EAAA0xD,MAAAxJ,EAAA,wBAEA,SAAArX,IACA78C,KAAAikB,GAAA,iBAAA25C,GAAA35C,GAAA,kBAAA45C,GAGA,SAAAlgB,EAAA9mC,EAAA4B,EAAAqlD,EAAAC,EAAAvhD,GACA,kBACA,IAOAwhD,EANAjgE,EAAAiO,EAAAg1C,MAAAjjD,OAAAkgE,sBAAAjyD,EAAAg1C,MAAAjjD,OACAswC,EAFAruC,KAEAiwB,WACAulC,EAAAxU,EAAAgV,GAHAh2D,KAGA/B,WACAigE,EAAA,EACAC,EAAAtnD,IACAunD,EAAA,eAAAD,EAAA,OAAAA,GAEAE,EAAAryD,EAAA0C,OAAAovD,EAAA//D,IAAAkmB,GAAA85C,EAAAK,EAeA,WACA,IACAzrD,EACAtB,EAFAitD,EAAA7lD,EAAA41B,EAAA8vB,GAGA,IAAAG,EAAA,OACA3rD,EAAA2rD,EAAA,GAAAC,EAAA,GACAltD,EAAAitD,EAAA,GAAAC,EAAA,GACAL,GAAAvrD,EAAAtB,EACAktD,EAAAD,EACA9I,EAAA,CACAxvC,KAAA,OACAza,EAAA+yD,EAAA,GAAAN,EAAA,GACAtyD,EAAA4yD,EAAA,GAAAN,EAAA,GACArrD,KACAtB,SA7BA4S,GAAAzH,EAAA4hD,EAiCA,WACA,IAAA3lD,EAAA41B,EAAA8vB,GAAA,OACAE,EAAAp6C,GAAA85C,EAAAK,EAAA,MAAAn6C,GAAAzH,EAAA4hD,EAAA,MACAI,EAAAN,GACA1I,EAAA,CACAxvC,KAAA,cArCAw4C,EAAArC,GAAAp+D,GACAwgE,EAAA9lD,EAAA41B,EAAA8vB,GAIAH,EAFAnd,EAEA,EADAmd,EAAAnd,EAAAvgD,MAbAN,KAaA/B,YACAsN,EAAAgzD,EAAA,GAAAP,EAAAtyD,EAAA6yD,EAAA,IAEA,MAGA/I,EAAA,CACAxvC,KAAA,eAsCA,OANA62B,EAAAgE,OAAA,SAAAt1C,GACA,OAAAtN,UAAAC,QACA2iD,EAAAt1C,EACAsxC,GAFAgE,GAKA70C,EAAAopD,OAAAvY,EAAAmE,EAAA,OAOAh1C,EAAA2xD,QAAA,SAAApB,EAAAoB,GAEA,OADA1/D,UAAAC,OAAA,IAAAy/D,EAAA7H,IAAA6H,SACAA,EAAAzO,EAAAyO,GAAApuD,IAAA,SAAAmuD,GACA,IAAA75D,EAAA24D,GAAAD,EAAAmB,GAEA,OADA75D,EAAA45D,WAAAC,EAAAD,WACA55D,IACK,IAGL,IAAA46D,GAAA,KACAC,GAAAD,MACAE,GAAAh1D,KAAAwH,GACAytD,GAAA,EAAAD,GACAE,GAAAD,GAAAH,GACAK,GAAAH,GAAA,EACAI,GAAAJ,GAAA,IACAK,GAAA,IAAAL,GAEA,SAAAM,GAAA1zD,GACA,OAAAA,EAAA,IAAAA,EAAA,OAGA,SAAA2zD,GAAAriD,EAAAC,EAAAkmB,GACA,OAAAlmB,EAAA,GAAAD,EAAA,KAAAmmB,EAAA,GAAAnmB,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAmmB,EAAA,GAAAnmB,EAAA,IAGA,SAAAsiD,GAAA5zD,GACA,OAAAA,EAAA,IAAAA,GAAA,EAAAozD,GAAAh1D,KAAAy1D,KAAA7zD,GAGA,SAAA8zD,GAAA9zD,GACA,OAAAA,EAAA,EAAAuzD,GAAAvzD,GAAA,GAAAuzD,GAAAn1D,KAAA21D,KAAA/zD,GAOA,SAAAg0D,GAAAh0D,GACA,QAAAA,EAAA5B,KAAA61D,IAAAj0D,IAAA,EAAAA,GAAA,EAOA,SAAAk0D,GAAAl0D,GACA,OAAAA,EAAA5B,KAAAuH,IAAA3F,EAAA,IAAAA,EAGA,IAAAm0D,GAAA/1D,KAAAg2D,MAIA3zD,EAAA4zD,gBAAA,SAAAC,EAAAnN,GACA,IASA10D,EACA8hE,EAVAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA//C,EAAAutD,EAAAH,EACA1uD,EAAA8uD,EAAAH,EACAK,EAAA1tD,IAAAtB,IAIA,GAAAgvD,EAAA3B,GACAoB,EAAAn2D,KAAA22D,IAAAF,EAAAH,GAAAP,GAEA1hE,EAAA,SAAAuvB,GACA,OAAAwyC,EAAAxyC,EAAA5a,EAAAqtD,EAAAzyC,EAAAlc,EAAA4uD,EAAAt2D,KAAA61D,IAAAE,GAAAnyC,EAAAuyC,SAEK,CACL,IAAA5zB,EAAAviC,KAAAo+B,KAAAs4B,GACAE,GAAAH,IAAAH,IAvBA,EAuBAI,IAAA,EAAAJ,EAxBA,EAwBA/zB,GACAs0B,GAAAJ,IAAAH,IAxBA,EAwBAI,IAAA,EAAAD,EAzBA,EAyBAl0B,GACAu0B,EAAA92D,KAAA22D,IAAA32D,KAAAo+B,KAAAw4B,IAAA,GAAAA,GACA3qC,EAAAjsB,KAAA22D,IAAA32D,KAAAo+B,KAAAy4B,IAAA,GAAAA,GACAV,GAAAlqC,EAAA6qC,GAAAf,GAEA1hE,EAAA,SAAAuvB,GACA,IAxCAhiB,EAwCAiE,EAAA+d,EAAAuyC,EACAY,EAAAnB,GAAAkB,GACAE,EAAAV,GAjCA,EAiCA/zB,IAAAw0B,GA1CAn1D,EA0CAm0D,GAAAlwD,EAAAixD,IAzCAl1D,EAAA5B,KAAA61D,IAAA,EAAAj0D,IAAA,IAAAA,EAAA,IATA,SAAAA,GACA,QAAAA,EAAA5B,KAAA61D,IAAAj0D,IAAA,EAAAA,GAAA,EAiDAq1D,CAAAH,IACA,OAAAV,EAAAY,EAAAhuD,EAAAqtD,EAAAW,EAAAtvD,EAAA4uD,EAAAS,EAAAnB,GAAAG,GAAAlwD,EAAAixD,KAKA,OADAziE,EAAAgf,SAAA,IAAA8iD,EACA9hE,GAGAgO,EAAA40C,SAAAh9C,KAAA,WACA,IAKAi9D,EACAC,EACAplB,EAQAqlB,EAEAC,EAEAzY,EACAtiC,EACAghC,EACA9gC,EAtBA86C,EAAA,CACA11D,EAAA,EACAG,EAAA,EACAsqC,EAAA,GAKAvzC,EAAA,UACA4K,EAAA6zD,GACAlkD,EAAA,IACAmkD,EAAA,EACAvD,EAAA,iBACAwD,EAAA,iBACAC,EAAA,eAEAxD,EAAA,kBAEA7c,EAAA+U,EAAAnyD,EAAA,8BAgBA,SAAAA,EAAA0N,GACAA,EAAA2S,GAAA25C,EAAA0D,GAAAr9C,GAAAs9C,GAAA,QAAAC,GAAAv9C,GAAA,gBAAAw9C,GAAAx9C,GAAA45C,EAAA6D,GAqHA,SAAAC,EAAA3lD,GACA,QAAAA,EAAA,GAAAilD,EAAA11D,GAAA01D,EAAAjrB,GAAAh6B,EAAA,GAAAilD,EAAAv1D,GAAAu1D,EAAAjrB,GAOA,SAAA4rB,EAAApyD,GACAyxD,EAAAjrB,EAAArsC,KAAA0G,IAAAhD,EAAA,GAAA1D,KAAA8B,IAAA4B,EAAA,GAAAmC,IAGA,SAAAqyD,EAAA7lD,EAAAsmC,GACAA,EATA,SAAAA,GACA,OAAAA,EAAA,GAAA2e,EAAAjrB,EAAAirB,EAAA11D,EAAA+2C,EAAA,GAAA2e,EAAAjrB,EAAAirB,EAAAv1D,GAQA7H,CAAAy+C,GACA2e,EAAA11D,GAAAyQ,EAAA,GAAAsmC,EAAA,GACA2e,EAAAv1D,GAAAsQ,EAAA,GAAAsmC,EAAA,GAGA,SAAAwf,EAAA79B,EAAAjoB,EAAAsmC,EAAAtM,GACA/R,EAAAtyB,UAAA,CACApG,EAAA01D,EAAA11D,EACAG,EAAAu1D,EAAAv1D,EACAsqC,EAAAirB,EAAAjrB,GAEA4rB,EAAAj4D,KAAA8yB,IAAA,EAAAuZ,IACA6rB,EAAAf,EAAA9kD,EAAAsmC,GACAre,EAAAj4B,EAAA0C,OAAAu1B,GACAjnB,EAAA,IAAAinB,IAAAphC,aAAAma,aACAinB,EAAA1lC,KAAAqF,EAAAo9C,OAGA,SAAA+gB,IACA97C,KAAA3Y,OAAAi7C,EAAAp8C,QAAAoD,IAAA,SAAAhE,GACA,OAAAA,EAAA01D,EAAA11D,GAAA01D,EAAAjrB,IACOzmC,IAAAg5C,EAAAyZ,SACP77C,KAAA7Y,OAAA25C,EAAA96C,QAAAoD,IAAA,SAAA7D,GACA,OAAAA,EAAAu1D,EAAAv1D,GAAAu1D,EAAAjrB,IACOzmC,IAAA03C,EAAA+a,SAGP,SAAAC,EAAAzM,GACA2L,KAAA3L,EAAA,CACAxvC,KAAA,cAIA,SAAAk8C,EAAA1M,GACAuM,IACAvM,EAAA,CACAxvC,KAAA,OACA/Z,MAAAg1D,EAAAjrB,EACAnO,UAAA,CAAAo5B,EAAA11D,EAAA01D,EAAAv1D,KAIA,SAAAy2D,EAAA3M,KACA2L,IAAA3L,EAAA,CACAxvC,KAAA,YACO86C,EAAA,MAGP,SAAAQ,IACA,IAAAr9B,EAAAjkC,KACAw1D,EAAAxU,EAAAgV,GAAA/xB,EAAAhmC,WACAigE,EAAA,EACAJ,EAAA9xD,EAAA0C,OAAA8gD,EAAAvrB,IAAAhgB,GAAAm9C,EAMA,WACAlD,EAAA,EACA2D,EAAA71D,EAAAk4B,MAAAD,GAAAm+B,GACAF,EAAA1M,KATAvxC,GAAAo9C,EAYA,WACAvD,EAAA75C,GAAAm9C,EAAA,MAAAn9C,GAAAo9C,EAAA,MACA7C,EAAAN,GACAiE,EAAA3M,KAdA4M,EAAAT,EAAA31D,EAAAk4B,MAAAD,IACAu6B,EAAArC,GAAAl4B,GACAo+B,GAAA9jE,KAAA0lC,GACAg+B,EAAAzM,GAeA,SAAAkM,IACA,IAIAhwD,EAJAuyB,EAAAjkC,KACAw1D,EAAAxU,EAAAgV,GAAA/xB,EAAAhmC,WACAqkE,EAAA,GACAC,EAAA,EAEAC,EAAA,SAAAx2D,EAAAg1C,MAAA0b,eAAA,GAAAe,WACAgF,EAAA,YAAAD,EACAE,EAAA,WAAAF,EACAzsD,EAAA,GACA+nD,EAAA9xD,EAAA0C,OAAAu1B,GACAu6B,EAAArC,GAAAl4B,GAKA,SAAA0+B,IACA,IAAAhF,EAAA3xD,EAAA2xD,QAAA15B,GAKA,OAJAvyB,EAAAuvD,EAAAjrB,EACA2nB,EAAAhzD,QAAA,SAAA4iB,GACAA,EAAAkwC,cAAA6E,MAAA/0C,EAAAkwC,YAAAkE,EAAAp0C,MAEAowC,EAGA,SAAAiF,IACA,IAAA7kE,EAAAiO,EAAAg1C,MAAAjjD,OACAiO,EAAA0C,OAAA3Q,GAAAkmB,GAAAw+C,EAAAI,GAAA5+C,GAAAy+C,EAAAI,GACA/sD,EAAApI,KAAA5P,GAGA,IAFA,IAAAglE,EAAA/2D,EAAAg1C,MAAA0b,eAEA1+D,EAAA,EAAA8L,EAAAi5D,EAAA7kE,OAA2CF,EAAA8L,IAAO9L,EAClDskE,EAAAS,EAAA/kE,GAAAy/D,YAAA,KAGA,IAAAE,EAAAgF,IACA/S,EAAAjzC,KAAAizC,MAEA,OAAA+N,EAAAz/D,OAAA,CACA,GAAA0xD,EAAAoR,EAAA,KACA,IAAAhlD,EAAA2hD,EAAA,GACAmE,EAAA79B,EAAAjoB,EAAAsmD,EAAAtmD,EAAAyhD,YAAA9zD,KAAA4nD,MAAA5nD,KAAA22D,IAAAW,EAAAjrB,GAAArsC,KAAAq5D,KAAA,GACApN,IAGAoL,EAAApR,OACS,GAAA+N,EAAAz/D,OAAA,GACT8d,EAAA2hD,EAAA,OACAsF,EAAAtF,EAAA,GACAhrD,EAAAqJ,EAAA,GAAAinD,EAAA,GACA5xD,EAAA2K,EAAA,GAAAinD,EAAA,GACAV,EAAA5vD,IAAAtB,KAIA,SAAAwxD,IACA,IACAhD,EACAqD,EACAxQ,EACAyQ,EAJAxF,EAAA3xD,EAAA2xD,QAAA15B,GAKAo+B,GAAA9jE,KAAA0lC,GAEA,QAAAjmC,EAAA,EAAA8L,EAAA6zD,EAAAz/D,OAA2CF,EAAA8L,IAAO9L,EAAAmlE,EAAA,KAGlD,GAFAzQ,EAAAiL,EAAA3/D,GAEAmlE,EAAAb,EAAA5P,EAAA+K,YAAA,CACA,GAAAyF,EAAA,MACArD,EAAAnN,EAAAwQ,EAAAC,EAIA,GAAAA,EAAA,CACA,IAAAC,KAAA1Q,EAAA,GAAAmN,EAAA,IAAAuD,KAAA1Q,EAAA,GAAAmN,EAAA,IAAAuD,EACAxxD,EAAA2wD,GAAA54D,KAAAo+B,KAAAq7B,EAAAb,GACA1C,EAAA,EAAAA,EAAA,GAAAnN,EAAA,OAAAmN,EAAA,GAAAnN,EAAA,OACAwQ,EAAA,EAAAA,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAvB,EAAAhwD,EAAAF,GAGAsvD,EAAA,KACAa,EAAAhC,EAAAqD,GACAhB,EAAA1M,GAGA,SAAAsN,IACA,GAAA92D,EAAAg1C,MAAA2c,QAAAz/D,OAAA,CAGA,IAFA,IAAA6kE,EAAA/2D,EAAAg1C,MAAA0b,eAEA1+D,EAAA,EAAA8L,EAAAi5D,EAAA7kE,OAA6CF,EAAA8L,IAAO9L,SACpDskE,EAAAS,EAAA/kE,GAAAy/D,YAGA,QAAAA,KAAA6E,EACA,YAAAK,IAIA32D,EAAA6F,UAAAkE,GAAAkO,GAAAu+C,EAAA,MACA1E,EAAA75C,GAAA25C,EAAA0D,GAAAr9C,GAAA45C,EAAA6D,GACAlD,IACA2D,EAAA3M,GAzFAoN,IACAX,EAAAzM,GACAsI,EAAA75C,GAAA25C,EAAA,MAAA35C,GAAA45C,EAAA+E,GA2FA,SAAApB,IACA,IAAAhM,EAAAxU,EAAAgV,GAAAh2D,KAAA/B,WACA8iE,EAAAjwC,aAAAiwC,IAAyDsB,GAAA9jE,KAAAyB,MAAA6gE,EAAAc,EAAAb,EAAAplB,GAAA1vC,EAAAk4B,MAAAlkC,OAAAiiE,EAAAzM,IACzDuL,EAAAhwC,WAAA,WACAgwC,EAAA,KACAoB,EAAA3M,IACO,IACPI,IACAgM,EAAAj4D,KAAA8yB,IAAA,OAAA4mC,MAAApC,EAAAjrB,GACA6rB,EAAAf,EAAAD,GACAqB,EAAA1M,GAGA,SAAAiM,IACA,IAAAzlD,EAAAhQ,EAAAk4B,MAAAlkC,MACAg2C,EAAArsC,KAAA22D,IAAAW,EAAAjrB,GAAArsC,KAAAq5D,IACAlB,EAAA9hE,KAAAgc,EAAA2lD,EAAA3lD,GAAAhQ,EAAAg1C,MAAAsiB,SAAA35D,KAAAC,KAAAosC,GAAA,EAAArsC,KAAA4nD,MAAAvb,GAAA,GAGA,OAhVAurB,KACAA,GAAA,YAAAnS,GAAAiU,GAAA,WACA,OAAAr3D,EAAAg1C,MAAAuiB,QAAAv3D,EAAAg1C,MAAAwiB,UAAA,QACO,0BAAApU,GAAAiU,GAAA,WACP,OAAAr3D,EAAAg1C,MAAAyiB,YACO,eAAAJ,GAAA,WACP,OAAAr3D,EAAAg1C,MAAA0iB,QACO,wBAOP9/D,EAAAo9C,MAAA,SAAA1vC,GACAA,EAAA3C,KAAA,WACA,IAAA6mD,EAAAxU,EAAAgV,GAAAh2D,KAAA/B,WACA0lE,EAAA1C,EAEA2C,GACA53D,EAAA0C,OAAA1O,MAAA6C,aAAA8L,KAAA,wBACAsyD,EAAAjhE,KAAA2R,WAAA,CACApG,EAAA,EACAG,EAAA,EACAsqC,EAAA,GAEAisB,EAAAzM,KACWqO,MAAA,uBACX,IAAAlxD,EAAAlQ,EAAA,GACA4O,EAAA5O,EAAA,GACAwnB,EAAA62C,IAAA,GAAAnuD,EAAA,EACAuX,EAAA42C,IAAA,GAAAzvD,EAAA,EACArT,EAAAgO,EAAA4zD,gBAAA,EAAA31C,EAAAg3C,EAAA11D,GAAA01D,EAAAjrB,GAAA9rB,EAAA+2C,EAAAv1D,GAAAu1D,EAAAjrB,EAAArjC,EAAAsuD,EAAAjrB,GAAA,EAAA/rB,EAAA05C,EAAAp4D,GAAAo4D,EAAA3tB,GAAA9rB,EAAAy5C,EAAAj4D,GAAAi4D,EAAA3tB,EAAArjC,EAAAgxD,EAAA3tB,IACA,gBAAAzoB,GACA,IAAA+0B,EAAAtkD,EAAAuvB,GACAyoB,EAAArjC,EAAA2vC,EAAA,GACAtiD,KAAA2R,UAAAsvD,EAAA,CACA11D,EAAA0e,EAAAq4B,EAAA,GAAAtM,EACAtqC,EAAAwe,EAAAo4B,EAAA,GAAAtM,EACAA,KAEAksB,EAAA1M,MAEW7mD,KAAA,4BACXwzD,EAAA3M,KACW7mD,KAAA,sBACXwzD,EAAA3M,MAGAx1D,KAAA2R,UAAAsvD,EACAgB,EAAAzM,GACA0M,EAAA1M,GACA2M,EAAA3M,OAKA5xD,EAAAikC,UAAA,SAAAyrB,GACA,OAAAr1D,UAAAC,QACA+iE,EAAA,CACA11D,GAAA+nD,EAAA,GACA5nD,GAAA4nD,EAAA,GACAtd,EAAAirB,EAAAjrB,GAEA+rB,IACAn+D,GAPA,CAAAq9D,EAAA11D,EAAA01D,EAAAv1D,IAUA9H,EAAAqI,MAAA,SAAAqnD,GACA,OAAAr1D,UAAAC,QACA+iE,EAAA,CACA11D,EAAA01D,EAAA11D,EACAG,EAAAu1D,EAAAv1D,EACAsqC,EAAA,MAEA4rB,GAAAtO,GACAyO,IACAn+D,GARAq9D,EAAAjrB,GAWApyC,EAAAyJ,YAAA,SAAAimD,GACA,OAAAr1D,UAAAC,QACAmP,EAAA,MAAAimD,EAAA4N,GAAA,EAAA5N,EAAA,IAAAA,EAAA,IACA1vD,GAFAyJ,GAKAzJ,EAAA83C,OAAA,SAAA4X,GACA,OAAAr1D,UAAAC,QACAw9C,EAAA4X,GAAA,EAAAA,EAAA,IAAAA,EAAA,IACA1vD,GAFA83C,GAKA93C,EAAAnB,KAAA,SAAA6wD,GACA,OAAAr1D,UAAAC,QACAuE,EAAA6wD,GAAA,EAAAA,EAAA,IAAAA,EAAA,IACA1vD,GAFAnB,GAKAmB,EAAAoZ,SAAA,SAAAs2C,GACA,OAAAr1D,UAAAC,QACA8e,GAAAs2C,EACA1vD,GAFAoZ,GAKApZ,EAAA2H,EAAA,SAAAsjD,GACA,OAAA5wD,UAAAC,QACA+nB,EAAA4oC,EACAtG,EAAAsG,EAAA9gD,OACAkzD,EAAA,CACA11D,EAAA,EACAG,EAAA,EACAsqC,EAAA,GAEApyC,GARAqiB,GAWAriB,EAAA8H,EAAA,SAAAmjD,GACA,OAAA5wD,UAAAC,QACAioB,EAAA0oC,EACA5H,EAAA4H,EAAA9gD,OACAkzD,EAAA,CACA11D,EAAA,EACAG,EAAA,EACAsqC,EAAA,GAEApyC,GARAuiB,GA2NAna,EAAAopD,OAAAxxD,EAAAo9C,EAAA,OAGA,IACAqiB,GACA9B,GAFAL,GAAA,GAAA5tD,KAKA,SAAAwwD,MAQA,SAAAC,GAAAv1D,EAAAgB,EAAA8yC,GACA,OAAAtiD,gBAAA+jE,IAAA/jE,KAAAwO,KAAAxO,KAAAwP,UAAAxP,KAAAsiD,OAAArkD,UAAAC,OAAA,EAAAsQ,aAAAu1D,GAAA,IAAAA,GAAAv1D,MAAAgB,EAAAhB,EAAA8zC,GAAA0hB,GAAA,GAAAx1D,EAAAy1D,GAAAF,IAAA,IAAAA,GAAAv1D,EAAAgB,EAAA8yC,GAXAt2C,EAAArJ,MAAAmhE,GAIAA,GAAAzlE,UAAA2R,SAAA,WACA,OAAAhQ,KAAA0lD,MAAA,IAGA15C,EAAAk4D,IAAAH,GAMA,IAAAI,GAAAJ,GAAA1lE,UAAA,IAAAylE,GAgBA,SAAAM,GAAA51D,EAAAgB,EAAA8yC,GACA,IAAA+hB,EAAAC,EAeA,SAAAC,EAAA/1D,GACA,OAAA7E,KAAAsiC,MAAA,IATA,SAAAz9B,GAEA,OADAA,EAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAA61D,GAAAC,EAAAD,GAAA71D,EAAA,GACAA,EAAA,IAAA81D,EACA91D,EAAA,IAAA61D,GAAAC,EAAAD,IAAA,IAAA71D,GAAA,GACA61D,EAIAn7D,CAAAsF,IAGA,OAlBAA,EAAAyjB,MAAAzjB,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACAgB,EAAAyiB,MAAAziB,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EAGA60D,EAAA,GAFA/hB,IAAA,IAAAA,EAAA,IAAAA,IACAgiB,EAAAhiB,GAAA,GAAAA,GAAA,EAAA9yC,GAAA8yC,EAAA9yC,EAAA8yC,EAAA9yC,GAeA,IAAAg1D,GAAAD,EAAA/1D,EAAA,KAAA+1D,EAAA/1D,GAAA+1D,EAAA/1D,EAAA,MAKA,SAAAi2D,GAAAj2D,EAAAw0B,EAAAsf,GACA,OAAAtiD,gBAAAykE,IAAAzkE,KAAAwO,KAAAxO,KAAAgjC,UAAAhjC,KAAAsiD,OAAArkD,UAAAC,OAAA,EAAAsQ,aAAAi2D,GAAA,IAAAA,GAAAj2D,MAAAw0B,EAAAx0B,EAAA8zC,GAAAoiB,GAAAl2D,aAAAm2D,GAAAn2D,EAAA8zC,GAAA9zC,EAAAo2D,IAAAp2D,EAAAxC,EAAA05C,IAAAl3C,IAAA82C,EAAA92C,EAAA8C,EAAA9C,EAAAsO,IAAAwlC,EAAA9zC,EAAAqO,EAAArO,EAAAsO,GAAA,IAAA2nD,GAAAj2D,EAAAw0B,EAAAsf,GAxCA6hB,GAAAxe,SAAA,SAAA3P,GAEA,OADAA,EAAArsC,KAAA8yB,IAAA,GAAAx+B,UAAAC,OAAA83C,EAAA,GACA,IAAA+tB,GAAA/jE,KAAAwO,EAAAxO,KAAAwP,EAAAxP,KAAAsiD,EAAAtM,IAGAmuB,GAAAU,OAAA,SAAA7uB,GAEA,OADAA,EAAArsC,KAAA8yB,IAAA,GAAAx+B,UAAAC,OAAA83C,EAAA,GACA,IAAA+tB,GAAA/jE,KAAAwO,EAAAxO,KAAAwP,EAAAwmC,EAAAh2C,KAAAsiD,IAGA6hB,GAAAze,IAAA,WACA,OAAA0e,GAAApkE,KAAAwO,EAAAxO,KAAAwP,EAAAxP,KAAAsiD,IA0BAt2C,EAAA84D,IAAAL,GAMA,IAAAM,GAAAN,GAAApmE,UAAA,IAAAylE,GAcA,SAAAkB,GAAAx2D,EAAAw0B,EAAAsf,GAGA,OAFArwB,MAAAzjB,OAAA,GACAyjB,MAAA+Q,OAAA,GACA,IAAA2hC,GAAAriB,EAAA34C,KAAAu+B,IAAA15B,GAAAuwD,IAAA/7B,EAAAr5B,KAAAuH,IAAA1C,GAAAw0B,GAKA,SAAA2hC,GAAAriB,EAAAzlC,EAAAC,GACA,OAAA9c,gBAAA2kE,IAAA3kE,KAAAsiD,KAAAtiD,KAAA6c,UAAA7c,KAAA8c,OAAA7e,UAAAC,OAAA,EAAAokD,aAAAqiB,GAAA,IAAAA,GAAAriB,MAAAzlC,EAAAylC,EAAAxlC,GAAAwlC,aAAAmiB,GAAAO,GAAA1iB,EAAA9zC,EAAA8zC,EAAAtf,EAAAsf,KAAAsiB,IAAAtiB,EAAAkiB,GAAAliB,IAAAgD,EAAAhD,EAAAhxC,EAAAgxC,EAAAxlC,GAAA,IAAA6nD,GAAAriB,EAAAzlC,EAAAC,GArBAioD,GAAApf,SAAA,SAAA3P,GACA,WAAAyuB,GAAAzkE,KAAAwO,EAAAxO,KAAAgjC,EAAAr5B,KAAA8B,IAAA,IAAAzL,KAAAsiD,EAAA2iB,IAAAhnE,UAAAC,OAAA83C,EAAA,MAGA+uB,GAAAF,OAAA,SAAA7uB,GACA,WAAAyuB,GAAAzkE,KAAAwO,EAAAxO,KAAAgjC,EAAAr5B,KAAA0G,IAAA,EAAArQ,KAAAsiD,EAAA2iB,IAAAhnE,UAAAC,OAAA83C,EAAA,MAGA+uB,GAAArf,IAAA,WACA,OAAAsf,GAAAhlE,KAAAwO,EAAAxO,KAAAgjC,EAAAhjC,KAAAsiD,GAAAoD,OASA15C,EAAAk5D,IAAAP,GAMA,IAAAM,GAAA,GACAE,GAAA,OACAC,GAAA,EACAC,GAAA,QACAC,GAAAX,GAAAtmE,UAAA,IAAAylE,GAcA,SAAAyB,GAAAjjB,EAAAzlC,EAAAC,GACA,IAAApR,GAAA42C,EAAA,QACA/2C,EAAAG,EAAAmR,EAAA,IACAgyC,EAAAnjD,EAAAoR,EAAA,IAIA,WAAA0nD,GAAAgB,GAAA,WAHAj6D,EAAAk6D,GAAAl6D,GAAA45D,IAGA,WAFAz5D,EAAA+5D,GAAA/5D,GAAA05D,IAEA,UADAvW,EAAA4W,GAAA5W,GAAAwW,KACAG,IAAA,QAAAj6D,EAAA,UAAAG,EAAA,QAAAmjD,GAAA2W,GAAA,SAAAj6D,EAAA,SAAAG,EAAA,UAAAmjD,IAGA,SAAA6V,GAAApiB,EAAAzlC,EAAAC,GACA,OAAAwlC,EAAA,MAAAmiB,GAAA96D,KAAA+7D,MAAA5oD,EAAAD,GAAAmiD,GAAAr1D,KAAAo+B,KAAAlrB,IAAAC,KAAAwlC,GAAA,IAAAmiB,GAAA/8C,QAAA46B,GAGA,SAAAmjB,GAAAl6D,GACA,OAAAA,EAAA,WAAAA,SAAA,eAGA,SAAAo6D,GAAAp6D,GACA,OAAAA,EAAA,QAAA5B,KAAA8yB,IAAAlxB,EAAA,cAAAA,EAAA,KAGA,SAAAi6D,GAAAlgB,GACA,OAAA37C,KAAAsiC,MAAA,KAAAqZ,GAAA,aAAAA,EAAA,MAAA37C,KAAA8yB,IAAA6oB,EAAA,cAKA,SAAAkf,GAAAlf,EAAAh0C,EAAAwL,GACA,OAAA9c,gBAAAwkE,IAAAxkE,KAAAslD,MAAAtlD,KAAAsR,WAAAtR,KAAA8c,QAAA7e,UAAAC,OAAA,EAAAonD,aAAAkf,GAAA,IAAAA,GAAAlf,MAAAh0C,EAAAg0C,EAAAxoC,GAAAknD,GAAA,GAAA1e,EAAAkf,GAAAJ,IAAA,IAAAI,GAAAlf,EAAAh0C,EAAAwL,GAGA,SAAA8oD,GAAAhoE,GACA,WAAA4mE,GAAA5mE,GAAA,GAAAA,GAAA,UAAAA,GAGA,SAAAioE,GAAAjoE,GACA,OAAAgoE,GAAAhoE,GAAA,GAjDA0nE,GAAA3f,SAAA,SAAA3P,GACA,WAAA2uB,GAAAh7D,KAAA8B,IAAA,IAAAzL,KAAAsiD,EAAA2iB,IAAAhnE,UAAAC,OAAA83C,EAAA,IAAAh2C,KAAA6c,EAAA7c,KAAA8c,IAGAwoD,GAAAT,OAAA,SAAA7uB,GACA,WAAA2uB,GAAAh7D,KAAA0G,IAAA,EAAArQ,KAAAsiD,EAAA2iB,IAAAhnE,UAAAC,OAAA83C,EAAA,IAAAh2C,KAAA6c,EAAA7c,KAAA8c,IAGAwoD,GAAA5f,IAAA,WACA,OAAA6f,GAAAvlE,KAAAsiD,EAAAtiD,KAAA6c,EAAA7c,KAAA8c,IA6BA9Q,EAAA05C,IAAA8e,GAcA,IAAAsB,GAAAtB,GAAAnmE,UAAA,IAAAylE,GA4BA,SAAAiC,GAAA78D,GACA,OAAAA,EAAA,OAAAS,KAAA0G,IAAA,EAAAnH,GAAA8G,SAAA,IAAArG,KAAA8B,IAAA,IAAAvC,GAAA8G,SAAA,IAGA,SAAAg0D,GAAAhxD,EAAA0yC,EAAAwe,GACA,IAGAG,EACAC,EACA3hE,EALA2iD,EAAA,EACAh0C,EAAA,EACAwL,EAAA,EAMA,GAFAunD,EAAA,mBAAA2B,KAAAhzD,IAAAm7B,eAKA,OAFAm2B,EAAAD,EAAA,GAAAp0D,MAAA,KAEAo0D,EAAA,IACA,UAEA,OAAAH,EAAA+B,WAAA3B,EAAA,IAAA2B,WAAA3B,EAAA,QAAA2B,WAAA3B,EAAA,SAGA,UAEA,OAAA5e,EAAAwgB,GAAA5B,EAAA,IAAA4B,GAAA5B,EAAA,IAAA4B,GAAA5B,EAAA,KAKA,OAAA3hE,EAAAwjE,GAAA9jE,IAAA2Q,IACA0yC,EAAA/iD,EAAA2iD,EAAA3iD,EAAA2O,EAAA3O,EAAAma,IAGA,MAAA9J,GAAA,MAAAA,EAAA9C,OAAA,IAAA+hB,MAAAtvB,EAAAyjE,SAAApzD,EAAA5C,MAAA,UACA,IAAA4C,EAAA9U,QACAonD,GAAA,KAAA3iD,IAAA,EACA2iD,MAAA,EACAh0C,EAAA,IAAA3O,EACA2O,MAAA,EACAwL,EAAA,GAAAna,EACAma,MAAA,GACO,IAAA9J,EAAA9U,SACPonD,GAAA,SAAA3iD,IAAA,GACA2O,GAAA,MAAA3O,IAAA,EACAma,EAAA,IAAAna,IAIA+iD,EAAAJ,EAAAh0C,EAAAwL,IAGA,SAAAmnD,GAAA3e,EAAAh0C,EAAAwL,GACA,IAGAtO,EACAgB,EAJA/D,EAAA9B,KAAA8B,IAAA65C,GAAA,IAAAh0C,GAAA,IAAAwL,GAAA,KACAzM,EAAA1G,KAAA0G,IAAAi1C,EAAAh0C,EAAAwL,GACA9S,EAAAqG,EAAA5E,EAGA62C,GAAAjyC,EAAA5E,GAAA,EAWA,OATAzB,GACAwF,EAAA8yC,EAAA,GAAAt4C,GAAAqG,EAAA5E,GAAAzB,GAAA,EAAAqG,EAAA5E,GACA+C,EAAA82C,GAAAj1C,GAAAiB,EAAAwL,GAAA9S,GAAAsH,EAAAwL,EAAA,KAAsDxL,GAAAjB,GAAAyM,EAAAwoC,GAAAt7C,EAAA,GAAuCs7C,EAAAh0C,GAAAtH,EAAA,EAC7FwE,GAAA,KAEAA,EAAAkZ,IACAlY,EAAA8yC,EAAA,GAAAA,EAAA,IAAA9zC,GAGA,IAAAu1D,GAAAv1D,EAAAgB,EAAA8yC,GAGA,SAAAsiB,GAAAtf,EAAAh0C,EAAAwL,GAIA,IAAAvR,EAAAo6D,IAAA,UAHArgB,EAAA+gB,GAAA/gB,IAGA,UAFAh0C,EAAA+0D,GAAA/0D,IAEA,UADAwL,EAAAupD,GAAAvpD,KACAqoD,IACAz5D,EAAAi6D,IAAA,SAAArgB,EAAA,SAAAh0C,EAAA,QAAAwL,GAAAsoD,IAEA,OAAAT,GAAA,IAAAj5D,EAAA,QAAAH,EAAAG,GAAA,KAAAA,EADAi6D,IAAA,SAAArgB,EAAA,QAAAh0C,EAAA,SAAAwL,GAAAuoD,MAIA,SAAAgB,GAAA/gB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA37C,KAAA8yB,KAAA6oB,EAAA,iBAGA,SAAA4gB,GAAAljC,GACA,IAAAxR,EAAAy0C,WAAAjjC,GACA,YAAAA,EAAA9yB,OAAA8yB,EAAA9kC,OAAA,GAAAyL,KAAAsiC,MAAA,KAAAza,KAjHAs0C,GAAAngB,SAAA,SAAA3P,GACAA,EAAArsC,KAAA8yB,IAAA,GAAAx+B,UAAAC,OAAA83C,EAAA,GACA,IAAAsP,EAAAtlD,KAAAslD,EACAh0C,EAAAtR,KAAAsR,EACAwL,EAAA9c,KAAA8c,EACA9e,EAAA,GACA,OAAAsnD,GAAAh0C,GAAAwL,GACAwoC,KAAAtnD,IAAAsnD,EAAAtnD,GACAsT,KAAAtT,IAAAsT,EAAAtT,GACA8e,KAAA9e,IAAA8e,EAAA9e,GACA,IAAAwmE,GAAA76D,KAAA8B,IAAA,IAAA65C,EAAAtP,GAAArsC,KAAA8B,IAAA,IAAA6F,EAAA0kC,GAAArsC,KAAA8B,IAAA,IAAAqR,EAAAk5B,KAJA,IAAAwuB,GAAAxmE,QAOA8nE,GAAAjB,OAAA,SAAA7uB,GAEA,WAAAwuB,IADAxuB,EAAArsC,KAAA8yB,IAAA,GAAAx+B,UAAAC,OAAA83C,EAAA,IACAh2C,KAAAslD,EAAAtP,EAAAh2C,KAAAsR,EAAA0kC,EAAAh2C,KAAA8c,IAGAgpD,GAAA5B,IAAA,WACA,OAAAD,GAAAjkE,KAAAslD,EAAAtlD,KAAAsR,EAAAtR,KAAA8c,IAGAgpD,GAAA91D,SAAA,WACA,UAAA+1D,GAAA/lE,KAAAslD,GAAAygB,GAAA/lE,KAAAsR,GAAAy0D,GAAA/lE,KAAA8c,IA6FA,IAAAqpD,GAAAn6D,EAAAuD,IAAA,CACA+2D,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,WAMA,SAAAC,GAAAxmE,GACA,0BAAAA,IAAA,WACA,OAAAA,GAOA,SAAAymE,GAAA96B,GACA,gBAAAP,EAAAC,EAAA5iB,GAEA,OADA,IAAA1zB,UAAAC,QAAA,oBAAAq2C,IAAA5iB,EAAA4iB,IAAA,MACAq7B,GAAAt7B,EAAAC,EAAAM,EAAAljB,IAIA,SAAAi+C,GAAAt7B,EAAAC,EAAAM,EAAAljB,GACA,IAAA+iB,EAAA,GACA8gB,EAAAxpD,EAAAwpD,SAAA,wCACAhhB,EAAA,GACAq7B,EAAA,IAAAC,eACAC,EAAA,KAMA,SAAAC,IACA,IACAC,EADAj7B,EAAA66B,EAAA76B,OAGA,IAAAA,GAuFA,SAAA66B,GACA,IAAA7pD,EAAA6pD,EAAAE,aACA,OAAA/pD,GAAA,SAAAA,EAAA6pD,EAAAh7B,SAAAg7B,EAAA/6B,aAzFAo7B,CAAAL,IAAA76B,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACAi7B,EAAAp7B,EAAAt2C,KAAAm2C,EAAAm7B,GACS,MAAAzkD,IAET,YADAoqC,EAAA/kC,MAAAlyB,KAAAm2C,EAAAtpB,IAIAoqC,EAAA7zD,KAAApD,KAAAm2C,EAAAu7B,QAEAza,EAAA/kC,MAAAlyB,KAAAm2C,EAAAm7B,GAoEA,OAvFA7vE,KAAAmwE,gBAAA,oBAAAN,IAAA,oBAAA/W,KAAAxkB,KAAAu7B,EAAA,IAAAM,gBACA,WAAAN,IAAAO,OAAAP,EAAAQ,QAAAL,EAAAH,EAAAS,mBAAA,WACAT,EAAAU,WAAA,GAAAP,KAqBAH,EAAAW,WAAA,SAAAxvB,GACA,IAAA53C,EAAA4C,EAAAg1C,MACAh1C,EAAAg1C,QAEA,IACAwU,EAAAib,SAAAlyE,KAAAm2C,EAAAm7B,GACO,QACP7jE,EAAAg1C,MAAA53C,IAIAsrC,EAAAC,OAAA,SAAA8C,EAAA75C,GAEA,OADA65C,KAAA,IAAAtJ,cACAlwC,UAAAC,OAAA,EAAAs2C,EAAAiD,IACA,MAAA75C,SAAA42C,EAAAiD,GAA8CjD,EAAAiD,GAAA75C,EAAA,GAC9C82C,IAGAA,EAAAH,SAAA,SAAA32C,GACA,OAAAK,UAAAC,QACAq2C,EAAA,MAAA32C,EAAA,KAAAA,EAAA,GACA82C,GAFAH,GAKAG,EAAAq7B,aAAA,SAAAnyE,GACA,OAAAK,UAAAC,QACA6xE,EAAAnyE,EACA82C,GAFAq7B,GAKAr7B,EAAAG,SAAA,SAAAj3C,GAEA,OADAi3C,EAAAj3C,EACA82C,GAGA,eAAA/pC,QAAA,SAAAypD,GACA1f,EAAA0f,GAAA,WACA,OAAA1f,EAAAg8B,KAAApwE,MAAAo0C,EAAA,CAAA0f,GAAAhlD,OAAA8/C,EAAAjxD,gBAIAy2C,EAAAg8B,KAAA,SAAAtc,EAAA1yD,EAAAiwB,GAIA,GAHA,IAAA1zB,UAAAC,QAAA,oBAAAwD,IAAAiwB,EAAAjwB,IAAA,MACAmuE,EAAAc,KAAAvc,EAAA9f,GAAA,GACA,MAAAC,GAAA,WAAAC,MAAA,OAAAD,EAAA,QACAs7B,EAAAe,iBAAA,QAAAn5B,KAAAjD,EACAq7B,EAAAe,iBAAAn5B,EAAAjD,EAAAiD,IASA,OAPA,MAAAlD,GAAAs7B,EAAAgB,kBAAAhB,EAAAgB,iBAAAt8B,GACA,MAAAw7B,IAAAF,EAAAE,gBACA,MAAAp+C,GAAA+iB,EAAAzwB,GAAA,QAAA0N,GAAA1N,GAAA,gBAAA4rD,GACAl+C,EAAA,KAAAk+C,KAEAra,EAAAsb,WAAAvyE,KAAAm2C,EAAAm7B,GACAA,EAAAa,KAAA,MAAAhvE,EAAA,KAAAA,GACAgzC,GAGAA,EAAAq8B,MAAA,WAEA,OADAlB,EAAAkB,QACAr8B,GAGA1oC,EAAAopD,OAAA1gB,EAAA8gB,EAAA,MACA,MAAA7jC,EAAA+iB,IAAAryC,IAGA,SAAAsvB,GACA,WAAAA,EAAAzzB,OAAA,SAAAuyB,EAAAo/C,GACAl+C,EAAA,MAAAlB,EAAAo/C,EAAA,OACKl+C,EANLq/C,CAAAr/C,IAjHAw0C,GAAAx7D,QAAA,SAAAvM,EAAAR,GACAuoE,GAAApxC,IAAA32B,EAAAwnE,GAAAhoE,MASAoO,EAAAilE,QAAAvB,GACA1jE,EAAA0oC,IAAAi7B,GAAAzb,GAoHAloD,EAAAklE,IAAA,SAAAC,EAAA58B,GACA,IAAA68B,EAAA,IAAA7Y,OAAA,KAAA4Y,EAAA,OACAE,EAAAF,EAAAG,WAAA,GAEA,SAAAJ,EAAA58B,EAAAue,EAAAlhC,GACA1zB,UAAAC,OAAA,IAAAyzB,EAAAkhC,IAAA,MACA,IAAAne,EAAAk7B,GAAAt7B,EAAAC,EAAA,MAAAse,EAAAhe,EAAA08B,EAAA1e,GAAAlhC,GAMA,OAJA+iB,EAAAme,IAAA,SAAAS,GACA,OAAAr1D,UAAAC,OAAAw2C,EAAAG,SAAA,OAAAge,EAAAS,GAAAze,EAAA08B,EAAAje,IAAAT,GAGAne,EAGA,SAAAG,EAAAg7B,GACA,OAAAqB,EAAAl/C,MAAA69C,EAAA/6B,cAGA,SAAAy8B,EAAA//C,GACA,gBAAAq+C,GACA,OAAAqB,EAAAl/C,MAAA69C,EAAA/6B,aAAAtjB,IAyGA,SAAAggD,EAAA3e,GACA,OAAAA,EAAAtjD,IAAAkiE,GAAAC,KAAAP,GAGA,SAAAM,EAAA1qE,GACA,OAAAqqE,EAAAtY,KAAA/xD,GAAA,IAAAA,EAAA+D,QAAA,gBAAA/D,EAGA,OA7GAmqE,EAAAl/C,MAAA,SAAAjrB,EAAAyqB,GACA,IAAApoB,EACA,OAAA8nE,EAAA17B,UAAAzuC,EAAA,SAAA8rD,EAAA70D,GACA,GAAAoL,EAAA,OAAAA,EAAAypD,EAAA70D,EAAA,GACA,IAAA6e,EAAA,IAAAyV,SAAA,eAA2CugC,EAAAtjD,IAAA,SAAAkoC,EAAAz5C,GAC3C,OAAAk3C,KAAAy8B,UAAAl6B,GAAA,OAAAz5C,EAAA,MACS0zE,KAAA,UACTtoE,EAAAooB,EAAA,SAAAqhC,EAAA70D,GACA,OAAAwzB,EAAA3U,EAAAg2C,GAAA70D,IACS6e,KAITq0D,EAAA17B,UAAA,SAAAzuC,EAAAyqB,GACA,IAMAjE,EACAqkD,EAPAC,EAAA,GACAC,EAAA,GACAxyC,EAAA,GACAyyC,EAAAhrE,EAAA7I,OACA8zE,EAAA,EACAloE,EAAA,EAIA,SAAAmoE,IACA,GAAAD,GAAAD,EAAA,OAAAD,EACA,GAAAF,EAAA,OAAAA,GAAA,EAAAC,EACA,IAAAryC,EAAAwyC,EAEA,QAAAjrE,EAAAuqE,WAAA9xC,GAAA,CAGA,IAFA,IAAAxhC,EAAAwhC,EAEAxhC,IAAA+zE,GACA,QAAAhrE,EAAAuqE,WAAAtzE,GAAA,CACA,QAAA+I,EAAAuqE,WAAAtzE,EAAA,WACAA,EAcA,OAVAg0E,EAAAh0E,EAAA,EAGA,MAFAglC,EAAAj8B,EAAAuqE,WAAAtzE,EAAA,KAGA4zE,GAAA,EACA,KAAA7qE,EAAAuqE,WAAAtzE,EAAA,MAAAg0E,GACW,KAAAhvC,IACX4uC,GAAA,GAGA7qE,EAAAqJ,MAAAovB,EAAA,EAAAxhC,GAAA8M,QAAA,WAGA,KAAAknE,EAAAD,GAAA,CACA,IAAA/uC,EACAgT,EAAA,EACA,SAFAhT,EAAAj8B,EAAAuqE,WAAAU,MAEAJ,GAAA,OAAmC,QAAA5uC,EACnC4uC,GAAA,EACA,KAAA7qE,EAAAuqE,WAAAU,WAAAh8B,QACW,GAAAhT,IAAAquC,EAAA,SACX,OAAAtqE,EAAAqJ,MAAAovB,EAAAwyC,EAAAh8B,GAGA,OAAAjvC,EAAAqJ,MAAAovB,GAGA,MAAAjS,EAAA0kD,OAAAH,GAAA,CAGA,IAFA,IAAAj1D,EAAA,GAEA0Q,IAAAskD,GAAAtkD,IAAAukD,GACAj1D,EAAAlP,KAAA4f,GACAA,EAAA0kD,IAGAzgD,GAAA,OAAA3U,EAAA2U,EAAA3U,EAAA/S,OACAw1B,EAAA3xB,KAAAkP,GAGA,OAAAyiB,GAGA4xC,EAAAl+D,OAAA,SAAAssB,GACA,GAAAh2B,MAAAD,QAAAi2B,EAAA,WAAA4xC,EAAAgB,WAAA5yC,GACA,IAAA6yC,EAAA,IAAAle,EACAme,EAAA,GAQA,OAPA9yC,EAAA30B,QAAA,SAAAkoD,GACA,QAAAwf,KAAAxf,EACAsf,EAAA/jB,IAAAikB,IACAD,EAAAzkE,KAAAwkE,EAAA3kD,IAAA6kD,MAIA,CAAAD,EAAA7iE,IAAAkiE,GAAAC,KAAAP,IAAA/hE,OAAAkwB,EAAA/vB,IAAA,SAAAsjD,GACA,OAAAuf,EAAA7iE,IAAA,SAAA8iE,GACA,OAAAZ,EAAA5e,EAAAwf,MACSX,KAAAP,MACFO,KAAA,OAGPR,EAAAgB,WAAA,SAAA5yC,GACA,OAAAA,EAAA/vB,IAAAiiE,GAAAE,KAAA,OAWAR,GAGAllE,EAAAypC,IAAAzpC,EAAAklE,IAAA,gBACAllE,EAAA0pC,IAAA1pC,EAAAklE,IAAA,kCAEA,IAAAoB,GACAC,GACAC,GACAC,GACAC,GAAA1yE,KAAAq0D,EAAAr0D,KAAA,oCAAA2xB,GACAZ,WAAAY,EAAA,KAOA,SAAAghD,GAAAhhD,EAAAihD,EAAAC,GACA,IAAA/oE,EAAA7L,UAAAC,OACA4L,EAAA,IAAA8oE,EAAA,GACA9oE,EAAA,IAAA+oE,EAAAl2D,KAAAizC,OACA,IACAh+B,EAAA,CACAoR,EAAArR,EACApE,EAHAslD,EAAAD,EAIA9oE,EAAA,MAWA,OATAyoE,MAAAzoE,EAAA8nB,EAAyD0gD,GAAA1gD,EACzD2gD,GAAA3gD,EAEA4gD,KACAC,GAAA3hD,aAAA2hD,IACAD,GAAA,EACAE,GAAAI,KAGAlhD,EAGA,SAAAkhD,KACA,IAAAljB,EAAAmjB,KACAH,EAAAI,KAAApjB,EAEAgjB,EAAA,IACAv6C,SAAAu6C,KACA9hD,aAAA2hD,IACAA,GAAA1hD,WAAA+hD,GAAAF,IAGAJ,GAAA,IAEAA,GAAA,EACAE,GAAAI,KASA,SAAAC,KAIA,IAHA,IAAAnjB,EAAAjzC,KAAAizC,MACAh+B,EAAA0gD,GAEA1gD,GACAg+B,GAAAh+B,EAAArE,GAAAqE,EAAAoR,EAAA4sB,EAAAh+B,EAAArE,KAAAqE,EAAAoR,EAAA,MACApR,IAAA9nB,EAGA,OAAA8lD,EAGA,SAAAojB,KAKA,IAJA,IAAAC,EACAt6B,EAAA25B,GACA77D,EAAAnD,IAEAqlC,GACAA,EAAA3V,GACA2V,EAAAprB,EAAA9W,MAAAkiC,EAAAprB,GACAorB,GAAAs6B,EAAAt6B,GAAA7uC,GAEA6uC,EAAAs6B,IAAAnpE,EAAA6uC,EAAA7uC,EAAAwoE,GAAA35B,EAAA7uC,EAKA,OADAyoE,GAAAU,EACAx8D,EAGA,SAAAy8D,GAAA3nE,EAAAyQ,GACA,OAAAA,GAAAzQ,EAAA5B,KAAAC,KAAAD,KAAA22D,IAAA/0D,GAAA5B,KAAAwpE,MAAA,GA/EAnnE,EAAA4lB,MAAA,WACA+gD,GAAAryE,MAAAN,KAAA/B,YA0CA+N,EAAA4lB,MAAAZ,MAAA,WACA+hD,KACAC,MAqCAhnE,EAAAigC,MAAA,SAAA1gC,EAAAzB,GACA,OAAAA,EAAAH,KAAAsiC,MAAA1gC,GAAAzB,EAAAH,KAAA8yB,IAAA,GAAA3yB,OAAAH,KAAAsiC,MAAA1gC,IAGA,IAAA6nE,GAAA,wEAAA7jE,IAeA,SAAAvF,EAAAhM,GACA,IAAAg4C,EAAArsC,KAAA8yB,IAAA,KAAA0L,EAAA,EAAAnqC,IACA,OACAiO,MAAAjO,EAAA,WAAAgM,GACA,OAAAA,EAAAgsC,GACO,SAAAhsC,GACP,OAAAA,EAAAgsC,GAEAq9B,OAAArpE,KAIA,SAAAspE,GAAAC,GACA,IAAAC,EAAAD,EAAAt3C,QACAw3C,EAAAF,EAAAG,UACAC,EAAAJ,EAAAK,SACAC,EAAAN,EAAAO,SACAC,EAAAJ,GAAAF,EAAA,SAAA71E,EAAA+N,GAOA,IANA,IAAA3N,EAAAJ,EAAAM,OACAqvB,EAAA,GACAiS,EAAA,EACAluB,EAAAqiE,EAAA,GACAz1E,EAAA,EAEAF,EAAA,GAAAsT,EAAA,IACApT,EAAAoT,EAAA,EAAA3F,IAAA2F,EAAA3H,KAAA0G,IAAA,EAAA1E,EAAAzN,IACAqvB,EAAA5f,KAAA/P,EAAAo2E,UAAAh2E,GAAAsT,EAAAtT,EAAAsT,OACApT,GAAAoT,EAAA,GAAA3F,KACA2F,EAAAqiE,EAAAn0C,KAAA,GAAAm0C,EAAAz1E,QAGA,OAAAqvB,EAAA4rB,UAAAu4B,KAAA+B,IACKvf,EACL,gBAAA+f,GACA,IAAA1Y,EAAA2Y,GAAAlO,KAAAiO,GACAE,EAAA5Y,EAAA,QACA6Y,EAAA7Y,EAAA,QACAr/B,EAAAq/B,EAAA,QACA8X,EAAA9X,EAAA,OACA8Y,EAAA9Y,EAAA,GACA5vD,GAAA4vD,EAAA,GACA+Y,EAAA/Y,EAAA,GACAgZ,EAAAhZ,EAAA,GACAv1C,EAAAu1C,EAAA,GACAtvD,EAAA,EACAugC,EAAA,GACAgoC,EAAA,GACAz4C,GAAA,EACAD,GAAA,EAQA,OAPAy4C,SAAAP,UAAA,KAEAK,GAAA,MAAAF,GAAA,MAAAC,KACAC,EAAAF,EAAA,IACAC,EAAA,KAGApuD,GACA,QACAsuD,GAAA,EACAtuD,EAAA,IACA,MAEA,QACA/Z,EAAA,IACAuoE,EAAA,IACAxuD,EAAA,IACA,MAEA,QACA/Z,EAAA,IACAuoE,EAAA,IACAxuD,EAAA,IACA,MAEA,QACA,QACA,QACA,QACA,MAAAqtD,IAAA7mC,EAAA,IAAAxmB,EAAAmoB,eAEA,QACArS,GAAA,EAEA,QACAC,GAAA,EACAw4C,EAAA,EACA,MAEA,QACAtoE,GAAA,EACA+Z,EAAA,IAIA,MAAAqtD,IAAA7mC,EAAAqnC,EAAA,GAAAW,EAAAX,EAAA,IACA,KAAA7tD,GAAAuuD,IAAAvuD,EAAA,KAEA,MAAAuuD,IACA,KAAAvuD,EAAAuuD,EAAA5qE,KAAA0G,IAAA,EAAA1G,KAAA8B,IAAA,GAAA8oE,IAA0E,KAAAvuD,GAAA,KAAAA,IAAAuuD,EAAA5qE,KAAA0G,IAAA,EAAA1G,KAAA8B,IAAA,GAAA8oE,MAG1EvuD,EAAAyuD,GAAApyE,IAAA2jB,IAAA0uD,GACA,IAAAC,EAAAN,GAAAC,EACA,gBAAA12E,GACA,IAAAg3E,EAAAJ,EACA,GAAAz4C,GAAAn+B,EAAA,WACA,IAAAi3E,EAAAj3E,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAs+B,EAAA,GAAAA,EAEA,GAAAjwB,EAAA,GACA,IAAAgQ,EAAAjQ,EAAA8oE,aAAAl3E,EAAA22E,GACA32E,EAAAqe,EAAAhQ,MAAArO,GACAg3E,EAAA34D,EAAAo3D,OAAAmB,OAEA52E,GAAAqO,EAIA,IACAiuD,EACA6a,EAFA/2E,GADAJ,EAAAooB,EAAApoB,EAAA22E,IACAS,YAAA,KAIA,GAAAh3E,EAAA,GACA,IAAAwhC,EAAA1D,EAAAl+B,EAAAo3E,YAAA,QACAx1C,EAAA,GAAA06B,EAAAt8D,EAAAm3E,EAAA,KAAgD7a,EAAAt8D,EAAAo2E,UAAA,EAAAx0C,GAAAu1C,EAAAn3E,EAAAo2E,UAAAx0C,SAEhD06B,EAAAt8D,EAAAo2E,UAAA,EAAAh2E,GACA+2E,EAAAvB,EAAA51E,EAAAo2E,UAAAh2E,EAAA,IAGAq2E,GAAAC,IAAApa,EAAA6Z,EAAA7Z,EAAA5mD,MACA,IAAApV,EAAAsuC,EAAAtuC,OAAAg8D,EAAAh8D,OAAA62E,EAAA72E,QAAAy2E,EAAA,EAAAE,EAAA32E,QACAwE,EAAAxE,EAAAyN,EAAA,IAAArC,MAAApL,EAAAyN,EAAAzN,EAAA,GAAAwzE,KAAAyC,GAAA,GAIA,OAHAQ,IAAAza,EAAA6Z,EAAArxE,EAAAw3D,EAAAx3D,EAAAxE,OAAAyN,EAAAopE,EAAA72E,OAAAoV,MACAuhE,GAAAroC,EACA5uC,EAAAs8D,EAAA6a,GACA,MAAAX,EAAAS,EAAAj3E,EAAA8E,EAAA,MAAA0xE,EAAA1xE,EAAAmyE,EAAAj3E,EAAA,MAAAw2E,EAAA1xE,EAAAsxE,UAAA,EAAA91E,IAAA,GAAA22E,EAAAj3E,EAAA8E,EAAAsxE,UAAA91E,GAAA22E,GAAAF,EAAA/2E,EAAA8E,EAAA9E,IAAAg3E,IApJA5oE,EAAA8oE,aAAA,SAAAl3E,EAAA22E,GACA,IAAAv2E,EAAA,EASA,OAPAJ,QACAA,EAAA,IAAAA,IAAA,GACA22E,IAAA32E,EAAAoO,EAAAigC,MAAAruC,EAAAs1E,GAAAt1E,EAAA22E,KACAv2E,EAAA,EAAA2L,KAAA4nD,MAAA,MAAA5nD,KAAA22D,IAAA1iE,GAAA+L,KAAAwpE,MACAn1E,EAAA2L,KAAA0G,KAAA,GAAA1G,KAAA8B,IAAA,KAAA9B,KAAA4nD,OAAAvzD,EAAA,SAGAo1E,GAAA,EAAAp1E,EAAA,IA+IA,IAAAk2E,GAAA,yEACAO,GAAAzoE,EAAAuD,IAAA,CACAuN,EAAA,SAAAvR,GACA,OAAAA,EAAAyE,SAAA,IAEAgzB,EAAA,SAAAz3B,GACA,OAAA4xB,OAAA83C,aAAA1pE,IAEAnC,EAAA,SAAAmC,GACA,OAAAA,EAAAyE,SAAA,IAEAzE,EAAA,SAAAspB,GACA,OAAAA,EAAA7kB,SAAA,KAEAklE,EAAA,SAAA3pE,GACA,OAAAA,EAAAyE,SAAA,IAAAskD,eAEAhjD,EAAA,SAAA/F,EAAAyQ,GACA,OAAAzQ,EAAA4pE,YAAAn5D,IAEAoP,EAAA,SAAA7f,EAAAyQ,GACA,OAAAzQ,EAAA6pE,cAAAp5D,IAEAwV,EAAA,SAAAjmB,EAAAyQ,GACA,OAAAzQ,EAAA2L,QAAA8E,IAEAspC,EAAA,SAAA/5C,EAAAyQ,GACA,OAAAzQ,EAAAS,EAAAigC,MAAA1gC,EAAA2nE,GAAA3nE,EAAAyQ,KAAA9E,QAAAvN,KAAA0G,IAAA,EAAA1G,KAAA8B,IAAA,GAAAynE,GAAA3nE,GAAA,SAAAyQ,SAIA,SAAA04D,GAAAnpE,GACA,OAAAA,EAAA,GAGA,IAAA8pE,GAAArpE,EAAAyK,KAAA,GACA6+D,GAAA34D,KAEA,SAAA44D,KACAv1E,KAAAszD,EAAA,IAAA32C,KAAA1e,UAAAC,OAAA,EAAAye,KAAA64D,IAAAl1E,MAAAN,KAAA/B,qBAAA,IAGAs3E,GAAAl3E,UAAA,CACAuiB,QAAA,WACA,OAAA5gB,KAAAszD,EAAAmiB,cAEA90D,OAAA,WACA,OAAA3gB,KAAAszD,EAAAoiB,aAEAv2B,YAAA,WACA,OAAAn/C,KAAAszD,EAAAqiB,kBAEAj1D,SAAA,WACA,OAAA1gB,KAAAszD,EAAAsiB,eAEAr1D,gBAAA,WACA,OAAAvgB,KAAAszD,EAAAuiB,sBAEAp1D,WAAA,WACA,OAAAzgB,KAAAszD,EAAAwiB,iBAEAj1D,SAAA,WACA,OAAA7gB,KAAAszD,EAAAyiB,eAEAv1D,WAAA,WACA,OAAAxgB,KAAAszD,EAAA0iB,iBAEAz5B,QAAA,WACA,OAAAv8C,KAAAszD,EAAA/W,WAEA05B,kBAAA,WACA,UAEA7oB,QAAA,WACA,OAAAptD,KAAAszD,EAAAlG,WAEA8oB,QAAA,WACAC,GAAAC,WAAA91E,MAAAN,KAAAszD,EAAAr1D,YAEAo4E,OAAA,WACAF,GAAAG,UAAAh2E,MAAAN,KAAAszD,EAAAr1D,YAEAs4E,YAAA,WACAJ,GAAAK,eAAAl2E,MAAAN,KAAAszD,EAAAr1D,YAEAw4E,SAAA,WACAN,GAAAO,YAAAp2E,MAAAN,KAAAszD,EAAAr1D,YAEA04E,gBAAA,WACAR,GAAAS,mBAAAt2E,MAAAN,KAAAszD,EAAAr1D,YAEA44E,WAAA,WACAV,GAAAW,cAAAx2E,MAAAN,KAAAszD,EAAAr1D,YAEA84E,SAAA,WACAZ,GAAAa,YAAA12E,MAAAN,KAAAszD,EAAAr1D,YAEAg5E,WAAA,WACAd,GAAAe,cAAA52E,MAAAN,KAAAszD,EAAAr1D,YAEAk5E,QAAA,WACAhB,GAAAgB,QAAA72E,MAAAN,KAAAszD,EAAAr1D,aAGA,IAAAk4E,GAAAx5D,KAAAte,UAEA,SAAA+4E,GAAA7mB,EAAA/O,EAAAhlB,GACA,SAAAyP,EAAA70B,GACA,IAAA+xC,EAAAoH,EAAAn5C,GACA80B,EAAAuY,EAAA0E,EAAA,GACA,OAAA/xC,EAAA+xC,EAAAjd,EAAA90B,EAAA+xC,EAAAjd,EAGA,SAAAtiC,EAAAwN,GAEA,OADAoqC,EAAApqC,EAAAm5C,EAAA,IAAA+kB,GAAAl+D,EAAA,OACAA,EAGA,SAAAqtC,EAAArtC,EAAA4+B,GAEA,OADAwL,EAAApqC,EAAA,IAAAk+D,IAAAl+D,GAAA4+B,GACA5+B,EAGA,SAAAjL,EAAA8mE,EAAAt6B,EAAA0+B,GACA,IAAA5gE,EAAA7M,EAAAqpE,GACAqE,EAAA,GAEA,GAAAD,EAAA,EACA,KAAA5gE,EAAAkiC,GACAnc,EAAA/lB,GAAA4gE,GAAAC,EAAA3pE,KAAA,IAAAgP,MAAAlG,IACA+qC,EAAA/qC,EAAA,QAGA,KAAAA,EAAAkiC,GACA2+B,EAAA3pE,KAAA,IAAAgP,MAAAlG,IAAA+qC,EAAA/qC,EAAA,GAIA,OAAA6gE,EAcA/mB,EAAAgB,MAAAhB,EACAA,EAAAtkB,QACAskB,EAAA3mD,OACA2mD,EAAA9L,SACA8L,EAAApkD,QACA,IAAAiU,EAAAmwC,EAAAnwC,IAAAm3D,GAAAhnB,GAMA,OALAnwC,EAAAmxC,MAAAnxC,EACAA,EAAA6rB,MAAAsrC,GAAAtrC,GACA7rB,EAAAxW,KAAA2tE,GAAA3tE,GACAwW,EAAAqkC,OAAA8yB,GAAA9yB,GACArkC,EAAAjU,MArBA,SAAA8mE,EAAAt6B,EAAA0+B,GACA,IACA/B,GAAAC,GACA,IAAAn1D,EAAA,IAAAm1D,GAEA,OADAn1D,EAAAkzC,EAAA2f,EACA9mE,EAAAiU,EAAAu4B,EAAA0+B,GACO,QACP/B,GAAA34D,OAeA4zC,EAGA,SAAAgnB,GAAAnjB,GACA,gBAAAh9C,EAAA4+B,GACA,IACAs/B,GAAAC,GACA,IAAAn1D,EAAA,IAAAm1D,GAEA,OADAn1D,EAAAkzC,EAAAl8C,EACAg9C,EAAAh0C,EAAA41B,GAAAsd,EACO,QACPgiB,GAAA34D,OAyDA,SAAA66D,GAAAjE,GACA,IAAAkE,EAAAlE,EAAAmE,SACAC,EAAApE,EAAAn8D,KACAwgE,EAAArE,EAAA98D,KACAohE,EAAAtE,EAAAuE,QACAC,EAAAxE,EAAAyE,KACAC,EAAA1E,EAAA2E,UACAC,EAAA5E,EAAA6E,OACAC,EAAA9E,EAAA+E,YAEA,SAAAC,EAAAC,GACA,IAAA1uE,EAAA0uE,EAAAt6E,OAEA,SAAA8U,EAAAoE,GAQA,IAPA,IAGA4rB,EACAhnB,EACAwV,EALAptB,EAAA,GACApG,GAAA,EACAwhC,EAAA,IAKAxhC,EAAA8L,GACA,KAAA0uE,EAAAlH,WAAAtzE,KACAoG,EAAAuJ,KAAA6qE,EAAApoE,MAAAovB,EAAAxhC,IACA,OAAAge,EAAAy8D,GAAAz1C,EAAAw1C,EAAAtoE,SAAAlS,OAAAglC,EAAAw1C,EAAAtoE,SAAAlS,KACAwzB,EAAAknD,EAAA11C,QAAAxR,EAAApa,EAAA,MAAA4E,EAAA,MAAAgnB,EAAA,QAAAhnB,IACA5X,EAAAuJ,KAAAq1B,GACAxD,EAAAxhC,EAAA,GAKA,OADAoG,EAAAuJ,KAAA6qE,EAAApoE,MAAAovB,EAAAxhC,IACAoG,EAAAstE,KAAA,IAgCA,OA7BA1+D,EAAAgf,MAAA,SAAA5tB,GACA,IAAA4F,EAAA,CACA0B,EAAA,KACAimD,EAAA,EACA3nD,EAAA,EACAsnD,EAAA,EACAqnB,EAAA,EACA7Y,EAAA,EACA8Y,EAAA,EACAC,EAAA,MAGA,GADAC,EAAA9uE,EAAAwuE,EAAAp0E,EAAA,IACAA,EAAAlG,OAAA,YACA,MAAA8L,MAAAsnD,EAAAtnD,EAAAsnD,EAAA,MAAAtnD,EAAAgS,GACA,IAAA+8D,EAAA,MAAA/uE,EAAA6uE,GAAAvD,KAAAC,GACAn+D,EAAA,IAAA2hE,EAAAxD,GAAAD,IAOA,MANA,MAAAtrE,EAAAoN,EAAAm/D,YAAAvsE,EAAA0B,EAAA,EAAA1B,EAAAw1B,GAAoD,MAAAx1B,GAAA,MAAAA,GACpD,MAAAA,MAAAyE,EAAA,MAAAzE,EAAA,KACAoN,EAAAm/D,YAAAvsE,EAAA0B,EAAA,KACA0L,EAAAm/D,YAAAvsE,EAAA0B,EAAA,QAAA1B,KAAAyE,EAAA,OAAAzE,EAAAgvE,GAAA5hE,EAAAuJ,SAAA,KAAA3W,EAAAyE,EAAA,EAAAzE,EAAAivE,GAAA7hE,EAAAuJ,SAAA,OACSvJ,EAAAm/D,YAAAvsE,EAAA0B,EAAA1B,EAAA2nD,EAAA3nD,KACToN,EAAAq/D,SAAAzsE,EAAAsnD,GAAAtnD,EAAA6uE,EAAA,OAAA7uE,EAAA2uE,EAAA3uE,EAAA6uE,EAAA,IAAA7uE,EAAA81D,EAAA91D,EAAA4uE,GACAG,EAAA3hE,EAAAk8C,EAAAl8C,GAGApE,EAAAhD,SAAA,WACA,OAAAwoE,GAGAxlE,EAGA,SAAA8lE,EAAA1hE,EAAAohE,EAAAp0E,EAAAo7B,GAQA,IAPA,IAAAwD,EACAhnB,EACAuR,EACAvvB,EAAA,EACA8L,EAAA0uE,EAAAt6E,OACAyzD,EAAAvtD,EAAAlG,OAEAF,EAAA8L,GAAA,CACA,GAAA01B,GAAAmyB,EAAA,SAGA,SAFA3uB,EAAAw1C,EAAAlH,WAAAtzE,OAKA,GAFAuvB,EAAAirD,EAAAtoE,OAAAlS,OACAge,EAAAk9D,EAAA3rD,KAAAkrD,GAAAD,EAAAtoE,OAAAlS,KAAAuvB,MACAiS,EAAAxjB,EAAA5E,EAAAhT,EAAAo7B,IAAA,gBACS,GAAAwD,GAAA5+B,EAAAktE,WAAA9xC,KACT,SAIA,OAAAA,EAGA+4C,EAAAn4D,IAAA,SAAAo4D,GACA,IAAAjoB,EAAAgoB,EAAAC,GAEA,SAAAxlE,EAAAoE,GACA,IAEA,IAAAgJ,EAAA,IADAk1D,GAAAC,IAGA,OADAn1D,EAAAkzC,EAAAl8C,EACAm5C,EAAAnwC,GACS,QACTk1D,GAAA34D,MAeA,OAXA3J,EAAAgf,MAAA,SAAA5tB,GACA,IACAkxE,GAAAC,GACA,IAAAn+D,EAAAm5C,EAAAv+B,MAAA5tB,GACA,OAAAgT,KAAAk8C,EACS,QACTgiB,GAAA34D,OAIA3J,EAAAhD,SAAAugD,EAAAvgD,SACAgD,GAGAulE,EAAAj4D,MAAAi4D,EAAAn4D,IAAAE,MAAA64D,GACA,IAAAC,EAAAptE,EAAAuD,MACA8pE,EAAAC,GAAAvB,GACAwB,EAAAC,GAAAzB,GACA0B,EAAAH,GAAArB,GACAyB,EAAAF,GAAAvB,GACA0B,EAAAL,GAAAnB,GACAyB,EAAAJ,GAAArB,GACA0B,EAAAP,GAAAjB,GACAyB,EAAAN,GAAAnB,GACAR,EAAAltE,QAAA,SAAAqR,EAAAhe,GACAo7E,EAAArkD,IAAA/Y,EAAAmyB,cAAAnwC,KAEA,IAAA06E,EAAA,CACA77D,EAAA,SAAA7S,GACA,OAAAiuE,EAAAjuE,EAAA2W,WAEAo5D,EAAA,SAAA/vE,GACA,OAAA+tE,EAAA/tE,EAAA2W,WAEA7D,EAAA,SAAA9S,GACA,OAAAquE,EAAAruE,EAAA6W,aAEAm5D,EAAA,SAAAhwE,GACA,OAAAmuE,EAAAnuE,EAAA6W,aAEAmiB,EAAAu1C,EAAAd,GACAztE,EAAA,SAAAiwE,EAAAj+D,GACA,OAAAk+D,GAAAD,EAAAr5D,UAAA5E,EAAA,IAEAoP,EAAA,SAAAphB,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAA4W,UAAA5E,EAAA,IAEAs1C,EAAA,SAAAtnD,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAA0W,WAAA1E,EAAA,IAEAg2D,EAAA,SAAAhoE,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAA0W,WAAA,OAAA1E,EAAA,IAEAwjB,EAAA,SAAAx1B,EAAAgS,GACA,OAAAk+D,GAAA,EAAA7E,GAAA8E,UAAAnwE,GAAAgS,EAAA,IAEA48D,EAAA,SAAA5uE,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAAuW,kBAAAvE,EAAA,IAEA21C,EAAA,SAAA3nD,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAA6W,WAAA,EAAA7E,EAAA,IAEA28D,EAAA,SAAA3uE,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAAyW,aAAAzE,EAAA,IAEAA,EAAA,SAAAhS,GACA,OAAA6tE,IAAA7tE,EAAA0W,YAAA,MAEAo/C,EAAA,SAAA91D,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAAwW,aAAAxE,EAAA,IAEAi9D,EAAA,SAAAjvE,EAAAgS,GACA,OAAAk+D,GAAA7E,GAAA+E,aAAApwE,GAAAgS,EAAA,IAEAvN,EAAA,SAAAzE,GACA,OAAAA,EAAA2W,UAEAq4D,EAAA,SAAAhvE,EAAAgS,GACA,OAAAk+D,GAAA7E,GAAAgF,aAAArwE,GAAAgS,EAAA,IAEAzQ,EAAAgtE,EAAAZ,GACAzC,EAAAqD,EAAAX,GACAlsE,EAAA,SAAA1B,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAAm1C,cAAA,IAAAnjC,EAAA,IAEAs+D,EAAA,SAAAtwE,EAAAgS,GACA,OAAAk+D,GAAAlwE,EAAAm1C,cAAA,IAAAnjC,EAAA,IAEA68D,EAAA0B,GACAC,IAAA,WACA,YAGAtB,EAAA,CACAr8D,EA0BA,SAAAzF,EAAAhT,EAAApG,GACAy7E,EAAA5gB,UAAA,EACA,IAAA/uD,EAAA2vE,EAAAzT,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAA3I,EAAAirE,EAAAr3E,IAAAyH,EAAA,GAAAqkC,eAAAnwC,EAAA8L,EAAA,GAAA5L,SAAA,GA5BA67E,EA+BA,SAAA3iE,EAAAhT,EAAApG,GACAq7E,EAAAxgB,UAAA,EACA,IAAA/uD,EAAAuvE,EAAArT,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAA3I,EAAA8qE,EAAAl3E,IAAAyH,EAAA,GAAAqkC,eAAAnwC,EAAA8L,EAAA,GAAA5L,SAAA,GAjCA4e,EAoCA,SAAA1F,EAAAhT,EAAApG,GACA67E,EAAAhhB,UAAA,EACA,IAAA/uD,EAAA+vE,EAAA7T,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAAu6C,EAAAmoB,EAAAz3E,IAAAyH,EAAA,GAAAqkC,eAAAnwC,EAAA8L,EAAA,GAAA5L,SAAA,GAtCA87E,EAyCA,SAAA5iE,EAAAhT,EAAApG,GACA27E,EAAA9gB,UAAA,EACA,IAAA/uD,EAAA6vE,EAAA3T,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAAu6C,EAAAioB,EAAAv3E,IAAAyH,EAAA,GAAAqkC,eAAAnwC,EAAA8L,EAAA,GAAA5L,SAAA,GA3CA8kC,EA8CA,SAAA5rB,EAAAhT,EAAApG,GACA,OAAA86E,EAAA1hE,EAAAshE,EAAA11C,EAAAhzB,WAAA5L,EAAApG,IA9CAgM,EAAAywE,GACArvD,EAAAqvD,GACAnpB,EAAAopB,GACA1I,EAAA0I,GACAl7C,EAAAm7C,GACA/B,EAAAgC,GACAjpB,EAAAkpB,GACAlC,EAAAmC,GACA9+D,EAiDA,SAAA5E,EAAAhT,EAAApG,GACA,IAAA8L,EAAAsvE,EAAA/2E,IAAA+B,EAAAgM,MAAApS,KAAA,GAAAmwC,eACA,aAAArkC,GAAA,GAAAsN,EAAA4E,EAAAlS,EAAA9L,IAlDA8hE,EAAAib,GACA9B,EAAA+B,GACAvsE,EAAAwsE,GACAjC,EAAAkC,GACA3vE,EAoCA,SAAA6L,EAAAhT,EAAApG,GACA,OAAA86E,EAAA1hE,EAAAshE,EAAAntE,EAAAyE,WAAA5L,EAAApG,IApCAk3E,EAuCA,SAAA99D,EAAAhT,EAAApG,GACA,OAAA86E,EAAA1hE,EAAAshE,EAAAxD,EAAAllE,WAAA5L,EAAApG,IAvCA0N,EAAAyvE,GACAb,EAAAc,GACAvC,EAAAwC,GACAb,IAAAc,IA4CA,OAAA/C,EA9TAlD,GAAAkG,KAAAnE,GAAA,SAAAhgE,GAGA,OAFAA,EAAAi+D,GAAAmG,IAAApkE,IACA2/D,SAAA,KACA3/D,GACG,SAAAA,EAAAqtC,GACHrtC,EAAAm/D,YAAAn/D,EAAA+nC,cAAAsF,IACG,SAAArtC,GACH,OAAAA,EAAA+nC,gBAEAk2B,GAAAoG,MAAApG,GAAAkG,KAAApvE,MACAkpE,GAAAoG,MAAAr7D,IAAAi1D,GAAAkG,KAAAn7D,IAAAjU,MACAkpE,GAAAmG,IAAApE,GAAA,SAAAhgE,GACA,IAAAokE,EAAA,IAAAlG,GAAA,OAEA,OADAkG,EAAAjF,YAAAn/D,EAAA+nC,cAAA/nC,EAAAyJ,WAAAzJ,EAAAwJ,WACA46D,GACG,SAAApkE,EAAAqtC,GACHrtC,EAAA8+D,QAAA9+D,EAAAwJ,UAAA6jC,IACG,SAAArtC,GACH,OAAAA,EAAAwJ,UAAA,IAEAy0D,GAAA2C,KAAA3C,GAAAmG,IAAArvE,MACAkpE,GAAA2C,KAAA53D,IAAAi1D,GAAAmG,IAAAp7D,IAAAjU,MAEAkpE,GAAA8E,UAAA,SAAA/iE,GACA,IAAAmkE,EAAAlG,GAAAkG,KAAAnkE,GACA,OAAAzN,KAAA4nD,OAAAn6C,EAAAmkE,EAAA,KAAAnkE,EAAA6+D,oBAAAsF,EAAAtF,sBAAA,QAGA,yEAAAtrE,QAAA,SAAA6wE,EAAAx9E,GACAA,EAAA,EAAAA,EACA,IAAAmV,EAAAkiE,GAAAmG,GAAApE,GAAA,SAAAhgE,GAEA,OADAA,EAAAi+D,GAAAmG,IAAApkE,IAAA8+D,QAAA9+D,EAAAwJ,WAAAxJ,EAAAuJ,SAAA3iB,GAAA,GACAoZ,GACK,SAAAA,EAAAqtC,GACLrtC,EAAA8+D,QAAA9+D,EAAAwJ,UAAA,EAAAjX,KAAA4nD,MAAA9M,KACK,SAAArtC,GACL,IAAAokE,EAAAnG,GAAAkG,KAAAnkE,GAAAuJ,SACA,OAAAhX,KAAA4nD,OAAA8jB,GAAA8E,UAAA/iE,IAAAokE,EAAAx9E,GAAA,OAAAw9E,IAAAx9E,KAEAq3E,GAAAmG,EAAA,KAAAroE,EAAAhH,MACAkpE,GAAAmG,EAAA,KAAAp7D,IAAAjN,EAAAiN,IAAAjU,MAEAkpE,GAAAmG,EAAA,mBAAApkE,GACA,IAAAokE,EAAAnG,GAAAkG,KAAAnkE,GAAAuJ,SACA,OAAAhX,KAAA4nD,OAAA8jB,GAAA8E,UAAA/iE,IAAAokE,EAAAx9E,GAAA,SAGAq3E,GAAAqG,KAAArG,GAAAsG,OACAtG,GAAAuG,MAAAvG,GAAAsG,OAAAxvE,MACAkpE,GAAAuG,MAAAx7D,IAAAi1D,GAAAsG,OAAAv7D,IAAAjU,MACAkpE,GAAAwG,WAAAxG,GAAA+E,aA+QA,IAAA3B,GAAA,CACAqD,IAAA,GACAxoB,EAAA,IACAyoB,EAAA,KAEAC,GAAA,UACAC,GAAA,KAEA,SAAA/B,GAAAt8E,EAAAu2E,EAAAxoE,GACA,IAAAuwB,EAAAt+B,EAAA,SACAwG,GAAA83B,GAAAt+B,KAAA,GACAM,EAAAkG,EAAAlG,OACA,OAAAg+B,GAAAh+B,EAAAyN,EAAA,IAAArC,MAAAqC,EAAAzN,EAAA,GAAAwzE,KAAAyC,GAAA/vE,KAGA,SAAAk1E,GAAA96C,GACA,WAAA+5B,OAAA,OAAA/5B,EAAAjvB,IAAAvD,EAAAqqD,SAAAqb,KAAA,cAGA,SAAA8H,GAAAh7C,GAKA,IAJA,IAAAjvB,EAAA,IAAA8jD,EACAr1D,GAAA,EACA8L,EAAA00B,EAAAtgC,SAEAF,EAAA8L,GACAyF,EAAAwlB,IAAAyJ,EAAAxgC,GAAAmwC,cAAAnwC,GAGA,OAAAuR,EAGA,SAAA0rE,GAAA7jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAA3I,GAAA3E,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAA88E,GAAA5jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAA6hE,GAAAnvE,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAg9E,GAAA9jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IACA,OAAA8L,GAAAsN,EAAA4hE,GAAAlvE,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAk9E,GAAAhkE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAA1L,GAAA5B,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAi9E,GAAA/jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAQA7uD,EARAF,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAA1L,GAOA1B,GAPAF,EAAA,KAQAE,EAAA,aARAhM,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAm9E,GAAAjkE,EAAAhT,EAAApG,GACA,oBAAsB86D,KAAA10D,IAAAgM,MAAApS,IAAA,KAAAoZ,EAAAyhE,GAAAz0E,EAAApG,EAAA,MAOtB,SAAA68E,GAAAzjE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAAu6C,EAAA7nD,EAAA,KAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAu8E,GAAArjE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAApN,GAAAF,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAy8E,GAAAvjE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAAooB,GAAA11B,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAw8E,GAAAtjE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAAk6C,GAAAxnD,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAA48E,GAAA1jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAAuhE,GAAA7uE,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAA68E,GAAA3jE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAA0oD,GAAAh2D,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAA08E,GAAAxjE,EAAAhT,EAAApG,GACAg+E,GAAAnjB,UAAA,EACA,IAAA/uD,EAAAkyE,GAAAhW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,GAAAsN,EAAAwhE,GAAA9uE,EAAA,GAAA9L,EAAA8L,EAAA,GAAA5L,SAAA,EAGA,SAAAq8E,GAAAvwE,GACA,IAAA6kD,EAAA7kD,EAAAisE,oBACAiG,EAAArtB,EAAA,UACAstB,EAAAh0C,EAAA0mB,GAAA,KACAutB,EAAAj0C,EAAA0mB,GAAA,GACA,OAAAqtB,EAAAhC,GAAAiC,EAAA,OAAAjC,GAAAkC,EAAA,OAGA,SAAAd,GAAAlkE,EAAAhT,EAAApG,GACAi+E,GAAApjB,UAAA,EACA,IAAA/uD,EAAAmyE,GAAAjW,KAAA5hE,EAAAgM,MAAApS,IAAA,IACA,OAAA8L,EAAA9L,EAAA8L,EAAA,GAAA5L,QAAA,EAGA,SAAAi7E,GAAAkD,GAIA,IAHA,IAAAvyE,EAAAuyE,EAAAn+E,OACAF,GAAA,IAEAA,EAAA8L,GACAuyE,EAAAr+E,GAAA,GAAAgC,KAAAq8E,EAAAr+E,GAAA,IAGA,gBAAAoZ,GAIA,IAHA,IAAApZ,EAAA,EACAwzB,EAAA6qD,EAAAr+E,IAEAwzB,EAAA,GAAApa,IACAoa,EAAA6qD,IAAAr+E,GAGA,OAAAwzB,EAAA,GAAApa,IAIApL,EAAAunE,OAAA,SAAAA,GACA,OACA+I,aAAAhJ,GAAAC,GACAgJ,WAAA/E,GAAAjE,KAIA,IAAAiJ,GAAAxwE,EAAAunE,OAAA,CACAt3C,QAAA,IACAy3C,UAAA,IACAE,SAAA,IACAE,SAAA,SACA4D,SAAA,iBACAtgE,KAAA,WACAX,KAAA,WACAqhE,QAAA,YACAE,KAAA,yEACAE,UAAA,4CACAE,OAAA,gHACAE,YAAA,4EAKA,SAAAmE,MAHAzwE,EAAAgH,OAAAwpE,GAAAF,aACAtwE,EAAA0wE,IAAA,GAIAD,GAAAp+E,UAAA,CACAmR,EAAA,EACA+d,EAAA,EACAC,IAAA,SAAA9hB,GACAixE,GAAAjxE,EAAA1L,KAAAutB,EAAAqvD,IACAD,GAAAC,GAAAptE,EAAAxP,KAAAwP,EAAAxP,MACAA,KAAAwP,EAAAxP,KAAAutB,GAAAqvD,GAAArvD,EAA2CvtB,KAAAwP,EAAAotE,GAAArvD,GAE3Cg2B,MAAA,WACAvjD,KAAAwP,EAAAxP,KAAAutB,EAAA,GAEA6/B,QAAA,WACA,OAAAptD,KAAAwP,IAGA,IAAAotE,GAAA,IAAAH,GAEA,SAAAE,GAAA9/D,EAAAC,EAAA1T,GACA,IAAAmC,EAAAnC,EAAAoG,EAAAqN,EAAAC,EACA+/D,EAAAtxE,EAAAsR,EACAigE,EAAAvxE,EAAAsxE,EACAzzE,EAAAmkB,EAAA1Q,EAAAigE,GAAAhgE,EAAA+/D,GAWA,SAAAE,GAAAC,EAAArnB,GACAqnB,GAAAC,GAAA3+E,eAAA0+E,EAAAh3D,OACAi3D,GAAAD,EAAAh3D,MAAAg3D,EAAArnB,GAVA3pD,EAAA0wE,IAAAQ,OAAA,SAAA56E,EAAAqzD,GACArzD,GAAA66E,GAAA7+E,eAAAgE,EAAA0jB,MACAm3D,GAAA76E,EAAA0jB,MAAA1jB,EAAAqzD,GAEAonB,GAAAz6E,EAAAqzD,IAUA,IAAAwnB,GAAA,CACAC,QAAA,SAAAC,EAAA1nB,GACAonB,GAAAM,EAAAL,SAAArnB,IAEA2nB,kBAAA,SAAAh7E,EAAAqzD,GAKA,IAJA,IAAA4nB,EAAAj7E,EAAAi7E,SACAv/E,GAAA,EACA8L,EAAAyzE,EAAAr/E,SAEAF,EAAA8L,GACAizE,GAAAQ,EAAAv/E,GAAAg/E,SAAArnB,KAIAsnB,GAAA,CACAO,OAAA,SAAAl7E,EAAAqzD,GACAA,EAAA8nB,UAEAC,MAAA,SAAAp7E,EAAAqzD,GACArzD,IAAAq7E,YACAhoB,EAAA9xD,MAAAvB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAs7E,WAAA,SAAAt7E,EAAAqzD,GAKA,IAJA,IAAAgoB,EAAAr7E,EAAAq7E,YACA3/E,GAAA,EACA8L,EAAA6zE,EAAAz/E,SAEAF,EAAA8L,GACAxH,EAAAq7E,EAAA3/E,GAAA23D,EAAA9xD,MAAAvB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGAu7E,WAAA,SAAAv7E,EAAAqzD,GACAmoB,GAAAx7E,EAAAq7E,YAAAhoB,EAAA,IAEAooB,gBAAA,SAAAz7E,EAAAqzD,GAKA,IAJA,IAAAgoB,EAAAr7E,EAAAq7E,YACA3/E,GAAA,EACA8L,EAAA6zE,EAAAz/E,SAEAF,EAAA8L,GACAg0E,GAAAH,EAAA3/E,GAAA23D,EAAA,IAGAqoB,QAAA,SAAA17E,EAAAqzD,GACAsoB,GAAA37E,EAAAq7E,YAAAhoB,IAEAuoB,aAAA,SAAA57E,EAAAqzD,GAKA,IAJA,IAAAgoB,EAAAr7E,EAAAq7E,YACA3/E,GAAA,EACA8L,EAAA6zE,EAAAz/E,SAEAF,EAAA8L,GACAm0E,GAAAN,EAAA3/E,GAAA23D,IAGAwoB,mBAAA,SAAA77E,EAAAqzD,GAKA,IAJA,IAAAyoB,EAAA97E,EAAA87E,WACApgF,GAAA,EACA8L,EAAAs0E,EAAAlgF,SAEAF,EAAA8L,GACAizE,GAAAqB,EAAApgF,GAAA23D,KAKA,SAAAmoB,GAAAH,EAAAhoB,EAAA0oB,GACA,IAEAC,EAFAtgF,GAAA,EACA8L,EAAA6zE,EAAAz/E,OAAAmgF,EAIA,IAFA1oB,EAAA4oB,cAEAvgF,EAAA8L,GACAw0E,EAAAX,EAAA3/E,GAAA23D,EAAA9xD,MAAAy6E,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA3oB,EAAA6oB,UAGA,SAAAP,GAAAN,EAAAhoB,GACA,IAAA33D,GAAA,EACA8L,EAAA6zE,EAAAz/E,OAGA,IAFAy3D,EAAA8oB,iBAEAzgF,EAAA8L,GACAg0E,GAAAH,EAAA3/E,GAAA23D,EAAA,GAGAA,EAAA+oB,aAGA1yE,EAAA0wE,IAAA34E,KAAA,SAAAzB,GAGA,OAFAq8E,GAAA,EACA3yE,EAAA0wE,IAAAQ,OAAA56E,EAAAs8E,IACAD,IAGA,IAAAA,GAuQAE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAtQAC,GAAA,IAAA/C,GACAmC,GAAA,CACAnB,OAAA,WACAkB,IAAA,EAAAhgB,IAEA96D,MAAAwxD,EACAkpB,UAAAlpB,EACAmpB,QAAAnpB,EACAopB,aAAA,WACAe,GAAAj8B,QACAq7B,GAAAL,UAAAkB,IAEAf,WAAA,WACA,IAAA36E,EAAA,EAAAy7E,GACAb,IAAA56E,EAAA,IAAA46D,GAAA56D,IACA66E,GAAAL,UAAAK,GAAAJ,QAAAI,GAAA/6E,MAAAwxD,IAIA,SAAAoqB,KACA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOA,SAAAC,EAAAC,EAAAC,GAEAA,IAAAlhB,GAAA,EAAAJ,GAAA,EACA,IAAAuhB,GAFAF,GAAAjhB,IAEA6gB,EACAO,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAA12E,KAAAu+B,IAAA+3C,GACAK,EAAA32E,KAAAuH,IAAA+uE,GACAjqC,EAAA8pC,EAAAQ,EACA3f,EAAAkf,EAAAQ,EAAArqC,EAAArsC,KAAAu+B,IAAAk4C,GACAl3E,EAAA8sC,EAAAmqC,EAAAx2E,KAAAuH,IAAAkvE,GACAZ,GAAAhyD,IAAA7jB,KAAA+7D,MAAAx8D,EAAAy3D,IACAif,EAAAI,EAAAH,EAAAQ,EAAAP,EAAAQ,EAjBA1B,GAAA/6E,MAAA,SAAAm8E,EAAAC,GACArB,GAAA/6E,MAAAk8E,EACAH,GAAAF,EAAAM,GAAAjhB,GAAA8gB,EAAAl2E,KAAAu+B,IAAA+3C,GAAAN,EAAAM,GAAAlhB,GAAA,EAAAJ,GAAA,GAAAmhB,EAAAn2E,KAAAuH,IAAA+uE,IAkBArB,GAAAJ,QAAA,WACAuB,EAAAL,EAAAC,IAIA,SAAAY,GAAAC,GACA,IAAAR,EAAAQ,EAAA,GACAP,EAAAO,EAAA,GACAH,EAAA12E,KAAAu+B,IAAA+3C,GACA,OAAAI,EAAA12E,KAAAu+B,IAAA83C,GAAAK,EAAA12E,KAAAuH,IAAA8uE,GAAAr2E,KAAAuH,IAAA+uE,IAGA,SAAAQ,GAAA5jE,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,SAAA4jE,GAAA7jE,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAGA,SAAA6jE,GAAA9jE,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAGA,SAAA8jE,GAAAC,EAAA7qC,GACA,OAAA6qC,EAAA,GAAA7qC,EAAA6qC,EAAA,GAAA7qC,EAAA6qC,EAAA,GAAA7qC,GAGA,SAAA8qC,GAAA92E,GACA,IAAAs4C,EAAA34C,KAAAo+B,KAAA/9B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAs4C,EACAt4C,EAAA,IAAAs4C,EACAt4C,EAAA,IAAAs4C,EAGA,SAAAy+B,GAAAC,GACA,OAAAr3E,KAAA+7D,MAAAsb,EAAA,GAAAA,EAAA,IAAA3hB,GAAA2hB,EAAA,KAGA,SAAAC,GAAApkE,EAAAC,GACA,OAAAqrB,EAAAtrB,EAAA,GAAAC,EAAA,IAAA2hD,IAAAt2B,EAAAtrB,EAAA,GAAAC,EAAA,IAAA2hD,GAGAzyD,EAAA0wE,IAAAwE,OAAA,WACA,IAAAtB,EAAAuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3hB,EAAA4hB,EAAAC,EAAAv1E,EACAw1E,EAAA,CACA99E,QACA06E,YACAC,UACAC,aAAA,WACAkD,EAAA99E,MAAA+9E,EACAD,EAAApD,UAAAsD,EACAF,EAAAnD,QAAAsD,EACAL,EAAA,EACA7C,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAiD,EAAA99E,QACA89E,EAAApD,YACAoD,EAAAnD,UACAgB,GAAA,GAAAI,IAAAwB,EAAA,KAAAD,IAAAE,EAAA,KAAsEI,EAAAhjB,GAAA4iB,EAAA,GAA4BI,GAAAhjB,KAAA0iB,GAAA,IAClGh1E,EAAA,GAAAyzE,EAAAzzE,EAAA,GAAAi1E,IAIA,SAAAv9E,EAAAm8E,EAAAC,GACAyB,EAAA/zE,KAAAxB,EAAA,CAAAyzE,EAAAI,EAAAoB,EAAApB,IACAC,EAAAkB,MAAAlB,GACAA,EAAAoB,MAAApB,GAGA,SAAA8B,EAAA/B,EAAAC,GACA,IAAAjkE,EAAAukE,GAAA,CAAAP,EAAAjhB,GAAAkhB,EAAAlhB,KAEA,GAAAc,EAAA,CACA,IAAAmiB,EAAAtB,GAAA7gB,EAAA7jD,GAEAimE,EAAAvB,GADA,CAAAsB,EAAA,IAAAA,EAAA,MACAA,GACAlB,GAAAmB,GACAA,EAAAlB,GAAAkB,GACA,IAAA/B,EAAAF,EAAAsB,EACA9xE,EAAA0wE,EAAA,OACAgC,EAAAD,EAAA,GAAAjjB,GAAAxvD,EACA2yE,EAAAh6C,EAAA+3C,GAAA,IAEA,GAAAiC,GAAA3yE,EAAA8xE,EAAAY,KAAA1yE,EAAAwwE,IACAoC,EAAAH,EAAA,GAAAjjB,IACAqiB,MAAAe,QACS,GAAAD,GAAA3yE,EAAA8xE,GAAAY,KAAA,eAAAA,EAAA1yE,EAAAwwE,GAAA,CACT,IAAAoC,MAAAH,EAAA,GAAAjjB,IACAmiB,MAAAiB,QAEAnC,EAAAkB,MAAAlB,GACAA,EAAAoB,MAAApB,GAGAkC,EACAnC,EAAAsB,EACAxrD,EAAA8pD,EAAAI,GAAAlqD,EAAA8pD,EAAAwB,OAAApB,GAEAlqD,EAAAkqD,EAAAoB,GAAAtrD,EAAA8pD,EAAAwB,KAAAxB,EAAAI,GAGAoB,GAAAxB,GACAI,EAAAJ,MAAAI,GACAA,EAAAoB,MAAApB,IAEAA,EAAAsB,EACAxrD,EAAA8pD,EAAAI,GAAAlqD,EAAA8pD,EAAAwB,OAAApB,GAEAlqD,EAAAkqD,EAAAoB,GAAAtrD,EAAA8pD,EAAAwB,KAAAxB,EAAAI,QAKAn8E,EAAAm8E,EAAAC,GAGApgB,EAAA7jD,EAAAslE,EAAAtB,EAGA,SAAAzB,IACAoD,EAAA99E,MAAAk+E,EAGA,SAAAvD,IACAryE,EAAA,GAAAyzE,EAAAzzE,EAAA,GAAAi1E,EACAO,EAAA99E,QACAg8D,EAAA,KAGA,SAAA+hB,EAAA5B,EAAAC,GACA,GAAApgB,EAAA,CACA,IAAAqgB,EAAAF,EAAAsB,EACAG,GAAAt5C,EAAA+3C,GAAA,IAAAA,KAAA,YAAAA,OACOqB,EAAAvB,EAAAwB,EAAAvB,EAEPrB,GAAA/6E,MAAAm8E,EAAAC,GACA8B,EAAA/B,EAAAC,GAGA,SAAA4B,IACAjD,GAAAL,YAGA,SAAAuD,IACAF,EAAAL,EAAAC,GACA5C,GAAAJ,UACAr2C,EAAAs5C,GAAAhjB,KAAAmhB,IAAAwB,EAAA,MACAj1E,EAAA,GAAAyzE,EAAAzzE,EAAA,GAAAi1E,EACAvhB,EAAA,KAGA,SAAA/pC,EAAA8pD,EAAAwB,GACA,OAAAA,GAAAxB,GAAA,EAAAwB,EAAA,IAAAA,EAGA,SAAAiB,EAAAxlE,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAGA,SAAAwlE,EAAA/2E,EAAAY,GACA,OAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAZ,MAAAY,EAAA,GAAAZ,EAAAY,EAAA,IAAAA,EAAA,GAAAZ,EAGA,gBAAA8xE,GAMA,GALAgE,EAAAD,IAAAxB,EAAAuB,EAAA7tE,KACAouE,EAAA,GACA11E,EAAA0wE,IAAAQ,OAAAG,EAAAsE,GACA73E,EAAA43E,EAAAxjF,OAEA,CACAwjF,EAAA9kE,KAAAylE,GAEA,QAAArkF,EAAA,EAAAi1D,EAAA,CAAAp2C,EAAA6kE,EAAA,IAAuD1jF,EAAA8L,IAAO9L,EAG9DskF,GAFAxlE,EAAA4kE,EAAA1jF,IAEA,GAAA6e,IAAAylE,EAAAxlE,EAAA,GAAAD,IACAiZ,EAAAjZ,EAAA,GAAAC,EAAA,IAAAgZ,EAAAjZ,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAgZ,EAAAhZ,EAAA,GAAAD,EAAA,IAAAiZ,EAAAjZ,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAm2C,EAAAtlD,KAAAkP,EAAAC,GAOA,IAHA,IACAojE,EAEAp2E,EAAAgT,EAHAylE,GAAAjvE,IAGAuJ,GAAA7e,EAAA,EAAAi1D,EAAAnpD,EAAAmpD,EAAA/0D,OAAA,IAAgEF,GAAA8L,EAAQ+S,EAAAC,IAAA9e,EACxE8e,EAAAm2C,EAAAj1D,IACAkiF,EAAApqD,EAAAjZ,EAAA,GAAAC,EAAA,KAAAylE,MAAArC,EAAAN,EAAA9iE,EAAA,GAAAskE,EAAAvkE,EAAA,IAKA,OADA6kE,EAAAv1E,EAAA,KACAyzE,IAAAtsE,KAAA6tE,IAAA7tE,IAAA,EAAAoU,SAAA,CAAAA,UAAA,EAAAk4D,EAAAuB,GAAA,CAAAC,EAAAC,KAzJA,GA6JAr1E,EAAA0wE,IAAAr1C,SAAA,SAAA/kC,GACAu8E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,EACAvzE,EAAA0wE,IAAAQ,OAAA56E,EAAAkgF,IACA,IAAAj3E,EAAA8zE,GACA3zE,EAAA4zE,GACAzwB,EAAA0wB,GACA5tB,EAAApmD,IAAAG,IAAAmjD,IAEA,OAAA8C,EAAA+M,KACAnzD,EAAA2zE,GAAAxzE,EAAAyzE,GAAAtwB,EAAAuwB,GACAN,GAAArgB,KAAAlzD,EAAAwzE,GAAArzE,EAAAszE,GAAAnwB,EAAAowB,KACAttB,EAAApmD,IAAAG,IAAAmjD,KACA6P,IAAA,CAAAh3C,SAGA,CAAA/d,KAAA+7D,MAAAh6D,EAAAH,GAAAyzD,GAAAK,GAAAxQ,EAAAllD,KAAAo+B,KAAA4pB,IAAAqN,KAIA,IAAAwjB,GAAA,CACA/E,OAAApoB,EACAxxD,MAAA4+E,GACAlE,UAAAmE,GACAlE,QAAAmE,GACAlE,aAAA,WACA+D,GAAAjE,UAAAqE,IAEAlE,WAAA,WACA8D,GAAAjE,UAAAmE,KAIA,SAAAD,GAAAzC,EAAAC,GACAD,GAAAjhB,GACA,IAAAshB,EAAA12E,KAAAu+B,IAAA+3C,GAAAlhB,IACA8jB,GAAAxC,EAAA12E,KAAAu+B,IAAA83C,GAAAK,EAAA12E,KAAAuH,IAAA8uE,GAAAr2E,KAAAuH,IAAA+uE,IAGA,SAAA4C,GAAAt3E,EAAAG,EAAAmjD,GAEAkwB,KAAAxzE,EAAAwzE,MADAF,GAEAG,KAAAtzE,EAAAszE,IAAAH,GACAI,KAAApwB,EAAAowB,IAAAJ,GAGA,SAAA6D,KACA,IAAAn6B,EAAAtB,EAAA67B,EAYA,SAAA/C,EAAAC,EAAAC,GACAD,GAAAjhB,GACA,IAAAshB,EAAA12E,KAAAu+B,IAAA+3C,GAAAlhB,IACAxzD,EAAA80E,EAAA12E,KAAAu+B,IAAA83C,GACAt0E,EAAA20E,EAAA12E,KAAAuH,IAAA8uE,GACAnxB,EAAAllD,KAAAuH,IAAA+uE,GACAxxE,EAAA9E,KAAA+7D,MAAA/7D,KAAAo+B,MAAAt5B,EAAAw4C,EAAA4H,EAAAi0B,EAAAp3E,GAAA+C,KAAAq0E,EAAAv3E,EAAAg9C,EAAAsG,GAAApgD,KAAA85C,EAAA78C,EAAAu7C,EAAA17C,GAAAkD,GAAA85C,EAAAh9C,EAAA07C,EAAAv7C,EAAAo3E,EAAAj0B,GACAiwB,IAAArwE,EACAywE,IAAAzwE,GAAA85C,KAAAh9C,IACA4zE,IAAA1wE,GAAAw4C,KAAAv7C,IACA0zE,IAAA3wE,GAAAq0E,KAAAj0B,IACAg0B,GAAAt6B,EAAAtB,EAAA67B,GArBAN,GAAA3+E,MAAA,SAAAm8E,EAAAC,GACAD,GAAAjhB,GACA,IAAAshB,EAAA12E,KAAAu+B,IAAA+3C,GAAAlhB,IACAxW,EAAA83B,EAAA12E,KAAAu+B,IAAA83C,GACA/4B,EAAAo5B,EAAA12E,KAAAuH,IAAA8uE,GACA8C,EAAAn5E,KAAAuH,IAAA+uE,GACAuC,GAAA3+E,MAAAk8E,EACA8C,GAAAt6B,EAAAtB,EAAA67B,IAkBA,SAAAH,KACAH,GAAA3+E,MAAA4+E,GAGA,SAAAG,KACA,IAAAlD,EAAAC,EAAAp3B,EAAAtB,EAAA67B,EAmBA,SAAA/C,EAAAC,EAAAC,GACAD,GAAAjhB,GACA,IAAAshB,EAAA12E,KAAAu+B,IAAA+3C,GAAAlhB,IACAxzD,EAAA80E,EAAA12E,KAAAu+B,IAAA83C,GACAt0E,EAAA20E,EAAA12E,KAAAuH,IAAA8uE,GACAnxB,EAAAllD,KAAAuH,IAAA+uE,GACAh2D,EAAAg9B,EAAA4H,EAAAi0B,EAAAp3E,EACAwe,EAAA44D,EAAAv3E,EAAAg9C,EAAAsG,EACAk0B,EAAAx6B,EAAA78C,EAAAu7C,EAAA17C,EACAomD,EAAAhoD,KAAAo+B,KAAA9d,IAAAC,IAAA64D,KACApiB,EAAApY,EAAAh9C,EAAA07C,EAAAv7C,EAAAo3E,EAAAj0B,EACA3lD,EAAAyoD,IAAAwN,GAAAwB,GAAAhP,EACAljD,EAAA9E,KAAA+7D,MAAA/T,EAAAgP,GACA0e,IAAAn2E,EAAA+gB,EACAq1D,IAAAp2E,EAAAghB,EACAq1D,IAAAr2E,EAAA65E,EACAjE,IAAArwE,EACAywE,IAAAzwE,GAAA85C,KAAAh9C,IACA4zE,IAAA1wE,GAAAw4C,KAAAv7C,IACA0zE,IAAA3wE,GAAAq0E,KAAAj0B,IACAg0B,GAAAt6B,EAAAtB,EAAA67B,GArCAN,GAAA3+E,MAAA,SAAAm8E,EAAAC,GACAP,EAAAM,EAAAL,EAAAM,EACAuC,GAAA3+E,MAAAk8E,EACAC,GAAAjhB,GACA,IAAAshB,EAAA12E,KAAAu+B,IAAA+3C,GAAAlhB,IACAxW,EAAA83B,EAAA12E,KAAAu+B,IAAA83C,GACA/4B,EAAAo5B,EAAA12E,KAAAuH,IAAA8uE,GACA8C,EAAAn5E,KAAAuH,IAAA+uE,GACA4C,GAAAt6B,EAAAtB,EAAA67B,IAGAN,GAAAhE,QAAA,WACAuB,EAAAL,EAAAC,GACA6C,GAAAhE,QAAAmE,GACAH,GAAA3+E,MAAA4+E,IA2BA,SAAAO,GAAAnmE,EAAAC,GACA,SAAAmmE,EAAA13E,EAAAG,GACA,OAAAH,EAAAsR,EAAAtR,EAAAG,GAAAoR,EAAAvR,EAAA,GAAAA,EAAA,IAMA,OAHAsR,EAAAmlD,QAAAllD,EAAAklD,SAAAihB,EAAAjhB,OAAA,SAAAz2D,EAAAG,GACA,OAAAH,EAAAuR,EAAAklD,OAAAz2D,EAAAG,KAAAmR,EAAAmlD,OAAAz2D,EAAA,GAAAA,EAAA,MAEA03E,EAGA,SAAAC,KACA,SAGA,SAAAC,GAAAC,EAAAvyB,EAAAwyB,EAAAt3C,EAAA4pB,GACA,IAAAmI,EAAA,GACAwlB,EAAA,GAgCA,GA/BAF,EAAAz4E,QAAA,SAAA44E,GACA,MAAAz5E,EAAAy5E,EAAArlF,OAAA,QACA,IAAA4L,EACA+1D,EAAA0jB,EAAA,GACA7wB,EAAA6wB,EAAAz5E,GAEA,GAAAm3E,GAAAphB,EAAAnN,GAAA,CACAiD,EAAA4oB,YAEA,QAAAvgF,EAAA,EAAuBA,EAAA8L,IAAO9L,EAC9B23D,EAAA9xD,OAAAg8D,EAAA0jB,EAAAvlF,IAAA,GAAA6hE,EAAA,IAGAlK,EAAA6oB,cAPA,CAWA,IAAA3hE,EAAA,IAAA2mE,GAAA3jB,EAAA0jB,EAAA,SACAzmE,EAAA,IAAA0mE,GAAA3jB,EAAA,KAAAhjD,GAAA,GACAA,EAAAzT,EAAA0T,EACAghD,EAAAnwD,KAAAkP,GACAymE,EAAA31E,KAAAmP,GACAD,EAAA,IAAA2mE,GAAA9wB,EAAA6wB,EAAA,SACAzmE,EAAA,IAAA0mE,GAAA9wB,EAAA,KAAA71C,GAAA,GACAA,EAAAzT,EAAA0T,EACAghD,EAAAnwD,KAAAkP,GACAymE,EAAA31E,KAAAmP,OAEAwmE,EAAA1mE,KAAAi0C,GACA4yB,GAAA3lB,GACA2lB,GAAAH,GACAxlB,EAAA5/D,OAAA,CAEA,QAAAF,EAAA,EAAA0lF,EAAAL,EAAAv5E,EAAAw5E,EAAAplF,OAA6DF,EAAA8L,IAAO9L,EACpEslF,EAAAtlF,GAAAotB,EAAAs4D,KAOA,IAJA,IACA5mD,EACAj5B,EAFA0J,EAAAuwD,EAAA,KAIA,CAIA,IAHA,IAAAnjB,EAAAptC,EACAo2E,GAAA,EAEAhpC,EAAAzxC,GACA,IAAAyxC,IAAA7wC,KAAAyD,EAAA,OAGAuvB,EAAA6d,EAAAkU,EACA8G,EAAA4oB,YAEA,GAGA,GAFA5jC,EAAAzxC,EAAAyxC,EAAAvxC,EAAAF,GAAA,EAEAyxC,EAAAvvB,EAAA,CACA,GAAAu4D,EACA,IAAA3lF,EAAA,EAAA8L,EAAAgzB,EAAA5+B,OAA8CF,EAAA8L,IAAO9L,EACrD23D,EAAA9xD,SAAAi5B,EAAA9+B,IAAA,GAAA6F,EAAA,SAGAkoC,EAAA4O,EAAApvC,EAAAovC,EAAA7wC,EAAAyB,EAAA,EAAAoqD,GAGAhb,IAAA7wC,MACS,CACT,GAAA65E,EAGA,IAAA3lF,GAFA8+B,EAAA6d,EAAA3+B,EAAA6yC,GAEA3wD,OAAA,EAA2CF,GAAA,IAAQA,EACnD23D,EAAA9xD,SAAAi5B,EAAA9+B,IAAA,GAAA6F,EAAA,SAGAkoC,EAAA4O,EAAApvC,EAAAovC,EAAA3+B,EAAAzQ,GAAA,EAAAoqD,GAGAhb,IAAA3+B,EAIA8gB,GADA6d,IAAAvxC,GACAylD,EACA80B,YACOhpC,EAAAzxC,GAEPysD,EAAA6oB,YAIA,SAAAiF,GAAAjgF,GACA,GAAAsG,EAAAtG,EAAAtF,OAAA,CAMA,IALA,IAAA4L,EAGAgT,EAFA9e,EAAA,EACA6e,EAAArZ,EAAA,KAGAxF,EAAA8L,GACA+S,EAAA/S,EAAAgT,EAAAtZ,EAAAxF,GACA8e,EAAAd,EAAAa,EACAA,EAAAC,EAGAD,EAAA/S,EAAAgT,EAAAtZ,EAAA,GACAsZ,EAAAd,EAAAa,GAGA,SAAA2mE,GAAA3/E,EAAAi5B,EAAA8mD,EAAAF,GACA1jF,KAAAuL,EAAA1H,EACA7D,KAAA6uD,EAAA/xB,EACA98B,KAAAoJ,EAAAw6E,EACA5jF,KAAAorB,EAAAs4D,EACA1jF,KAAAkJ,GAAA,EACAlJ,KAAA8J,EAAA9J,KAAAgc,EAAA,KAGA,SAAA6nE,GAAAC,EAAAC,EAAAh4C,EAAAi4C,GACA,gBAAAlzE,EAAA6kD,GACA,IA8DAytB,EA9DAt/E,EAAAigF,EAAApuB,GACAsuB,EAAAnzE,EAAAkxD,OAAAgiB,EAAA,GAAAA,EAAA,IACAV,EAAA,CACAz/E,QACA06E,YACAC,UACAC,aAAA,WACA6E,EAAAz/E,MAAAqgF,EACAZ,EAAA/E,UAAAsD,EACAyB,EAAA9E,QAAAsD,EACAsB,EAAA,GACAe,EAAA,IAEAzF,WAAA,WACA4E,EAAAz/E,QACAy/E,EAAA/E,YACA+E,EAAA9E,UACA4E,EAAAp3E,EAAAk3B,MAAAkgD,GACA,IAAAC,EAsNA,SAAAx/E,EAAAsgF,GACA,IAAAC,EAAAvgF,EAAA,GACAwgF,EAAAxgF,EAAA,GACAygF,EAAA,CAAA36E,KAAAuH,IAAAkzE,IAAAz6E,KAAAu+B,IAAAk8C,GAAA,GACAG,EAAA,EACAC,EAAA,EACAhF,GAAAj8B,QAEA,QAAAvlD,EAAA,EAAA8L,EAAAq6E,EAAAjmF,OAAuCF,EAAA8L,IAAO9L,EAAA,CAC9C,IAAAymF,EAAAN,EAAAnmF,GACA2zD,EAAA8yB,EAAAvmF,OACA,GAAAyzD,EAQA,IAPA,IAAA+yB,EAAAD,EAAA,GACA7E,EAAA8E,EAAA,GACAvD,EAAAuD,EAAA,KAAA/lB,GAAA,EACAmhB,EAAAn2E,KAAAuH,IAAAiwE,GACAtB,EAAAl2E,KAAAu+B,IAAAi5C,GACA3hD,EAAA,IAEA,CACAA,IAAAmyB,IAAAnyB,EAAA,GAEA,IAAAwgD,GADAn8E,EAAA4gF,EAAAjlD,IACA,GACAygD,EAAAp8E,EAAA,KAAA86D,GAAA,EACA2hB,EAAA32E,KAAAuH,IAAA+uE,GACAI,EAAA12E,KAAAu+B,IAAA+3C,GACAC,EAAAF,EAAAJ,EACAO,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAiC,EAAA/B,EAAAzhB,GACA3oB,EAAA8pC,EAAAQ,EAIA,GAHAd,GAAAhyD,IAAA7jB,KAAA+7D,MAAA1vB,EAAAmqC,EAAAx2E,KAAAuH,IAAAkvE,GAAAP,EAAAQ,EAAArqC,EAAArsC,KAAAu+B,IAAAk4C,KACAmE,GAAApC,EAAAjC,EAAAC,EAAAvhB,GAAAshB,EAEAiC,EAAAvC,GAAAwE,EAAApE,GAAAoE,EAAA,CACA,IAAA19E,EAAAg6E,GAAAH,GAAAmE,GAAAnE,GAAA18E,IACAi9E,GAAAp6E,GACA,IAAAi+E,EAAAjE,GAAA4D,EAAA59E,GACAo6E,GAAA6D,GACA,IAAAC,GAAAzC,EAAAjC,GAAA,QAAA7gB,GAAAslB,EAAA,KAEAN,EAAAO,GAAAP,IAAAO,IAAAl+E,EAAA,IAAAA,EAAA,OACA89E,GAAArC,EAAAjC,GAAA,QAIA,IAAA1gD,IAAA,MACAogD,EAAAI,EAAAF,EAAAQ,EAAAT,EAAAQ,EAAAqE,EAAA7gF,GAIA,OAAA0gF,GAAA9lB,IAAA8lB,EAAA9lB,IAAA+gB,IAAA/gB,IAAA,EAAA+lB,EAzQAK,CAAAZ,EAAAE,GAEAf,EAAAllF,QACA4mF,IAAAnvB,EAAA8oB,eAAAqG,GAAA,GACA3B,GAAAC,EAAA2B,GAAA1B,EAAAt3C,EAAA4pB,IACW0tB,IACXyB,IAAAnvB,EAAA8oB,eAAAqG,GAAA,GACAnvB,EAAA4oB,YACAxyC,EAAA,YAAA4pB,GACAA,EAAA6oB,WAGAsG,IAAAnvB,EAAA+oB,aAAAoG,GAAA,GACA1B,EAAAe,EAAA,MAEA1G,OAAA,WACA9nB,EAAA8oB,eACA9oB,EAAA4oB,YACAxyC,EAAA,YAAA4pB,GACAA,EAAA6oB,UACA7oB,EAAA+oB,eAIA,SAAA76E,EAAAm8E,EAAAC,GACA,IAAAp8E,EAAAiN,EAAAkvE,EAAAC,GACA6D,EAAA9D,EAAAn8E,EAAA,GAAAo8E,EAAAp8E,EAAA,KAAA8xD,EAAA9xD,MAAAm8E,EAAAC,GAGA,SAAA+E,EAAAhF,EAAAC,GACA,IAAAp8E,EAAAiN,EAAAkvE,EAAAC,GACAn8E,EAAAD,QAAA,GAAAA,EAAA,IAGA,SAAA06E,IACA+E,EAAAz/E,MAAAmhF,EACAlhF,EAAAy6E,YAGA,SAAAC,IACA8E,EAAAz/E,QACAC,EAAA06E,UAIA,IAGA2F,EACAM,EAJAQ,EAAAC,KACAC,EAAApB,EAAAkB,GACAH,GAAA,EAIA,SAAAZ,EAAAlE,EAAAC,GACAwE,EAAA92E,KAAA,CAAAqyE,EAAAC,IACA,IAAAp8E,EAAAiN,EAAAkvE,EAAAC,GACAkF,EAAAthF,QAAA,GAAAA,EAAA,IAGA,SAAAg+E,IACAsD,EAAA5G,YACAkG,EAAA,GAGA,SAAA3C,IACAoC,EAAAO,EAAA,MAAAA,EAAA,OACAU,EAAA3G,UACA,IAEA+E,EAFA6B,EAAAD,EAAAC,QACAC,EAAAJ,WAEAn7E,EAAAu7E,EAAAnnF,OAIA,GAHAumF,EAAAa,MACAnB,EAAAx2E,KAAA82E,GACAA,EAAA,KACA36E,EAEA,KAAAs7E,EAAA,CAEA,IAEAvhF,EADA7F,GAAA,EAGA,IAJA8L,GADAy5E,EAAA8B,EAAA,IACAnnF,OAAA,GAIA,GAIA,IAHA4mF,IAAAnvB,EAAA8oB,eAAAqG,GAAA,GACAnvB,EAAA4oB,cAEAvgF,EAAA8L,GACA6rD,EAAA9xD,SAAA0/E,EAAAvlF,IAAA,GAAA6F,EAAA,IAGA8xD,EAAA6oB,gBAMA10E,EAAA,KAAAs7E,GAAAC,EAAA13E,KAAA03E,EAAAC,MAAAl2E,OAAAi2E,EAAAhxC,UACA+uC,EAAAz1E,KAAA03E,EAAAliE,OAAAoiE,KAGA,OAAAjC,GAIA,SAAAiC,GAAAhC,GACA,OAAAA,EAAArlF,OAAA,EAGA,SAAAgnF,KACA,IACAphF,EADAwC,EAAA,GAEA,OACAi4E,UAAA,WACAj4E,EAAAqH,KAAA7J,EAAA,KAEAD,MAAA,SAAAm8E,EAAAC,GACAn8E,EAAA6J,KAAA,CAAAqyE,EAAAC,KAEAzB,QAAAnpB,EACA4vB,OAAA,WACA,IAAAA,EAAA3+E,EAGA,OAFAA,EAAA,GACAxC,EAAA,KACAmhF,GAEAO,OAAA,WACAl/E,EAAApI,OAAA,GAAAoI,EAAAqH,KAAArH,EAAAg/E,MAAAl2E,OAAA9I,EAAA+tC,YAKA,SAAA0wC,GAAAloE,EAAAC,GACA,QAAAD,IAAAtR,GAAA,KAAAsR,EAAA,GAAAiiD,GAAAL,GAAAK,GAAAjiD,EAAA,MAAAC,IAAAvR,GAAA,KAAAuR,EAAA,GAAAgiD,GAAAL,GAAAK,GAAAhiD,EAAA,IAGA,IAAA2oE,GAAA5B,GAAAX,GAEA,SAAAvtB,GACA,IAGA+vB,EAHA9F,EAAAl4D,IACAy5D,EAAAz5D,IACAi+D,EAAAj+D,IAGA,OACA62D,UAAA,WACA5oB,EAAA4oB,YACAmH,EAAA,GAEA7hF,MAAA,SAAAu9E,EAAAC,GACA,IAAAuE,EAAAxE,EAAA,EAAAziB,OACAuhB,EAAA/3C,EAAAi5C,EAAAxB,GAEAz3C,EAAA+3C,EAAAvhB,IAAAF,IACA9I,EAAA9xD,MAAA+7E,EAAAuB,KAAAE,GAAA,IAAAviB,QACAnJ,EAAA9xD,MAAA8hF,EAAAxE,GACAxrB,EAAA6oB,UACA7oB,EAAA4oB,YACA5oB,EAAA9xD,MAAA+hF,EAAAzE,GACAxrB,EAAA9xD,MAAAu9E,EAAAD,GACAuE,EAAA,GACSC,IAAAC,GAAA1F,GAAAvhB,KACTx2B,EAAAy3C,EAAA+F,GAAAlnB,KAAAmhB,GAAA+F,EAAAlnB,IACAt2B,EAAAi5C,EAAAwE,GAAAnnB,KAAA2iB,GAAAwE,EAAAnnB,IACA0iB,EAqBA,SAAAvB,EAAAuB,EAAAC,EAAAC,GACA,IAAAxB,EACAgG,EACAC,EAAAn8E,KAAAuH,IAAA0uE,EAAAwB,GACA,OAAAj5C,EAAA29C,GAAArnB,GAAA90D,KAAAo8E,MAAAp8E,KAAAuH,IAAAiwE,IAAA0E,EAAAl8E,KAAAu+B,IAAAm5C,IAAA13E,KAAAuH,IAAAkwE,GAAAz3E,KAAAuH,IAAAmwE,IAAAxB,EAAAl2E,KAAAu+B,IAAAi5C,IAAAx3E,KAAAuH,IAAA0uE,KAAAC,EAAAgG,EAAAC,KAAA3E,EAAAE,GAAA,EAzBA2E,CAAApG,EAAAuB,EAAAC,EAAAC,GACA1rB,EAAA9xD,MAAA8hF,EAAAxE,GACAxrB,EAAA6oB,UACA7oB,EAAA4oB,YACA5oB,EAAA9xD,MAAA+hF,EAAAzE,GACAuE,EAAA,GAGA/vB,EAAA9xD,MAAA+7E,EAAAwB,EAAAD,EAAAE,GACAsE,EAAAC,GAEApH,QAAA,WACA7oB,EAAA6oB,UACAoB,EAAAuB,EAAAz5D,KAEA09D,MAAA,WACA,SAAAM,KAYA,SAAAO,EAAAjnD,EAAAknD,EAAAvwB,GACA,IAAAsqB,EAEA,SAAAgG,EACAhG,EAAAiG,EAAApnB,GACAnJ,EAAA9xD,OAAA86D,GAAAshB,GACAtqB,EAAA9xD,MAAA,EAAAo8E,GACAtqB,EAAA9xD,MAAA86D,GAAAshB,GACAtqB,EAAA9xD,MAAA86D,GAAA,GACAhJ,EAAA9xD,MAAA86D,IAAAshB,GACAtqB,EAAA9xD,MAAA,GAAAo8E,GACAtqB,EAAA9xD,OAAA86D,IAAAshB,GACAtqB,EAAA9xD,OAAA86D,GAAA,GACAhJ,EAAA9xD,OAAA86D,GAAAshB,QACK,GAAA93C,EAAA89C,EAAA,GAAAjnD,EAAA,IAAAy/B,GAAA,CACL,IAAAjvD,EAAAy2E,EAAA,GAAAjnD,EAAA,GAAA2/B,OACAshB,EAAAiG,EAAA12E,EAAA,EACAmmD,EAAA9xD,OAAA2L,EAAAywE,GACAtqB,EAAA9xD,MAAA,EAAAo8E,GACAtqB,EAAA9xD,MAAA2L,EAAAywE,QAEAtqB,EAAA9xD,MAAAm7B,EAAA,GAAAA,EAAA,KA7EA,EAAA2/B,OAAA,IAiRA,SAAAwnB,GAAA59B,EAAAtB,EAAAhhC,EAAAE,GACA,gBAAAriB,GACA,IAUAwhD,EAVAzoC,EAAA/Y,EAAA+Y,EACAC,EAAAhZ,EAAAgZ,EACAspE,EAAAvpE,EAAAtR,EACA86E,EAAAxpE,EAAAnR,EAGAunE,EAAA,EACAt6B,EAAA,EACAhmC,EAJAmK,EAAAvR,EAIA66E,EACA/0E,EAJAyL,EAAApR,EAIA26E,EAGA,GADA/gC,EAAAiD,EAAA69B,EACAzzE,KAAA2yC,EAAA,IAGA,GAFAA,GAAA3yC,EAEAA,EAAA,GACA,GAAA2yC,EAAA2tB,EAAA,OACA3tB,EAAA3M,MAAA2M,QACO,GAAA3yC,EAAA,GACP,GAAA2yC,EAAA3M,EAAA,OACA2M,EAAA2tB,MAAA3tB,GAIA,GADAA,EAAAr/B,EAAAmgE,EACAzzE,KAAA2yC,EAAA,IAGA,GAFAA,GAAA3yC,EAEAA,EAAA,GACA,GAAA2yC,EAAA3M,EAAA,OACA2M,EAAA2tB,MAAA3tB,QACO,GAAA3yC,EAAA,GACP,GAAA2yC,EAAA2tB,EAAA,OACA3tB,EAAA3M,MAAA2M,GAIA,GADAA,EAAA2B,EAAAo/B,EACAh1E,KAAAi0C,EAAA,IAGA,GAFAA,GAAAj0C,EAEAA,EAAA,GACA,GAAAi0C,EAAA2tB,EAAA,OACA3tB,EAAA3M,MAAA2M,QACO,GAAAj0C,EAAA,GACP,GAAAi0C,EAAA3M,EAAA,OACA2M,EAAA2tB,MAAA3tB,GAIA,GADAA,EAAAn/B,EAAAkgE,EACAh1E,KAAAi0C,EAAA,IAGA,GAFAA,GAAAj0C,EAEAA,EAAA,GACA,GAAAi0C,EAAA3M,EAAA,OACA2M,EAAA2tB,MAAA3tB,QACO,GAAAj0C,EAAA,GACP,GAAAi0C,EAAA2tB,EAAA,OACA3tB,EAAA3M,MAAA2M,GAWA,OARA2tB,EAAA,IAAAnvE,EAAA+Y,EAAA,CACAtR,EAAA66E,EAAAnT,EAAAtgE,EACAjH,EAAA26E,EAAApT,EAAA5hE,IAEAsnC,EAAA,IAAA70C,EAAAgZ,EAAA,CACAvR,EAAA66E,EAAAztC,EAAAhmC,EACAjH,EAAA26E,EAAA1tC,EAAAtnC,IAEAvN,OAIA,IAAAwiF,GAAA,IA2BA,SAAAC,GAAAh+B,EAAAtB,EAAAhhC,EAAAE,GACA,gBAAAwvC,GACA,IAGAytB,EACAe,EACAM,EAiFA+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApsD,EAAA2qD,EAtFA0B,EAAAnxB,EACAoxB,EAAA7B,KACAnB,EAAAoC,GAAA59B,EAAAtB,EAAAhhC,EAAAE,GAIAm9D,EAAA,CACAz/E,QACA06E,UAgFA,WACA+E,EAAAz/E,MAAAk+E,EACAoC,KAAAx2E,KAAA82E,EAAA,IACAhqD,GAAA,EACAosD,GAAA,EACAF,EAAAC,EAAAl/D,KApFA82D,QAuFA,WACA4E,IACArB,EAAAyE,EAAAC,GACAC,GAAAG,GAAAE,EAAAvB,SACApC,EAAAz1E,KAAAo5E,EAAA9B,WAGA3B,EAAAz/E,QACAgjF,GAAAlxB,EAAA6oB,WA9FAC,aAAA,WACA9oB,EAAAoxB,EACA3D,EAAA,GACAe,EAAA,GACAiB,GAAA,GAEA1G,WAAA,WACA/oB,EAAAmxB,EACA1D,EAAAp3E,EAAAk3B,MAAAkgD,GACA,IAAAC,EAwBA,SAAArnE,GAKA,IAJA,IAAAgrE,EAAA,EACAl9E,EAAAq6E,EAAAjmF,OACAwN,EAAAsQ,EAAA,GAEAhe,EAAA,EAAuBA,EAAA8L,IAAO9L,EAC9B,QAAA8e,EAAA0iB,EAAA,EAAAt2B,EAAAi7E,EAAAnmF,GAAA2zD,EAAAzoD,EAAAhL,OAAA2e,EAAA3T,EAAA,GAAoEs2B,EAAAmyB,IAAOnyB,EAC3E1iB,EAAA5T,EAAAs2B,GAEA3iB,EAAA,IAAAnR,EACAoR,EAAA,GAAApR,GAAAwzD,GAAAriD,EAAAC,EAAAd,GAAA,KAAAgrE,EAEAlqE,EAAA,IAAApR,GAAAwzD,GAAAriD,EAAAC,EAAAd,GAAA,KAAAgrE,EAGAnqE,EAAAC,EAIA,WAAAkqE,EA3CAC,CAAA,CAAA1+B,EAAApiC,IACA+gE,EAAA9B,GAAA/B,EACA8D,EAAA/D,EAAAllF,QAEAgpF,GAAAC,KACAxxB,EAAA8oB,eAEAyI,IACAvxB,EAAA4oB,YACAxyC,EAAA,YAAA4pB,GACAA,EAAA6oB,WAGA2I,GACAhE,GAAAC,EAAAvyB,EAAAwyB,EAAAt3C,EAAA4pB,GAGAA,EAAA+oB,cAGA0E,EAAAe,EAAAM,EAAA,OA0BA,SAAA14C,EAAAk6C,EAAAjnD,EAAAknD,EAAAvwB,GACA,IAAA94C,EAAA,EACAuqE,EAAA,EAEA,SAAAnB,IAAAppE,EAAAwqE,EAAApB,EAAAC,OAAAkB,EAAAC,EAAAroD,EAAAknD,KAAAoB,EAAArB,EAAAjnD,GAAA,EAAAknD,EAAA,EACA,GACAvwB,EAAA9xD,MAAA,IAAAgZ,GAAA,IAAAA,EAAA0rC,EAAAtiC,EAAApJ,EAAA,EAAAsJ,EAAA8gC,UACWpqC,KAAAqpE,EAAA,QAAAkB,QAEXzxB,EAAA9xD,MAAAm7B,EAAA,GAAAA,EAAA,IAIA,SAAA8kD,EAAAv4E,EAAAG,GACA,OAAA68C,GAAAh9C,MAAA0a,GAAAghC,GAAAv7C,MAAAya,EAGA,SAAAtiB,EAAA0H,EAAAG,GACAo4E,EAAAv4E,EAAAG,IAAAiqD,EAAA9xD,MAAA0H,EAAAG,GAwBA,SAAAq2E,EAAAx2E,EAAAG,GAGA,IAAAxC,EAAA46E,EAFAv4E,EAAA5B,KAAA0G,KAAAi2E,GAAA38E,KAAA8B,IAAA66E,GAAA/6E,IACAG,EAAA/B,KAAA0G,KAAAi2E,GAAA38E,KAAA8B,IAAA66E,GAAA56E,KAIA,GAFAy4E,GAAAM,EAAA92E,KAAA,CAAApC,EAAAG,IAEA+uB,EACA+rD,EAAAj7E,EAAAk7E,EAAA/6E,EAAAg7E,EAAAx9E,EACAuxB,GAAA,EAEAvxB,IACAysD,EAAA4oB,YACA5oB,EAAA9xD,MAAA0H,EAAAG,SAGA,GAAAxC,GAAA29E,EAAAlxB,EAAA9xD,MAAA0H,EAAAG,OAA4C,CAC5C,IAAA42C,EAAA,CACAzlC,EAAA,CACAtR,EAAAo7E,EACAj7E,EAAAk7E,GAEA9pE,EAAA,CACAvR,IACAG,MAIAq4E,EAAAzhC,IACAukC,IACAlxB,EAAA4oB,YACA5oB,EAAA9xD,MAAAy+C,EAAAzlC,EAAAtR,EAAA+2C,EAAAzlC,EAAAnR,IAGAiqD,EAAA9xD,MAAAy+C,EAAAxlC,EAAAvR,EAAA+2C,EAAAxlC,EAAApR,GACAxC,GAAAysD,EAAA6oB,UACA4G,GAAA,GACal8E,IACbysD,EAAA4oB,YACA5oB,EAAA9xD,MAAA0H,EAAAG,GACA05E,GAAA,GAKAuB,EAAAp7E,EAAAq7E,EAAAl7E,EAAAm7E,EAAA39E,EAGA,OAAAo6E,GAGA,SAAA+D,EAAArrE,EAAAkqE,GACA,OAAA/9C,EAAAnsB,EAAA,GAAAusC,GAAAkW,GAAAynB,EAAA,MAAA/9C,EAAAnsB,EAAA,GAAAiK,GAAAw4C,GAAAynB,EAAA,MAAA/9C,EAAAnsB,EAAA,GAAAirC,GAAAwX,GAAAynB,EAAA,MAAAA,EAAA,MAGA,SAAAr1B,EAAAh0C,EAAAC,GACA,OAAAwqE,EAAAzqE,EAAAtR,EAAAuR,EAAAvR,GAGA,SAAA+7E,EAAAzqE,EAAAC,GACA,IAAAyqE,EAAAF,EAAAxqE,EAAA,GACA2qE,EAAAH,EAAAvqE,EAAA,GACA,OAAAyqE,IAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAAzqE,EAAA,GAAAD,EAAA,OAAA0qE,EAAA1qE,EAAA,GAAAC,EAAA,OAAAyqE,EAAA1qE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,IAIA,SAAA4qE,GAAAC,GACA,IAAAvG,EAAA,EACAE,EAAA1iB,GAAA,EACAhN,EAAAg2B,GAAAD,GACA1rE,EAAA21C,EAAAwvB,EAAAE,GAOA,OALArlE,EAAA4rE,UAAA,SAAAt0B,GACA,OAAAr1D,UAAAC,OACAyzD,EAAAwvB,EAAA7tB,EAAA,GAAAqL,GAAA,IAAA0iB,EAAA/tB,EAAA,GAAAqL,GAAA,KADA,CAAAwiB,EAAAxiB,GAAA,IAAA0iB,EAAA1iB,GAAA,MAIA3iD,EAGA,SAAA6rE,GAAA1G,EAAAE,GACA,IAAAvB,EAAAn2E,KAAAuH,IAAAiwE,GACAr3E,GAAAg2E,EAAAn2E,KAAAuH,IAAAmwE,IAAA,EACAyG,EAAA,EAAAhI,GAAA,EAAAh2E,EAAAg2E,GACAiI,EAAAp+E,KAAAo+B,KAAA+/C,GAAAh+E,EAEA,SAAAk+E,EAAAhI,EAAAC,GACA,IAAAvgB,EAAA/1D,KAAAo+B,KAAA+/C,EAAA,EAAAh+E,EAAAH,KAAAuH,IAAA+uE,IAAAn2E,EACA,OAAA41D,EAAA/1D,KAAAuH,IAAA8uE,GAAAl2E,GAAAi+E,EAAAroB,EAAA/1D,KAAAu+B,IAAA83C,IAQA,OALAgI,EAAAhmB,OAAA,SAAAz2D,EAAAG,GACA,IAAAu8E,EAAAF,EAAAr8E,EACA,OAAA/B,KAAA+7D,MAAAn6D,EAAA08E,GAAAn+E,EAAAu1D,IAAAyoB,GAAAv8E,IAAA08E,KAAAn+E,MAAA,EAAAA,MAGAk+E,EArOAh8E,EAAA0wE,IAAAwL,WAAA,WACA,IAAA3/B,EACAtB,EACAhhC,EACAE,EACAgiE,EACA7E,EACA4E,EAAA,CACAhL,OAAA,SAAAkL,GAIA,OAHAD,MAAAE,OAAA,IACAF,EAAA7E,EAAA8E,IACAC,OAAA,EACAF,GAEAxkE,OAAA,SAAA2vC,GACA,OAAAr1D,UAAAC,QACAolF,EAAAiD,GAAAh+B,GAAA+K,EAAA,MAAArM,GAAAqM,EAAA,MAAArtC,GAAAqtC,EAAA,MAAAntC,GAAAmtC,EAAA,OACA60B,MAAAE,OAAA,EAAAF,EAAA,MACAD,GAHA,EAAA3/B,EAAAtB,GAAA,CAAAhhC,EAAAE,MAOA,OAAA+hE,EAAAvkE,OAAA,qBAkNA3X,EAAA0wE,IAAA4L,eAAA,WACA,OAAAb,GAAAI,MACGljC,IAAAkjC,GAEH77E,EAAA0wE,IAAA6L,OAAA,WACA,OAAAv8E,EAAA0wE,IAAA4L,iBAAAx3E,OAAA,QAAA4qC,OAAA,YAAAksC,UAAA,aAAA37E,MAAA,OAGAD,EAAA0wE,IAAA8L,UAAA,WACA,IAIAC,EAMAC,EACAC,EACAC,EAZAC,EAAA78E,EAAA0wE,IAAA6L,SACAO,EAAA98E,EAAA0wE,IAAA4L,iBAAAx3E,OAAA,SAAA4qC,OAAA,WAAAksC,UAAA,SACAmB,EAAA/8E,EAAA0wE,IAAA4L,iBAAAx3E,OAAA,SAAA4qC,OAAA,WAAAksC,UAAA,QAGAoB,EAAA,CACAnlF,MAAA,SAAA0H,EAAAG,GACA+8E,EAAA,CAAAl9E,EAAAG,KAOA,SAAA88E,EAAA7K,GACA,IAAApyE,EAAAoyE,EAAA,GACAjyE,EAAAiyE,EAAA,GAGA,OAFA8K,EAAA,KACAC,EAAAn9E,EAAAG,GAAA+8E,IAAAE,EAAAp9E,EAAAG,GAAA+8E,IAAAG,EAAAr9E,EAAAG,GACA+8E,EA4EA,OAzEAD,EAAAxmB,OAAA,SAAA2b,GACA,IAAA3nC,EAAA6yC,EAAA58E,QACAshB,EAAAs7D,EAAAhhD,YACAt8B,GAAAoyE,EAAA,GAAApwD,EAAA,IAAAyoB,EACAtqC,GAAAiyE,EAAA,GAAApwD,EAAA,IAAAyoB,EACA,OAAAtqC,GAAA,KAAAA,EAAA,MAAAH,IAAA,MAAAA,GAAA,KAAAu9E,EAAAp9E,GAAA,MAAAA,EAAA,MAAAH,IAAA,MAAAA,GAAA,KAAAw9E,EAAAF,GAAA7mB,OAAA2b,IAGA6K,EAAAtL,OAAA,SAAAA,GACA,IAAA+L,EAAAJ,EAAA3L,UACAgM,EAAAJ,EAAA5L,UACAiM,EAAAJ,EAAA7L,UACA,OACAr5E,MAAA,SAAA0H,EAAAG,GACAu9E,EAAAplF,MAAA0H,EAAAG,GACAw9E,EAAArlF,MAAA0H,EAAAG,GACAy9E,EAAAtlF,MAAA0H,EAAAG,IAEA+xE,OAAA,WACAwL,EAAAxL,SACAyL,EAAAzL,SACA0L,EAAA1L,UAEAc,UAAA,WACA0K,EAAA1K,YACA2K,EAAA3K,YACA4K,EAAA5K,aAEAC,QAAA,WACAyK,EAAAzK,UACA0K,EAAA1K,UACA2K,EAAA3K,WAEAC,aAAA,WACAwK,EAAAxK,eACAyK,EAAAzK,eACA0K,EAAA1K,gBAEAC,WAAA,WACAuK,EAAAvK,aACAwK,EAAAxK,aACAyK,EAAAzK,gBAKA8J,EAAAjU,UAAA,SAAAjhB,GACA,OAAAr1D,UAAAC,QACA2qF,EAAAtU,UAAAjhB,GACAw1B,EAAAvU,UAAAjhB,GACAy1B,EAAAxU,UAAAjhB,GACAk1B,GAJAK,EAAAtU,aAOAiU,EAAAv8E,MAAA,SAAAqnD,GACA,OAAAr1D,UAAAC,QACA2qF,EAAA58E,MAAAqnD,GACAw1B,EAAA78E,MAAA,IAAAqnD,GACAy1B,EAAA98E,MAAAqnD,GACAk1B,EAAA3gD,UAAAghD,EAAAhhD,cAJAghD,EAAA58E,SAOAu8E,EAAA3gD,UAAA,SAAAyrB,GACA,IAAAr1D,UAAAC,OAAA,OAAA2qF,EAAAhhD,YACA,IAAAmO,EAAA6yC,EAAA58E,QACAV,GAAA+nD,EAAA,GACA5nD,GAAA4nD,EAAA,GAIA,OAHAo1B,EAAAG,EAAAhhD,UAAAyrB,GAAA40B,WAAA,EAAA38E,EAAA,KAAAyqC,EAAAtqC,EAAA,KAAAsqC,GAAA,CAAAzqC,EAAA,KAAAyqC,EAAAtqC,EAAA,KAAAsqC,KAAAknC,OAAA8L,GAAAnlF,MACA8kF,EAAAG,EAAAjhD,UAAA,CAAAt8B,EAAA,KAAAyqC,EAAAtqC,EAAA,KAAAsqC,IAAAkyC,WAAA,EAAA38E,EAAA,KAAAyqC,EAAAyoB,GAAA/yD,EAAA,IAAAsqC,EAAAyoB,IAAA,CAAAlzD,EAAA,KAAAyqC,EAAAyoB,GAAA/yD,EAAA,KAAAsqC,EAAAyoB,MAAAye,OAAA8L,GAAAnlF,MACA+kF,EAAAG,EAAAlhD,UAAA,CAAAt8B,EAAA,KAAAyqC,EAAAtqC,EAAA,KAAAsqC,IAAAkyC,WAAA,EAAA38E,EAAA,KAAAyqC,EAAAyoB,GAAA/yD,EAAA,KAAAsqC,EAAAyoB,IAAA,CAAAlzD,EAAA,KAAAyqC,EAAAyoB,GAAA/yD,EAAA,KAAAsqC,EAAAyoB,MAAAye,OAAA8L,GAAAnlF,MACA2kF,GAGAA,EAAAv8E,MAAA,OAGA,IAAAm9E,GACAC,GAiCAC,GAAAC,GAAAC,GAAAC,GAhCAC,GAAA,CACA7lF,MAAAwxD,EACAkpB,UAAAlpB,EACAmpB,QAAAnpB,EACAopB,aAAA,WACA4K,GAAA,EACAK,GAAAnL,UAAAoL,IAEAjL,WAAA,WACAgL,GAAAnL,UAAAmL,GAAAlL,QAAAkL,GAAA7lF,MAAAwxD,EACA+zB,IAAAjhD,EAAAkhD,GAAA,KAIA,SAAAM,KACA,IAAAC,EAAAC,EAAAthC,EAAAtB,EAOA,SAAA84B,EAAAx0E,EAAAG,GACA29E,IAAApiC,EAAA17C,EAAAg9C,EAAA78C,EACA68C,EAAAh9C,EAAA07C,EAAAv7C,EAPAg+E,GAAA7lF,MAAA,SAAA0H,EAAAG,GACAg+E,GAAA7lF,MAAAk8E,EACA6J,EAAArhC,EAAAh9C,EAAAs+E,EAAA5iC,EAAAv7C,GAQAg+E,GAAAlL,QAAA,WACAuB,EAAA6J,EAAAC,IAKA,IAAAC,GAAA,CACAjmF,MAOA,SAAA0H,EAAAG,GACAH,EAAA+9E,QAAA/9E,GACAA,EAAAi+E,QAAAj+E,GACAG,EAAA69E,QAAA79E,GACAA,EAAA+9E,QAAA/9E,IAVA6yE,UAAAlpB,EACAmpB,QAAAnpB,EACAopB,aAAAppB,EACAqpB,WAAArpB,GAUA,SAAA00B,KACA,IAAAC,EAAAC,GAAA,KACAhF,EAAA,GACA/H,EAAA,CACAr5E,QACA06E,UAAA,WACArB,EAAAr5E,MAAAqmF,GAEA1L,UACAC,aAAA,WACAvB,EAAAsB,QAAA2L,GAEAzL,WAAA,WACAxB,EAAAsB,UACAtB,EAAAr5E,SAEAumF,YAAA,SAAA92B,GAEA,OADA02B,EAAAC,GAAA32B,GACA4pB,GAEAjN,OAAA,WACA,GAAAgV,EAAA/mF,OAAA,CACA,IAAA+xE,EAAAgV,EAAAvT,KAAA,IAEA,OADAuT,EAAA,GACAhV,KAKA,SAAApsE,EAAA0H,EAAAG,GACAu5E,EAAAt3E,KAAA,IAAApC,EAAA,IAAAG,EAAAs+E,GAGA,SAAAE,EAAA3+E,EAAAG,GACAu5E,EAAAt3E,KAAA,IAAApC,EAAA,IAAAG,GACAwxE,EAAAr5E,MAAAmhF,EAGA,SAAAA,EAAAz5E,EAAAG,GACAu5E,EAAAt3E,KAAA,IAAApC,EAAA,IAAAG,GAGA,SAAA8yE,IACAtB,EAAAr5E,QAGA,SAAAsmF,IACAlF,EAAAt3E,KAAA,KAGA,OAAAuvE,EAGA,SAAA+M,GAAAtkD,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAGA,IAs0BA0kD,GAt0BAC,GAAA,CACAzmF,MAAA0mF,GACAhM,UAAAiM,GACAhM,QAAAiM,GACAhM,aAAA,WACA6L,GAAA/L,UAAAmM,IAEAhM,WAAA,WACA4L,GAAAzmF,MAAA0mF,GACAD,GAAA/L,UAAAiM,GACAF,GAAA9L,QAAAiM,KAIA,SAAAF,GAAAh/E,EAAAG,GACAqzE,IAAAxzE,EACAyzE,IAAAtzE,IACAuzE,GAGA,SAAAuL,KACA,IAAAjiC,EAAAtB,EAOA,SAAA84B,EAAAx0E,EAAAG,GACA,IAAAiH,EAAApH,EAAAg9C,EACAl3C,EAAA3F,EAAAu7C,EACA4H,EAAAllD,KAAAo+B,KAAAp1B,IAAAtB,KACA6tE,IAAArwB,GAAAtG,EAAAh9C,GAAA,EACA4zE,IAAAtwB,GAAA5H,EAAAv7C,GAAA,EACA0zE,IAAAvwB,EACA07B,GAAAhiC,EAAAh9C,EAAA07C,EAAAv7C,GAZA4+E,GAAAzmF,MAAA,SAAA0H,EAAAG,GACA4+E,GAAAzmF,MAAAk8E,EACAwK,GAAAhiC,EAAAh9C,EAAA07C,EAAAv7C,IAcA,SAAA++E,KACAH,GAAAzmF,MAAA0mF,GAGA,SAAAG,KACA,IAAAd,EAAAC,EAAAthC,EAAAtB,EAOA,SAAA84B,EAAAx0E,EAAAG,GACA,IAAAiH,EAAApH,EAAAg9C,EACAl3C,EAAA3F,EAAAu7C,EACA4H,EAAAllD,KAAAo+B,KAAAp1B,IAAAtB,KACA6tE,IAAArwB,GAAAtG,EAAAh9C,GAAA,EACA4zE,IAAAtwB,GAAA5H,EAAAv7C,GAAA,EACA0zE,IAAAvwB,EAEAwwB,KADAxwB,EAAA5H,EAAA17C,EAAAg9C,EAAA78C,IACA68C,EAAAh9C,GACA+zE,IAAAzwB,GAAA5H,EAAAv7C,GACA6zE,IAAA,EAAA1wB,EACA07B,GAAAhiC,EAAAh9C,EAAA07C,EAAAv7C,GAhBA4+E,GAAAzmF,MAAA,SAAA0H,EAAAG,GACA4+E,GAAAzmF,MAAAk8E,EACAwK,GAAAX,EAAArhC,EAAAh9C,EAAAs+E,EAAA5iC,EAAAv7C,IAiBA4+E,GAAA9L,QAAA,WACAuB,EAAA6J,EAAAC,IAIA,SAAAc,GAAAx/B,GACA,IAAAy/B,EAAA,IACA1N,EAAA,CACAr5E,QACA06E,UAAA,WACArB,EAAAr5E,MAAAqmF,GAEA1L,UACAC,aAAA,WACAvB,EAAAsB,QAAA2L,GAEAzL,WAAA,WACAxB,EAAAsB,UACAtB,EAAAr5E,SAEAumF,YAAA,SAAA92B,GAEA,OADAs3B,EAAAt3B,EACA4pB,GAEAjN,OAAA5a,GAGA,SAAAxxD,EAAA0H,EAAAG,GACAy/C,EAAA0/B,OAAAt/E,EAAAq/E,EAAAl/E,GACAy/C,EAAAzkD,IAAA6E,EAAAG,EAAAk/E,EAAA,EAAAhsB,IAGA,SAAAsrB,EAAA3+E,EAAAG,GACAy/C,EAAA0/B,OAAAt/E,EAAAG,GACAwxE,EAAAr5E,MAAAmhF,EAGA,SAAAA,EAAAz5E,EAAAG,GACAy/C,EAAA2/B,OAAAv/E,EAAAG,GAGA,SAAA8yE,IACAtB,EAAAr5E,QAGA,SAAAsmF,IACAh/B,EAAA4/B,YAGA,OAAA7N,EAGA,SAAA8N,GAAAC,GACA,IAAAC,EAAA,GACAC,EAAAxhF,KAAAu+B,IAAA,GAAA62B,IACAqsB,EAAA,GAEA,SAAAC,EAAAnO,GACA,OAAAkO,EAUA,SAAAlO,GACA,IAAAwC,EAAAkK,EAAAC,EAAAyB,EAAAC,EAAAC,EAAA5L,EAAAr3B,EAAAtB,EAAAwkC,EAAAlrB,EAAAmrB,EACAL,EAAA,CACAxnF,QACA06E,YACAC,UACAC,aAAA,WACAvB,EAAAuB,eACA4M,EAAA9M,UAAAsD,GAEAnD,WAAA,WACAxB,EAAAwB,aACA2M,EAAA9M,cAIA,SAAA16E,EAAA0H,EAAAG,GACAH,EAAA0/E,EAAA1/E,EAAAG,GACAwxE,EAAAr5E,MAAA0H,EAAA,GAAAA,EAAA,IAGA,SAAAgzE,IACAh2B,EAAA7gC,IACA2jE,EAAAxnF,MAAAk+E,EACA7E,EAAAqB,YAGA,SAAAwD,EAAA/B,EAAAC,GACA,IAAAj9C,EAAAu9C,GAAA,CAAAP,EAAAC,IACAjkE,EAAAivE,EAAAjL,EAAAC,GACA0L,EAAApjC,EAAAtB,EAAA24B,EAAA6L,EAAAlrB,EAAAmrB,EAAAnjC,EAAAvsC,EAAA,GAAAirC,EAAAjrC,EAAA,GAAA4jE,EAAAI,EAAAyL,EAAAzoD,EAAA,GAAAu9B,EAAAv9B,EAAA,GAAA0oD,EAAA1oD,EAAA,GAAAooD,EAAAlO,GACAA,EAAAr5E,MAAA0kD,EAAAtB,GAGA,SAAAu3B,IACA6M,EAAAxnF,QACAq5E,EAAAsB,UAGA,SAAAqD,IACAtD,IACA8M,EAAAxnF,MAAA+9E,EACAyJ,EAAA7M,QAAAsD,EAGA,SAAAF,EAAA5B,EAAAC,GACA8B,EAAArC,EAAAM,EAAAC,GAAA2J,EAAArhC,EAAAshC,EAAA5iC,EAAAqkC,EAAAG,EAAAF,EAAAhrB,EAAAirB,EAAAE,EACAL,EAAAxnF,MAAAk+E,EAGA,SAAAD,IACA6J,EAAApjC,EAAAtB,EAAA24B,EAAA6L,EAAAlrB,EAAAmrB,EAAA9B,EAAAC,EAAAnK,EAAA4L,EAAAC,EAAAC,EAAAJ,EAAAlO,GACAmO,EAAA7M,UACAA,IAGA,OAAA6M,GA/DA,SAAAnO,GACA,OAAA0O,GAAA1O,EAAA,SAAA3xE,EAAAG,GACAH,EAAA0/E,EAAA1/E,EAAAG,GACAwxE,EAAAr5E,MAAA0H,EAAA,GAAAA,EAAA,QANA2xE,GAqEA,SAAAyO,EAAApjC,EAAAtB,EAAA24B,EAAA6L,EAAAlrB,EAAAmrB,EAAAzlE,EAAAE,EAAAi7D,EAAAgG,EAAA5mB,EAAAqrB,EAAA/2B,EAAAooB,GACA,IAAAvqE,EAAAsT,EAAAsiC,EACAl3C,EAAA8U,EAAA8gC,EACAoZ,EAAA1tD,IAAAtB,IAEA,GAAAgvD,EAAA,EAAA6qB,GAAAp2B,IAAA,CACA,IAAAj4C,EAAA4uE,EAAArE,EACAtqE,EAAAyjD,EAAAC,EACAx9B,EAAA0oD,EAAAG,EACAl6B,EAAAhoD,KAAAo+B,KAAAlrB,IAAAC,IAAAkmB,KACA8oD,EAAAniF,KAAA21D,KAAAt8B,GAAA2uB,GACAo6B,EAAA5jD,IAAAnF,GAAA,GAAAy7B,IAAAt2B,EAAAy3C,EAAAwB,GAAA3iB,IAAAmhB,EAAAwB,GAAA,EAAAz3E,KAAA+7D,MAAA5oD,EAAAD,GACAb,EAAAivE,EAAAc,EAAAD,GACA5lE,EAAAlK,EAAA,GACAlH,EAAAkH,EAAA,GACAgwE,EAAA9lE,EAAAqiC,EACA0jC,EAAAn3E,EAAAmyC,EACAilC,EAAA76E,EAAA26E,EAAAr5E,EAAAs5E,GAEAC,IAAA7rB,EAAA6qB,GAAA/iD,GAAAx1B,EAAAq5E,EAAA36E,EAAA46E,GAAA5rB,EAAA,QAAAorB,EAAArE,EAAA7mB,EAAAC,EAAAkrB,EAAAG,EAAAV,KACAQ,EAAApjC,EAAAtB,EAAA24B,EAAA6L,EAAAlrB,EAAAmrB,EAAAxlE,EAAApR,EAAAi3E,EAAAlvE,GAAA80C,EAAA70C,GAAA60C,EAAA3uB,EAAA8xB,EAAAooB,GACAA,EAAAr5E,MAAAqiB,EAAApR,GACA62E,EAAAzlE,EAAApR,EAAAi3E,EAAAlvE,EAAAC,EAAAkmB,EAAA/c,EAAAE,EAAAi7D,EAAAgG,EAAA5mB,EAAAqrB,EAAA/2B,EAAAooB,KAWA,OANAmO,EAAA9W,UAAA,SAAAjhB,GACA,OAAAr1D,UAAAC,QACAktF,GAAAF,EAAA53B,KAAA,MACA+3B,GAFA1hF,KAAAo+B,KAAAmjD,IAKAG,EAyFA,SAAAc,GAAAjP,GACAl9E,KAAAk9E,SAwBA,SAAA0O,GAAA1O,EAAAr5E,GACA,OACAA,QACA45E,OAAA,WACAP,EAAAO,UAEAc,UAAA,WACArB,EAAAqB,aAEAC,QAAA,WACAtB,EAAAsB,WAEAC,aAAA,WACAvB,EAAAuB,gBAEAC,WAAA,WACAxB,EAAAwB,eAQA,SAAA0N,GAAAnB,GACA,OAAAtD,GAAA,WACA,OAAAsD,GADAtD,GAKA,SAAAA,GAAAD,GACA,IAAAuD,EACAn6E,EACAu7E,EAaAC,EACAC,EAKArP,EAlBAsP,EAAAxB,GAAA,SAAAz/E,EAAAG,GAEA,QADAH,EAAA0/E,EAAA1/E,EAAAG,IACA,GAAAsqC,EAAAs2C,EAAAC,EAAAhhF,EAAA,GAAAyqC,KAEAA,EAAA,IACAzqC,EAAA,IACAG,EAAA,IACAs0E,EAAA,EACAC,EAAA,EACAwM,EAAA,EACAC,EAAA,EACAC,EAAA,EAGAC,EAAAnH,GACAoH,EAAA34B,EACA44B,EAAA,KACA5E,EAAA,KAGA,SAAA6E,EAAAlpF,GAEA,QADAA,EAAAwoF,EAAAxoF,EAAA,GAAAk7D,GAAAl7D,EAAA,GAAAk7D,KACA,GAAA/oB,EAAAs2C,EAAAC,EAAA1oF,EAAA,GAAAmyC,GAGA,SAAAgsB,EAAAn+D,GAEA,OADAA,EAAAwoF,EAAArqB,QAAAn+D,EAAA,GAAAyoF,GAAAt2C,GAAAu2C,EAAA1oF,EAAA,IAAAmyC,KACA,CAAAnyC,EAAA,GAAAm7D,GAAAn7D,EAAA,GAAAm7D,IAqDA,SAAAzb,IACA8oC,EAAArJ,GAAAlyE,EAAAk8E,GAAAP,EAAAC,EAAAC,GAAA1B,GACA,IAAAvvC,EAAAuvC,EAAAjL,EAAAC,GAGA,OAFAqM,EAAA/gF,EAAAmwC,EAAA,GAAA1F,EACAu2C,EAAA7gF,EAAAgwC,EAAA,GAAA1F,EACAi3C,IAGA,SAAAA,IAEA,OADA/P,MAAAmL,OAAA,EAAAnL,EAAA,MACA6P,EAGA,OA/DAA,EAAA7P,OAAA,SAAAkL,GAIA,OAHAlL,MAAAmL,OAAA,IACAnL,EAAAgQ,GAAAN,EAAA97E,EAAA07E,EAAAK,EAAAzE,OACAC,OAAA,EACAnL,GAGA6P,EAAAD,UAAA,SAAAx5B,GACA,OAAAr1D,UAAAC,QACA0uF,EAAA,MAAAt5B,GAAAw5B,EAAAx5B,EAAAmyB,IA/iCA,SAAA9/C,GACA,IAAAwnD,EAAAxjF,KAAAu+B,IAAAvC,GACAynD,EAAAD,EAAA,EACAE,EAAAllD,EAAAglD,GAAA1uB,GAEA,OAAAolB,GAAAsD,EAMA,SAAAxxB,GACA,IAAA+uB,EAAAgH,EAAA4B,EAAAC,EAAAC,EAEA,OACAjP,UAAA,WACAgP,EAAAD,GAAA,EACAE,EAAA,GAEA3pF,MAAA,SAAAm8E,EAAAC,GACA,IACAwN,EADAC,EAAA,CAAA1N,EAAAC,GAEA/2E,EAAAi+E,EAAAnH,EAAAC,GACAj9C,EAAAoqD,EAAAlkF,EAAA,EAAAykF,EAAA3N,EAAAC,GAAA/2E,EAAAykF,EAAA3N,KAAA,EAAArhB,QAAAshB,GAAA,EAaA,IAZAyE,IAAA6I,EAAAD,EAAApkF,IAAAysD,EAAA4oB,YAEAr1E,IAAAokF,IACAG,EAAAG,EAAAlJ,EAAAgJ,IAEAzM,GAAAyD,EAAA+I,IAAAxM,GAAAyM,EAAAD,MACAC,EAAA,IAAAjvB,GACAivB,EAAA,IAAAjvB,GACAv1D,EAAAi+E,EAAAuG,EAAA,GAAAA,EAAA,MAIAxkF,IAAAokF,EACAE,EAAA,EAEAtkF,GACAysD,EAAA4oB,YACAkP,EAAAG,EAAAF,EAAAhJ,GACA/uB,EAAA9xD,MAAA4pF,EAAA,GAAAA,EAAA,MAEAA,EAAAG,EAAAlJ,EAAAgJ,GACA/3B,EAAA9xD,MAAA4pF,EAAA,GAAAA,EAAA,IACA93B,EAAA6oB,WAGAkG,EAAA+I,OACW,GAAAJ,GAAA3I,GAAA0I,EAAAlkF,EAAA,CACX,IAAAqkB,EAEAyV,EAAA0oD,KAAAn+D,EAAAqgE,EAAAF,EAAAhJ,GAAA,MACA8I,EAAA,EAEAJ,GACAz3B,EAAA4oB,YACA5oB,EAAA9xD,MAAA0pB,EAAA,MAAAA,EAAA,OACAooC,EAAA9xD,MAAA0pB,EAAA,MAAAA,EAAA,OACAooC,EAAA6oB,YAEA7oB,EAAA9xD,MAAA0pB,EAAA,MAAAA,EAAA,OACAooC,EAAA6oB,UACA7oB,EAAA4oB,YACA5oB,EAAA9xD,MAAA0pB,EAAA,MAAAA,EAAA,UAKArkB,GAAAw7E,GAAAzD,GAAAyD,EAAAgJ,IACA/3B,EAAA9xD,MAAA6pF,EAAA,GAAAA,EAAA,IAGAhJ,EAAAgJ,EAAAJ,EAAApkF,EAAAwiF,EAAA1oD,GAEAw7C,QAAA,WACA8O,GAAA33B,EAAA6oB,UACAkG,EAAA,MAEAU,MAAA,WACA,OAAAoI,GAAAD,GAAAD,IAAA,KA7EAO,GAAAloD,EAAA,EAAAo5B,IACAquB,EAAA,IAAAznD,GAAA,EAAAg5B,GAAAh5B,EAAAg5B,KAEA,SAAAwoB,EAAAnH,EAAAC,GACA,OAAAt2E,KAAAu+B,IAAA83C,GAAAr2E,KAAAu+B,IAAA+3C,GAAAkN,EA8EA,SAAAS,EAAA/wE,EAAAC,EAAAgxE,GACA,IAEAC,EAAA,QACAC,EAAAtN,GAHAH,GAAA1jE,GACA0jE,GAAAzjE,IAGAmxE,EAAAxN,GAAAuN,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,IACA,IAAAC,EAAA,OAAAL,GAAAjxE,EACA,IAAAgvE,EAAAsB,EAAAc,EAAAE,EACAC,GAAAjB,EAAAe,EAAAC,EACAE,EAAA3N,GAAAqN,EAAAC,GACAjU,EAAA6G,GAAAmN,EAAAlC,GAEAlL,GAAA5G,EADA6G,GAAAoN,EAAAI,IAEA,IAAAztB,EAAA0tB,EACA5/E,EAAAgyE,GAAA1G,EAAApZ,GACA2tB,EAAA7N,GAAA9f,KACA/nB,EAAAnqC,IAAA6/E,GAAA7N,GAAA1G,KAAA,GACA,KAAAnhC,EAAA,IACA,IAAArrB,EAAA5jB,KAAAo+B,KAAA6Q,GACAqqB,EAAA2d,GAAAjgB,IAAAlyD,EAAA8e,GAAA+gE,GAGA,GAFA3N,GAAA1d,EAAA8W,GACA9W,EAAA8d,GAAA9d,IACA6qB,EAAA,OAAA7qB,EACA,IAIApU,EAJA+wB,EAAA/iE,EAAA,GACAukE,EAAAtkE,EAAA,GACAqkE,EAAAtkE,EAAA,GACAwkE,EAAAvkE,EAAA,GAEAskE,EAAAxB,IAAA/wB,EAAA+wB,IAAAwB,IAAAvyB,GACA,IAAA49B,EAAArL,EAAAxB,EACA2O,EAAApmD,EAAAskD,EAAA9tB,IAAAF,GAIA,IAFA8vB,GAAAlN,EAAAF,IAAAtyB,EAAAsyB,IAAAE,IAAAxyB,GADA0/B,GAAA9B,EAAAhuB,GAGA8vB,EAAApN,EAAAE,EAAA,EAAApe,EAAA,IAAA96B,EAAA86B,EAAA,GAAA2c,GAAAnhB,GAAA0iB,EAAAE,GAAAF,GAAAle,EAAA,IAAAA,EAAA,IAAAoe,EAAAoL,EAAA9tB,IAAAihB,GAAA3c,EAAA,IAAAA,EAAA,IAAAme,GAAA,CACA,IAAAoN,EAAA5N,GAAAjgB,IAAAlyD,EAAA8e,GAAA+gE,GAEA,OADA3N,GAAA6N,EAAAzU,GACA,CAAA9W,EAAA8d,GAAAyN,MAIA,SAAAb,EAAA3N,EAAAC,GACA,IAAA36B,EAAA8nC,EAAAznD,EAAAg5B,GAAAh5B,EACAgoD,EAAA,EAGA,OAFA3N,GAAA16B,EAAAqoC,GAAA,EAA4B3N,EAAA16B,IAAAqoC,GAAA,GAC5B1N,GAAA36B,EAAAqoC,GAAA,EAA4B1N,EAAA36B,IAAAqoC,GAAA,GAC5BA,GAy6BAc,EAAA3B,GAAAx5B,GAAAyL,IACAkuB,KAFAH,GAKAC,EAAA7E,WAAA,SAAA50B,GACA,OAAAr1D,UAAAC,QACAgqF,EAAA50B,EACAu5B,EAAAv5B,EAAAizB,GAAAjzB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAY,EACA+4B,KAHA/E,GAMA6E,EAAA9gF,MAAA,SAAAqnD,GACA,OAAAr1D,UAAAC,QACA83C,GAAAsd,EACA/P,KAFAvN,GAKA+2C,EAAAllD,UAAA,SAAAyrB,GACA,OAAAr1D,UAAAC,QACAqN,GAAA+nD,EAAA,GACA5nD,GAAA4nD,EAAA,GACA/P,KAHA,CAAAh4C,EAAAG,IAMAqhF,EAAArxC,OAAA,SAAA4X,GACA,OAAAr1D,UAAAC,QACA8hF,EAAA1sB,EAAA,OAAAyL,GACAkhB,EAAA3sB,EAAA,OAAAyL,GACAxb,KAHA,CAAAy8B,EAAAhhB,GAAAihB,EAAAjhB,KAMA+tB,EAAAj8E,OAAA,SAAAwiD,GACA,OAAAr1D,UAAAC,QACAuuF,EAAAn5B,EAAA,OAAAyL,GACA2tB,EAAAp5B,EAAA,OAAAyL,GACA4tB,EAAAr5B,EAAAp1D,OAAA,EAAAo1D,EAAA,OAAAyL,GAAA,EACAxb,KAJA,CAAAkpC,EAAAztB,GAAA0tB,EAAA1tB,GAAA2tB,EAAA3tB,KAOAhzD,EAAAopD,OAAA23B,EAAAP,EAAA,aAeA,WAGA,OAFAvB,EAAAvD,EAAApnF,MAAAN,KAAA/B,WACA8uF,EAAA/qB,OAAAipB,EAAAjpB,UACAze,KAIA,SAAA2pC,GAAAhQ,GACA,OAAA0O,GAAA1O,EAAA,SAAA3xE,EAAAG,GACAwxE,EAAAr5E,MAAA0H,EAAAwzD,GAAArzD,EAAAqzD,MAIA,SAAA2vB,GAAA1O,EAAAC,GACA,OAAAD,EAAAC,GAuBA,SAAA0O,GAAA3O,EAAAC,GACA,OAAAD,EAAArhB,GAAAqhB,EAAAphB,GAAAohB,GAAArhB,GAAAqhB,EAAAphB,GAAAohB,EAAAC,GAKA,SAAA+M,GAAAP,EAAAC,EAAAC,GACA,OAAAF,EAAAC,GAAAC,EAAA3J,GAAA4L,GAAAnC,GAAAoC,GAAAnC,EAAAC,IAAAiC,GAAAnC,GAAAC,GAAAC,EAAAkC,GAAAnC,EAAAC,GAAAgC,GAGA,SAAAG,GAAArC,GACA,gBAAAzM,EAAAC,GACA,QAAAD,GAAAyM,GAAA9tB,GAAAqhB,EAAAphB,GAAAohB,GAAArhB,GAAAqhB,EAAAphB,GAAAohB,EAAAC,IAIA,SAAA2O,GAAAnC,GACA,IAAAsC,EAAAD,GAAArC,GAEA,OADAsC,EAAA/sB,OAAA8sB,IAAArC,GACAsC,EAGA,SAAAF,GAAAnC,EAAAC,GACA,IAAAqC,EAAArlF,KAAAu+B,IAAAwkD,GACAuC,EAAAtlF,KAAAuH,IAAAw7E,GACAwC,EAAAvlF,KAAAu+B,IAAAykD,GACAwC,EAAAxlF,KAAAuH,IAAAy7E,GAEA,SAAAoC,EAAA/O,EAAAC,GACA,IAAAI,EAAA12E,KAAAu+B,IAAA+3C,GACA10E,EAAA5B,KAAAu+B,IAAA83C,GAAAK,EACA30E,EAAA/B,KAAAuH,IAAA8uE,GAAAK,EACAxxB,EAAAllD,KAAAuH,IAAA+uE,GACAjqC,EAAA6Y,EAAAmgC,EAAAzjF,EAAA0jF,EACA,OAAAtlF,KAAA+7D,MAAAh6D,EAAAwjF,EAAAl5C,EAAAm5C,EAAA5jF,EAAAyjF,EAAAngC,EAAAogC,GAAA5vB,GAAArpB,EAAAk5C,EAAAxjF,EAAAyjF,IAYA,OATAJ,EAAA/sB,OAAA,SAAAge,EAAAC,GACA,IAAAI,EAAA12E,KAAAu+B,IAAA+3C,GACA10E,EAAA5B,KAAAu+B,IAAA83C,GAAAK,EACA30E,EAAA/B,KAAAuH,IAAA8uE,GAAAK,EACAxxB,EAAAllD,KAAAuH,IAAA+uE,GACAjqC,EAAA6Y,EAAAqgC,EAAAxjF,EAAAyjF,EACA,OAAAxlF,KAAA+7D,MAAAh6D,EAAAwjF,EAAArgC,EAAAsgC,EAAA5jF,EAAAyjF,EAAAh5C,EAAAi5C,GAAA5vB,GAAArpB,EAAAg5C,EAAAzjF,EAAA0jF,KAGAF,EA8CA,SAAAlB,GAAAloD,EAAA4uC,GACA,IAAA4Y,EAAAxjF,KAAAu+B,IAAAvC,GACAypD,EAAAzlF,KAAAuH,IAAAy0B,GACA,gBAAAsgD,EAAAjnD,EAAAknD,EAAAvwB,GACA,IAAAnU,EAAA0kC,EAAA3R,EAEA,MAAA0R,GACAA,EAAAoJ,GAAAlC,EAAAlH,GACAjnD,EAAAqwD,GAAAlC,EAAAnuD,IACAknD,EAAA,EAAAD,EAAAjnD,EAAAinD,EAAAjnD,KAAAinD,GAAAC,EAAAtnB,MAEAqnB,EAAAtgD,EAAAugD,EAAAtnB,GACA5/B,EAAA2G,EAAA,GAAA6b,GAGA,QAAA39C,EAAA0pB,EAAA04D,EAA+BC,EAAA,EAAA34D,EAAAyR,EAAAzR,EAAAyR,EAAiCzR,GAAAi0B,EAChEmU,EAAA9xD,SAAAk9E,GAAA,CAAAoM,GAAAiC,EAAAzlF,KAAAu+B,IAAA3a,IAAA6hE,EAAAzlF,KAAAuH,IAAAqc,MAAA,GAAA1pB,EAAA,KAKA,SAAAwrF,GAAAlC,EAAAtpF,GACA,IAAAgZ,EAAA0jE,GAAA18E,GACAgZ,EAAA,IAAAswE,EACArM,GAAAjkE,GACA,IAAAiZ,EAAAqpC,IAAAtiD,EAAA,IACA,SAAAA,EAAA,MAAAiZ,KAAA,EAAAnsB,KAAAwH,GAAAstD,KAAA,EAAA90D,KAAAwH,IAwHA,SAAAm+E,GAAAroC,EAAA9gC,EAAA9U,GACA,IAAA3F,EAAAM,EAAAG,MAAA86C,EAAA9gC,EAAAs4C,GAAAptD,GAAAjC,OAAA+W,GACA,gBAAA5a,GACA,OAAAG,EAAA6D,IAAA,SAAA7D,GACA,OAAAH,EAAAG,MAKA,SAAA6jF,GAAAhnC,EAAAtiC,EAAAtT,GACA,IAAApH,EAAAS,EAAAG,MAAAo8C,EAAAtiC,EAAAw4C,GAAA9rD,GAAAvD,OAAA6W,GACA,gBAAAva,GACA,OAAAH,EAAAgE,IAAA,SAAAhE,GACA,OAAAA,EAAAG,MAKA,SAAA8jF,GAAAxlF,GACA,OAAAA,EAAA7L,OAGA,SAAAsxF,GAAAzlF,GACA,OAAAA,EAAAjM,OAxhBAiO,EAAA0wE,IAAA1xE,KAAA,WACA,IACA+hF,EACA5hC,EACAukC,EACAC,EACAC,EALAxF,EAAA,IAOA,SAAAp/E,EAAA1I,GAOA,OANAA,IACA,oBAAA8nF,GAAAuF,EAAAvF,eAAA9pF,MAAAN,KAAA/B,YACA2xF,KAAAvH,QAAAuH,EAAAF,EAAAC,IACA3jF,EAAA0wE,IAAAQ,OAAA56E,EAAAstF,IAGAD,EAAA1f,SAwCA,SAAA1sB,IAEA,OADAqsC,EAAA,KACA5kF,EAGA,OA1CAA,EAAAjH,KAAA,SAAAzB,GAGA,OAFA8mF,GAAA,EACAp9E,EAAA0wE,IAAAQ,OAAA56E,EAAAotF,EAAAhG,KACAN,IAGAp+E,EAAAq8B,SAAA,SAAA/kC,GAGA,OAFAy8E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,EACAvzE,EAAA0wE,IAAAQ,OAAA56E,EAAAotF,EAAApF,KACA/K,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAAH,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAAH,GAAA,CAAAF,GAAAE,GAAAD,GAAAC,IAAA,CAAAv3D,UAGA1c,EAAAk2E,OAAA,SAAA5+E,GAGA,OAFAknF,GAAAC,KAAAH,GAAAC,GAAAj2E,KACAtH,EAAA0wE,IAAAQ,OAAA56E,EAAAotF,EAAA5F,KACA,EAAAR,GAAAC,IAAA,CAAAC,GAAAC,MAGAz+E,EAAA+hF,WAAA,SAAAz5B,GACA,OAAAr1D,UAAAC,QACAwxF,GAAA3C,EAAAz5B,KAAA4pB,QAyBA,SAAA+N,GACA,IAAAI,EAAAL,GAAA,SAAAz/E,EAAAG,GACA,OAAAu/E,EAAA,CAAA1/E,EAAAyzD,GAAAtzD,EAAAszD,OAEA,gBAAAke,GACA,OAAAgQ,GAAA7B,EAAAnO,KA9BA2S,CAAAv8B,GAAAY,EACA3Q,KAFAwpC,GAKA/hF,EAAAmgD,QAAA,SAAAmI,GACA,OAAAr1D,UAAAC,QACAyxF,EAAA,OAAAxkC,EAAAmI,GAAA,IAAAy2B,GAAA,IAAAY,GAAAr3B,GACA,oBAAA82B,GAAAuF,EAAAvF,eACA7mC,KAHA4H,GAMAngD,EAAAo/E,YAAA,SAAA92B,GACA,OAAAr1D,UAAAC,QACAksF,EAAA,oBAAA92B,KAAAq8B,EAAAvF,aAAA92B,OACAtoD,GAFAo/E,GAUAp/E,EAAA+hF,WAAA/gF,EAAA0wE,IAAA8L,aAAAr9B,QAAA,OAYAn/C,EAAA0wE,IAAA78C,UAAA,SAAAiwD,GACA,OACA5S,OAAA,SAAA6S,GACA,IAAAlwD,EAAA,IAAAssD,GAAA4D,GAEA,QAAA/5C,KAAA85C,EACAjwD,EAAAmW,GAAA85C,EAAA95C,GAGA,OAAAnW,KASAssD,GAAA9tF,UAAA,CACAwF,MAAA,SAAA0H,EAAAG,GACA1L,KAAAk9E,OAAAr5E,MAAA0H,EAAAG,IAEA+xE,OAAA,WACAz9E,KAAAk9E,OAAAO,UAEAc,UAAA,WACAv+E,KAAAk9E,OAAAqB,aAEAC,QAAA,WACAx+E,KAAAk9E,OAAAsB,WAEAC,aAAA,WACAz+E,KAAAk9E,OAAAuB,gBAEAC,WAAA,WACA1+E,KAAAk9E,OAAAwB,eAyBA1yE,EAAA0wE,IAAAqQ,WAAAX,GACApgF,EAAA0wE,IAAAsT,kBAAArI,IA0HA37E,EAAA0wE,IAAAuT,gBAAA,WACA,OAAA7D,GAAAsC,MACG/pC,IAAA+pC,GAAA1sB,OAAA0sB,GAEH1iF,EAAA0wE,IAAAqS,SAAA,SAAAj+E,GAGA,SAAAk3E,EAAArK,GAEA,OADAA,EAAA7sE,EAAA6sE,EAAA,GAAA5e,GAAA4e,EAAA,GAAA5e,KACA,IAAAC,GAAA2e,EAAA,IAAA3e,GAAA2e,EAQA,OAZA7sE,EAAAk8E,GAAAl8E,EAAA,OAAAiuD,GAAAjuD,EAAA,GAAAiuD,GAAAjuD,EAAA5S,OAAA,EAAA4S,EAAA,GAAAiuD,GAAA,GAOAipB,EAAAhmB,OAAA,SAAA2b,GAEA,OADAA,EAAA7sE,EAAAkxD,OAAA2b,EAAA,GAAA5e,GAAA4e,EAAA,GAAA5e,KACA,IAAAC,GAAA2e,EAAA,IAAA3e,GAAA2e,GAGAqK,GAOA2G,GAAA3sB,OAAA0sB,GA6CA1iF,EAAA0wE,IAAAl2E,OAAA,WACA,IACAsvB,EAEAiW,EAHA8U,EAAA,MAEA0zB,EAAA,EAGA,SAAA/tE,IACA,IAAAk1C,EAAA,oBAAAmF,IAAAvgD,MAAAN,KAAA/B,WAAA4iD,EACA/vC,EAAAk8E,IAAAtxC,EAAA,GAAAqjB,IAAArjB,EAAA,GAAAqjB,GAAA,GAAAiD,OACAyiB,EAAA,GAOA,OANA14C,EAAA,aACAloC,MAAA,SAAA0H,EAAAG,GACA+4E,EAAA92E,KAAApC,EAAAuF,EAAAvF,EAAAG,IACAH,EAAA,IAAAyzD,GAAAzzD,EAAA,IAAAyzD,MAGA,CACAh5C,KAAA,UACA23D,YAAA,CAAA8G,IAsBA,OAlBAj+E,EAAAq6C,OAAA,SAAAt1C,GACA,OAAAtN,UAAAC,QACA2iD,EAAAt1C,EACA/E,GAFAq6C,GAKAr6C,EAAAsvB,MAAA,SAAAvqB,GACA,OAAAtN,UAAAC,QACA6tC,EAAA8hD,IAAA/3D,GAAAvqB,GAAAwzD,GAAAwV,EAAAxV,IACAv4D,GAFAsvB,GAKAtvB,EAAA+tE,UAAA,SAAAjhB,GACA,OAAAr1D,UAAAC,QACA6tC,EAAA8hD,GAAA/3D,EAAAipC,IAAAwV,GAAAjhB,GAAAyL,IACAv4D,GAFA+tE,GAKA/tE,EAAAsvB,MAAA,KAgCA9pB,EAAA0wE,IAAAtkD,SAAA,SAAAvb,EAAAC,GACA,IASAyQ,EATA2iE,GAAApzE,EAAA,GAAAD,EAAA,IAAAkiD,GACAoiB,EAAAtkE,EAAA,GAAAkiD,GACAsiB,EAAAvkE,EAAA,GAAAiiD,GACAoxB,EAAAxmF,KAAAuH,IAAAg/E,GACAE,EAAAzmF,KAAAu+B,IAAAgoD,GACApQ,EAAAn2E,KAAAuH,IAAAiwE,GACAtB,EAAAl2E,KAAAu+B,IAAAi5C,GACAkP,EAAA1mF,KAAAuH,IAAAmwE,GACAwE,EAAAl8E,KAAAu+B,IAAAm5C,GAEA,OAAA13E,KAAA+7D,MAAA/7D,KAAAo+B,MAAAxa,EAAAs4D,EAAAsK,GAAA5iE,KAAAsyD,EAAAwQ,EAAAvQ,EAAA+F,EAAAuK,GAAA7iE,GAAAuyD,EAAAuQ,EAAAxQ,EAAAgG,EAAAuK,IAGApkF,EAAA0wE,IAAA4T,UAAA,WACA,IAAArqE,EACAsiC,EACAgoC,EACAC,EACArqE,EACA8gC,EACAwpC,EACAC,EAKAnlF,EACAG,EACAwpE,EACAoF,EAPA3nE,EAAA,GACAtB,EAAAsB,EACAg+E,EAAA,GACAC,EAAA,IAKArc,EAAA,IAEA,SAAA+b,IACA,OACAtqE,KAAA,kBACA23D,YAAAr3E,KAIA,SAAAA,IACA,OAAA0F,EAAAG,MAAAxC,KAAAC,KAAA4mF,EAAAG,KAAAJ,EAAAI,GAAAphF,IAAA2lE,GAAA9lE,OAAApD,EAAAG,MAAAxC,KAAAC,KAAA8mF,EAAAE,KAAAH,EAAAG,GAAArhF,IAAA+qE,IAAAlrE,OAAApD,EAAAG,MAAAxC,KAAAC,KAAA2+C,EAAA51C,KAAAsT,EAAAtT,GAAAwQ,OAAA,SAAA5X,GACA,OAAA48B,EAAA58B,EAAAolF,GAAAlyB,KACOlvD,IAAAhE,IAAA6D,OAAApD,EAAAG,MAAAxC,KAAAC,KAAAq9C,EAAA51C,KAAA8U,EAAA9U,GAAA8R,OAAA,SAAAzX,GACP,OAAAy8B,EAAAz8B,EAAAklF,GAAAnyB,KACOlvD,IAAA7D,IAqEP,OAlEA4kF,EAAAhqF,MAAA,WACA,OAAAA,IAAAiJ,IAAA,SAAAouE,GACA,OACA33D,KAAA,aACA23D,kBAKA2S,EAAAO,QAAA,WACA,OACA7qE,KAAA,UACA23D,YAAA,CAAAzI,EAAAsb,GAAAphF,OAAAkrE,EAAAmW,GAAArgF,MAAA,GAAA8kE,EAAAqb,GAAAp3C,UAAA/oC,MAAA,GAAAkqE,EAAAoW,GAAAv3C,UAAA/oC,MAAA,OAIAkgF,EAAA3sE,OAAA,SAAA2vC,GACA,OAAAr1D,UAAAC,OACAoyF,EAAAQ,YAAAx9B,GAAAy9B,YAAAz9B,GADAg9B,EAAAS,eAIAT,EAAAQ,YAAA,SAAAx9B,GACA,OAAAr1D,UAAAC,QACAsyF,GAAAl9B,EAAA,MAAAi9B,GAAAj9B,EAAA,MACAo9B,GAAAp9B,EAAA,MAAAm9B,GAAAn9B,EAAA,MACAk9B,EAAAD,IAAAj9B,EAAAk9B,IAAAD,IAAAj9B,GACAo9B,EAAAD,IAAAn9B,EAAAo9B,IAAAD,IAAAn9B,GACAg9B,EAAA/b,cALA,EAAAic,EAAAE,GAAA,CAAAH,EAAAE,KAQAH,EAAAS,YAAA,SAAAz9B,GACA,OAAAr1D,UAAAC,QACAqqD,GAAA+K,EAAA,MAAArtC,GAAAqtC,EAAA,MACArM,GAAAqM,EAAA,MAAAntC,GAAAmtC,EAAA,MACA/K,EAAAtiC,IAAAqtC,EAAA/K,IAAAtiC,IAAAqtC,GACArM,EAAA9gC,IAAAmtC,EAAArM,IAAA9gC,IAAAmtC,GACAg9B,EAAA/b,cALA,EAAAhsB,EAAAtB,GAAA,CAAAhhC,EAAAE,KAQAmqE,EAAA9uC,KAAA,SAAA8R,GACA,OAAAr1D,UAAAC,OACAoyF,EAAAU,UAAA19B,GAAA29B,UAAA39B,GADAg9B,EAAAW,aAIAX,EAAAU,UAAA,SAAA19B,GACA,OAAAr1D,UAAAC,QACAyyF,GAAAr9B,EAAA,GAAAs9B,GAAAt9B,EAAA,GACAg9B,GAFA,CAAAK,EAAAC,IAKAN,EAAAW,UAAA,SAAA39B,GACA,OAAAr1D,UAAAC,QACAyU,GAAA2gD,EAAA,GAAAjiD,GAAAiiD,EAAA,GACAg9B,GAFA,CAAA39E,EAAAtB,IAKAi/E,EAAA/b,UAAA,SAAAjhB,GACA,OAAAr1D,UAAAC,QACAq2E,GAAAjhB,EACA/nD,EAAA+jF,GAAAroC,EAAA9gC,EAAA,IACAza,EAAA6jF,GAAAhnC,EAAAtiC,EAAAsuD,GACAW,EAAAoa,GAAAoB,EAAAD,EAAA,IACAnW,EAAAiV,GAAAiB,EAAAD,EAAAhc,GACA+b,GANA/b,GASA+b,EAAAQ,YAAA,WAAAryB,IAAA,QAAAA,MAAAsyB,YAAA,WAAAtyB,IAAA,QAAAA,OA6BAzyD,EAAA0wE,IAAAwU,SAAA,WACA,IACAC,EAEAC,EAHAjzF,EAAAqxF,GAEAzxF,EAAA0xF,GAGA,SAAAyB,IACA,OACAlrE,KAAA,aACA23D,YAAA,CAAAwT,GAAAhzF,EAAAmC,MAAAN,KAAA/B,WAAAmzF,GAAArzF,EAAAuC,MAAAN,KAAA/B,aAwBA,OApBAizF,EAAA94D,SAAA,WACA,OAAApsB,EAAA0wE,IAAAtkD,SAAA+4D,GAAAhzF,EAAAmC,MAAAN,KAAA/B,WAAAmzF,GAAArzF,EAAAuC,MAAAN,KAAA/B,aAGAizF,EAAA/yF,OAAA,SAAAm1D,GACA,OAAAr1D,UAAAC,QACAC,EAAAm1D,EAAA69B,EAAA,oBAAA79B,EAAA,KAAAA,EACA49B,GAFA/yF,GAKA+yF,EAAAnzF,OAAA,SAAAu1D,GACA,OAAAr1D,UAAAC,QACAH,EAAAu1D,EAAA89B,EAAA,oBAAA99B,EAAA,KAAAA,EACA49B,GAFAnzF,GAKAmzF,EAAA3c,UAAA,WACA,OAAAt2E,UAAAC,OAAAgzF,EAAA,GAGAA,GAGAllF,EAAA0wE,IAAA3wC,YAAA,SAAA5tC,EAAAJ,GACA,OAGA,SAAAwqD,EAAAtB,EAAAhhC,EAAAE,GACA,IAAAkrE,EAAA1nF,KAAAu+B,IAAA+e,GACAqqC,EAAA3nF,KAAAuH,IAAA+1C,GACAsqC,EAAA5nF,KAAAu+B,IAAA/hB,GACAqrE,EAAA7nF,KAAAuH,IAAAiV,GACAsrE,EAAAJ,EAAA1nF,KAAAu+B,IAAAqgB,GACAmpC,EAAAL,EAAA1nF,KAAAuH,IAAAq3C,GACAopC,EAAAJ,EAAA5nF,KAAAu+B,IAAAjiB,GACA2rE,EAAAL,EAAA5nF,KAAAuH,IAAA+U,GACAjc,EAAA,EAAAL,KAAA21D,KAAA31D,KAAAo+B,KAAA03B,GAAAt5C,EAAA8gC,GAAAoqC,EAAAE,EAAA9xB,GAAAx5C,EAAAsiC,KACAvS,EAAA,EAAArsC,KAAAuH,IAAAlH,GACA+hC,EAAA/hC,EAAA,SAAAujB,GACA,IAAAysD,EAAArwE,KAAAuH,IAAAqc,GAAAvjB,GAAAgsC,EACA+jC,EAAApwE,KAAAuH,IAAAlH,EAAAujB,GAAAyoB,EACAzqC,EAAAwuE,EAAA0X,EAAAzX,EAAA2X,EACAjmF,EAAAquE,EAAA2X,EAAA1X,EAAA4X,EACA/iC,EAAAkrB,EAAAuX,EAAAtX,EAAAwX,EACA,OAAA7nF,KAAA+7D,MAAAh6D,EAAAH,GAAAyzD,GAAAr1D,KAAA+7D,MAAA7W,EAAAllD,KAAAo+B,KAAAx8B,IAAAG,MAAAszD,KACK,WACL,OAAAzW,EAAAyW,GAAA/X,EAAA+X,KAGA,OADAjzB,EAAA3T,SAAApuB,EACA+hC,EAzBA8lD,CAAA1zF,EAAA,GAAA4gE,GAAA5gE,EAAA,GAAA4gE,GAAAhhE,EAAA,GAAAghE,GAAAhhE,EAAA,GAAAghE,KA4BA/yD,EAAA0wE,IAAAx+E,OAAA,SAAAoE,GAGA,OAFA+nF,GAAA,EACAr+E,EAAA0wE,IAAAQ,OAAA56E,EAAAwvF,IACAzH,IAIA,IAAAyH,GAAA,CACArU,OAAApoB,EACAxxD,MAAAwxD,EACAkpB,UAMA,WACA,IAAAqB,EAAAE,EAAAD,EAWA,SAAAE,EAAAC,EAAAC,GACA,IAAAK,EAAA32E,KAAAuH,IAAA+uE,GAAAlhB,IACAshB,EAAA12E,KAAAu+B,IAAA+3C,GACA1yD,EAAA4a,GAAA63C,GAAAjhB,IAAA6gB,GACAwQ,EAAAzmF,KAAAu+B,IAAA3a,GACA88D,IAAA1gF,KAAA+7D,MAAA/7D,KAAAo+B,MAAAxa,EAAA8yD,EAAA12E,KAAAuH,IAAAqc,SAAAsyD,EAAAS,EAAAR,EAAAO,EAAA+P,GAAA7iE,GAAAuyD,EAAAQ,EAAAT,EAAAQ,EAAA+P,GACAxQ,EAAAI,EAAAF,EAAAQ,EAAAT,EAAAQ,EAfAyR,GAAAjuF,MAAA,SAAAm8E,EAAAC,GACAL,EAAAI,EAAAjhB,GAAA+gB,EAAAn2E,KAAAuH,IAAA+uE,GAAAlhB,IAAA8gB,EAAAl2E,KAAAu+B,IAAA+3C,GACA6R,GAAAjuF,MAAAk8E,GAGA+R,GAAAtT,QAAA,WACAsT,GAAAjuF,MAAAiuF,GAAAtT,QAAAnpB,IAdAmpB,QAAAnpB,EACAopB,aAAAppB,EACAqpB,WAAArpB,GAyBA,SAAA08B,GAAA9lF,EAAA6pB,GACA,SAAAk8D,EAAAhS,EAAAC,GACA,IAAAgS,EAAAtoF,KAAAu+B,IAAA83C,GACAK,EAAA12E,KAAAu+B,IAAA+3C,GACAjqC,EAAA/pC,EAAAgmF,EAAA5R,GACA,OAAArqC,EAAAqqC,EAAA12E,KAAAuH,IAAA8uE,GAAAhqC,EAAArsC,KAAAuH,IAAA+uE,IAWA,OARA+R,EAAAhwB,OAAA,SAAAz2D,EAAAG,GACA,IAAAg0D,EAAA/1D,KAAAo+B,KAAAx8B,IAAAG,KACAs3B,EAAAlN,EAAA4pC,GACAwyB,EAAAvoF,KAAAuH,IAAA8xB,GACAmvD,EAAAxoF,KAAAu+B,IAAAlF,GACA,OAAAr5B,KAAA+7D,MAAAn6D,EAAA2mF,EAAAxyB,EAAAyyB,GAAAxoF,KAAA21D,KAAAI,GAAAh0D,EAAAwmF,EAAAxyB,KAGAsyB,EAGA,IAAAI,GAAAL,GAAA,SAAAM,GACA,OAAA1oF,KAAAo+B,KAAA,KAAAsqD,KACG,SAAA3yB,GACH,SAAA/1D,KAAA21D,KAAAI,EAAA,MAEA1zD,EAAA0wE,IAAA4V,mBAAA,WACA,OAAAlG,GAAAgG,MACGztC,IAAAytC,GACH,IAAAG,GAAAR,GAAA,SAAAM,GACA,IAAArvD,EAAAr5B,KAAAy1D,KAAAizB,GACA,OAAArvD,KAAAr5B,KAAAuH,IAAA8xB,IACGkxB,GAKH,SAAAs+B,GAAArR,EAAAE,GACA,IAAAxB,EAAAl2E,KAAAu+B,IAAAi5C,GACA5zD,EAAA,SAAA0yD,GACA,OAAAt2E,KAAAolE,IAAApQ,GAAA,EAAAshB,EAAA,IAEAn2E,EAAAq3E,IAAAE,EAAA13E,KAAAuH,IAAAiwE,GAAAx3E,KAAA22D,IAAAuf,EAAAl2E,KAAAu+B,IAAAm5C,IAAA13E,KAAA22D,IAAA/yC,EAAA8zD,GAAA9zD,EAAA4zD,IACAsR,EAAA5S,EAAAl2E,KAAA8yB,IAAAlP,EAAA4zD,GAAAr3E,KAEA,IAAAA,EAAA,OAAA4oF,GAEA,SAAA1K,EAAAhI,EAAAC,GACAwS,EAAA,EACAxS,GAAAnhB,GAAAL,KAAAwhB,GAAAnhB,GAAAL,IAEAwhB,EAAAnhB,GAAAL,KAAAwhB,EAAAnhB,GAAAL,IAGA,IAAAiB,EAAA+yB,EAAA9oF,KAAA8yB,IAAAlP,EAAA0yD,GAAAn2E,GACA,OAAA41D,EAAA/1D,KAAAuH,IAAApH,EAAAk2E,GAAAyS,EAAA/yB,EAAA/1D,KAAAu+B,IAAAp+B,EAAAk2E,IASA,OANAgI,EAAAhmB,OAAA,SAAAz2D,EAAAG,GACA,IAAAu8E,EAAAwK,EAAA/mF,EACAg0D,EAAAT,GAAAn1D,GAAAH,KAAAo+B,KAAAx8B,IAAA08E,KACA,OAAAt+E,KAAA+7D,MAAAn6D,EAAA08E,GAAAn+E,EAAA,EAAAH,KAAAo8E,KAAAp8E,KAAA8yB,IAAAg2D,EAAA/yB,EAAA,EAAA51D,IAAAg1D,KAGAkpB,EAOA,SAAA2K,GAAAxR,EAAAE,GACA,IAAAxB,EAAAl2E,KAAAu+B,IAAAi5C,GACAr3E,EAAAq3E,IAAAE,EAAA13E,KAAAuH,IAAAiwE,IAAAtB,EAAAl2E,KAAAu+B,IAAAm5C,OAAAF,GACAyR,EAAA/S,EAAA/1E,EAAAq3E,EACA,GAAAh5C,EAAAr+B,GAAA20D,GAAA,OAAAiwB,GAEA,SAAA1G,EAAAhI,EAAAC,GACA,IAAAvgB,EAAAkzB,EAAA3S,EACA,OAAAvgB,EAAA/1D,KAAAuH,IAAApH,EAAAk2E,GAAA4S,EAAAlzB,EAAA/1D,KAAAu+B,IAAAp+B,EAAAk2E,IAQA,OALAgI,EAAAhmB,OAAA,SAAAz2D,EAAAG,GACA,IAAAu8E,EAAA2K,EAAAlnF,EACA,OAAA/B,KAAA+7D,MAAAn6D,EAAA08E,GAAAn+E,EAAA8oF,EAAA3zB,GAAAn1D,GAAAH,KAAAo+B,KAAAx8B,IAAA08E,OAGAD,GAtDAh8E,EAAA0wE,IAAAmW,qBAAA,WACA,OAAAzG,GAAAmG,MACG5tC,IAAA4tC,IAgCHvmF,EAAA0wE,IAAAoW,eAAA,WACA,OAAArL,GAAA+K,MACG7tC,IAAA6tC,IAqBHxmF,EAAA0wE,IAAAqW,iBAAA,WACA,OAAAtL,GAAAkL,MACGhuC,IAAAguC,GACH,IAAAK,GAAAjB,GAAA,SAAAM,GACA,SAAAA,GACG1oF,KAAAo8E,MAKH,SAAA2M,GAAA1S,EAAAC,GACA,OAAAD,EAAAr2E,KAAA22D,IAAA32D,KAAAolE,IAAApQ,GAAA,EAAAshB,EAAA,KAOA,SAAAgT,GAAAhI,GACA,IAIAiI,EAJAvhC,EAAAy6B,GAAAnB,GACAh/E,EAAA0lD,EAAA1lD,MACA47B,EAAA8pB,EAAA9pB,UACAqgD,EAAAv2B,EAAAu2B,WA6BA,OA1BAv2B,EAAA1lD,MAAA,WACA,IAAA/C,EAAA+C,EAAA3L,MAAAqxD,EAAA1zD,WACA,OAAAiL,IAAAyoD,EAAAuhC,EAAAvhC,EAAAu2B,WAAA,MAAAv2B,EAAAzoD,GAGAyoD,EAAA9pB,UAAA,WACA,IAAA3+B,EAAA2+B,EAAAvnC,MAAAqxD,EAAA1zD,WACA,OAAAiL,IAAAyoD,EAAAuhC,EAAAvhC,EAAAu2B,WAAA,MAAAv2B,EAAAzoD,GAGAyoD,EAAAu2B,WAAA,SAAA50B,GACA,IAAApqD,EAAAg/E,EAAA5nF,MAAAqxD,EAAA1zD,WAEA,GAAAiL,IAAAyoD,GACA,GAAAuhC,EAAA,MAAA5/B,EAAA,CACA,IAAAtd,EAAA2oB,GAAA1yD,IACAshB,EAAAsa,IACAqgD,EAAA,EAAA36D,EAAA,GAAAyoB,EAAAzoB,EAAA,GAAAyoB,GAAA,CAAAzoB,EAAA,GAAAyoB,EAAAzoB,EAAA,GAAAyoB,WAEOk9C,IACPhqF,EAAA,MAGA,OAAAA,GAGAyoD,EAAAu2B,WAAA,OA7CAl8E,EAAA0wE,IAAAyW,SAAA,WACA,OAAA/G,GAAA4G,MACGruC,IAAAquC,GAMHN,GAAA1wB,OAAA,SAAAz2D,EAAAG,GACA,OAAAH,EAAA,EAAA5B,KAAAo8E,KAAAp8E,KAAA61D,IAAA9zD,IAAAozD,MAuCA9yD,EAAA0wE,IAAA0W,SAAA,WACA,OAAAH,GAAAP,MACG/tC,IAAA+tC,GACH,IAAAW,GAAAtB,GAAA,WACA,UACGpoF,KAAA21D,OACHtzD,EAAA0wE,IAAA4W,aAAA,WACA,OAAAlH,GAAAiH,MACG1uC,IAAA0uC,GACH,IAAAE,GAAAxB,GAAA,SAAAM,GACA,YAAAA,IACG,SAAA3yB,GACH,SAAA/1D,KAAAo8E,KAAArmB,KAMA,SAAA8zB,GAAAxT,EAAAC,GACA,OAAAt2E,KAAA22D,IAAA32D,KAAAolE,IAAApQ,GAAA,EAAAshB,EAAA,KAAAD,GAwBA,SAAAyT,GAAAzpF,GACA,OAAAA,EAAA,GAGA,SAAA0pF,GAAA1pF,GACA,OAAAA,EAAA,GAuDA,SAAA2pF,GAAA72D,GAKA,IAJA,IAAAhzB,EAAAgzB,EAAA5+B,OACA01F,EAAA,MACAC,EAAA,EAEA71F,EAAA,EAAmBA,EAAA8L,EAAO9L,IAAA,CAC1B,KAAA61F,EAAA,GAAA30B,GAAApiC,EAAA82D,EAAAC,EAAA,IAAA/2D,EAAA82D,EAAAC,EAAA,IAAA/2D,EAAA9+B,KAAA,KACA61F,EAGAD,EAAAC,KAAA71F,EAGA,OAAA41F,EAAAxjF,MAAA,EAAAyjF,GAGA,SAAAC,GAAAj3E,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IA1GA9Q,EAAA0wE,IAAAqX,cAAA,WACA,OAAA3H,GAAAmH,MACG5uC,IAAA4uC,GAMHC,GAAAxxB,OAAA,SAAAz2D,EAAAG,GACA,QAAAA,EAAA,EAAA/B,KAAAo8E,KAAAp8E,KAAA61D,IAAAj0D,IAAAuzD,MAGA9yD,EAAA0wE,IAAAsX,mBAAA,WACA,IAAAjH,EAAAkG,GAAAO,IACA93C,EAAAqxC,EAAArxC,OACA5qC,EAAAi8E,EAAAj8E,OAUA,OARAi8E,EAAArxC,OAAA,SAAA4X,GACA,OAAAA,EAAA5X,EAAA,EAAA4X,EAAA,GAAAA,EAAA,OAAAA,EAAA5X,KAAA,IAAA4X,EAAA,KAGAy5B,EAAAj8E,OAAA,SAAAwiD,GACA,OAAAA,EAAAxiD,EAAA,CAAAwiD,EAAA,GAAAA,EAAA,GAAAA,EAAAp1D,OAAA,EAAAo1D,EAAA,aAAAA,EAAAxiD,KAAA,GAAAwiD,EAAA,GAAAA,EAAA,QAGAxiD,EAAA,YACG6zC,IAAA6uC,GACHxnF,EAAAioF,KAAA,GAUAjoF,EAAAioF,KAAAL,KAAA,SAAAM,GACA,IAAA3oF,EAAAkoF,GACA/nF,EAAAgoF,GACA,GAAAz1F,UAAAC,OAAA,OAAA01F,EAAAM,GAEA,SAAAN,EAAAlyF,GACA,GAAAA,EAAAxD,OAAA,WACA,IAEAF,EAFAm2F,EAAAzkB,GAAAnkE,GACA6oF,EAAA1kB,GAAAhkE,GAEA5B,EAAApI,EAAAxD,OACA4+B,EAAA,GACAu3D,EAAA,GAEA,IAAAr2F,EAAA,EAAiBA,EAAA8L,EAAO9L,IACxB8+B,EAAAnvB,KAAA,EAAAwmF,EAAA51F,KAAAyB,KAAA0B,EAAA1D,OAAAo2F,EAAA71F,KAAAyB,KAAA0B,EAAA1D,UAKA,IAFA8+B,EAAAlgB,KAAAk3E,IAEA91F,EAAA,EAAiBA,EAAA8L,EAAO9L,IACxBq2F,EAAA1mF,KAAA,CAAAmvB,EAAA9+B,GAAA,IAAA8+B,EAAA9+B,GAAA,KAGA,IAAAs2F,EAAAX,GAAA72D,GACAy3D,EAAAZ,GAAAU,GACAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAAr2F,OAAA,KAAAo2F,IAAAp2F,OAAA,GACAimF,EAAA,GAEA,IAAAnmF,EAAAs2F,EAAAp2F,OAAA,EAAgCF,GAAA,IAAQA,EACxCmmF,EAAAx2E,KAAAjM,EAAAo7B,EAAAw3D,EAAAt2F,IAAA,KAGA,IAAAA,GAAAw2F,EAAyBx2F,EAAAu2F,EAAAr2F,OAAAu2F,IAA8Bz2F,EACvDmmF,EAAAx2E,KAAAjM,EAAAo7B,EAAAy3D,EAAAv2F,IAAA,KAGA,OAAAmmF,EAWA,OARAyP,EAAAroF,EAAA,SAAA+nD,GACA,OAAAr1D,UAAAC,QAAAqN,EAAA+nD,EAAAsgC,GAAAroF,GAGAqoF,EAAAloF,EAAA,SAAA4nD,GACA,OAAAr1D,UAAAC,QAAAwN,EAAA4nD,EAAAsgC,GAAAloF,GAGAkoF,GAuBA5nF,EAAAioF,KAAA9P,QAAA,SAAAxG,GAEA,OADApnB,EAAAonB,EAAA+W,IACA/W,GAGA,IAAA+W,GAAA1oF,EAAAioF,KAAA9P,QAAA9lF,UAAA,GAiFA,SAAAs2F,GAAA34E,EAAAa,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAb,EAAA,GAAAa,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAb,EAAA,GAAAa,EAAA,IAGA,SAAA+3E,GAAA5xD,EAAAh5B,EAAA6S,EAAAC,GACA,IAAAmJ,EAAA+c,EAAA,GACA6xD,EAAAh4E,EAAA,GACAi4E,EAAA9qF,EAAA,GAAAic,EACA8uE,EAAAj4E,EAAA,GAAA+3E,EACA1uE,EAAA6c,EAAA,GACAgyD,EAAAn4E,EAAA,GACAo4E,EAAAjrF,EAAA,GAAAmc,EACA+uE,EAAAp4E,EAAA,GAAAk4E,EACA3mC,GAAA0mC,GAAA5uE,EAAA6uE,GAAAE,GAAAjvE,EAAA4uE,KAAAK,EAAAJ,EAAAC,EAAAE,GACA,OAAAhvE,EAAAooC,EAAAymC,EAAA3uE,EAAAkoC,EAAA4mC,GAGA,SAAAE,GAAAxX,GACA,IAAA9gE,EAAA8gE,EAAA,GACA7gE,EAAA6gE,IAAAz/E,OAAA,GACA,QAAA2e,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAnGA43E,GAAA3wF,KAAA,WAOA,IANA,IAEA8Y,EAFA7e,GAAA,EACA8L,EAAA9J,KAAA9B,OAEA4e,EAAA9c,KAAA8J,EAAA,GACA/F,EAAA,IAEA/F,EAAA8L,GACA+S,EAAAC,EACAA,EAAA9c,KAAAhC,GACA+F,GAAA8Y,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,SAAA/Y,GAGA2wF,GAAArtD,SAAA,SAAA2O,GACA,IAIAn5B,EAEAmmB,EANAhlC,GAAA,EACA8L,EAAA9J,KAAA9B,OACAqN,EAAA,EACAG,EAAA,EAEAoR,EAAA9c,KAAA8J,EAAA,GAIA,IAFA7L,UAAAC,SAAA83C,GAAA,KAAAh2C,KAAA+D,WAEA/F,EAAA8L,GACA+S,EAAAC,EACAA,EAAA9c,KAAAhC,GACAglC,EAAAnmB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAtR,IAAAsR,EAAA,GAAAC,EAAA,IAAAkmB,EACAt3B,IAAAmR,EAAA,GAAAC,EAAA,IAAAkmB,EAGA,OAAAz3B,EAAAyqC,EAAAtqC,EAAAsqC,IAGA0+C,GAAApR,KAAA,SAAAxlB,GAYA,IAXA,IAAAs3B,EAIA51D,EACAmyB,EAEA70C,EACAkmB,EACAh5B,EARAq0E,EAAA8W,GAAAr3B,GACA9/D,GAAA,EACA8L,EAAA9J,KAAA9B,OAAAi3F,GAAAn1F,MAGA6c,EAAA7c,KAAA8J,EAAA,KAKA9L,EAAA8L,GAAA,CAOA,IANAsrF,EAAAt3B,EAAA1tD,QACA0tD,EAAA5/D,OAAA,EACA4e,EAAA9c,KAAAhC,GACAglC,EAAAoyD,GAAAzjC,EAAAyjC,EAAAl3F,OAAAmgF,GAAA,GACA7+C,GAAA,IAEAA,EAAAmyB,GAGAgjC,GAFA3qF,EAAAorF,EAAA51D,GAEA3iB,EAAAC,IACA63E,GAAA3xD,EAAAnmB,EAAAC,IACAghD,EAAAnwD,KAAAinF,GAAA5xD,EAAAh5B,EAAA6S,EAAAC,IAGAghD,EAAAnwD,KAAA3D,IACS2qF,GAAA3xD,EAAAnmB,EAAAC,IACTghD,EAAAnwD,KAAAinF,GAAA5xD,EAAAh5B,EAAA6S,EAAAC,IAGAkmB,EAAAh5B,EAGAq0E,GAAAvgB,EAAAnwD,KAAAmwD,EAAA,IACAjhD,EAAAC,EAGA,OAAAghD,GA0BA,IAAAu3B,GACAC,GACAC,GAEAC,GACAC,GAFAC,GAAA,GAGAC,GAAA,GAEA,SAAAC,KACAC,GAAA71F,MACAA,KAAA81F,KAAA91F,KAAA+1F,KAAA/1F,KAAAwG,OAAA,KAGA,SAAAwvF,GAAAD,GACA,IAAAE,EAAAP,GAAApQ,OAAA,IAAAsQ,GAEA,OADAK,EAAAF,OACAE,EAGA,SAAAC,GAAAD,GACAE,GAAAF,GACAV,GAAApjF,OAAA8jF,GACAP,GAAA/nF,KAAAsoF,GACAJ,GAAAI,GAGA,SAAAG,GAAAH,GACA,IAAAzvF,EAAAyvF,EAAAzvF,OACA+E,EAAA/E,EAAA+E,EACAG,EAAAlF,EAAA0jB,GACAmsE,EAAA,CACA9qF,IACAG,KAEA4qF,EAAAL,EAAAM,EACA37B,EAAAq7B,EAAAlkB,EACAykB,EAAA,CAAAP,GACAC,GAAAD,GAGA,IAFA,IAAAQ,EAAAH,EAEAG,EAAAjwF,QAAA2hC,EAAA58B,EAAAkrF,EAAAjwF,OAAA+E,GAAAkzD,IAAAt2B,EAAAz8B,EAAA+qF,EAAAjwF,OAAA0jB,IAAAu0C,IACA63B,EAAAG,EAAAF,EACAC,EAAA5oF,QAAA6oF,GACAP,GAAAO,GACAA,EAAAH,EAGAE,EAAA5oF,QAAA6oF,GACAN,GAAAM,GAGA,IAFA,IAAAC,EAAA97B,EAEA87B,EAAAlwF,QAAA2hC,EAAA58B,EAAAmrF,EAAAlwF,OAAA+E,GAAAkzD,IAAAt2B,EAAAz8B,EAAAgrF,EAAAlwF,OAAA0jB,IAAAu0C,IACA7D,EAAA87B,EAAA3kB,EACAykB,EAAA7oF,KAAA+oF,GACAR,GAAAQ,GACAA,EAAA97B,EAGA47B,EAAA7oF,KAAA+oF,GACAP,GAAAO,GACA,IACAC,EADAC,EAAAJ,EAAAt4F,OAGA,IAAAy4F,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAF,EAAAG,GACAF,EAAAD,EAAAG,EAAA,GACAE,GAAAH,EAAAZ,KAAAW,EAAAV,KAAAW,EAAAX,KAAAM,GAGAI,EAAAD,EAAA,IACAE,EAAAF,EAAAI,EAAA,IACAd,KAAAgB,GAAAL,EAAAV,KAAAW,EAAAX,KAAA,KAAAM,GACAU,GAAAN,GACAM,GAAAL,GAGA,SAAAM,GAAAjB,GASA,IARA,IAEAU,EACAC,EACAO,EACAC,EALA3rF,EAAAwqF,EAAAxqF,EACA4rF,EAAApB,EAAArqF,EAKA0H,EAAAmiF,GAAAjiC,EAEAlgD,GAEA,IADA6jF,EAAAG,GAAAhkF,EAAA+jF,GAAA5rF,GACAkzD,GAAArrD,IAAAwlE,MAAiC,CAGjC,MAFAse,EAAA3rF,EAAA8rF,GAAAjkF,EAAA+jF,IAEA14B,IAOS,CACTw4B,GAAAx4B,IACAg4B,EAAArjF,EAAAmjF,EACAG,EAAAtjF,GACW8jF,GAAAz4B,IACXg4B,EAAArjF,EACAsjF,EAAAtjF,EAAA2+D,GAEA0kB,EAAAC,EAAAtjF,EAGA,MAjBA,IAAAA,EAAAkkF,EAAA,CACAb,EAAArjF,EACA,MAGAA,IAAAkkF,EAiBA,IAAApwD,EAAA8uD,GAAAD,GAEA,GADAR,GAAAvjF,OAAAykF,EAAAvvD,GACAuvD,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,OANAP,GAAAM,GACAC,EAAAV,GAAAS,EAAAV,MACAR,GAAAvjF,OAAAk1B,EAAAwvD,GACAxvD,EAAA4uD,KAAAY,EAAAZ,KAAAgB,GAAAL,EAAAV,KAAA7uD,EAAA6uD,MACAgB,GAAAN,QACAM,GAAAL,GAIA,GAAAA,EAAA,CAKAP,GAAAM,GACAN,GAAAO,GACA,IAAAa,EAAAd,EAAAV,KACA3P,EAAAmR,EAAAhsF,EACA86E,EAAAkR,EAAA7rF,EACA8rF,EAAAzB,EAAAxqF,EAAA66E,EACAqR,EAAA1B,EAAArqF,EAAA26E,EACAqR,EAAAhB,EAAAX,KACA9rE,EAAAytE,EAAAnsF,EAAA66E,EACAl8D,EAAAwtE,EAAAhsF,EAAA26E,EACAr8E,EAAA,GAAAwtF,EAAAttE,EAAAutE,EAAAxtE,GACA0tE,EAAAH,IAAAC,IACAG,EAAA3tE,IAAAC,IACAmsE,EAAA,CACA9qF,GAAA2e,EAAAytE,EAAAF,EAAAG,GAAA5tF,EAAAo8E,EACA16E,GAAA8rF,EAAAI,EAAA3tE,EAAA0tE,GAAA3tF,EAAAq8E,GAEAwQ,GAAAH,EAAAZ,KAAAyB,EAAAG,EAAArB,GACAnvD,EAAA4uD,KAAAgB,GAAAS,EAAAxB,EAAA,KAAAM,GACAK,EAAAZ,KAAAgB,GAAAf,EAAA2B,EAAA,KAAArB,GACAU,GAAAN,GACAM,GAAAL,QAzBAxvD,EAAA4uD,KAAAgB,GAAAL,EAAAV,KAAA7uD,EAAA6uD,OA4BA,SAAAqB,GAAA1wF,EAAAywF,GACA,IAAApB,EAAArvF,EAAAqvF,KACA8B,EAAA9B,EAAAxqF,EACAusF,EAAA/B,EAAArqF,EACAqsF,EAAAD,EAAAX,EACA,IAAAY,EAAA,OAAAF,EACA,IAAApB,EAAA/vF,EAAA6vF,EACA,IAAAE,EAAA,OAAAnjF,IAEA,IAAA0kF,GADAjC,EAAAU,EAAAV,MACAxqF,EACA0sF,EAAAlC,EAAArqF,EACAwsF,EAAAD,EAAAd,EACA,IAAAe,EAAA,OAAAF,EACA,IAAAG,EAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAp7E,EAAAq7E,EAAAD,EACA,OAAAE,IAAAt7E,EAAAnT,KAAAo+B,KAAAjrB,IAAA,EAAAs7E,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAGA,SAAAX,GAAA3wF,EAAAywF,GACA,IAAAT,EAAAhwF,EAAAqrE,EACA,GAAA2kB,EAAA,OAAAU,GAAAV,EAAAS,GACA,IAAApB,EAAArvF,EAAAqvF,KACA,OAAAA,EAAArqF,IAAAyrF,EAAApB,EAAAxqF,EAAA+H,IAGA,SAAA+kF,GAAAtC,GACA/1F,KAAA+1F,OACA/1F,KAAAs4F,MAAA,GAkEA,SAAAC,GAAA17E,EAAAC,GACA,OAAAA,EAAAgZ,MAAAjZ,EAAAiZ,MAGA,SAAA0iE,KACA3C,GAAA71F,MACAA,KAAAuL,EAAAvL,KAAA0L,EAAA1L,KAAA0G,IAAA1G,KAAA+1F,KAAA/1F,KAAAkqB,GAAA,KAGA,SAAA6sE,GAAArwF,GACA,IAAA+vF,EAAA/vF,EAAA6vF,EACAG,EAAAhwF,EAAAqrE,EACA,GAAA0kB,GAAAC,EAAA,CACA,IAAAa,EAAAd,EAAAV,KACA0C,EAAA/xF,EAAAqvF,KACA2B,EAAAhB,EAAAX,KACA,GAAAwB,IAAAG,EAAA,CACA,IAAAF,EAAAiB,EAAAltF,EACAksF,EAAAgB,EAAA/sF,EACA06E,EAAAmR,EAAAhsF,EAAAisF,EACAnR,EAAAkR,EAAA7rF,EAAA+rF,EACAxtE,EAAAytE,EAAAnsF,EAAAisF,EAEAxtF,EAAA,GAAAo8E,GADAl8D,EAAAwtE,EAAAhsF,EAAA+rF,GACApR,EAAAp8D,GACA,KAAAjgB,IAAA00D,IAAA,CACA,IAAAg6B,EAAAtS,IAAAC,IACAuR,EAAA3tE,IAAAC,IACA3e,GAAA2e,EAAAwuE,EAAArS,EAAAuR,GAAA5tF,EACA0B,GAAA06E,EAAAwR,EAAA3tE,EAAAyuE,GAAA1uF,EACAkgB,EAAAxe,EAAA+rF,EACAjxF,EAAAmvF,GAAArQ,OAAA,IAAAkT,GACAhyF,EAAAE,MACAF,EAAAuvF,KAAA0C,EACAjyF,EAAA+E,IAAAisF,EACAhxF,EAAAkF,EAAAwe,EAAAvgB,KAAAo+B,KAAAx8B,IAAAG,KACAlF,EAAA0jB,KACAxjB,EAAAF,SAIA,IAHA,IAAA0zD,EAAA,KACA9mD,EAAAqiF,GAAAniC,EAEAlgD,GACA,GAAA5M,EAAAkF,EAAA0H,EAAA1H,GAAAlF,EAAAkF,IAAA0H,EAAA1H,GAAAlF,EAAA+E,GAAA6H,EAAA7H,EAAA,CACA,IAAA6H,EAAAwlE,EAAkC,CAClC1e,EAAA9mD,EAAAmjF,EACA,MAFAnjF,IAAAwlE,MAIO,CACP,IAAAxlE,EAAAkkF,EAAkC,CAClCp9B,EAAA9mD,EACA,MAFAA,IAAAkkF,EAOA7B,GAAAzjF,OAAAkoD,EAAA1zD,GACA0zD,IAAAs7B,GAAAhvF,MAGA,SAAA2vF,GAAAzvF,GACA,IAAAF,EAAAE,EAAAF,OAEAA,IACAA,EAAA+vF,IAAAf,GAAAhvF,EAAAurE,GACA0jB,GAAAtjF,OAAA3L,GACAmvF,GAAAhoF,KAAAnH,GACAqvF,GAAArvF,GACAE,EAAAF,OAAA,MAoBA,SAAAmyF,GAAA7C,EAAAnyE,GACA,IAAAi1E,EAAA9C,EAAAh5E,EACA,GAAA87E,EAAA,SACA,IAaAC,EACAC,EAdAC,EAAAjD,EAAAj5E,EACA0rC,EAAA5kC,EAAA,MACAsC,EAAAtC,EAAA,MACAsjC,EAAAtjC,EAAA,MACAwC,EAAAxC,EAAA,MACA4zE,EAAAzB,EAAAxzC,EACAo1C,EAAA5B,EAAAxwC,EACA0zC,EAAAzB,EAAAhsF,EACA0tF,EAAA1B,EAAA7rF,EACAwtF,EAAAxB,EAAAnsF,EACA4tF,EAAAzB,EAAAhsF,EACAyoF,GAAA6E,EAAAE,GAAA,EACA9E,GAAA6E,EAAAE,GAAA,EAIA,GAAAA,IAAAF,EAAA,CACA,GAAA9E,EAAA5rC,GAAA4rC,GAAAluE,EAAA,OAEA,GAAA+yE,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAArtF,GAAAya,EAAA,YAHV4yE,EAAA,CACAxtF,EAAA4oF,EACAzoF,EAAAu7C,GAEA2xC,EAAA,CACArtF,EAAA4oF,EACAzoF,EAAAya,OAEO,CACP,GAAA4yE,GAGU,GAAAA,EAAArtF,EAAAu7C,EAAA,YAHV8xC,EAAA,CACAxtF,EAAA4oF,EACAzoF,EAAAya,GAEAyyE,EAAA,CACArtF,EAAA4oF,EACAzoF,EAAAu7C,SAOA,GAFA6xC,EAAA1E,GADAyE,GAAAG,EAAAE,IAAAC,EAAAF,IACA9E,EAEA0E,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAArtF,GAAAya,EAAA,YAHZ4yE,EAAA,CACAxtF,GAAA07C,EAAA6xC,GAAAD,EACAntF,EAAAu7C,GAEA2xC,EAAA,CACArtF,GAAA4a,EAAA2yE,GAAAD,EACAntF,EAAAya,OAES,CACT,GAAA4yE,GAGY,GAAAA,EAAArtF,EAAAu7C,EAAA,YAHZ8xC,EAAA,CACAxtF,GAAA4a,EAAA2yE,GAAAD,EACAntF,EAAAya,GAEAyyE,EAAA,CACArtF,GAAA07C,EAAA6xC,GAAAD,EACAntF,EAAAu7C,QAIA,GAAAgyC,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAAxtF,GAAA0a,EAAA,YAHZ8yE,EAAA,CACAxtF,EAAAg9C,EACA78C,EAAAmtF,EAAAtwC,EAAAuwC,GAEAF,EAAA,CACArtF,EAAA0a,EACAva,EAAAmtF,EAAA5yE,EAAA6yE,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAxtF,EAAAg9C,EAAA,YAHZwwC,EAAA,CACAxtF,EAAA0a,EACAva,EAAAmtF,EAAA5yE,EAAA6yE,GAEAF,EAAA,CACArtF,EAAAg9C,EACA78C,EAAAmtF,EAAAtwC,EAAAuwC,GAQA,OAFAhD,EAAAj5E,EAAAk8E,EACAjD,EAAAh5E,EAAA87E,GACA,EAGA,SAAAQ,GAAA7B,EAAAG,GACA13F,KAAAsiD,EAAAi1C,EACAv3F,KAAAslD,EAAAoyC,EACA13F,KAAA6c,EAAA7c,KAAA8c,EAAA,KAGA,SAAAg6E,GAAAS,EAAAG,EAAAqB,EAAAH,GACA,IAAA9C,EAAA,IAAAsD,GAAA7B,EAAAG,GAMA,OALArC,GAAA1nF,KAAAmoF,GACAiD,GAAAlC,GAAAf,EAAAyB,EAAAG,EAAAqB,GACAH,GAAA/B,GAAAf,EAAA4B,EAAAH,EAAAqB,GACAtD,GAAAiC,EAAAv5F,GAAAs6F,MAAA3qF,KAAA,IAAA0rF,GAAAvD,EAAAyB,EAAAG,IACApC,GAAAoC,EAAA15F,GAAAs6F,MAAA3qF,KAAA,IAAA0rF,GAAAvD,EAAA4B,EAAAH,IACAzB,EAGA,SAAAwD,GAAA/B,EAAAwB,EAAAH,GACA,IAAA9C,EAAA,IAAAsD,GAAA7B,EAAA,MAIA,OAHAzB,EAAAj5E,EAAAk8E,EACAjD,EAAAh5E,EAAA87E,EACAvD,GAAA1nF,KAAAmoF,GACAA,EAGA,SAAAe,GAAAf,EAAAyB,EAAAG,EAAArB,GACAP,EAAAj5E,GAAAi5E,EAAAh5E,EAIKg5E,EAAAxzC,IAAAo1C,EACL5B,EAAAh5E,EAAAu5E,EAEAP,EAAAj5E,EAAAw5E,GANAP,EAAAj5E,EAAAw5E,EACAP,EAAAxzC,EAAAi1C,EACAzB,EAAAxwC,EAAAoyC,GAQA,SAAA2B,GAAAvD,EAAAyB,EAAAG,GACA,IAAAqB,EAAAjD,EAAAj5E,EACA+7E,EAAA9C,EAAAh5E,EACA9c,KAAA81F,OACA91F,KAAA+1F,KAAAwB,EACAv3F,KAAA81B,MAAA4hE,EAAA/tF,KAAA+7D,MAAAgyB,EAAAhsF,EAAA6rF,EAAA7rF,EAAAgsF,EAAAnsF,EAAAgsF,EAAAhsF,GAAAuqF,EAAAxzC,IAAAi1C,EAAA5tF,KAAA+7D,MAAAkzB,EAAArtF,EAAAwtF,EAAAxtF,EAAAwtF,EAAArtF,EAAAktF,EAAAltF,GAAA/B,KAAA+7D,MAAAqzB,EAAAxtF,EAAAqtF,EAAArtF,EAAAqtF,EAAAltF,EAAAqtF,EAAArtF,GAYA,SAAA6tF,KACAv5F,KAAAszD,EAAA,KAGA,SAAAuiC,GAAAziF,GACAA,EAAA6lE,EAAA7lE,EAAA00E,EAAA10E,EAAAwlE,EAAAxlE,EAAAkkF,EAAAlkF,EAAAmjF,EAAAnjF,EAAA2+D,EAAA,KAwMA,SAAAynB,GAAAC,EAAArmF,GACA,IAAA4I,EAAA5I,EACA6vD,EAAA7vD,EAAAkkF,EACAjpD,EAAAryB,EAAAi9D,EAEA5qC,EACAA,EAAAuqC,IAAA58D,EAAAqyB,EAAAuqC,EAAA3V,EAAuC50B,EAAAipD,EAAAr0B,EAEvCw2B,EAAAnmC,EAAA2P,EAGAA,EAAAgW,EAAA5qC,EACAryB,EAAAi9D,EAAAhW,EACAjnD,EAAAs7E,EAAAr0B,EAAA2V,EACA58D,EAAAs7E,IAAAt7E,EAAAs7E,EAAAre,EAAAj9D,GACAinD,EAAA2V,EAAA58D,EAGA,SAAA09E,GAAAD,EAAArmF,GACA,IAAA4I,EAAA5I,EACA6vD,EAAA7vD,EAAAwlE,EACAvqC,EAAAryB,EAAAi9D,EAEA5qC,EACAA,EAAAuqC,IAAA58D,EAAAqyB,EAAAuqC,EAAA3V,EAAuC50B,EAAAipD,EAAAr0B,EAEvCw2B,EAAAnmC,EAAA2P,EAGAA,EAAAgW,EAAA5qC,EACAryB,EAAAi9D,EAAAhW,EACAjnD,EAAA48D,EAAA3V,EAAAq0B,EACAt7E,EAAA48D,IAAA58D,EAAA48D,EAAAK,EAAAj9D,GACAinD,EAAAq0B,EAAAt7E,EAGA,SAAA29E,GAAAvmF,GACA,KAAAA,EAAAwlE,GACAxlE,IAAAwlE,EAGA,OAAAxlE,EAGA,SAAAwmF,GAAAC,EAAAC,GACA,IACAvxC,EACAtB,EACAzgD,EAHAuvF,EAAA8D,EAAAj9E,KAAAm9E,IAAAzU,MASA,IALA+P,GAAA,GACAC,GAAA,IAAAhsF,MAAAuwF,EAAA37F,QACAq3F,GAAA,IAAAgE,GACA9D,GAAA,IAAA8D,KAKA,GAFA/yF,EAAAgvF,GAEAO,KAAAvvF,GAAAuvF,EAAArqF,EAAAlF,EAAAkF,GAAAqqF,EAAArqF,IAAAlF,EAAAkF,GAAAqqF,EAAAxqF,EAAA/E,EAAA+E,GACAwqF,EAAAxqF,IAAAg9C,GAAAwtC,EAAArqF,IAAAu7C,IACAquC,GAAAS,EAAA/3F,GAAA,IAAAq6F,GAAAtC,GACAiB,GAAAjB,GACAxtC,EAAAwtC,EAAAxqF,EAAA07C,EAAA8uC,EAAArqF,GAGAqqF,EAAA8D,EAAAvU,UACO,KAAA9+E,EAGP,MAFA4vF,GAAA5vF,EAAAE,KAMAozF,IAvbA,SAAAn2E,GAMA,IALA,IAGAyH,EAHAktE,EAAAjD,GACA/R,EAAA6C,GAAAxiE,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA3lB,EAAAs6F,EAAAp6F,OAGAF,OAGA26F,GAFAvtE,EAAAktE,EAAAt6F,GAEA2lB,KAAA2/D,EAAAl4D,IAAA+c,EAAA/c,EAAAvO,EAAAtR,EAAA6f,EAAAtO,EAAAvR,GAAAkzD,IAAAt2B,EAAA/c,EAAAvO,EAAAnR,EAAA0f,EAAAtO,EAAApR,GAAA+yD,MACArzC,EAAAvO,EAAAuO,EAAAtO,EAAA,KACAw7E,EAAA7mE,OAAAzzB,EAAA,IA4aAg8F,CAAAF,GA9iBA,SAAAn2E,GAkBA,IAjBA,IAIAuC,EACApR,EACA+/E,EACAG,EAGAiF,EACAC,EACAC,EACAC,EACA7sF,EACAiP,EAfA+rC,EAAA5kC,EAAA,MACAsC,EAAAtC,EAAA,MACAsjC,EAAAtjC,EAAA,MACAwC,EAAAxC,EAAA,MAKA02E,EAAA/E,GACAgF,EAAAD,EAAAn8F,OAQAo8F,KAEA,IADAL,EAAAI,EAAAC,KACAL,EAAAM,UAKA,IAHAH,GADAD,EAAAF,EAAA3B,OACAp6F,OACAg8F,EAAA,EAEAA,EAAAE,GACAvF,GAAAr4E,EAAA29E,EAAAD,GAAA19E,OAAAjR,EAAAypF,EAAAx4E,EAAA9Q,EACAwa,GAAA3Y,EAAA4sF,IAAAD,EAAAE,GAAA7sF,SAAAhC,EAAAuJ,EAAAvH,EAAA7B,GAEAy8B,EAAA0sD,EAAA3uE,GAAAu4C,IAAAt2B,EAAA6sD,EAAAlgF,GAAA2pD,MACA07B,EAAA1oE,OAAAyoE,EAAA,MAAAb,GAAAC,GAAAW,EAAAlE,KAAAv5E,EAAA2rB,EAAA0sD,EAAAtsC,GAAAkW,IAAAt4C,EAAA6uE,EAAAv2B,GAAA,CACAlzD,EAAAg9C,EACA78C,EAAAy8B,EAAAjiB,EAAAqiC,GAAAkW,GAAA3pD,EAAAqR,GACWgiB,EAAA6sD,EAAA7uE,GAAAs4C,IAAAx4C,EAAA4uE,EAAAp2B,GAAA,CACXlzD,EAAA48B,EAAArzB,EAAAqR,GAAAs4C,GAAAv4C,EAAAD,EACAva,EAAAya,GACWgiB,EAAA0sD,EAAA5uE,GAAAw4C,IAAAu2B,EAAA/tC,EAAAwX,GAAA,CACXlzD,EAAA0a,EACAva,EAAAy8B,EAAAjiB,EAAAD,GAAAw4C,GAAA3pD,EAAAmyC,GACW9e,EAAA6sD,EAAA/tC,GAAAwX,IAAAo2B,EAAAtsC,EAAAkW,GAAA,CACXlzD,EAAA48B,EAAArzB,EAAAmyC,GAAAwX,GAAAv4C,EAAAqiC,EACA78C,EAAAu7C,GACW,MAAAgzC,EAAAlE,KAAA,SACXqE,GAmgBAI,CAAAV,IACA,IAAAW,EAAA,CACAJ,MAAA/E,GACAgD,MAAAjD,IAGA,OADAE,GAAAE,GAAAJ,GAAAC,GAAA,KACAmF,EAGA,SAAAV,GAAAl9E,EAAAC,GACA,OAAAA,EAAApR,EAAAmR,EAAAnR,GAAAoR,EAAAvR,EAAAsR,EAAAtR,EAtkBA8sF,GAAAh6F,UAAAk8F,QAAA,WAKA,IAJA,IAEAzE,EAFAqE,EAAAn6F,KAAAs4F,MACA4B,EAAAC,EAAAj8F,OAGAg8F,MACApE,EAAAqE,EAAAD,GAAApE,MACAh5E,GAAAg5E,EAAAj5E,GAAAs9E,EAAA1oE,OAAAyoE,EAAA,GAIA,OADAC,EAAAv9E,KAAA27E,IACA4B,EAAAj8F,QAmRAm7F,GAAAh7F,UAAA,CACAkP,MAAA,WACA,OAAAvN,KAAA81F,KAAAxzC,IAAAtiD,KAAA+1F,KAAA/1F,KAAA81F,KAAAj5E,EAAA7c,KAAA81F,KAAAh5E,GAEAN,IAAA,WACA,OAAAxc,KAAA81F,KAAAxzC,IAAAtiD,KAAA+1F,KAAA/1F,KAAA81F,KAAAh5E,EAAA9c,KAAA81F,KAAAj5E,IAYA08E,GAAAl7F,UAAA,CACA2T,OAAA,SAAA+iE,EAAA3hE,GACA,IAAAi7B,EAAAqsD,EAAAC,EAEA,GAAA5lB,EAAA,CAMA,GALA3hE,EAAAmjF,EAAAxhB,EACA3hE,EAAA2+D,EAAAgD,EAAAhD,EACAgD,EAAAhD,IAAAgD,EAAAhD,EAAAwkB,EAAAnjF,GACA2hE,EAAAhD,EAAA3+D,EAEA2hE,EAAAuiB,EAAA,CAGA,IAFAviB,IAAAuiB,EAEAviB,EAAA6D,GACA7D,IAAA6D,EAGA7D,EAAA6D,EAAAxlE,OAEA2hE,EAAAuiB,EAAAlkF,EAGAi7B,EAAA0mC,OACO/0E,KAAAszD,GACPyhB,EAAA4kB,GAAA35F,KAAAszD,GACAlgD,EAAAmjF,EAAA,KACAnjF,EAAA2+D,EAAAgD,EACAA,EAAAwhB,EAAAxhB,EAAA6D,EAAAxlE,EACAi7B,EAAA0mC,IAEA3hE,EAAAmjF,EAAAnjF,EAAA2+D,EAAA,KACA/xE,KAAAszD,EAAAlgD,EACAi7B,EAAA,MAQA,IALAj7B,EAAAwlE,EAAAxlE,EAAAkkF,EAAA,KACAlkF,EAAA6lE,EAAA5qC,EACAj7B,EAAA00E,GAAA,EACA/S,EAAA3hE,EAEAi7B,KAAAy5C,GAGAz5C,KAFAqsD,EAAArsD,EAAA4qC,GAEAL,GACA+hB,EAAAD,EAAApD,IAEAqD,EAAA7S,GACAz5C,EAAAy5C,EAAA6S,EAAA7S,GAAA,EACA4S,EAAA5S,GAAA,EACA/S,EAAA2lB,IAEA3lB,IAAA1mC,EAAAipD,IACAkC,GAAAx5F,KAAAquC,GAEAA,GADA0mC,EAAA1mC,GACA4qC,GAGA5qC,EAAAy5C,GAAA,EACA4S,EAAA5S,GAAA,EACA4R,GAAA15F,KAAA06F,KAGAC,EAAAD,EAAA9hB,IAEA+hB,EAAA7S,GACAz5C,EAAAy5C,EAAA6S,EAAA7S,GAAA,EACA4S,EAAA5S,GAAA,EACA/S,EAAA2lB,IAEA3lB,IAAA1mC,EAAAuqC,IACA8gB,GAAA15F,KAAAquC,GAEAA,GADA0mC,EAAA1mC,GACA4qC,GAGA5qC,EAAAy5C,GAAA,EACA4S,EAAA5S,GAAA,EACA0R,GAAAx5F,KAAA06F,IAIArsD,EAAA0mC,EAAAkE,EAGAj5E,KAAAszD,EAAAw0B,GAAA,GAEA31E,OAAA,SAAAiB,GACAA,EAAA2+D,IAAA3+D,EAAA2+D,EAAAwkB,EAAAnjF,EAAAmjF,GACAnjF,EAAAmjF,IAAAnjF,EAAAmjF,EAAAxkB,EAAA3+D,EAAA2+D,GACA3+D,EAAA2+D,EAAA3+D,EAAAmjF,EAAA,KACA,IACAqE,EAGAhgC,EACAkT,EALAz/B,EAAAj7B,EAAA6lE,EAEAlmE,EAAAK,EAAAwlE,EACA/lE,EAAAO,EAAAkkF,EAmCA,GAhC2D18B,EAA3D7nD,EAA8BF,EAA6B8mF,GAAA9mF,GAA7BE,EAA9BF,EAEAw7B,EACAA,EAAAuqC,IAAAxlE,EAAAi7B,EAAAuqC,EAAAhe,EAA+CvsB,EAAAipD,EAAA18B,EAE/C56D,KAAAszD,EAAAsH,EAGA7nD,GAAAF,GACAi7D,EAAAlT,EAAAktB,EACAltB,EAAAktB,EAAA10E,EAAA00E,EACAltB,EAAAge,EAAA7lE,EACAA,EAAAkmE,EAAAre,EAEAA,IAAA/nD,GACAw7B,EAAAusB,EAAAqe,EACAre,EAAAqe,EAAA7lE,EAAA6lE,EACA7lE,EAAAwnD,EAAA08B,EACAjpD,EAAAuqC,EAAAxlE,EACAwnD,EAAA08B,EAAAzkF,EACAA,EAAAomE,EAAAre,IAEAA,EAAAqe,EAAA5qC,EACAA,EAAAusB,EACAxnD,EAAAwnD,EAAA08B,KAGAxpB,EAAA16D,EAAA00E,EACA10E,EAAAwnD,GAGAxnD,MAAA6lE,EAAA5qC,IACAy/B,EAEA,GAAA16D,KAAA00E,EACA10E,EAAA00E,GAAA,MADA,CAKA,GACA,GAAA10E,IAAApT,KAAAszD,EAAA,MAEA,GAAAlgD,IAAAi7B,EAAAuqC,GAUA,IATAgiB,EAAAvsD,EAAAipD,GAEAxP,IACA8S,EAAA9S,GAAA,EACAz5C,EAAAy5C,GAAA,EACA0R,GAAAx5F,KAAAquC,GACAusD,EAAAvsD,EAAAipD,GAGAsD,EAAAhiB,GAAAgiB,EAAAhiB,EAAAkP,GAAA8S,EAAAtD,GAAAsD,EAAAtD,EAAAxP,EAAA,CACA8S,EAAAtD,GAAAsD,EAAAtD,EAAAxP,IACA8S,EAAAhiB,EAAAkP,GAAA,EACA8S,EAAA9S,GAAA,EACA4R,GAAA15F,KAAA46F,GACAA,EAAAvsD,EAAAipD,GAGAsD,EAAA9S,EAAAz5C,EAAAy5C,EACAz5C,EAAAy5C,EAAA8S,EAAAtD,EAAAxP,GAAA,EACA0R,GAAAx5F,KAAAquC,GACAj7B,EAAApT,KAAAszD,EACA,YAYA,IATAsnC,EAAAvsD,EAAAuqC,GAEAkP,IACA8S,EAAA9S,GAAA,EACAz5C,EAAAy5C,GAAA,EACA4R,GAAA15F,KAAAquC,GACAusD,EAAAvsD,EAAAuqC,GAGAgiB,EAAAhiB,GAAAgiB,EAAAhiB,EAAAkP,GAAA8S,EAAAtD,GAAAsD,EAAAtD,EAAAxP,EAAA,CACA8S,EAAAhiB,GAAAgiB,EAAAhiB,EAAAkP,IACA8S,EAAAtD,EAAAxP,GAAA,EACA8S,EAAA9S,GAAA,EACA0R,GAAAx5F,KAAA46F,GACAA,EAAAvsD,EAAAuqC,GAGAgiB,EAAA9S,EAAAz5C,EAAAy5C,EACAz5C,EAAAy5C,EAAA8S,EAAAhiB,EAAAkP,GAAA,EACA4R,GAAA15F,KAAAquC,GACAj7B,EAAApT,KAAAszD,EACA,MAIAsnC,EAAA9S,GAAA,EACA10E,EAAAi7B,EACAA,IAAA4qC,SACO7lE,EAAA00E,GAEP10E,MAAA00E,GAAA,MAyFA97E,EAAAioF,KAAA4G,QAAA,SAAA/9D,GACA,IAAAvxB,EAAAkoF,GACA/nF,EAAAgoF,GACAS,EAAA5oF,EACA6oF,EAAA1oF,EACAw8E,EAAA4S,GACA,GAAAh+D,EAAA,OAAA+9D,EAAA/9D,GAEA,SAAA+9D,EAAAn5F,GACA,IAAAq5F,EAAA,IAAAzxF,MAAA5H,EAAAxD,QACAqqD,EAAA2/B,EAAA,MACAjhC,EAAAihC,EAAA,MACAjiE,EAAAiiE,EAAA,MACA/hE,EAAA+hE,EAAA,MAUA,OATA0R,GAAAC,EAAAn4F,GAAAwmF,GAAAmS,MAAA1vF,QAAA,SAAAsvF,EAAAj8F,GACA,IAAAs6F,EAAA2B,EAAA3B,MACAvC,EAAAkE,EAAAlE,MACAgF,EAAA/8F,GAAAs6F,EAAAp6F,OAAAo6F,EAAA/oF,IAAA,SAAA6b,GACA,IAAA5b,EAAA4b,EAAA7d,QACA,OAAAiC,EAAAjE,EAAAiE,EAAA9D,KACSqqF,EAAAxqF,GAAAg9C,GAAAwtC,EAAAxqF,GAAA0a,GAAA8vE,EAAArqF,GAAAu7C,GAAA8uC,EAAArqF,GAAAya,EAAA,EAAAoiC,EAAApiC,GAAA,CAAAF,EAAAE,GAAA,CAAAF,EAAAghC,GAAA,CAAAsB,EAAAtB,IAAA,IACTpjD,MAAAnC,EAAA1D,KAEA+8F,EAGA,SAAAlB,EAAAn4F,GACA,OAAAA,EAAA6N,IAAA,SAAAvF,EAAAhM,GACA,OACAuN,EAAA5B,KAAAsiC,MAAAkoD,EAAAnqF,EAAAhM,GAAAygE,OACA/yD,EAAA/B,KAAAsiC,MAAAmoD,EAAApqF,EAAAhM,GAAAygE,OACAzgE,OA6DA,OAxDA68F,EAAAG,MAAA,SAAAt5F,GACA,OAAAk4F,GAAAC,EAAAn4F,IAAA42F,MAAAn1E,OAAA,SAAA2yE,GACA,OAAAA,EAAAxzC,GAAAwzC,EAAAxwC,IACO/1C,IAAA,SAAAumF,GACP,OACA33F,OAAAuD,EAAAo0F,EAAAxzC,EAAAtkD,GACAD,OAAA2D,EAAAo0F,EAAAxwC,EAAAtnD,OAKA68F,EAAAI,UAAA,SAAAv5F,GACA,IAAAu5F,EAAA,GAsBA,OArBArB,GAAAC,EAAAn4F,IAAA24F,MAAA1vF,QAAA,SAAAsvF,EAAAj8F,GAUA,IATA,IAKAk9F,EA0CAr+E,EAAAC,EAAAkmB,EA/CA+yD,EAAAkE,EAAAlE,KACAuC,EAAA2B,EAAA3B,MAAA17E,KAAA27E,IACA/4D,GAAA,EACAmyB,EAAA2mC,EAAAp6F,OAGAi4D,EAAAmiC,EAAA3mC,EAAA,GAAAmkC,KACAqF,EAAAhlC,EAAA7T,IAAAyzC,EAAA5/B,EAAA7Q,EAAA6Q,EAAA7T,IAEA9iB,EAAAmyB,GACAwE,EACA+kC,EAAAC,EAEAA,GADAhlC,EAAAmiC,EAAA94D,GAAAs2D,MACAxzC,IAAAyzC,EAAA5/B,EAAA7Q,EAAA6Q,EAAA7T,EAEAtkD,EAAAk9F,EAAAl9F,KAAAm9F,EAAAn9F,IAgCA8e,EAhCAo+E,EAgCAl4D,EAhCAm4D,IAgCAt+E,EAhCAk5E,GAiCAxqF,EAAAy3B,EAAAz3B,IAAAuR,EAAApR,EAAAmR,EAAAnR,IAAAmR,EAAAtR,EAAAuR,EAAAvR,IAAAy3B,EAAAt3B,EAAAmR,EAAAnR,GAjCA,IACAuvF,EAAAttF,KAAA,CAAAjM,EAAA1D,GAAA0D,EAAAw5F,EAAAl9F,GAAA0D,EAAAy5F,EAAAn9F,OAIAi9F,GAGAJ,EAAAtvF,EAAA,SAAA+nD,GACA,OAAAr1D,UAAAC,QAAAi2F,EAAAzkB,GAAAnkE,EAAA+nD,GAAAunC,GAAAtvF,GAGAsvF,EAAAnvF,EAAA,SAAA4nD,GACA,OAAAr1D,UAAAC,QAAAk2F,EAAA1kB,GAAAhkE,EAAA4nD,GAAAunC,GAAAnvF,GAGAmvF,EAAA3S,WAAA,SAAA50B,GACA,OAAAr1D,UAAAC,QACAgqF,EAAA,MAAA50B,EAAAwnC,GAAAxnC,EACAunC,GAFA3S,IAAA4S,GAAA,KAAA5S,GAKA2S,EAAAp4F,KAAA,SAAA6wD,GACA,OAAAr1D,UAAAC,OACA28F,EAAA3S,WAAA50B,GAAA,OAAAA,IADA40B,IAAA4S,GAAA,KAAA5S,KAAA,IAIA2S,GAGA,IAAAC,GAAA,wBA+JA,SAAAM,GAAApxF,GACA,OAAAA,EAAAuB,EAGA,SAAA8vF,GAAArxF,GACA,OAAAA,EAAA0B,EA8EA,SAAA4vF,GAAAz+E,EAAAC,GACAD,EAAA7Q,EAAA05C,IAAA7oC,GACAC,EAAA9Q,EAAA05C,IAAA5oC,GACA,IAAAy+E,EAAA1+E,EAAAyoC,EACAk2C,EAAA3+E,EAAAvL,EACAmqF,EAAA5+E,EAAAC,EACA4+E,EAAA5+E,EAAAwoC,EAAAi2C,EACAI,EAAA7+E,EAAAxL,EAAAkqF,EACAI,EAAA9+E,IAAA2+E,EACA,gBAAAluE,GACA,UAAAw4C,GAAAp8D,KAAAsiC,MAAAsvD,EAAAG,EAAAnuE,IAAAw4C,GAAAp8D,KAAAsiC,MAAAuvD,EAAAG,EAAApuE,IAAAw4C,GAAAp8D,KAAAsiC,MAAAwvD,EAAAG,EAAAruE,KAMA,SAAAsuE,GAAAh/E,EAAAC,GACA,IAEAk5B,EAFAh4C,EAAA,GACAglC,EAAA,GAGA,IAAAgT,KAAAn5B,EACAm5B,KAAAl5B,EACA9e,EAAAg4C,GAAA8lD,GAAAj/E,EAAAm5B,GAAAl5B,EAAAk5B,IAEAhT,EAAAgT,GAAAn5B,EAAAm5B,GAIA,IAAAA,KAAAl5B,EACAk5B,KAAAn5B,IACAmmB,EAAAgT,GAAAl5B,EAAAk5B,IAIA,gBAAAzoB,GACA,IAAAyoB,KAAAh4C,EACAglC,EAAAgT,GAAAh4C,EAAAg4C,GAAAzoB,GAGA,OAAAyV,GAMA,SAAA+4D,GAAAl/E,EAAAC,GAEA,OADAD,KAAAC,KACA,SAAAyQ,GACA,OAAA1Q,GAAA,EAAA0Q,GAAAzQ,EAAAyQ,GAMA,SAAAyuE,GAAAn/E,EAAAC,GACA,IACAm/E,EACAC,EACAC,EAHAC,EAAAC,GAAAxjC,UAAAyjC,GAAAzjC,UAAA,EAIA76D,GAAA,EACAwR,EAAA,GACAyzD,EAAA,GAGA,IAFApmD,GAAA,GAAAC,GAAA,IAEAm/E,EAAAI,GAAAr2B,KAAAnpD,MAAAq/E,EAAAI,GAAAt2B,KAAAlpD,MACAq/E,EAAAD,EAAAzsF,OAAA2sF,IACAD,EAAAr/E,EAAA1M,MAAAgsF,EAAAD,GACA3sF,EAAAxR,GAAAwR,EAAAxR,IAAAm+F,EAA6B3sF,IAAAxR,GAAAm+F,IAG7BF,IAAA,OAAAC,IAAA,IACA1sF,EAAAxR,GAAAwR,EAAAxR,IAAAk+F,EAA6B1sF,IAAAxR,GAAAk+F,GAE7B1sF,IAAAxR,GAAA,KACAilE,EAAAt1D,KAAA,CACA3P,IACAuN,EAAAwwF,GAAAE,EAAAC,MAIAE,EAAAE,GAAAzjC,UAQA,OALAujC,EAAAt/E,EAAA5e,SACAi+F,EAAAr/E,EAAA1M,MAAAgsF,GACA5sF,EAAAxR,GAAAwR,EAAAxR,IAAAm+F,EAA2B3sF,IAAAxR,GAAAm+F,GAG3B3sF,EAAAtR,OAAA,EAAA+kE,EAAA,IAAAnmD,EAAAmmD,EAAA,GAAA13D,EAAA,SAAAgiB,GACA,OAAAzQ,EAAAyQ,GAAA,KACK,WACL,OAAAzQ,IACKA,EAAAmmD,EAAA/kE,OAAA,SAAAqvB,GACL,QAAAnkB,EAAApL,EAAA,EAAwBA,EAAA8e,IAAO9e,EAC/BwR,GAAApG,EAAA65D,EAAAjlE,OAAAoL,EAAAmC,EAAAgiB,GAGA,OAAA/d,EAAAkiE,KAAA,MA9UA1lE,EAAAioF,KAAAsI,SAAA,SAAArI,GACA,OAAAloF,EAAAioF,KAAA4G,UAAAI,UAAA/G,IAGAloF,EAAAioF,KAAAuI,SAAA,SAAA1/D,EAAA7W,EAAAE,EAAAD,EAAApR,GACA,IAEA2nF,EAFAlxF,EAAAkoF,GACA/nF,EAAAgoF,GAGA,GAAA+I,EAAAx+F,UAAAC,OAUA,OATAqN,EAAA6vF,GACA1vF,EAAA2vF,GAEA,IAAAoB,IACA3nF,EAAAqR,EACAD,EAAAD,EACAE,EAAAF,EAAA,GAGAu2E,EAAA1/D,GAGA,SAAA0/D,EAAA96F,GACA,IAAAsI,EAGAgZ,EACAo1B,EACAp6C,EACA8L,EACA4yF,EACAC,EACAC,EACAC,EATA1I,EAAAzkB,GAAAnkE,GACA6oF,EAAA1kB,GAAAhkE,GAUA,SAAAua,EACAy2E,EAAAz2E,EAAA02E,EAAAx2E,EAAAy2E,EAAA12E,EAAA22E,EAAA/nF,OAKA,GAHA8nF,EAAAC,IAAAH,EAAAC,EAAArpF,KACA0P,EAAA,GAAAo1B,EAAA,GACAtuC,EAAApI,EAAAxD,OACAu+F,EAAA,IAAAz+F,EAAA,EAA+BA,EAAA8L,IAAO9L,GACtCgM,EAAAtI,EAAA1D,IACAuN,EAAAmxF,MAAA1yF,EAAAuB,GACAvB,EAAA0B,EAAAixF,MAAA3yF,EAAA0B,GACA1B,EAAAuB,EAAAqxF,MAAA5yF,EAAAuB,GACAvB,EAAA0B,EAAAmxF,MAAA7yF,EAAA0B,GACAsX,EAAArV,KAAA3D,EAAAuB,GACA6sC,EAAAzqC,KAAA3D,EAAA0B,QACS,IAAA1N,EAAA,EAAiBA,EAAA8L,IAAO9L,EAAA,CACjC,IAAA2oF,GAAAwN,EAAAnqF,EAAAtI,EAAA1D,MACA4oF,GAAAwN,EAAApqF,EAAAhM,GACA2oF,EAAA+V,MAAA/V,GACAC,EAAA+V,MAAA/V,GACAD,EAAAiW,MAAAjW,GACAC,EAAAiW,MAAAjW,GACA5jE,EAAArV,KAAAg5E,GACAvuC,EAAAzqC,KAAAi5E,GAIA,IAAAj0E,EAAAiqF,EAAAF,EACArrF,EAAAwrF,EAAAF,EAGA,SAAA3qF,EAAAlI,EAAAE,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACA,IAAAmd,MAAA1mB,KAAA0mB,MAAAvmB,GAEA,GAAA5B,EAAAgzF,KAAA,CACA,IAAAC,EAAAjzF,EAAAyB,EACAyxF,EAAAlzF,EAAA4B,EAEA,SAAAqxF,EACA,GAAA50D,EAAA40D,EAAAxxF,GAAA48B,EAAA60D,EAAAtxF,GAAA,IACAuxF,EAAAnzF,EAAAE,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,OACa,CACb,IAAAooF,EAAApzF,EAAAjG,MACAiG,EAAAyB,EAAAzB,EAAA4B,EAAA5B,EAAAjG,MAAA,KACAo5F,EAAAnzF,EAAAozF,EAAAH,EAAAC,EAAA/2E,EAAAE,EAAAD,EAAApR,GACAmoF,EAAAnzF,EAAAE,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,QAGAhL,EAAAyB,IAAAzB,EAAA4B,IAAA5B,EAAAjG,MAAAmG,OAGAizF,EAAAnzF,EAAAE,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GAIA,SAAAmoF,EAAAnzF,EAAAE,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GACA,IAAAqoF,EAAA,IAAAl3E,EAAAC,GACAk3E,EAAA,IAAAj3E,EAAArR,GACAjC,EAAAtH,GAAA4xF,EACAE,EAAA3xF,GAAA0xF,EACAp/F,EAAAq/F,GAAA,EAAAxqF,EACA/I,EAAAgzF,MAAA,EAEAjqF,EAAAoT,EAAAk3E,EAA2Bj3E,EAAAi3E,EAC3BE,EAAAl3E,EAAAi3E,EAA2BtoF,EAAAsoF,EAC3BprF,EAHAlI,IAAA6xD,MAAA39D,KAAA8L,EAAA6xD,MAAA39D,GAkEA,CACA8+F,MAAA,EACAnhC,MAAA,GACA93D,MAAA,KACA0H,EAAA,KACAG,EAAA,OApEA1B,EAAAuB,EAAAG,EAAAua,EAAAE,EAAAD,EAAApR,GApCAnC,EAAAtB,EAAAwrF,EAAAF,EAAAhqF,EAAkCiqF,EAAAF,EAAArrF,EAuClC,IAAAisF,EA4DA,CACAR,MAAA,EACAnhC,MAAA,GACA93D,MAAA,KACA0H,EAAA,KACAG,EAAA,KA/DA8hB,IAAA,SAAAxjB,GACAgI,EAAAsrF,EAAAtzF,GAAAmqF,EAAAnqF,IAAAhM,IAAAo2F,EAAApqF,EAAAhM,GAAA0+F,EAAAC,EAAAC,EAAAC,KAaA,GAVAS,EAAAC,MAAA,SAAA/rE,IA+DA,SAAAgsE,EAAAhsE,EAAApe,EAAA6S,EAAAE,EAAAD,EAAApR,GACA,IAAA0c,EAAApe,EAAA6S,EAAAE,EAAAD,EAAApR,GAAA,CACA,IAAAgoC,EAAA,IAAA72B,EAAAC,GACA62B,EAAA,IAAA52B,EAAArR,GACA2oF,EAAArqF,EAAAuoD,MACA8hC,EAAA,IAAAD,EAAAhsE,EAAAisE,EAAA,GAAAx3E,EAAAE,EAAA22B,EAAAC,GACA0gD,EAAA,IAAAD,EAAAhsE,EAAAisE,EAAA,GAAA3gD,EAAA32B,EAAAD,EAAA62B,GACA0gD,EAAA,IAAAD,EAAAhsE,EAAAisE,EAAA,GAAAx3E,EAAA82B,EAAAD,EAAAhoC,GACA2oF,EAAA,IAAAD,EAAAhsE,EAAAisE,EAAA,GAAA3gD,EAAAC,EAAA72B,EAAApR,IAtEA0oF,CAAAhsE,EAAA8rE,EAAAZ,EAAAC,EAAAC,EAAAC,IAGAS,EAAAlpD,KAAA,SAAAvwC,GACA,OAsEA,SAAAy5F,EAAA/xF,EAAAG,EAAA68C,EAAAtB,EAAA4tC,EAAAG,GACA,IACA0I,EADAC,EAAArqF,IA+CA,OA5CA,SAAA8gC,EAAAhhC,EAAA6S,EAAAE,EAAAD,EAAApR,GACA,KAAAmR,EAAA4uE,GAAA1uE,EAAA6uE,GAAA9uE,EAAAqiC,GAAAzzC,EAAAmyC,GAAA,CAEA,GAAApjD,EAAAuP,EAAAvP,MAAA,CACA,IAAAA,EACA8O,EAAApH,EAAA6H,EAAA7H,EACA8F,EAAA3F,EAAA0H,EAAA1H,EACAkyF,EAAAjrF,IAAAtB,IAEA,GAAAusF,EAAAD,EAAA,CACA,IAAAvlE,EAAAzuB,KAAAo+B,KAAA41D,EAAAC,GACAr1C,EAAAh9C,EAAA6sB,EAAA6uB,EAAAv7C,EAAA0sB,EACAy8D,EAAAtpF,EAAA6sB,EAAA48D,EAAAtpF,EAAA0sB,EACAslE,EAAA75F,GAUA,IANA,IAAA45F,EAAArqF,EAAAuoD,MACAwhC,EAAA,IAAAl3E,EAAAC,GACAk3E,EAAA,IAAAj3E,EAAArR,GAIA9W,GAFA0N,GAAA0xF,IAEA,EAHA7xF,GAAA4xF,EAGA39D,EAAAxhC,EAAA,EAAiDA,EAAAwhC,IAAOxhC,EACxD,GAAAoV,EAAAqqF,EAAA,EAAAz/F,GAAA,SAAAA,GACA,OACAo2C,EAAAhhC,EAAA6S,EAAAE,EAAAg3E,EAAAC,GACA,MAEA,OACAhpD,EAAAhhC,EAAA+pF,EAAAh3E,EAAAD,EAAAk3E,GACA,MAEA,OACAhpD,EAAAhhC,EAAA6S,EAAAm3E,EAAAD,EAAAroF,GACA,MAEA,OACAs/B,EAAAhhC,EAAA+pF,EAAAC,EAAAl3E,EAAApR,KAtCA,CA0CKwoF,EAAA/0C,EAAAtB,EAAA4tC,EAAAG,GAEL0I,EAtHAG,CAAAP,EAAAz5F,EAAA,GAAAA,EAAA,GAAA64F,EAAAC,EAAAC,EAAAC,IAGA7+F,GAAA,EAEA,MAAAioB,EAAA,CACA,OAAAjoB,EAAA8L,GACAkI,EAAAsrF,EAAA57F,EAAA1D,GAAAglB,EAAAhlB,GAAAo6C,EAAAp6C,GAAA0+F,EAAAC,EAAAC,EAAAC,KAGA7+F,OACO0D,EAAAiJ,QAAA2yF,EAAA9vE,KAGP,OADAxK,EAAAo1B,EAAA12C,EAAAsI,EAAA,KACAszF,EAuBA,OApBAd,EAAAjxF,EAAA,SAAA+nD,GACA,OAAAr1D,UAAAC,QAAAqN,EAAA+nD,EAAAkpC,GAAAjxF,GAGAixF,EAAA9wF,EAAA,SAAA4nD,GACA,OAAAr1D,UAAAC,QAAAwN,EAAA4nD,EAAAkpC,GAAA9wF,GAGA8wF,EAAA74E,OAAA,SAAA2vC,GACA,OAAAr1D,UAAAC,QACA,MAAAo1D,EAAArtC,EAAAE,EAAAD,EAAApR,EAAA,MAA8CmR,GAAAqtC,EAAA,MAAAntC,GAAAmtC,EAAA,MAAAptC,GAAAotC,EAAA,MAAAx+C,GAAAw+C,EAAA,OAC9CkpC,GAFA,MAAAv2E,EAAA,OAAAA,EAAAE,GAAA,CAAAD,EAAApR,KAKA0nF,EAAA/5F,KAAA,SAAA6wD,GACA,OAAAr1D,UAAAC,QACA,MAAAo1D,EAAArtC,EAAAE,EAAAD,EAAApR,EAAA,MAA8CmR,EAAAE,EAAA,EAAAD,GAAAotC,EAAA,GAAAx+C,GAAAw+C,EAAA,IAC9CkpC,GAFA,MAAAv2E,EAAA,MAAAC,EAAAD,EAAAnR,EAAAqR,IAKAq2E,GAoFAxwF,EAAA8xF,eAAAxC,GAgBAtvF,EAAA+xF,kBAAAlC,GA8BA7vF,EAAAgyF,kBAAAjC,GASA/vF,EAAAiyF,kBAAAjC,GAiDA,IAAAK,GAAA,8CACAC,GAAA,IAAA/jC,OAAA8jC,GAAAl+F,OAAA,KAGA,SAAA29F,GAAAj/E,EAAAC,GAIA,IAHA,IACA0U,EADAxzB,EAAAgO,EAAAkyF,cAAAhgG,SAGAF,GAAA,KAAAwzB,EAAAxlB,EAAAkyF,cAAAlgG,GAAA6e,EAAAC,MAIA,OAAA0U,EASA,SAAA2sE,GAAAthF,EAAAC,GACA,IAKA9e,EALAuN,EAAA,GACAy3B,EAAA,GACAo7D,EAAAvhF,EAAA3e,OACAmgG,EAAAvhF,EAAA5e,OACAo8D,EAAA3wD,KAAA8B,IAAAoR,EAAA3e,OAAA4e,EAAA5e,QAGA,IAAAF,EAAA,EAAeA,EAAAs8D,IAAQt8D,EACvBuN,EAAAoC,KAAAmuF,GAAAj/E,EAAA7e,GAAA8e,EAAA9e,KAGA,KAAUA,EAAAogG,IAAQpgG,EAClBglC,EAAAhlC,GAAA6e,EAAA7e,GAGA,KAAUA,EAAAqgG,IAAQrgG,EAClBglC,EAAAhlC,GAAA8e,EAAA9e,GAGA,gBAAAuvB,GACA,IAAAvvB,EAAA,EAAiBA,EAAAs8D,IAAQt8D,EACzBglC,EAAAhlC,GAAAuN,EAAAvN,GAAAuvB,GAGA,OAAAyV,GA5CAh3B,EAAA+/B,YAAA+vD,GAaA9vF,EAAAkyF,cAAA,UAAArhF,EAAAC,GACA,IAAAyQ,SAAAzQ,EACA,kBAAAyQ,EAAA44C,GAAA/X,IAAAtxC,EAAAqxB,gBAAA,oBAAA2qB,KAAAh8C,GAAAw+E,GAAAU,GAAAl/E,aAAAgnD,GAAAw3B,GAAAhyF,MAAAD,QAAAyT,GAAAqhF,GAAA,WAAA5wE,GAAA0E,MAAAnV,GAAA++E,GAAAE,IAAAl/E,EAAAC,KAEA9Q,EAAAsyF,iBAAAH,GA+BA,IAAAI,GAAA,WACA,OAAArqC,GAGAsqC,GAAAxyF,EAAAuD,IAAA,CACArD,OAAAqyF,GACAE,KA0EA,SAAArzE,GACA,gBAAAmC,GACA,OAAA5jB,KAAA8yB,IAAAlP,EAAAnC,KA3EAszE,KAAA,WACA,OAAAC,IAEAC,MAAA,WACA,OAAAC,IAEA3tF,IAAA,WACA,OAAA4tF,IAEAt/B,IAAA,WACA,OAAAu/B,IAEAv4F,OAAA,WACA,OAAAw4F,IAEAC,QA4EA,SAAApiF,EAAAb,GACA,IAAAxM,EACAvR,UAAAC,OAAA,IAAA8d,EAAA,KACA/d,UAAAC,OAAAsR,EAAAwM,EAAA4iD,GAAAj1D,KAAA21D,KAAA,EAAAziD,IAAuDA,EAAA,EAAArN,EAAAwM,EAAA,GACvD,gBAAAuR,GACA,SAAA1Q,EAAAlT,KAAA8yB,IAAA,MAAAlP,GAAA5jB,KAAAuH,KAAAqc,EAAA/d,GAAAovD,GAAA5iD,KAhFAkjF,KAoFA,SAAA1vF,GACAA,MAAA,SACA,gBAAA+d,GACA,OAAAA,MAAA/d,EAAA,GAAA+d,EAAA/d,KAtFA2vF,OAAA,WACA,OAAAC,MAGAC,GAAArzF,EAAAuD,IAAA,CACA+vF,GAAAprC,EACAqrC,IAAAC,GACAC,SAAAC,GACAC,SAAA,SAAAnuE,GACA,OAAAkuE,GAAAF,GAAAhuE,OAmBA,SAAAguE,GAAAhuE,GACA,gBAAAjE,GACA,SAAAiE,EAAA,EAAAjE,IAIA,SAAAmyE,GAAAluE,GACA,gBAAAjE,GACA,UAAAA,EAAA,GAAAiE,EAAA,EAAAjE,GAAA,EAAAiE,EAAA,IAAAjE,KAIA,SAAAoxE,GAAApxE,GACA,OAAAA,IAGA,SAAAsxE,GAAAtxE,GACA,OAAAA,MAGA,SAAAqyE,GAAAryE,GACA,GAAAA,GAAA,WACA,GAAAA,GAAA,WACA,IAAAqrB,EAAArrB,IACAsyE,EAAAjnD,EAAArrB,EACA,UAAAA,EAAA,GAAAsyE,EAAA,GAAAtyE,EAAAqrB,GAAAinD,EAAA,KASA,SAAAf,GAAAvxE,GACA,SAAA5jB,KAAAu+B,IAAA3a,EAAAuxC,IAGA,SAAAigC,GAAAxxE,GACA,OAAA5jB,KAAA8yB,IAAA,MAAAlP,EAAA,IAGA,SAAAyxE,GAAAzxE,GACA,SAAA5jB,KAAAo+B,KAAA,EAAAxa,KAmBA,SAAA6xE,GAAA7xE,GACA,OAAAA,EAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAyDA,SAAAuyE,GAAAjjF,EAAAC,GAEA,OADAA,GAAAD,EACA,SAAA0Q,GACA,OAAA5jB,KAAAsiC,MAAApvB,EAAAC,EAAAyQ,IAgBA,SAAAwyE,GAAApuC,GACA,IAsCA90C,EAAAC,EAAAk5B,EAtCAyqB,EAAA,CAAA9O,EAAA90C,EAAA80C,EAAA70C,GACA8Y,EAAA,CAAA+7B,EAAA3uB,EAAA2uB,EAAA3nD,GACAg2F,EAAAC,GAAAx/B,GACAy/B,EAAAC,GAAA1/B,EAAA7qC,GACAwqE,EAAAH,KAkCApjF,EAlCA+Y,GAmCA,KADAogB,GAlCAkqD,IAkCApjF,EAlCA2jD,GAmCA,GACA5jD,EAAA,IAAAm5B,EAAAl5B,EAAA,GACAD,KArCA,EAEA4jD,EAAA,GAAA7qC,EAAA,GAAAA,EAAA,GAAA6qC,EAAA,KACAA,EAAA,OACAA,EAAA,OACAu/B,IAAA,EACAE,IAAA,GAGAlgG,KAAA8Q,QAAAkvF,EAAAr2F,KAAA+7D,MAAAjF,EAAA,GAAAA,EAAA,IAAA92D,KAAA+7D,OAAA9vC,EAAA,GAAAA,EAAA,KAAAopC,GACAh/D,KAAA6nC,UAAA,CAAA8pB,EAAAvmC,EAAAumC,EAAAngC,GACAxxB,KAAAiM,MAAA,CAAA+zF,EAAAI,GACApgG,KAAAqgG,KAAAD,EAAAz2F,KAAA+7D,MAAAw6B,EAAAE,GAAAphC,GAAA,EAOA,SAAAmhC,GAAAtjF,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,SAAAmjF,GAAApjF,GACA,IAAAm5B,EAAArsC,KAAAo+B,KAAAo4D,GAAAtjF,MAOA,OALAm5B,IACAn5B,EAAA,IAAAm5B,EACAn5B,EAAA,IAAAm5B,GAGAA,EA9LAhqC,EAAA60B,KAAA,SAAA4W,GACA,IAQAjmB,EARAxzB,EAAAy5C,EAAA9+B,QAAA,KACA4U,EAAAvvB,GAAA,EAAAy5C,EAAArnC,MAAA,EAAApS,GAAAy5C,EACAka,EAAA3zD,GAAA,EAAAy5C,EAAArnC,MAAApS,EAAA,QAGA,OAFAuvB,EAAAixE,GAAAn8F,IAAAkrB,IAAAgxE,GACA5sC,EAAA0tC,GAAAh9F,IAAAsvD,IAAAuC,EAIA1iC,EAHAmgC,EAAApkC,EAAAjtB,MAAA,KAAA2uD,EAAA1wD,KAAAN,UAAA,KAIA,SAAAsvB,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAiE,EAAAjE,KAsEAvhB,EAAAs0F,eAEA,SAAAzjF,EAAAC,GACAD,EAAA7Q,EAAA84D,IAAAjoD,GACAC,EAAA9Q,EAAA84D,IAAAhoD,GACA,IAAAyjF,EAAA1jF,EAAArO,EACAgyF,EAAA3jF,EAAAmmB,EACAy9D,EAAA5jF,EAAAylC,EACAo+C,EAAA5jF,EAAAtO,EAAA+xF,EACAI,EAAA7jF,EAAAkmB,EAAAw9D,EACAI,EAAA9jF,EAAAwlC,EAAAm+C,EACAxuE,MAAA0uE,OAAA,EAAAH,EAAAvuE,MAAAuuE,GAAA1jF,EAAAkmB,EAAAw9D,GACAvuE,MAAAyuE,MAAA,EAAAH,EAAAtuE,MAAAsuE,GAAAzjF,EAAAtO,EAAA+xF,GAAqDG,EAAA,IAAAA,GAAA,IAA6BA,GAAA,MAAAA,GAAA,KAClF,gBAAAnzE,GACA,OAAAy3C,GAAAu7B,EAAAG,EAAAnzE,EAAAizE,EAAAG,EAAApzE,EAAAkzE,EAAAG,EAAArzE,GAAA,KAIAvhB,EAAA60F,eAEA,SAAAhkF,EAAAC,GACAD,EAAA7Q,EAAAk4D,IAAArnD,GACAC,EAAA9Q,EAAAk4D,IAAApnD,GACA,IAAAyjF,EAAA1jF,EAAArO,EACAsyF,EAAAjkF,EAAArN,EACAixF,EAAA5jF,EAAAylC,EACAo+C,EAAA5jF,EAAAtO,EAAA+xF,EACApE,EAAAr/E,EAAAtN,EAAAsxF,EACAF,EAAA9jF,EAAAwlC,EAAAm+C,EACAxuE,MAAAkqE,OAAA,EAAA2E,EAAA7uE,MAAA6uE,GAAAhkF,EAAAtN,EAAAsxF,GACA7uE,MAAAyuE,MAAA,EAAAH,EAAAtuE,MAAAsuE,GAAAzjF,EAAAtO,EAAA+xF,GAAqDG,EAAA,IAAAA,GAAA,IAA6BA,GAAA,MAAAA,GAAA,KAClF,gBAAAnzE,GACA,OAAA62C,GAAAm8B,EAAAG,EAAAnzE,EAAAuzE,EAAA3E,EAAA5uE,EAAAkzE,EAAAG,EAAArzE,GAAA,KAIAvhB,EAAA+0F,eAEA,SAAAlkF,EAAAC,GACAD,EAAA7Q,EAAAk5D,IAAAroD,GACAC,EAAA9Q,EAAAk5D,IAAApoD,GACA,IAAA2jF,EAAA5jF,EAAAylC,EACA0+C,EAAAnkF,IACA4+E,EAAA5+E,EAAAC,EACA8jF,EAAA9jF,EAAAwlC,EAAAm+C,EACAQ,EAAAnkF,EAAAD,EAAAmkF,EACApF,EAAA9+E,IAAA2+E,EACA,gBAAAluE,GACA,OAAAg4C,GAAAk7B,EAAAG,EAAArzE,EAAAyzE,EAAAC,EAAA1zE,EAAAkuE,EAAAG,EAAAruE,GAAA,KAIAvhB,EAAAk1F,iBAAApB,GASA9zF,EAAA6zB,UAAA,SAAAz7B,GACA,IAAAkN,EAAA89C,EAAA72B,gBAAAvsB,EAAAgsD,GAAAxrB,OAAA1xB,IAAA,KACA,OAAA9O,EAAA6zB,UAAA,SAAAz7B,GACA,SAAAA,EAAA,CACAkN,EAAAknB,aAAA,YAAAp0B,GACA,IAAAmpB,EAAAjc,EAAAuuB,UAAAshE,QAAAC,cAGA,WAAArB,GAAAxyE,IAAAqlC,OAAAyuC,MACKj9F,IAuBL27F,GAAA1hG,UAAA2R,SAAA,WACA,mBAAAhQ,KAAA6nC,UAAA,WAAA7nC,KAAA8Q,OAAA,UAAA9Q,KAAAqgG,KAAA,UAAArgG,KAAAiM,MAAA,KAwBA,IAAAo1F,GAAA,CACAxkF,EAAA,EACAC,EAAA,EACAkmB,EAAA,EACAh5B,EAAA,EACAohB,EAAA,EACAoG,EAAA,GAIA,SAAA8vE,GAAA9xF,GACA,OAAAA,EAAAtR,OAAAsR,EAAA81E,MAAA,OAwDA,SAAAic,GAAA1kF,EAAAC,GACA,IAAAtN,EAAA,GACAyzD,EAAA,GAOA,OANApmD,EAAA7Q,EAAA6zB,UAAAhjB,GAAAC,EAAA9Q,EAAA6zB,UAAA/iB,GAxDA,SAAA0kF,EAAAC,EAAAjyF,EAAAyzD,GACA,GAAAu+B,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,IAAAzjG,EAAAwR,EAAA7B,KAAA,gCACAs1D,EAAAt1D,KAAA,CACA3P,IAAA,EACAuN,EAAAwwF,GAAAyF,EAAA,GAAAC,EAAA,KACO,CACPzjG,IAAA,EACAuN,EAAAwwF,GAAAyF,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACLjyF,EAAA7B,KAAA,aAAA8zF,EAAA,KA8CAC,CAAA7kF,EAAAgrB,UAAA/qB,EAAA+qB,UAAAr4B,EAAAyzD,GA1CA,SAAA0+B,EAAAC,EAAApyF,EAAAyzD,GACA0+B,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnC1+B,EAAAt1D,KAAA,CACA3P,EAAAwR,EAAA7B,KAAA2zF,GAAA9xF,GAAA,sBACAjE,EAAAwwF,GAAA4F,EAAAC,MAEKA,GACLpyF,EAAA7B,KAAA2zF,GAAA9xF,GAAA,UAAAoyF,EAAA,KAmCAC,CAAAhlF,EAAA/L,OAAAgM,EAAAhM,OAAAtB,EAAAyzD,GA/BA,SAAA6+B,EAAAC,EAAAvyF,EAAAyzD,GACA6+B,IAAAC,EACA9+B,EAAAt1D,KAAA,CACA3P,EAAAwR,EAAA7B,KAAA2zF,GAAA9xF,GAAA,qBACAjE,EAAAwwF,GAAA+F,EAAAC,KAEKA,GACLvyF,EAAA7B,KAAA2zF,GAAA9xF,GAAA,SAAAuyF,EAAA,KAyBAC,CAAAnlF,EAAAwjF,KAAAvjF,EAAAujF,KAAA7wF,EAAAyzD,GArBA,SAAAg/B,EAAAC,EAAA1yF,EAAAyzD,GACA,GAAAg/B,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,IAAAlkG,EAAAwR,EAAA7B,KAAA2zF,GAAA9xF,GAAA,4BACAyzD,EAAAt1D,KAAA,CACA3P,IAAA,EACAuN,EAAAwwF,GAAAkG,EAAA,GAAAC,EAAA,KACO,CACPlkG,IAAA,EACAuN,EAAAwwF,GAAAkG,EAAA,GAAAC,EAAA,WAEK,IAAAA,EAAA,QAAAA,EAAA,IACL1yF,EAAA7B,KAAA2zF,GAAA9xF,GAAA,SAAA0yF,EAAA,KAWAC,CAAAtlF,EAAA5Q,MAAA6Q,EAAA7Q,MAAAuD,EAAAyzD,GACApmD,EAAAC,EAAA,KACA,SAAAyQ,GAKA,IAJA,IAEAnkB,EAFApL,GAAA,EACA8L,EAAAm5D,EAAA/kE,SAGAF,EAAA8L,GACA0F,GAAApG,EAAA65D,EAAAjlE,OAAAoL,EAAAmC,EAAAgiB,GAGA,OAAA/d,EAAAkiE,KAAA,KAIA,SAAA0wB,GAAAvlF,EAAAC,GAEA,OADAA,MAAAD,OAAA,EAAAC,EACA,SAAAvR,GACA,OAAAA,EAAAsR,GAAAC,GAIA,SAAAulF,GAAAxlF,EAAAC,GAEA,OADAA,MAAAD,OAAA,EAAAC,EACA,SAAAvR,GACA,OAAA5B,KAAA0G,IAAA,EAAA1G,KAAA8B,IAAA,GAAAF,EAAAsR,GAAAC,KAoBA,SAAAwlF,GAAAC,GAMA,IALA,IAAAh1F,EAAAg1F,EAAApkG,OACAqe,EAAA+lF,EAAAxkG,OACAykG,EAgCA,SAAA3lF,EAAAC,GACA,GAAAD,IAAAC,EAAA,OAAAD,EACA,IAAA4lF,EAAAC,GAAA7lF,GACA8lF,EAAAD,GAAA5lF,GACA8lF,EAAAH,EAAAnd,MACAud,EAAAF,EAAArd,MACAwd,EAAA,KAEA,KAAAF,IAAAC,GACAC,EAAAF,EACAA,EAAAH,EAAAnd,MACAud,EAAAF,EAAArd,MAGA,OAAAwd,EA9CAC,CAAAx1F,EAAAiP,GACAsgB,EAAA,CAAAvvB,GAEAA,IAAAi1F,GACAj1F,IAAA8gC,OACAvR,EAAAnvB,KAAAJ,GAKA,IAFA,IAAAyoC,EAAAlZ,EAAA5+B,OAEAse,IAAAgmF,GACA1lE,EAAArL,OAAAukB,EAAA,EAAAx5B,GACAA,IAAA6xB,OAGA,OAAAvR,EAGA,SAAA4lE,GAAAtvF,GAIA,IAHA,IAAA4vF,EAAA,GACA30D,EAAAj7B,EAAAi7B,OAEA,MAAAA,GACA20D,EAAAr1F,KAAAyF,GACAA,EAAAi7B,EACAA,WAIA,OADA20D,EAAAr1F,KAAAyF,GACA4vF,EAkfA,SAAAC,GAAAj5F,GACAA,EAAAk5F,OAAA,EAGA,SAAAC,GAAAn5F,GACAA,EAAAk5F,QAAA,EAGA,SAAAE,GAAAp5F,GACAA,EAAAk5F,OAAA,EACAl5F,EAAAq5F,GAAAr5F,EAAAuB,EAAAvB,EAAAs5F,GAAAt5F,EAAA0B,EAGA,SAAA63F,GAAAv5F,GACAA,EAAAk5F,QAAA,EA/oBAl3F,EAAAw3F,qBAAAjC,GA+FAv1F,EAAAo5B,OAAA,GAEAp5B,EAAAo5B,OAAAq+D,OAAA,WACA,gBAAAzI,GAKA,IAJA,IAAA0I,EAAA,GACA1lG,GAAA,EACA8L,EAAAkxF,EAAA98F,SAEAF,EAAA8L,GACA45F,EAAA/1F,KAAA20F,GAAAtH,EAAAh9F,KAGA,OAAA0lG,IAwDA13F,EAAAo5B,OAAAu+D,MAAA,WACA,IACAC,EACA1hE,EACA0wB,EACA9oD,EAEA+5F,EACAC,EACAC,EARAJ,EAAA,GAKAjhG,EAAA,EAKA,SAAAshG,IACA,IAIAhuD,EACAzqC,EACAg9C,EACAvqD,EACAwhC,EARAg4B,EAAA,GACAysC,EAAA,GACAC,EAAAl4F,EAAAG,MAAArC,GACAq6F,EAAA,GAUA,IAJAP,EAAA,GACA1hE,EAAA,GACA8T,EAAA,EAAAh4C,GAAA,IAEAA,EAAA8L,GAAA,CAGA,IAFAyB,EAAA,EAAAi0B,GAAA,IAEAA,EAAA11B,GACAyB,GAAAqnD,EAAA50D,GAAAwhC,GAGAykE,EAAAt2F,KAAApC,GACA44F,EAAAx2F,KAAA3B,EAAAG,MAAArC,IACAksC,GAAAzqC,EAoBA,IAjBAs4F,GACAK,EAAAtnF,KAAA,SAAAC,EAAAC,GACA,OAAA+mF,EAAAI,EAAApnF,GAAAonF,EAAAnnF,MAIAgnF,GACAK,EAAAx5F,QAAA,SAAAX,EAAAhM,GACAgM,EAAA4S,KAAA,SAAAC,EAAAC,GACA,OAAAgnF,EAAAlxC,EAAA50D,GAAA6e,GAAA+1C,EAAA50D,GAAA8e,QAKAk5B,GAAA4oB,GAAAl8D,EAAAoH,GAAAksC,EACAzqC,EAAA,EAAAvN,GAAA,IAEAA,EAAA8L,GAAA,CAGA,IAFAy+C,EAAAh9C,EAAAi0B,GAAA,IAEAA,EAAA11B,GAAA,CACA,IAAAs6F,EAAAF,EAAAlmG,GACAqmG,EAAAF,EAAAC,GAAA5kE,GACAt2B,EAAA0pD,EAAAwxC,GAAAC,GACA5Y,EAAAlgF,EACA67E,EAAA77E,GAAArC,EAAA8sC,EACAwhB,EAAA4sC,EAAA,IAAAC,GAAA,CACA50F,MAAA20F,EACAE,SAAAD,EACA59D,WAAAglD,EACA/kD,SAAA0gD,EACAxpF,MAAAsL,GAIAg5B,EAAAkiE,GAAA,CACA30F,MAAA20F,EACA39D,WAAA8hB,EACA7hB,SAAAn7B,EACA3N,MAAAqmG,EAAAG,IAEA74F,GAAA7I,EAKA,IAFA1E,GAAA,IAEAA,EAAA8L,GAGA,IAFA01B,EAAAxhC,EAAA,IAEAwhC,EAAA11B,GAAA,CACA,IAAA3L,EAAAq5D,EAAAx5D,EAAA,IAAAwhC,GACAzhC,EAAAy5D,EAAAh4B,EAAA,IAAAxhC,IAEAG,EAAAP,OAAAG,EAAAH,QACAgmG,EAAAj2F,KAAAxP,EAAAP,MAAAG,EAAAH,MAAA,CACAO,OAAAJ,EACAA,OAAAI,GACa,CACbA,SACAJ,WAMAgmG,GAAAQ,IAGA,SAAAA,IACAX,EAAAhnF,KAAA,SAAAC,EAAAC,GACA,OAAAinF,GAAAlnF,EAAA1e,OAAAP,MAAAif,EAAA9e,OAAAH,OAAA,GAAAkf,EAAA3e,OAAAP,MAAAkf,EAAA/e,OAAAH,OAAA,KAiDA,OA7CA+lG,EAAA/wC,OAAA,SAAArnD,GACA,OAAAtN,UAAAC,QACA4L,GAAA8oD,EAAArnD,IAAAqnD,EAAA10D,OACA0lG,EAAA1hE,EAAA,KACAyhE,GAHA/wC,GAMA+wC,EAAAjhG,QAAA,SAAA6I,GACA,OAAAtN,UAAAC,QACAwE,EAAA6I,EACAq4F,EAAA1hE,EAAA,KACAyhE,GAHAjhG,GAMAihG,EAAAE,WAAA,SAAAt4F,GACA,OAAAtN,UAAAC,QACA2lG,EAAAt4F,EACAq4F,EAAA1hE,EAAA,KACAyhE,GAHAE,GAMAF,EAAAG,cAAA,SAAAv4F,GACA,OAAAtN,UAAAC,QACA4lG,EAAAv4F,EACAq4F,EAAA,KACAD,GAHAG,GAMAH,EAAAI,WAAA,SAAAx4F,GACA,OAAAtN,UAAAC,QACA6lG,EAAAx4F,EACAq4F,GAAAW,IACAZ,GAHAI,GAMAJ,EAAAC,OAAA,WAEA,OADAA,GAAAI,IACAJ,GAGAD,EAAAzhE,OAAA,WAEA,OADAA,GAAA8hE,IACA9hE,GAGAyhE,GAGA33F,EAAAo5B,OAAAqC,MAAA,WACA,IAEA7V,EAEAirB,EACA2nD,EAUAC,EACAC,EACAC,EAjBAl9D,EAAA,GACAuZ,EAAAh1C,EAAAwpD,SAAA,sBAEA/yD,EAAA,MAGAmiG,EAAA,GACAC,EAAAC,GACAC,EAAAC,GACAC,GAAA,GACAC,EAAAC,GACAC,EAAA,GACAC,EAAA,IACA1pC,EAAA,GACAq/B,EAAA,GAKA,SAAAsK,EAAAlyF,GACA,gBAAAsrF,EAAAz4E,EAAAqtC,EAAAptC,GACA,GAAAw4E,EAAA76F,QAAAuP,EAAA,CACA,IAAAT,EAAA+rF,EAAAz0E,GAAA7W,EAAA7H,EACA8F,EAAAqtF,EAAAx0E,GAAA9W,EAAA1H,EACA65F,EAAAr/E,EAAAD,EACAu/E,EAAA7yF,IAAAtB,IAEA,GAAAk0F,IAAAF,EAAAG,EAAA,CACA,GAAAA,EAAAN,EAAA,CACA,IAAAlvD,EAAA0oD,EAAAuG,OAAAO,EACApyF,EAAAiwF,IAAA1wF,EAAAqjC,EACA5iC,EAAAkwF,IAAAjyF,EAAA2kC,EAGA,SAGA,GAAA0oD,EAAA76F,OAAA2hG,KAAAN,EAAA,CACAlvD,EAAA0oD,EAAA+G,YAAAD,EACApyF,EAAAiwF,IAAA1wF,EAAAqjC,EACA5iC,EAAAkwF,IAAAjyF,EAAA2kC,GAIA,OAAA0oD,EAAAuG,QA0QA,SAAAS,EAAA17F,GACAA,EAAAq5F,GAAAr3F,EAAAg1C,MAAAz1C,EAAAvB,EAAAs5F,GAAAt3F,EAAAg1C,MAAAt1C,EACA+7B,EAAAk+D,SAGA,OA3QAl+D,EAAAn5B,KAAA,WACA,IAAAk2F,GAAA,UAMA,OALA5yE,EAAA,KACAovB,EAAAxkC,IAAA,CACAwJ,KAAA,MACAw+E,QAAA,KAEA,EAGA,IAEAvhC,EACAjlE,EACAoL,EACAoG,EACA+d,EACA+0B,EACAtM,EACAzqC,EACAG,EAVA5B,EAAA6xD,EAAAz9D,OACAyzD,EAAAqpC,EAAA98F,OAWA,IAAAF,EAAA,EAAiBA,EAAA2zD,IAAO3zD,EAExBwR,GADApG,EAAA4xF,EAAAh9F,IACAG,QAKAmkD,GAHA/2C,GADAgiB,EAAAnkB,EAAArL,QACAwN,EAAAiE,EAAAjE,GAGAA,GAFAG,EAAA6hB,EAAA7hB,EAAA8D,EAAA9D,GAEAA,KAEAH,GADA+2C,EAAAkiD,EAAAE,EAAA1mG,KAAAskD,EAAA34C,KAAAo+B,KAAAua,IAAAmiD,EAAAzmG,IAAAskD,EAEA52C,GAAA42C,EACA/0B,EAAAhiB,MAAAyqC,EAAAxmC,EAAAo2F,OAAAr4E,EAAAq4E,OAAAp2F,EAAAo2F,QAAAp2F,EAAAo2F,OAAAr4E,EAAAq4E,QAAA,IACAr4E,EAAA7hB,KAAAsqC,EACAxmC,EAAAjE,MAAAyqC,EAAA,EAAAA,GACAxmC,EAAA9D,KAAAsqC,GAIA,IAAAA,EAAAwuD,EAAAY,KACA75F,EAAA9I,EAAA,KACAiJ,EAAAjJ,EAAA,KACAzE,GAAA,EACAg4C,GAAA,OAAAh4C,EAAA8L,IACAV,EAAAuyD,EAAA39D,IACAuN,MAAAnC,EAAAmC,GAAAyqC,EACA5sC,EAAAsC,MAAAtC,EAAAsC,GAAAsqC,EAIA,GAAAivD,EAIA,KAwOA,SAAAY,EAAAnH,EAAA8F,EAAAG,GACA,IAAA16E,EAAA,EACAC,EAAA,EACAw0E,EAAAuG,OAAA,EAEA,IAAAvG,EAAA5B,KAMA,IALA,IAGA95D,EAHA24B,EAAA+iC,EAAA/iC,MACA7xD,EAAA6xD,EAAAz9D,OACAF,GAAA,IAGAA,EAAA8L,GAEA,OADAk5B,EAAA24B,EAAA39D,MAEA6nG,EAAA7iE,EAAAwhE,EAAAG,GACAjG,EAAAuG,QAAAjiE,EAAAiiE,OACAh7E,GAAA+Y,EAAAiiE,OAAAjiE,EAAA/Y,GACAC,GAAA8Y,EAAAiiE,OAAAjiE,EAAA9Y,IAIA,GAAAw0E,EAAA76F,MAAA,CACA66F,EAAA5B,OACA4B,EAAA76F,MAAA0H,GAAA5B,KAAAo8C,SAAA,GACA24C,EAAA76F,MAAA6H,GAAA/B,KAAAo8C,SAAA,IAGA,IAAA/P,EAAAwuD,EAAAG,EAAAjG,EAAA76F,MAAA4L,OACAivF,EAAAuG,QAAAvG,EAAA+G,YAAAzvD,EACA/rB,GAAA+rB,EAAA0oD,EAAA76F,MAAA0H,EACA2e,GAAA8rB,EAAA0oD,EAAA76F,MAAA6H,EAGAgzF,EAAAz0E,KAAAy0E,EAAAuG,OACAvG,EAAAx0E,KAAAw0E,EAAAuG,OA7QAY,CAAA5iC,EAAAj3D,EAAAioF,KAAAuI,SAAA7gC,GAAA6oC,EAAAG,GACA3mG,GAAA,IAEAA,EAAA8L,IACAV,EAAAuyD,EAAA39D,IAAAklG,OACAjgC,EAAAs6B,MAAA+H,EAAAl8F,IAOA,IAFApL,GAAA,IAEAA,EAAA8L,IACAV,EAAAuyD,EAAA39D,IAEAklG,OACA95F,EAAAmC,EAAAnC,EAAAi6F,GACAj6F,EAAAsC,EAAAtC,EAAAk6F,KAEAl6F,EAAAmC,IAAAnC,EAAAi6F,IAAAj6F,EAAAi6F,GAAAj6F,EAAAmC,IAAAq5F,EACAx7F,EAAAsC,IAAAtC,EAAAk6F,IAAAl6F,EAAAk6F,GAAAl6F,EAAAsC,IAAAk5F,GAIA5jD,EAAA1yC,KAAA,CACA0X,KAAA,OACAw+E,WAIA/8D,EAAAk0B,MAAA,SAAApwD,GACA,OAAAtN,UAAAC,QACAy9D,EAAApwD,EACAk8B,GAFAk0B,GAKAl0B,EAAAuzD,MAAA,SAAAzvF,GACA,OAAAtN,UAAAC,QACA88F,EAAAzvF,EACAk8B,GAFAuzD,GAKAvzD,EAAAhlC,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAuE,EAAA8I,EACAk8B,GAFAhlC,GAKAglC,EAAAo9D,aAAA,SAAAt5F,GACA,OAAAtN,UAAAC,QACA2mG,EAAA,oBAAAt5F,OACAk8B,GAFAo9D,GAKAp9D,EAAArP,SAAAqP,EAAAo9D,aAEAp9D,EAAAs9D,aAAA,SAAAx5F,GACA,OAAAtN,UAAAC,QACA6mG,EAAA,oBAAAx5F,OACAk8B,GAFAs9D,GAKAt9D,EAAAm9D,SAAA,SAAAr5F,GACA,OAAAtN,UAAAC,QACA0mG,GAAAr5F,EACAk8B,GAFAm9D,GAKAn9D,EAAAw9D,OAAA,SAAA15F,GACA,OAAAtN,UAAAC,QACA+mG,EAAA,oBAAA15F,OACAk8B,GAFAw9D,GAKAx9D,EAAAq+D,eAAA,SAAAv6F,GACA,OAAAtN,UAAAC,QACAgnG,EAAA35F,IACAk8B,GAFA99B,KAAAo+B,KAAAm9D,IAKAz9D,EAAA29D,QAAA,SAAA75F,GACA,OAAAtN,UAAAC,QACAknG,GAAA75F,EACAk8B,GAFA29D,GAKA39D,EAAAs+D,MAAA,SAAAx6F,GACA,OAAAtN,UAAAC,QACAmnG,EAAA95F,IACAk8B,GAFA99B,KAAAo+B,KAAAs9D,IAKA59D,EAAA+8D,MAAA,SAAAj5F,GACA,OAAAtN,UAAAC,QACAqN,KAEAi5F,EACAj5F,EAAA,EACAi5F,EAAAj5F,GAEAqmB,EAAAoR,EAAA,KAAApR,EAAArE,EAAA7F,IAAAkK,EAAA,KACAovB,EAAAxkC,IAAA,CACAwJ,KAAA,MACAw+E,QAAA,KAGOj5F,EAAA,IACPy1C,EAAAzzC,MAAA,CACAyY,KAAA,QACAw+E,QAAAj5F,IAEAqmB,EAAA+gD,GAAAlrC,EAAAn5B,OAGAm5B,GArBA+8D,GAwBA/8D,EAAAl6B,MAAA,WACA,IAAAvP,EAKAgoG,EACA58F,EALAU,EAAA6xD,EAAAz9D,OACAyzD,EAAAqpC,EAAA98F,OACAuQ,EAAAhM,EAAA,GACA+L,EAAA/L,EAAA,GAIA,IAAAzE,EAAA,EAAiBA,EAAA8L,IAAO9L,GACxBoL,EAAAuyD,EAAA39D,IAAAyR,MAAAzR,EACAoL,EAAAw8F,OAAA,EAGA,IAAA5nG,EAAA,EAAiBA,EAAA2zD,IAAO3zD,EAExB,iBADAoL,EAAA4xF,EAAAh9F,IACAG,SAAAiL,EAAAjL,OAAAw9D,EAAAvyD,EAAAjL,SACA,iBAAAiL,EAAArL,SAAAqL,EAAArL,OAAA49D,EAAAvyD,EAAArL,WACAqL,EAAAjL,OAAAynG,SACAx8F,EAAArL,OAAA6nG,OAGA,IAAA5nG,EAAA,EAAiBA,EAAA8L,IAAO9L,EACxBoL,EAAAuyD,EAAA39D,GACAi0B,MAAA7oB,EAAAmC,KAAAnC,EAAAmC,EAAAkN,EAAA,IAAAhK,IACAwjB,MAAA7oB,EAAAsC,KAAAtC,EAAAsC,EAAA+M,EAAA,IAAAjK,IACAyjB,MAAA7oB,EAAAi6F,MAAAj6F,EAAAi6F,GAAAj6F,EAAAmC,GACA0mB,MAAA7oB,EAAAk6F,MAAAl6F,EAAAk6F,GAAAl6F,EAAAsC,GAIA,GADA+4F,EAAA,GACA,oBAAAI,EAAA,IAAA7mG,EAAA,EAAyDA,EAAA2zD,IAAO3zD,EAChEymG,EAAAzmG,IAAA6mG,EAAAtmG,KAAAyB,KAAAg7F,EAAAh9F,WACO,IAAAA,EAAA,EAAiBA,EAAA2zD,IAAO3zD,EAC/BymG,EAAAzmG,GAAA6mG,EAGA,GADAH,EAAA,GACA,oBAAAK,EAAA,IAAA/mG,EAAA,EAAyDA,EAAA2zD,IAAO3zD,EAChE0mG,EAAA1mG,IAAA+mG,EAAAxmG,KAAAyB,KAAAg7F,EAAAh9F,WACO,IAAAA,EAAA,EAAiBA,EAAA2zD,IAAO3zD,EAC/B0mG,EAAA1mG,GAAA+mG,EAGA,GADAJ,EAAA,GACA,oBAAAM,EAAA,IAAAjnG,EAAA,EAAmDA,EAAA8L,IAAO9L,EAC1D2mG,EAAA3mG,IAAAinG,EAAA1mG,KAAAyB,KAAA27D,EAAA39D,WACO,IAAAA,EAAA,EAAiBA,EAAA8L,IAAO9L,EAC/B2mG,EAAA3mG,GAAAinG,EAGA,SAAAxsF,EAAAwtF,EAAAxjG,GACA,IAAAujG,EAAA,CAGA,IAFAA,EAAA,IAAA18F,MAAAQ,GAEA01B,EAAA,EAAqBA,EAAA11B,IAAO01B,EAC5BwmE,EAAAxmE,GAAA,GAGA,IAAAA,EAAA,EAAqBA,EAAAmyB,IAAOnyB,EAAA,CAC5B,IAAAp2B,EAAA4xF,EAAAx7D,GACAwmE,EAAA58F,EAAAjL,OAAAsR,OAAA9B,KAAAvE,EAAArL,QACAioG,EAAA58F,EAAArL,OAAA0R,OAAA9B,KAAAvE,EAAAjL,SASA,IALA,IAGAoN,EAHA41B,EAAA6kE,EAAAhoG,GACAwhC,GAAA,EACA8iB,EAAAnhB,EAAAjjC,SAGAshC,EAAA8iB,GACA,IAAArwB,MAAA1mB,EAAA41B,EAAA3B,GAAAymE,IAAA,OAAA16F,EAGA,OAAA5B,KAAAo8C,SAAAtjD,EAGA,OAAAglC,EAAAk+D,UAGAl+D,EAAAk+D,OAAA,WACA,OAAAl+D,EAAA+8D,MAAA,KAGA/8D,EAAAj6B,KAAA,WACA,OAAAi6B,EAAA+8D,MAAA,IAGA/8D,EAAAoV,KAAA,WAEA,GADAA,MAAA7wC,EAAA40C,SAAA/D,OAAAgE,OAAAqT,GAAAjwC,GAAA,kBAAAg/E,IAAAh/E,GAAA,aAAAyhF,GAAAzhF,GAAA,gBAAAk/E,MACAllG,UAAAC,OAAA,OAAA2+C,EACA78C,KAAAikB,GAAA,kBAAAm/E,IAAAn/E,GAAA,iBAAAs/E,IAAAhlG,KAAAs+C,IAQA7wC,EAAAopD,OAAA3tB,EAAAuZ,EAAA,OAyDA,IAAA8jD,GAAA,GACAE,GAAA,EACAG,GAAA7xF,IA6EA,SAAA4yF,GAAA5jG,EAAA6jG,GAIA,OAHAn6F,EAAAopD,OAAA9yD,EAAA6jG,EAAA,2BACA7jG,EAAAq5D,MAAAr5D,EACAA,EAAA04F,MAAAoL,GACA9jG,EAGA,SAAA+jG,GAAAjzF,EAAAue,GAGA,IAFA,IAAAgqC,EAAA,CAAAvoD,GAEA,OAAAA,EAAAuoD,EAAA2pB,QAGA,GAFA3zD,EAAAve,IAEAqqF,EAAArqF,EAAAqqF,YAAA3zF,EAAA2zF,EAAAv/F,QAGA,IAFA,IAAA4L,EAAA2zF,IAEA3zF,GAAA,GACA6xD,EAAAhuD,KAAA8vF,EAAA3zF,IAMA,SAAAw8F,GAAAlzF,EAAAue,GAIA,IAHA,IAAAgqC,EAAA,CAAAvoD,GACAmzF,EAAA,GAEA,OAAAnzF,EAAAuoD,EAAA2pB,QAGA,GAFAihB,EAAA54F,KAAAyF,IAEAqqF,EAAArqF,EAAAqqF,YAAA3zF,EAAA2zF,EAAAv/F,QAKA,IAJA,IACA4L,EACA2zF,EAFAz/F,GAAA,IAIAA,EAAA8L,GACA6xD,EAAAhuD,KAAA8vF,EAAAz/F,IAKA,YAAAoV,EAAAmzF,EAAAjhB,QACA3zD,EAAAve,GAIA,SAAAozF,GAAAx8F,GACA,OAAAA,EAAAyzF,SAGA,SAAAgJ,GAAAz8F,GACA,OAAAA,EAAApM,MAGA,SAAA8oG,GAAA7pF,EAAAC,GACA,OAAAA,EAAAlf,MAAAif,EAAAjf,MAGA,SAAAwoG,GAAAzqC,GACA,OAAA3vD,EAAAk3B,MAAAy4B,EAAApsD,IAAA,SAAA8+B,GACA,OAAAA,EAAAovD,UAAA,IAAAluF,IAAA,SAAAo3F,GACA,OACAxoG,OAAAkwC,EACAtwC,OAAA4oG,QA1IA36F,EAAAo5B,OAAA+gE,UAAA,WACA,IAAAvpF,EAAA8pF,GACAjJ,EAAA+I,GACA5oG,EAAA6oG,GAEA,SAAAN,EAAA7I,GACA,IAEAlqF,EAFAwzF,EAAA,CAAAtJ,GACA3hC,EAAA,GAIA,IAFA2hC,EAAAxoC,MAAA,EAEA,OAAA1hD,EAAAwzF,EAAAthB,QAGA,GAFA3pB,EAAAhuD,KAAAyF,IAEAyzF,EAAApJ,EAAAl/F,KAAA4nG,EAAA/yF,IAAA0hD,UAAAhrD,EAAA+8F,EAAA3oG,QAAA,CAGA,IAFA,IAAA4L,EAAA+8F,EAAAF,IAEA78F,GAAA,GACA88F,EAAAj5F,KAAAg5F,EAAAE,EAAA/8F,IACA68F,EAAAt4D,OAAAj7B,EACAuzF,EAAA7xC,MAAA1hD,EAAA0hD,MAAA,EAGAl3D,IAAAwV,EAAAxV,MAAA,GACAwV,EAAAqqF,SAAAoJ,OAEAjpG,IAAAwV,EAAAxV,SAAAW,KAAA4nG,EAAA/yF,IAAA0hD,QAAA,UACA1hD,EAAAqqF,SASA,OALA6I,GAAAhJ,EAAA,SAAAlqF,GACA,IAAAyzF,EAAAx4D,EACAzxB,IAAAiqF,EAAAzzF,EAAAqqF,WAAAoJ,EAAAjqF,QACAhf,IAAAywC,EAAAj7B,EAAAi7B,YAAAzwC,OAAAwV,EAAAxV,SAEA+9D,EAoCA,OAjCAwqC,EAAAvpF,KAAA,SAAArR,GACA,OAAAtN,UAAAC,QACA0e,EAAArR,EACA46F,GAFAvpF,GAKAupF,EAAA1I,SAAA,SAAAlyF,GACA,OAAAtN,UAAAC,QACAu/F,EAAAlyF,EACA46F,GAFA1I,GAKA0I,EAAAvoG,MAAA,SAAA2N,GACA,OAAAtN,UAAAC,QACAN,EAAA2N,EACA46F,GAFAvoG,GAKAuoG,EAAAW,QAAA,SAAAxJ,GAYA,OAXA1/F,IACAyoG,GAAA/I,EAAA,SAAAlqF,GACAA,EAAAqqF,WAAArqF,EAAAxV,MAAA,KAEA0oG,GAAAhJ,EAAA,SAAAlqF,GACA,IAAAi7B,EACAj7B,EAAAqqF,WAAArqF,EAAAxV,SAAAW,KAAA4nG,EAAA/yF,IAAA0hD,QAAA,IACAzmB,EAAAj7B,EAAAi7B,YAAAzwC,OAAAwV,EAAAxV,UAIA0/F,GAGA6I,GAwEAn6F,EAAAo5B,OAAA2hE,UAAA,WACA,IAAAZ,EAAAn6F,EAAAo5B,OAAA+gE,YACA1jG,EAAA,MAuCA,SAAAskG,EAAA/8F,EAAAhM,GACA,IAAA29D,EAAAwqC,EAAA5nG,KAAAyB,KAAAgK,EAAAhM,GAEA,OAxCA,SAAAya,EAAArF,EAAA7H,EAAAoH,EAAAtB,GACA,IAAAosF,EAAArqF,EAAAqqF,SAMA,GALArqF,EAAA7H,IACA6H,EAAA1H,EAAA0H,EAAA0hD,MAAAzjD,EACA+B,EAAAT,KACAS,EAAA/B,KAEAosF,IAAA3zF,EAAA2zF,EAAAv/F,QAAA,CACA,IACA4L,EACAk5B,EACAh5B,EAHAhM,GAAA,EAMA,IAFA2U,EAAAS,EAAAxV,MAAA+U,EAAAS,EAAAxV,MAAA,IAEAI,EAAA8L,GACA2O,EAAAuqB,EAAAy6D,EAAAz/F,GAAAuN,EAAAvB,EAAAg5B,EAAAplC,MAAA+U,EAAAtB,GACA9F,GAAAvB,GAuBAyO,CAAAkjD,EAAA,KAAAl5D,EAAA,GAAAA,EAAA,GAlBA,SAAAqyD,EAAA1hD,GACA,IAAAqqF,EAAArqF,EAAAqqF,SACAzzF,EAAA,EAEA,GAAAyzF,IAAA3zF,EAAA2zF,EAAAv/F,QAIA,IAHA,IACA4L,EADA9L,GAAA,IAGAA,EAAA8L,GACAE,EAAAL,KAAA0G,IAAArG,EAAA8qD,EAAA2oC,EAAAz/F,KAIA,SAAAgM,EAKA8qD,CAAA6G,EAAA,KACAA,EASA,OANAorC,EAAAtkG,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAuE,EAAA8I,EACAw7F,GAFAtkG,GAKAyjG,GAAAa,EAAAZ,IAGAn6F,EAAAo5B,OAAAnhC,IAAA,WACA,IAAArG,EAAA0X,OACAsH,EAAAoqF,GACAvgE,EAAA,EACAC,EAAAk4B,GACAqoC,EAAA,EAEA,SAAAhjG,EAAAvC,GACA,IAYAwH,EAZAY,EAAApI,EAAAxD,OACAke,EAAA1a,EAAA6N,IAAA,SAAAvF,EAAAhM,GACA,OAAAJ,EAAAW,KAAA0F,EAAA+F,EAAAhM,KAEA6e,IAAA,oBAAA4pB,IAAAnmC,MAAAN,KAAA/B,WAAAwoC,GACAygE,GAAA,oBAAAxgE,IAAApmC,MAAAN,KAAA/B,WAAAyoC,GAAA7pB,EACAb,EAAArS,KAAA8B,IAAA9B,KAAAw+B,IAAA++D,GAAAp9F,IAAA,oBAAAm9F,IAAA3mG,MAAAN,KAAA/B,WAAAgpG,IACAE,EAAAnrF,GAAAkrF,EAAA,QACA/1C,EAAAnlD,EAAAmlD,IAAA/0C,GACA45B,EAAAmb,GAAA+1C,EAAAp9F,EAAAq9F,GAAAh2C,EAAA,EACA1hD,EAAAzD,EAAAG,MAAArC,GACAlD,EAAA,GAgBA,OAdA,MAAAgW,GAAAnN,EAAAmN,SAAAoqF,GAAA,SAAAhpG,EAAAwhC,GACA,OAAApjB,EAAAojB,GAAApjB,EAAApe,IACO,SAAAA,EAAAwhC,GACP,OAAA5iB,EAAAlb,EAAA1D,GAAA0D,EAAA89B,MAEA/vB,EAAA9E,QAAA,SAAA3M,GACA4I,EAAA5I,GAAA,CACA0D,OAAA1D,GACAJ,MAAAsL,EAAAkT,EAAApe,GACAyoC,WAAA5pB,EACA6pB,SAAA7pB,GAAA3T,EAAA8sC,EAAAmxD,EACAF,SAAAjrF,KAGApV,EAiCA,OA9BA3C,EAAArG,MAAA,SAAA01D,GACA,OAAAr1D,UAAAC,QACAN,EAAA01D,EACArvD,GAFArG,GAKAqG,EAAA2Y,KAAA,SAAA02C,GACA,OAAAr1D,UAAAC,QACA0e,EAAA02C,EACArvD,GAFA2Y,GAKA3Y,EAAAwiC,WAAA,SAAA6sB,GACA,OAAAr1D,UAAAC,QACAuoC,EAAA6sB,EACArvD,GAFAwiC,GAKAxiC,EAAAyiC,SAAA,SAAA4sB,GACA,OAAAr1D,UAAAC,QACAwoC,EAAA4sB,EACArvD,GAFAyiC,GAKAziC,EAAAgjG,SAAA,SAAA3zC,GACA,OAAAr1D,UAAAC,QACA+oG,EAAA3zC,EACArvD,GAFAgjG,GAKAhjG,GAGA,IAAA+iG,GAAA,GAgFA,SAAAI,GAAAp9F,GACA,OAAAA,EAAAuB,EAGA,SAAA87F,GAAAr9F,GACA,OAAAA,EAAA0B,EAGA,SAAA47F,GAAAt9F,EAAAi9C,EAAAv7C,GACA1B,EAAAi9C,KACAj9C,EAAA0B,IAxFAM,EAAAo5B,OAAAwhE,MAAA,WACA,IAAAxqF,EAAA83C,EACAlb,EAAAuuD,GACA9iD,EAAA+iD,GACAjI,EAAA+H,GACA/7F,EAAA67F,GACA17F,EAAA27F,GAEA,SAAAT,EAAAllG,EAAA+N,GACA,KAAA3F,EAAApI,EAAAxD,QAAA,OAAAwD,EACA,IAAA+lG,EAAA/lG,EAAA6N,IAAA,SAAAvF,EAAAhM,GACA,OAAAoe,EAAA7d,KAAAqoG,EAAA58F,EAAAhM,KAEA8+B,EAAA2qE,EAAAl4F,IAAA,SAAAvF,GACA,OAAAA,EAAAuF,IAAA,SAAArG,EAAAlL,GACA,OAAAuN,EAAAhN,KAAAqoG,EAAA19F,EAAAlL,GAAA0N,EAAAnN,KAAAqoG,EAAA19F,EAAAlL,QAGA0pG,EAAA1uD,EAAAz6C,KAAAqoG,EAAA9pE,EAAArtB,GACAg4F,EAAAz7F,EAAAsmD,QAAAm1C,EAAAC,GACA5qE,EAAA9wB,EAAAsmD,QAAAx1B,EAAA4qE,GACA,IAEA59F,EACA9L,EACAwhC,EACAp2B,EALA25C,EAAA0B,EAAAlmD,KAAAqoG,EAAA9pE,EAAArtB,GACAkiD,EAAA81C,EAAA,GAAAvpG,OAMA,IAAAshC,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EAGxB,IAFA+/D,EAAAhhG,KAAAqoG,EAAAa,EAAA,GAAAjoE,GAAAp2B,EAAA25C,EAAAvjB,GAAA1C,EAAA,GAAA0C,GAAA,IAEAxhC,EAAA,EAAmBA,EAAA8L,IAAO9L,EAC1BuhG,EAAAhhG,KAAAqoG,EAAAa,EAAAzpG,GAAAwhC,GAAAp2B,GAAA0zB,EAAA9+B,EAAA,GAAAwhC,GAAA,GAAA1C,EAAA9+B,GAAAwhC,GAAA,IAIA,OAAA99B,EAuCA,OApCAklG,EAAAxqF,OAAA,SAAA7Q,GACA,OAAAtN,UAAAC,QACAke,EAAA7Q,EACAq7F,GAFAxqF,GAKAwqF,EAAA5tD,MAAA,SAAAztC,GACA,OAAAtN,UAAAC,QACA86C,EAAA,oBAAAztC,IAAAo8F,GAAAtlG,IAAAkJ,IAAAg8F,GACAX,GAFA5tD,GAKA4tD,EAAAniD,OAAA,SAAAl5C,GACA,OAAAtN,UAAAC,QACAumD,EAAA,oBAAAl5C,IAAAq8F,GAAAvlG,IAAAkJ,IAAAi8F,GACAZ,GAFAniD,GAKAmiD,EAAAr7F,EAAA,SAAAsjD,GACA,OAAA5wD,UAAAC,QACAqN,EAAAsjD,EACA+3C,GAFAr7F,GAKAq7F,EAAAl7F,EAAA,SAAAmjD,GACA,OAAA5wD,UAAAC,QACAwN,EAAAmjD,EACA+3C,GAFAl7F,GAKAk7F,EAAArH,IAAA,SAAA1wC,GACA,OAAA5wD,UAAAC,QACAqhG,EAAA1wC,EACA+3C,GAFArH,GAKAqH,GAgBA,IAAAe,GAAA37F,EAAAuD,IAAA,CACAs4F,aAAA,SAAAnmG,GACA,IACA1D,EACAwhC,EAFA11B,EAAApI,EAAAxD,OAGAmS,EAAA3O,EAAA6N,IAAAu4F,IACAC,EAAArmG,EAAA6N,IAAAy4F,IACAv4F,EAAAzD,EAAAG,MAAArC,GAAA8S,KAAA,SAAAC,EAAAC,GACA,OAAAzM,EAAAwM,GAAAxM,EAAAyM,KAEAlK,EAAA,EACAE,EAAA,EACAm1F,EAAA,GACAC,EAAA,GAEA,IAAAlqG,EAAA,EAAiBA,EAAA8L,IAAO9L,EACxBwhC,EAAA/vB,EAAAzR,GAEA4U,EAAAE,GACAF,GAAAm1F,EAAAvoE,GACAyoE,EAAAt6F,KAAA6xB,KAEA1sB,GAAAi1F,EAAAvoE,GACA0oE,EAAAv6F,KAAA6xB,IAIA,OAAA0oE,EAAA/uD,UAAA/pC,OAAA64F,IAEA9uD,QAAA,SAAAz3C,GACA,OAAAsK,EAAAG,MAAAzK,EAAAxD,QAAAi7C,WAEA15C,QAAA8nG,KAEAK,GAAA57F,EAAAuD,IAAA,CACA44F,WAAA,SAAAzmG,GACA,IAIA1D,EACAwhC,EACAp2B,EANAU,EAAApI,EAAAxD,OACAyzD,EAAAjwD,EAAA,GAAAxD,OACA6pG,EAAA,GACA13F,EAAA,EAIA42C,EAAA,GAEA,IAAAznB,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EAAA,CACxB,IAAAxhC,EAAA,EAAAoL,EAAA,EAA0BpL,EAAA8L,EAAO9L,IACjCoL,GAAA1H,EAAA1D,GAAAwhC,GAAA,GAGAp2B,EAAAiH,MAAAjH,GACA2+F,EAAAp6F,KAAAvE,GAGA,IAAAo2B,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EACxBynB,EAAAznB,IAAAnvB,EAAA03F,EAAAvoE,IAAA,EAGA,OAAAynB,GAEAmhD,OAAA,SAAA1mG,GACA,IAGA1D,EACAwhC,EACAwW,EACAmlD,EACAkN,EACAC,EACA31F,EACAvJ,EACAm/F,EAXAz+F,EAAApI,EAAAxD,OACAqN,EAAA7J,EAAA,GACAiwD,EAAApmD,EAAArN,OAUA+oD,EAAA,GAGA,IAFAA,EAAA,GAAA79C,EAAAm/F,EAAA,EAEA/oE,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EAAA,CACxB,IAAAxhC,EAAA,EAAAm9F,EAAA,EAA2Bn9F,EAAA8L,IAAO9L,EAClCm9F,GAAAz5F,EAAA1D,GAAAwhC,GAAA,GAGA,IAAAxhC,EAAA,EAAAqqG,EAAA,EAAA11F,EAAApH,EAAAi0B,GAAA,GAAAj0B,EAAAi0B,EAAA,MAAuDxhC,EAAA8L,IAAO9L,EAAA,CAC9D,IAAAg4C,EAAA,EAAAsyD,GAAA5mG,EAAA1D,GAAAwhC,GAAA,GAAA99B,EAAA1D,GAAAwhC,EAAA,UAAA7sB,GAA0EqjC,EAAAh4C,IAAOg4C,EACjFsyD,IAAA5mG,EAAAs0C,GAAAxW,GAAA,GAAA99B,EAAAs0C,GAAAxW,EAAA,OAAA7sB,EAGA01F,GAAAC,EAAA5mG,EAAA1D,GAAAwhC,GAAA,GAGAynB,EAAAznB,GAAAp2B,GAAA+xF,EAAAkN,EAAAlN,EAAAxoF,EAAA,EACAvJ,EAAAm/F,MAAAn/F,GAGA,IAAAo2B,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EACxBynB,EAAAznB,IAAA+oE,EAGA,OAAAthD,GAEAuhD,OAAA,SAAA9mG,GACA,IAGA1D,EACAwhC,EACAp2B,EALAU,EAAApI,EAAAxD,OACAyzD,EAAAjwD,EAAA,GAAAxD,OACA83C,EAAA,EAAAlsC,EAIAm9C,EAAA,GAEA,IAAAznB,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EAAA,CACxB,IAAAxhC,EAAA,EAAAoL,EAAA,EAA0BpL,EAAA8L,EAAO9L,IACjCoL,GAAA1H,EAAA1D,GAAAwhC,GAAA,GAGA,GAAAp2B,EAAA,IAAApL,EAAA,EAA0BA,EAAA8L,EAAO9L,IACjC0D,EAAA1D,GAAAwhC,GAAA,IAAAp2B,OACS,IAAApL,EAAA,EAAiBA,EAAA8L,EAAO9L,IACjC0D,EAAA1D,GAAAwhC,GAAA,GAAAwW,EAIA,IAAAxW,EAAA,EAAiBA,EAAAmyB,IAAOnyB,EACxBynB,EAAAznB,GAAA,EAGA,OAAAynB,GAEAwhD,KAAAjB,KAGA,SAAAD,GAAA7lG,GACA,OAAAsK,EAAAG,MAAAzK,EAAAxD,QAGA,SAAAspG,GAAA9lG,GAKA,IAJA,IAAA89B,GAAA,EACAmyB,EAAAjwD,EAAA,GAAAxD,OACA+oD,EAAA,KAEAznB,EAAAmyB,GACA1K,EAAAznB,GAAA,EAGA,OAAAynB,EAGA,SAAA6gD,GAAAtkG,GAOA,IANA,IAGAwyC,EAHAh4C,EAAA,EACAwhC,EAAA,EACAt2B,EAAA1F,EAAA,MAEAsG,EAAAtG,EAAAtF,OAEUF,EAAA8L,IAAO9L,GACjBg4C,EAAAxyC,EAAAxF,GAAA,IAAAkL,IACAs2B,EAAAxhC,EACAkL,EAAA8sC,GAIA,OAAAxW,EAGA,SAAAwoE,GAAAh+F,GACA,OAAAA,EAAAq7B,OAAAqjE,GAAA,GAGA,SAAAA,GAAA1sF,EAAAhS,GACA,OAAAgS,EAAAhS,EAAA,GAyEA,SAAA2+F,GAAAx8F,EAAAiQ,GACA,OAAAwsF,GAAAz8F,EAAAxC,KAAAC,KAAAD,KAAA22D,IAAAlkD,EAAAle,QAAAyL,KAAAq5D,IAAA,IAGA,SAAA4lC,GAAAz8F,EAAArC,GAMA,IALA,IAAAyB,GAAA,EACAuR,GAAA3Q,EAAA,GACAwlD,GAAAxlD,EAAA,GAAA2Q,GAAAhT,EACA0nB,EAAA,KAEAjmB,GAAAzB,GACA0nB,EAAAjmB,GAAAomD,EAAApmD,EAAAuR,EAGA,OAAA0U,EAGA,SAAAq3E,GAAAzsF,GACA,OAAApQ,EAAAP,IAAA2Q,GAAApQ,EAAAqE,IAAA+L,IA2DA,SAAA0sF,GAAAjsF,EAAAC,GACA,OAAAD,EAAAjf,MAAAkf,EAAAlf,MAGA,SAAAmrG,GAAAlsF,EAAAC,GACA,IAAAkmB,EAAAnmB,EAAAmsF,WACAnsF,EAAAmsF,WAAAlsF,EACAA,EAAAmsF,WAAApsF,EACAC,EAAAksF,WAAAhmE,EACAA,EAAAimE,WAAAnsF,EAGA,SAAAosF,GAAArsF,EAAAC,GACAD,EAAAmsF,WAAAlsF,EACAA,EAAAmsF,WAAApsF,EAGA,SAAAssF,GAAAtsF,EAAAC,GACA,IAAAnK,EAAAmK,EAAAvR,EAAAsR,EAAAtR,EACA8F,EAAAyL,EAAApR,EAAAmR,EAAAnR,EACA09F,EAAAvsF,EAAAyoC,EAAAxoC,EAAAwoC,EACA,WAAA8jD,IAAAz2F,IAAAtB,IAGA,SAAAg4F,GAAAj2F,GACA,IAAAuoD,EAAAvoD,EAAAqqF,YAAA3zF,EAAA6xD,EAAAz9D,QAAA,CACA,IAAAy9D,EAKA9+C,EACAC,EACAkmB,EACAhlC,EACAwhC,EACAwW,EACAlsC,EAVAi7C,EAAAzxC,IACA0xC,GAAA1xC,IACAgoC,EAAAhoC,IACAioC,GAAAjoC,IAsBA,GANAqoD,EAAAhxD,QAAA2+F,KACAzsF,EAAA8+C,EAAA,IACApwD,GAAAsR,EAAAyoC,EACAzoC,EAAAnR,EAAA,EACAi2E,EAAA9kE,GAEA/S,EAAA,KACAgT,EAAA6+C,EAAA,IACApwD,EAAAuR,EAAAwoC,EACAxoC,EAAApR,EAAA,EACAi2E,EAAA7kE,GAEAhT,EAAA,GASA,IAPAy/F,GAAA1sF,EAAAC,EADAkmB,EAAA24B,EAAA,IAEAgmB,EAAA3+C,GACA+lE,GAAAlsF,EAAAmmB,GACAnmB,EAAAosF,WAAAjmE,EACA+lE,GAAA/lE,EAAAlmB,GACAA,EAAAD,EAAAmsF,WAEAhrG,EAAA,EAAmBA,EAAA8L,EAAO9L,IAAA,CAC1BurG,GAAA1sF,EAAAC,EAAAkmB,EAAA24B,EAAA39D,IACA,IAAAwrG,EAAA,EACArO,EAAA,EACAkN,EAAA,EAEA,IAAA7oE,EAAA1iB,EAAAksF,WAAgCxpE,IAAA1iB,EAAS0iB,IAAAwpE,WAAA7N,IACzC,GAAAgO,GAAA3pE,EAAAwD,GAAA,CACAwmE,EAAA,EACA,MAIA,MAAAA,EACA,IAAAxzD,EAAAn5B,EAAAosF,WAAkCjzD,IAAAxW,EAAAypE,aAClCE,GAAAnzD,EAAAhT,GADsDgT,IAAAizD,WAAAZ,KAOtDmB,GACArO,EAAAkN,GAAAlN,GAAAkN,GAAAvrF,EAAAwoC,EAAAzoC,EAAAyoC,EAAA4jD,GAAArsF,EAAAC,EAAA0iB,GAAiF0pE,GAAArsF,EAAAm5B,EAAAl5B,GACjF9e,MAEA+qG,GAAAlsF,EAAAmmB,GACAlmB,EAAAkmB,EACA2+C,EAAA3+C,IAMA,IAAA/Y,GAAA86B,EAAAC,GAAA,EACA96B,GAAAoxB,EAAAC,GAAA,EACA4xC,EAAA,EAEA,IAAAnvF,EAAA,EAAeA,EAAA8L,EAAO9L,KACtBglC,EAAA24B,EAAA39D,IACAuN,GAAA0e,EACA+Y,EAAAt3B,GAAAwe,EACAijE,EAAAxjF,KAAA0G,IAAA88E,EAAAnqD,EAAAsiB,EAAA37C,KAAAo+B,KAAA/E,EAAAz3B,EAAAy3B,EAAAz3B,EAAAy3B,EAAAt3B,EAAAs3B,EAAAt3B,IAGA0H,EAAAkyC,EAAA6nC,EACAxxB,EAAAhxD,QAAA8+F,IAzEA,SAAA9nB,EAAAvuE,GACA2xC,EAAAp7C,KAAA8B,IAAA2H,EAAA7H,EAAA6H,EAAAkyC,EAAAP,GACAC,EAAAr7C,KAAA0G,IAAA+C,EAAA7H,EAAA6H,EAAAkyC,EAAAN,GACA1J,EAAA3xC,KAAA8B,IAAA2H,EAAA1H,EAAA0H,EAAAkyC,EAAAhK,GACAC,EAAA5xC,KAAA0G,IAAA+C,EAAA1H,EAAA0H,EAAAkyC,EAAA/J,IAwEA,SAAA+tD,GAAAl2F,GACAA,EAAA41F,WAAA51F,EAAA61F,WAAA71F,EAGA,SAAAq2F,GAAAr2F,UACAA,EAAA41F,kBACA51F,EAAA61F,WAmBA,SAAAM,GAAA1sF,EAAAC,EAAAkmB,GACA,IAAA0mE,EAAA7sF,EAAAyoC,EAAAtiB,EAAAsiB,EACA3yC,EAAAmK,EAAAvR,EAAAsR,EAAAtR,EACA8F,EAAAyL,EAAApR,EAAAmR,EAAAnR,EAEA,GAAAg+F,IAAA/2F,GAAAtB,GAAA,CACA,IAAA61F,EAAApqF,EAAAwoC,EAAAtiB,EAAAsiB,EACAqkD,EAAAh3F,IAAAtB,IAGA9F,EAAA,KADAm+F,OADAxC,QAEA,EAAAyC,GACAj+F,EAAA/B,KAAAo+B,KAAAp+B,KAAA0G,IAAA,IAAA62F,GAAAwC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAxC,OAAA,EAAAyC,GACA3mE,EAAAz3B,EAAAsR,EAAAtR,IAAAoH,EAAAjH,EAAA2F,EACA2xB,EAAAt3B,EAAAmR,EAAAnR,EAAAH,EAAA8F,EAAA3F,EAAAiH,OAEAqwB,EAAAz3B,EAAAsR,EAAAtR,EAAAm+F,EACA1mE,EAAAt3B,EAAAmR,EAAAnR,EAmKA,SAAAk+F,GAAA/sF,EAAAC,GACA,OAAAD,EAAAwxB,QAAAvxB,EAAAuxB,OAAA,IAGA,SAAAw7D,GAAA3gG,GACA,IAAAu0F,EAAAv0F,EAAAu0F,SACA,OAAAA,EAAAv/F,OAAAu/F,EAAA,GAAAv0F,EAAAqkB,EAGA,SAAAu8E,GAAA5gG,GACA,IACAY,EADA2zF,EAAAv0F,EAAAu0F,SAEA,OAAA3zF,EAAA2zF,EAAAv/F,QAAAu/F,EAAA3zF,EAAA,GAAAZ,EAAAqkB,EAGA,SAAAw8E,GAAAC,EAAAC,EAAA51D,GACA,IAAA61D,EAAA71D,GAAA41D,EAAAjsG,EAAAgsG,EAAAhsG,GACAisG,EAAAjnE,GAAAknE,EACAD,EAAAz6F,GAAA6kC,EACA21D,EAAAhnE,GAAAknE,EACAD,EAAAp7C,GAAAxa,EACA41D,EAAAt4C,GAAAtd,EAkBA,SAAA81D,GAAAC,EAAAlhG,EAAAmhG,GACA,OAAAD,EAAAvtF,EAAAwxB,SAAAnlC,EAAAmlC,OAAA+7D,EAAAvtF,EAAAwtF,EAuSA,SAAAC,GAAAl3F,GACA,OACA7H,EAAA6H,EAAA7H,EACAG,EAAA0H,EAAA1H,EACAiH,GAAAS,EAAAT,GACAtB,GAAA+B,EAAA/B,IAIA,SAAAk5F,GAAAn3F,EAAA1Q,GACA,IAAA6I,EAAA6H,EAAA7H,EAAA7I,EAAA,GACAgJ,EAAA0H,EAAA1H,EAAAhJ,EAAA,GACAiQ,EAAAS,EAAAT,GAAAjQ,EAAA,GAAAA,EAAA,GACA2O,EAAA+B,EAAA/B,GAAA3O,EAAA,GAAAA,EAAA,GAYA,OAVAiQ,EAAA,IACApH,GAAAoH,EAAA,EACAA,EAAA,GAGAtB,EAAA,IACA3F,GAAA2F,EAAA,EACAA,EAAA,GAGA,CACA9F,IACAG,IACAiH,KACAtB,MA6CA,SAAAm5F,GAAAl9F,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,IAAApP,OAAA,GACA,OAAAqP,EAAAC,EAAA,CAAAD,EAAAC,GAAA,CAAAA,EAAAD,GAGA,SAAAk9F,GAAAx+F,GACA,OAAAA,EAAAmC,YAAAnC,EAAAmC,cAAAo8F,GAAAv+F,EAAAE,SAGA,SAAAu+F,GAAAp9F,EAAAnB,EAAAw+F,EAAA5+D,GACA,IAAA40B,EAAAgqC,EAAAr9F,EAAA,GAAAA,EAAA,IACAtP,EAAA+tC,EAAA5/B,EAAA,GAAAA,EAAA,IACA,gBAAAZ,GACA,OAAAvN,EAAA2iE,EAAAp1D,KAIA,SAAAq/F,GAAAt9F,EAAAu9F,GACA,IAIAl4F,EAJAy/C,EAAA,EACAC,EAAA/kD,EAAApP,OAAA,EACAqqD,EAAAj7C,EAAA8kD,GACAnsC,EAAA3Y,EAAA+kD,GAUA,OAPApsC,EAAAsiC,IACA51C,EAAAy/C,IAAAC,IAAA1/C,EACAA,EAAA41C,IAAAtiC,IAAAtT,GAGArF,EAAA8kD,GAAAy4C,EAAAt5C,MAAAhJ,GACAj7C,EAAA+kD,GAAAw4C,EAAAjhG,KAAAqc,GACA3Y,EAGA,SAAAw9F,GAAAtpD,GACA,OAAAA,EAAA,CACA+P,MAAA,SAAAhmD,GACA,OAAA5B,KAAA4nD,MAAAhmD,EAAAi2C,MAEA53C,KAAA,SAAA2B,GACA,OAAA5B,KAAAC,KAAA2B,EAAAi2C,OAEKupD,GAt5BL/+F,EAAAo5B,OAAA4lE,UAAA,WACA,IAAAC,GAAA,EACAC,EAAA51F,OACA61F,EAAAtC,GACAuC,EAAAzC,GAEA,SAAAqC,EAAAtpG,EAAA1D,GAYA,IAXA,IAIAqtG,EAKA9/F,EATA+/F,EAAA,GACAlvF,EAAA1a,EAAA6N,IAAA27F,EAAAlrG,MACAmM,EAAAg/F,EAAA5sG,KAAAyB,KAAAoc,EAAApe,GACAutG,EAAAH,EAAA7sG,KAAAyB,KAAAmM,EAAAiQ,EAAApe,GAGA8L,GADA9L,GAAA,EACAoe,EAAAle,QACAyzD,EAAA45C,EAAArtG,OAAA,EACA83C,EAAAi1D,EAAA,IAAAnhG,IAGA9L,EAAA2zD,IACA05C,EAAAC,EAAAttG,GAAA,IACA2U,GAAA44F,EAAAvtG,EAAA,IAAAqtG,EAAA9/F,EAAAggG,EAAAvtG,IACAqtG,EAAA3/F,EAAA,EAGA,GAAAimD,EAAA,EAGA,IAFA3zD,GAAA,IAEAA,EAAA8L,IACAyB,EAAA6Q,EAAApe,KAEAmO,EAAA,IAAAZ,GAAAY,EAAA,MACAk/F,EAAAC,EAAAt/F,EAAAgmD,OAAAu5C,EAAAhgG,EAAA,EAAAomD,GAAA,IACAjmD,GAAAsqC,EACAq1D,EAAA19F,KAAAjM,EAAA1D,KAKA,OAAAstG,EA6BA,OA1BAN,EAAAptG,MAAA,SAAA2N,GACA,OAAAtN,UAAAC,QACAgtG,EAAA3/F,EACAy/F,GAFAE,GAKAF,EAAA7+F,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAitG,EAAAz7B,GAAAnkE,GACAy/F,GAFAG,GAKAH,EAAAM,KAAA,SAAA//F,GACA,OAAAtN,UAAAC,QACAktG,EAAA,kBAAA7/F,EAAA,SAAAY,GACA,OAAAy8F,GAAAz8F,EAAAZ,IACOmkE,GAAAnkE,GACPy/F,GAJAI,GAOAJ,EAAAC,UAAA,SAAA1/F,GACA,OAAAtN,UAAAC,QACA+sG,IAAA1/F,EACAy/F,GAFAC,GAKAD,GAwBAh/F,EAAAo5B,OAAAomE,KAAA,WACA,IAGA7lE,EAHAwgE,EAAAn6F,EAAAo5B,OAAA+gE,YAAAvpF,KAAAksF,IACApmG,EAAA,EACAD,EAAA,MAGA,SAAA+oG,EAAAxhG,EAAAhM,GACA,IAAA29D,EAAAwqC,EAAA5nG,KAAAyB,KAAAgK,EAAAhM,GACAs/F,EAAA3hC,EAAA,GACAltD,EAAAhM,EAAA,GACA+L,EAAA/L,EAAA,GACA6iD,EAAA,MAAA3f,EAAAh8B,KAAAo+B,KAAA,oBAAApC,IAAA,WACA,OAAAA,GAQA,GANA23D,EAAA/xF,EAAA+xF,EAAA5xF,EAAA,EACA46F,GAAAhJ,EAAA,SAAAtzF,GACAA,EAAAs7C,KAAAt7C,EAAApM,SAEA0oG,GAAAhJ,EAAA+L,IAEA3mG,EAAA,CACA,IAAA0mG,EAAA1mG,GAAAijC,EAAA,EAAAh8B,KAAA0G,IAAA,EAAAitF,EAAAh4C,EAAA72C,EAAA,EAAA6uF,EAAAh4C,EAAA92C,IAAA,EACA83F,GAAAhJ,EAAA,SAAAtzF,GACAA,EAAAs7C,GAAA8jD,IAEA9C,GAAAhJ,EAAA+L,IACA/C,GAAAhJ,EAAA,SAAAtzF,GACAA,EAAAs7C,GAAA8jD,IAKA,OAoJA,SAAAqC,EAAAr4F,EAAA7H,EAAAG,EAAAsqC,GACA,IAAAynD,EAAArqF,EAAAqqF,SACArqF,EAAA7H,KAAAyqC,EAAA5iC,EAAA7H,EACA6H,EAAA1H,KAAAsqC,EAAA5iC,EAAA1H,EACA0H,EAAAkyC,GAAAtP,EAEA,GAAAynD,EAIA,IAHA,IAAAz/F,GAAA,EACA8L,EAAA2zF,EAAAv/F,SAEAF,EAAA8L,GACA2hG,EAAAhO,EAAAz/F,GAAAuN,EAAAG,EAAAsqC,GAhKAy1D,CAAAnO,EAAA7uF,EAAA,EAAAD,EAAA,EAAAm3B,EAAA,IAAAh8B,KAAA0G,IAAA,EAAAitF,EAAAh4C,EAAA72C,EAAA,EAAA6uF,EAAAh4C,EAAA92C,IACAmtD,EAqBA,OAlBA6vC,EAAA/oG,KAAA,SAAA6wD,GACA,OAAAr1D,UAAAC,QACAuE,EAAA6wD,EACAk4C,GAFA/oG,GAKA+oG,EAAA7lE,OAAA,SAAA2tB,GACA,OAAAr1D,UAAAC,QACAynC,EAAA,MAAA2tB,GAAA,oBAAAA,OACAk4C,GAFA7lE,GAKA6lE,EAAA9oG,QAAA,SAAA4wD,GACA,OAAAr1D,UAAAC,QACAwE,GAAA4wD,EACAk4C,GAFA9oG,GAKAwjG,GAAAsF,EAAArF,IAmKAn6F,EAAAo5B,OAAAq0D,KAAA,WACA,IAAA0M,EAAAn6F,EAAAo5B,OAAA+gE,YAAAvpF,KAAA,MAAAhf,MAAA,MACA8tG,EAAA9B,GACAnnG,EAAA,MACAkpG,EAAA,KAEA,SAAAlS,EAAAzvF,EAAAhM,GACA,IAAA29D,EAAAwqC,EAAA5nG,KAAAyB,KAAAgK,EAAAhM,GACA4tG,EAAAjwC,EAAA,GACAkwC,EAuBA,SAAAD,GACA,IAKAE,EALAD,EAAA,CACA9xB,EAAA,KACA0jB,SAAA,CAAAmO,IAEAG,EAAA,CAAAF,GAGA,YAAAC,EAAAC,EAAAzmB,QACA,QAAAqhB,EAAAlJ,EAAAqO,EAAArO,SAAAz/F,EAAA,EAAA8L,EAAA2zF,EAAAv/F,OAA8EF,EAAA8L,IAAO9L,EACrF+tG,EAAAp+F,MAAA8vF,EAAAz/F,GAAA2oG,EAAA,CACArzC,EAAAmqC,EAAAz/F,GACAqwC,OAAAy9D,EACArO,UAAAkJ,EAAAlJ,EAAAz/F,GAAAy/F,WAAAkJ,EAAAv2F,SAAA,GACA2pE,EAAA,KACAl9D,EAAA,KACAgyC,EAAA,EACA8C,EAAA,EACA3uB,EAAA,EACAxzB,EAAA,EACA+d,EAAA,KACAvvB,MACW6e,EAAA8pF,GAIX,OAAAkF,EAAApO,SAAA,GAjDAuO,CAAAJ,GAGA,GAFAtF,GAAAuF,EAAAI,GAAAJ,EAAAx9D,OAAAsjB,GAAAk6C,EAAAh9C,EACAw3C,GAAAwF,EAAAK,GACAP,EAAAtF,GAAAuF,EAAAO,OAAoE,CACpE,IAAAp5F,EAAA64F,EACA/4F,EAAA+4F,EACA94F,EAAA84F,EACAvF,GAAAuF,EAAA,SAAAx4F,GACAA,EAAA7H,EAAAwH,EAAAxH,IAAAwH,EAAAK,GACAA,EAAA7H,EAAAsH,EAAAtH,IAAAsH,EAAAO,GACAA,EAAA0hD,MAAAhiD,EAAAgiD,QAAAhiD,EAAAM,KAEA,IAAAg5F,EAAAV,EAAA34F,EAAAF,GAAA,EAAAE,EAAAxH,EACAy0F,EAAAv9F,EAAA,IAAAoQ,EAAAtH,EAAAmgG,EAAA74F,EAAAE,GAAA,EAAAq5F,GACAhM,EAAA39F,EAAA,IAAAqQ,EAAAgiD,OAAA,GACAuxC,GAAAuF,EAAA,SAAAx4F,GACAA,EAAA7H,GAAA6H,EAAA7H,EAAA6gG,GAAApM,EACA5sF,EAAA1H,EAAA0H,EAAA0hD,MAAAsrC,IAGA,OAAAzkC,EAgCA,SAAAswC,EAAA/iG,GACA,IAAAu0F,EAAAv0F,EAAAu0F,SACA4O,EAAAnjG,EAAAmlC,OAAAovD,SACAhvF,EAAAvF,EAAAlL,EAAAquG,EAAAnjG,EAAAlL,EAAA,QAEA,GAAAy/F,EAAAv/F,OAAA,EAqHA,SAAAgL,GACA,IAIAuF,EAJA4lC,EAAA,EACA61D,EAAA,EACAzM,EAAAv0F,EAAAu0F,SACAz/F,EAAAy/F,EAAAv/F,OAGA,OAAAF,GAAA,IACAyQ,EAAAgvF,EAAAz/F,IACA6wD,GAAAxa,EACA5lC,EAAAkjD,GAAAtd,EACAA,GAAA5lC,EAAAe,GAAA06F,GAAAz7F,EAAAu0B,GA/HAspE,CAAApjG,GACA,IAAAqjG,GAAA9O,EAAA,GAAA5uC,EAAA4uC,IAAAv/F,OAAA,GAAA2wD,GAAA,EAEApgD,GACAvF,EAAA2lD,EAAApgD,EAAAogD,EAAA68C,EAAAxiG,EAAAoqD,EAAA7kD,EAAA6kD,GACApqD,EAAAyoD,EAAAzoD,EAAA2lD,EAAA09C,GAEArjG,EAAA2lD,EAAA09C,OAEO99F,IACPvF,EAAA2lD,EAAApgD,EAAAogD,EAAA68C,EAAAxiG,EAAAoqD,EAAA7kD,EAAA6kD,IAGApqD,EAAAmlC,OAAA0rC,EAQA,SAAA7wE,EAAAuF,EAAA47F,GACA,GAAA57F,EAAA,CAWA,IAVA,IAQA4lC,EARAm4D,EAAAtjG,EACAujG,EAAAvjG,EACAkhG,EAAA37F,EACAi+F,EAAAF,EAAAn+D,OAAAovD,SAAA,GACAkP,EAAAH,EAAA76C,EACAi7C,EAAAH,EAAA96C,EACAk7C,EAAAzC,EAAAz4C,EACAm7C,EAAAJ,EAAA/6C,EAGAy4C,EAAAN,GAAAM,GAAAoC,EAAA3C,GAAA2C,GAAApC,GAAAoC,GACAE,EAAA7C,GAAA6C,IACAD,EAAA3C,GAAA2C,IACA5vF,EAAA3T,GACAmrC,EAAA+1D,EAAAv7C,EAAAg+C,EAAAL,EAAA39C,EAAA89C,EAAAjB,EAAAtB,EAAA92C,EAAAk5C,EAAAl5C,IAEA,IACAy2C,GAAAI,GAAAC,EAAAlhG,EAAAmhG,GAAAnhG,EAAAmrC,GACAs4D,GAAAt4D,EACAu4D,GAAAv4D,GAGAw4D,GAAAzC,EAAAz4C,EACAg7C,GAAAH,EAAA76C,EACAm7C,GAAAJ,EAAA/6C,EACAi7C,GAAAH,EAAA96C,EAGAy4C,IAAAN,GAAA2C,KACAA,EAAAl/E,EAAA68E,EACAqC,EAAA96C,GAAAk7C,EAAAD,GAGAJ,IAAA3C,GAAA6C,KACAA,EAAAn/E,EAAAi/E,EACAE,EAAA/6C,GAAAg7C,EAAAG,EACAzC,EAAAnhG,GAIA,OAAAmhG,EAlDA0C,CAAA7jG,EAAAuF,EAAAvF,EAAAmlC,OAAA0rC,GAAAsyB,EAAA,IAGA,SAAAH,EAAAhjG,GACAA,EAAAoqD,EAAA/nD,EAAArC,EAAA2lD,EAAA3lD,EAAAmlC,OAAAsjB,EACAzoD,EAAAyoD,GAAAzoD,EAAAmlC,OAAAsjB,EAgDA,SAAAw6C,EAAA/4F,GACAA,EAAA7H,GAAA9I,EAAA,GACA2Q,EAAA1H,EAAA0H,EAAA0hD,MAAAryD,EAAA,GAqBA,OAlBAg3F,EAAAiS,WAAA,SAAAngG,GACA,OAAAtN,UAAAC,QACAwtG,EAAAngG,EACAkuF,GAFAiS,GAKAjS,EAAAh3F,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAytG,EAAA,OAAAlpG,EAAA8I,GAAA4gG,EAAA,KACA1S,GAFAkS,EAAA,KAAAlpG,GAKAg3F,EAAAkS,SAAA,SAAApgG,GACA,OAAAtN,UAAAC,QACAytG,EAAA,OAAAlpG,EAAA8I,GAAA,KAAA4gG,EACA1S,GAFAkS,EAAAlpG,EAAA,MAKAyjG,GAAAzM,EAAA0M,IA8CAn6F,EAAAo5B,OAAA4nE,QAAA,WACA,IAAA7G,EAAAn6F,EAAAo5B,OAAA+gE,YAAAvpF,KAAA,MAAAhf,MAAA,MACA8tG,EAAA9B,GACAnnG,EAAA,MACAkpG,GAAA,EAEA,SAAAqB,EAAAhjG,EAAAhM,GACA,IAEAivG,EAFAtxC,EAAAwqC,EAAA5nG,KAAAyB,KAAAgK,EAAAhM,GACAs/F,EAAA3hC,EAAA,GAEApwD,EAAA,EACA+6F,GAAAhJ,EAAA,SAAAlqF,GACA,IAAAqqF,EAAArqF,EAAAqqF,SAEAA,KAAAv/F,QACAkV,EAAA7H,EAiDA,SAAAkyF,GACA,OAAAA,EAAAp4D,OAAA,SAAA95B,EAAAo7F,GACA,OAAAp7F,EAAAo7F,EAAAp7F,GACK,GAAAkyF,EAAAv/F,OApDLgvG,CAAAzP,GACArqF,EAAA1H,EA0CA,SAAA+xF,GACA,SAAAzxF,EAAAqE,IAAAotF,EAAA,SAAAkJ,GACA,OAAAA,EAAAj7F,IA5CAyhG,CAAA1P,KAEArqF,EAAA7H,EAAA0hG,EAAA1hG,GAAAmgG,EAAAt4F,EAAA65F,GAAA,EACA75F,EAAA1H,EAAA,EACAuhG,EAAA75F,KAGA,IAAAL,EA+CA,SAAAq6F,EAAAh6F,GACA,IAAAqqF,EAAArqF,EAAAqqF,SACA,OAAAA,KAAAv/F,OAAAkvG,EAAA3P,EAAA,IAAArqF,EAjDAg6F,CAAA9P,GACAzqF,EAmDA,SAAAw6F,EAAAj6F,GACA,IACAtJ,EADA2zF,EAAArqF,EAAAqqF,SAEA,OAAAA,IAAA3zF,EAAA2zF,EAAAv/F,QAAAmvG,EAAA5P,EAAA3zF,EAAA,IAAAsJ,EAtDAi6F,CAAA/P,GACA/0C,EAAAx1C,EAAAxH,EAAAmgG,EAAA34F,EAAAF,GAAA,EACAoT,EAAApT,EAAAtH,EAAAmgG,EAAA74F,EAAAE,GAAA,EAQA,OAPAuzF,GAAAhJ,EAAAqO,EAAA,SAAAv4F,GACAA,EAAA7H,GAAA6H,EAAA7H,EAAA+xF,EAAA/xF,GAAA9I,EAAA,GACA2Q,EAAA1H,GAAA4xF,EAAA5xF,EAAA0H,EAAA1H,GAAAjJ,EAAA,IACO,SAAA2Q,GACPA,EAAA7H,GAAA6H,EAAA7H,EAAAg9C,IAAAtiC,EAAAsiC,GAAA9lD,EAAA,GACA2Q,EAAA1H,GAAA,GAAA4xF,EAAA5xF,EAAA0H,EAAA1H,EAAA4xF,EAAA5xF,EAAA,IAAAjJ,EAAA,KAEAk5D,EAqBA,OAlBAqxC,EAAAtB,WAAA,SAAAngG,GACA,OAAAtN,UAAAC,QACAwtG,EAAAngG,EACAyhG,GAFAtB,GAKAsB,EAAAvqG,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAytG,EAAA,OAAAlpG,EAAA8I,GACAyhG,GAFArB,EAAA,KAAAlpG,GAKAuqG,EAAArB,SAAA,SAAApgG,GACA,OAAAtN,UAAAC,QACAytG,EAAA,OAAAlpG,EAAA8I,GACAyhG,GAFArB,EAAAlpG,EAAA,MAKAyjG,GAAA8G,EAAA7G,IA0BAn6F,EAAAo5B,OAAAkoE,QAAA,WACA,IAMAC,EANApH,EAAAn6F,EAAAo5B,OAAA+gE,YACAl6D,EAAAtiC,KAAAsiC,MACAxpC,EAAA,MACAC,EAAA,KACA8qG,EAAAlD,GACAmD,GAAA,EAEAC,EAAA,WACA9lE,EAAA,MAAAj+B,KAAAo+B,KAAA,IAEA,SAAA97B,EAAAwxF,EAAAznD,GAMA,IALA,IAEA2wD,EACA5iG,EAHA/F,GAAA,EACA8L,EAAA2zF,EAAAv/F,SAIAF,EAAA8L,GACA/F,GAAA4iG,EAAAlJ,EAAAz/F,IAAAJ,OAAAo4C,EAAA,IAAAA,GACA2wD,EAAA5iG,KAAAkuB,MAAAluB,OAAA,IAAAA,EAIA,SAAA4pG,EAAAv6F,GACA,IAAAqqF,EAAArqF,EAAAqqF,SAEA,GAAAA,KAAAv/F,OAAA,CACA,IAGAyoG,EAEAiH,EAEA9jG,EAPAuiD,EAAAmhD,EAAAp6F,GACAy/C,EAAA,GACAtiD,EAAAktF,EAAArtF,QAEAmyE,EAAAjvE,IAEAqtD,EAAA,UAAA+sC,EAAArhD,EAAA15C,GAAA,SAAA+6F,EAAArhD,EAAAh7C,GAAA,eAAAq8F,EAAA,EAAAt6F,EAAA0hD,MAAAzI,EAAAh7C,GAAAg7C,EAAA15C,GAAAhJ,KAAA8B,IAAA4gD,EAAA15C,GAAA05C,EAAAh7C,IAKA,IAHApF,EAAAsE,EAAA87C,EAAA15C,GAAA05C,EAAAh7C,GAAA+B,EAAAxV,OACAi1D,EAAA9uD,KAAA,GAEA+F,EAAAyG,EAAArS,QAAA,GACA20D,EAAAllD,KAAAg5F,EAAAp2F,EAAAzG,EAAA,IACA+oD,EAAA9uD,MAAA4iG,EAAA5iG,KAEA,aAAA2pG,IAAAE,EAAAC,EAAAh7C,EAAA8N,KAAA4hB,GACAhyE,EAAA+0E,MACA/C,EAAAqrB,IAEA/6C,EAAA9uD,MAAA8uD,EAAAyyB,MAAAvhF,KACA0U,EAAAo6C,EAAA8N,EAAAtU,GAAA,GACAsU,EAAAh3D,KAAA8B,IAAA4gD,EAAA15C,GAAA05C,EAAAh7C,IACAwhD,EAAA30D,OAAA20D,EAAA9uD,KAAA,EACAw+E,EAAAjvE,KAIAu/C,EAAA30D,SACAua,EAAAo6C,EAAA8N,EAAAtU,GAAA,GACAwG,EAAA30D,OAAA20D,EAAA9uD,KAAA,GAGA05F,EAAA9yF,QAAAgjG,IAIA,SAAAG,EAAA16F,GACA,IAAAqqF,EAAArqF,EAAAqqF,SAEA,GAAAA,KAAAv/F,OAAA,CACA,IAEAyoG,EAFAt6C,EAAAmhD,EAAAp6F,GACA7C,EAAAktF,EAAArtF,QAEAyiD,EAAA,GAIA,IAHA5mD,EAAAsE,EAAA87C,EAAA15C,GAAA05C,EAAAh7C,GAAA+B,EAAAxV,OACAi1D,EAAA9uD,KAAA,EAEA4iG,EAAAp2F,EAAA+0E,OACAzyB,EAAAllD,KAAAg5F,GACA9zC,EAAA9uD,MAAA4iG,EAAA5iG,KAEA,MAAA4iG,EAAA93C,IACAp2C,EAAAo6C,EAAA8zC,EAAA93C,EAAAxC,EAAA15C,GAAA05C,EAAAh7C,GAAAg7C,GAAA97C,EAAArS,QACA20D,EAAA30D,OAAA20D,EAAA9uD,KAAA,GAIA05F,EAAA9yF,QAAAmjG,IAIA,SAAAD,EAAAh7C,EAAA8N,GAQA,IAPA,IACArb,EADA91C,EAAAqjD,EAAA9uD,KAEAgqG,EAAA,EACAC,EAAA16F,IACAtV,GAAA,EACA8L,EAAA+oD,EAAA30D,SAEAF,EAAA8L,IACAw7C,EAAAuN,EAAA70D,GAAA+F,QACAuhD,EAAA0oD,MAAA1oD,GACAA,EAAAyoD,MAAAzoD,IAKA,OADAqb,MADAnxD,MAEA7F,KAAA0G,IAAAswD,EAAAotC,EAAAnmE,EAAAp4B,KAAAmxD,EAAAqtC,EAAApmE,IAAAt0B,IAGA,SAAAmF,EAAAo6C,EAAA8N,EAAAtU,EAAAr7B,GACA,IAKA5nB,EALApL,GAAA,EACA8L,EAAA+oD,EAAA30D,OACAqN,EAAA8gD,EAAA9gD,EACAG,EAAA2gD,EAAA3gD,EACAxC,EAAAy3D,EAAA10B,EAAA4mB,EAAA9uD,KAAA48D,GAAA,EAGA,GAAAA,GAAAtU,EAAA15C,GAAA,CAGA,KAFAqe,GAAA9nB,EAAAmjD,EAAAh7C,MAAAnI,EAAAmjD,EAAAh7C,MAEArT,EAAA8L,IACAV,EAAAypD,EAAA70D,IACAuN,IACAnC,EAAAsC,IACAtC,EAAAiI,GAAAnI,EACAqC,GAAAnC,EAAAuJ,GAAAhJ,KAAA8B,IAAA4gD,EAAA9gD,EAAA8gD,EAAA15C,GAAApH,EAAArC,EAAA+iC,EAAA7iC,EAAArF,KAAAmF,GAAA,GAGAE,EAAAylD,GAAA,EACAzlD,EAAAuJ,IAAA05C,EAAA9gD,EAAA8gD,EAAA15C,GAAApH,EACA8gD,EAAA3gD,GAAAxC,EACAmjD,EAAAh7C,IAAAnI,MACO,CAGP,KAFA8nB,GAAA9nB,EAAAmjD,EAAA15C,MAAAzJ,EAAAmjD,EAAA15C,MAEA3U,EAAA8L,IACAV,EAAAypD,EAAA70D,IACAuN,IACAnC,EAAAsC,IACAtC,EAAAuJ,GAAAzJ,EACAwC,GAAAtC,EAAAiI,GAAA1H,KAAA8B,IAAA4gD,EAAA3gD,EAAA2gD,EAAAh7C,GAAA3F,EAAAxC,EAAA+iC,EAAA7iC,EAAArF,KAAAmF,GAAA,GAGAE,EAAAylD,GAAA,EACAzlD,EAAAiI,IAAAg7C,EAAA3gD,EAAA2gD,EAAAh7C,GAAA3F,EACA2gD,EAAA9gD,GAAArC,EACAmjD,EAAA15C,IAAAzJ,GAIA,SAAAokG,EAAAtjG,GACA,IAAA2xD,EAAA4xC,GAAApH,EAAAn8F,GACAszF,EAAA3hC,EAAA,GAOA,OANA2hC,EAAA/xF,EAAA+xF,EAAA5xF,EAAA,EACA4xF,EAAA1/F,OAAA0/F,EAAA3qF,GAAAlQ,EAAA,GAAA66F,EAAAjsF,GAAA5O,EAAA,IAA2D66F,EAAA3qF,GAAA2qF,EAAAjsF,GAAA,EAC3Dk8F,GAAApH,EAAAW,QAAAxJ,GACArxF,EAAA,CAAAqxF,KAAA3qF,GAAA2qF,EAAAjsF,GAAAisF,EAAA1/F,QACA2vG,EAAAO,EAAAH,GAAArQ,GACAmQ,IAAAF,EAAA5xC,GACAA,EAmDA,OAhDA2xC,EAAA7qG,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAuE,EAAA8I,EACA+hG,GAFA7qG,GAKA6qG,EAAA5qG,QAAA,SAAA6I,GACA,IAAAtN,UAAAC,OAAA,OAAAwE,EAOA,SAAAurG,EAAA76F,GACA,OAAAm3F,GAAAn3F,EAAA7H,GAGA,IAAAya,EAEA,OADAwnF,EAAA,OAAA9qG,EAAA6I,GAAA++F,GAAA,cAAAtkF,SAAAza,GAVA,SAAA6H,GACA,IAAA4I,EAAAzQ,EAAAhN,KAAA+uG,EAAAl6F,IAAA0hD,OACA,aAAA94C,EAAAsuF,GAAAl3F,GAAAm3F,GAAAn3F,EAAA,kBAAA4I,EAAA,CAAAA,aAQA,WAAAgK,GAAAza,EAAA,CAAAA,SAAA0iG,KACAX,GAGAA,EAAArhE,MAAA,SAAA1gC,GACA,OAAAtN,UAAAC,QACA+tC,EAAA1gC,EAAA5B,KAAAsiC,MAAA32B,OACAg4F,GAFArhE,GAAA32B,QAKAg4F,EAAAG,OAAA,SAAAliG,GACA,OAAAtN,UAAAC,QACAuvG,EAAAliG,EACAgiG,EAAA,KACAD,GAHAG,GAMAH,EAAA1lE,MAAA,SAAAr8B,GACA,OAAAtN,UAAAC,QACA0pC,EAAAr8B,EACA+hG,GAFA1lE,GAKA0lE,EAAAI,KAAA,SAAAniG,GACA,OAAAtN,UAAAC,QACAwvG,EAAAniG,EAAA,GACA+hG,GAFAI,GAKAxH,GAAAoH,EAAAnH,IAoCAn6F,EAAA+5C,OAAA,CACAi8B,OAAA,SAAAksB,EAAAC,GACA,IAAArkG,EAAA7L,UAAAC,OAGA,OAFA4L,EAAA,IAAAqkG,EAAA,GACArkG,EAAA,IAAAokG,EAAA,GACA,WACA,IAAA3iG,EAAAG,EAAA45C,EAEA,GAGAA,GAFA/5C,EAAA,EAAA5B,KAAAo8C,SAAA,GAEAx6C,GADAG,EAAA,EAAA/B,KAAAo8C,SAAA,GACAr6C,SACS45C,KAAA,GAET,OAAA4oD,EAAAC,EAAA5iG,EAAA5B,KAAAo+B,MAAA,EAAAp+B,KAAA22D,IAAAhb,QAGA8oD,UAAA,WACA,IAAAroD,EAAA/5C,EAAA+5C,OAAAi8B,OAAA1hF,MAAA0L,EAAA/N,WACA,kBACA,OAAA0L,KAAA61D,IAAAzZ,OAGAsoD,MAAA,SAAA18C,GACA,IAAA5L,EAAA/5C,EAAA+5C,OAAAuoD,UAAA38C,GACA,kBACA,OAAA5L,IAAA4L,IAGA28C,UAAA,SAAA38C,GACA,kBACA,QAAAniD,EAAA,EAAAgwB,EAAA,EAA8BA,EAAAmyB,EAAOnyB,IACrChwB,GAAA7F,KAAAo8C,SAGA,OAAAv2C,KAIAxD,EAAAC,MAAA,GAgDA,IAAA8+F,GAAA,CACAx5C,MAAA2C,EACAtqD,KAAAsqD,GAGA,SAAAq6C,GAAAjhG,EAAAnB,EAAAw+F,EAAA5+D,GACA,IAAA40B,EAAA,GACA3iE,EAAA,GACAwhC,EAAA,EACAwW,EAAArsC,KAAA8B,IAAA6B,EAAApP,OAAAiO,EAAAjO,QAAA,EAOA,IALAoP,EAAA0oC,GAAA1oC,EAAA,KACAA,IAAA8C,QAAA+oC,UACAhtC,IAAAiE,QAAA+oC,aAGA3Z,GAAAwW,GACA2qB,EAAAhzD,KAAAg9F,EAAAr9F,EAAAkyB,EAAA,GAAAlyB,EAAAkyB,KACAxhC,EAAA2P,KAAAo+B,EAAA5/B,EAAAqzB,EAAA,GAAArzB,EAAAqzB,KAGA,gBAAAj0B,GACA,IAAAi0B,EAAAxzB,EAAAgmD,OAAA1kD,EAAA/B,EAAA,EAAAyqC,GAAA,EACA,OAAAh4C,EAAAwhC,GAAAmhC,EAAAnhC,GAAAj0B,KA2EA,SAAAijG,GAAAviG,EAAAC,GACA,OAAAF,EAAAopD,OAAAnpD,EAAAC,EAAA,4CAGA,SAAAuiG,GAAAnhG,EAAAqkD,GAGA,OAFAi5C,GAAAt9F,EAAAw9F,GAAA4D,GAAAphG,EAAAqkD,GAAA,KACAi5C,GAAAt9F,EAAAw9F,GAAA4D,GAAAphG,EAAAqkD,GAAA,KACArkD,EAGA,SAAAohG,GAAAphG,EAAAqkD,GACA,MAAAA,MAAA,IACA,IAAAhuC,EAAA6mF,GAAAl9F,GACAqhG,EAAAhrF,EAAA,GAAAA,EAAA,GACA69B,EAAA73C,KAAA8yB,IAAA,GAAA9yB,KAAA4nD,MAAA5nD,KAAA22D,IAAAquC,EAAAh9C,GAAAhoD,KAAAwpE,OACAhyE,EAAAwwD,EAAAg9C,EAAAntD,EAKA,OAJArgD,GAAA,IAAAqgD,GAAA,GAA+BrgD,GAAA,IAAAqgD,GAAA,EAA+BrgD,GAAA,MAAAqgD,GAAA,GAC9D79B,EAAA,GAAAha,KAAAC,KAAA+Z,EAAA,GAAA69B,KACA79B,EAAA,GAAAha,KAAA4nD,MAAA5tC,EAAA,GAAA69B,KAAA,GAAAA,EACA79B,EAAA,GAAA69B,EACA79B,EAGA,SAAAirF,GAAAthG,EAAAqkD,GACA,OAAA3lD,EAAAG,MAAA7L,MAAA0L,EAAA0iG,GAAAphG,EAAAqkD,IAGA,SAAAk9C,GAAAvhG,EAAAqkD,EAAA3+C,GACA,IAAA7G,EAAAuiG,GAAAphG,EAAAqkD,GAEA,GAAA3+C,EAAA,CACA,IAAAuoD,EAAA2Y,GAAAlO,KAAAhzD,GAGA,GAFAuoD,EAAAlnB,QAEA,MAAAknB,EAAA,IACA,IAAA/uB,EAAAxgC,EAAA8oE,aAAAnrE,KAAA0G,IAAA83B,EAAAh8B,EAAA,IAAAg8B,EAAAh8B,EAAA,MAIA,OAHAovD,EAAA,KAAAA,EAAA,OAAAuzC,GAAAtiE,EAAAvgC,MAAAE,EAAA,MACAovD,EAAA,OACAvoD,EAAAhH,EAAAgH,OAAAuoD,EAAAmW,KAAA,KACA,SAAA1nE,GACA,OAAAgJ,EAAAw5B,EAAAvgC,MAAAjC,IAAAwiC,EAAA6mC,QAIA9X,EAAA,KAAAA,EAAA,OAqBA,SAAAv1C,EAAA7Z,GACA,IAAA6P,EAAA8yF,GAAA3iG,EAAA,IACA,OAAA6Z,KAAA+oF,GAAAplG,KAAAw+B,IAAAnsB,EAAA8yF,GAAAnlG,KAAA0G,IAAA83B,EAAAh8B,EAAA,IAAAg8B,EAAAh8B,EAAA,gBAAA6Z,GAAAhK,EAAA,SAAAgK,GAvBAgpF,CAAAzzC,EAAA,GAAApvD,IACA6G,EAAAuoD,EAAAmW,KAAA,SAEA1+D,EAAA,KAAA87F,GAAA3iG,EAAA,QAGA,OAAAH,EAAAgH,UAzHAhH,EAAAC,MAAAC,OAAA,WACA,OAGA,SAAA+iG,EAAA3hG,EAAAnB,EAAA4/B,EAAAmjE,GACA,IAAA9mB,EAAAgN,EAEA,SAAArzB,IACA,IAAA71D,EAAAvC,KAAA8B,IAAA6B,EAAApP,OAAAiO,EAAAjO,QAAA,EAAAqwG,GAAA7D,GACAC,EAAAuE,EAAA7M,GAAAD,GAGA,OAFAha,EAAAl8E,EAAAoB,EAAAnB,EAAAw+F,EAAA5+D,GACAqpD,EAAAlpF,EAAAC,EAAAmB,EAAAq9F,EAAA7O,IACA7vF,EAGA,SAAAA,EAAAV,GACA,OAAA68E,EAAA78E,GAGAU,EAAA+1D,OAAA,SAAAt2D,GACA,OAAA0pF,EAAA1pF,IAGAO,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAoP,EAAA/B,EAAAgE,IAAA+F,QACAysD,KAFAz0D,GAKArB,EAAAE,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAiO,EAAAZ,EACAw2D,KAFA51D,GAKAF,EAAAkjG,WAAA,SAAA5jG,GACA,OAAAU,EAAAE,MAAAZ,GAAAwgC,YAAA+zD,KAGA7zF,EAAAijG,MAAA,SAAA3jG,GACA,OAAAtN,UAAAC,QACAgxG,EAAA3jG,EACAw2D,KAFAmtC,GAKAjjG,EAAA8/B,YAAA,SAAAxgC,GACA,OAAAtN,UAAAC,QACA6tC,EAAAxgC,EACAw2D,KAFAh2B,GAKA9/B,EAAAyB,MAAA,SAAAikD,GACA,OAAAi9C,GAAAthG,EAAAqkD,IAGA1lD,EAAAS,WAAA,SAAAilD,EAAA3+C,GACA,OAAA67F,GAAAvhG,EAAAqkD,EAAA3+C,IAGA/G,EAAA4+F,KAAA,SAAAl5C,GAEA,OADA88C,GAAAnhG,EAAAqkD,GACAoQ,KAGA91D,EAAA8B,KAAA,WACA,OAAAkhG,EAAA3hG,EAAAnB,EAAA4/B,EAAAmjE,IAGA,OAAAntC,IAnEAktC,CAAA,YAAAnT,IAAA,IA2HA,IAAAiT,GAAA,CACAv/F,EAAA,EACA8B,EAAA,EACA0K,EAAA,EACAspC,EAAA,EACAl6B,EAAA,GAGA,SAAA0jF,GAAAlxG,GACA,OAAA+L,KAAA4nD,MAAA5nD,KAAA22D,IAAA1iE,GAAA+L,KAAAwpE,KAAA,KAQAnnE,EAAAC,MAAAq0D,IAAA,WACA,OAGA,SAAA8uC,EAAAljG,EAAAmjG,EAAAC,EAAAhiG,GACA,SAAAgzD,EAAA/0D,GACA,OAAA+jG,EAAA3lG,KAAA22D,IAAA/0D,EAAA,IAAAA,IAAA5B,KAAA22D,IAAA/0D,EAAA,KAAAA,IAAA5B,KAAA22D,IAAA+uC,GAGA,SAAA5yE,EAAAlxB,GACA,OAAA+jG,EAAA3lG,KAAA8yB,IAAA4yE,EAAA9jG,IAAA5B,KAAA8yB,IAAA4yE,GAAA9jG,GAGA,SAAAU,EAAAV,GACA,OAAAW,EAAAo0D,EAAA/0D,IAGAU,EAAA+1D,OAAA,SAAAz2D,GACA,OAAAkxB,EAAAvwB,EAAA81D,OAAAz2D,KAGAU,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAoxG,EAAA/jG,EAAA,MACAW,EAAAoB,UAAA/B,EAAAgE,IAAA+F,SAAA/F,IAAA+wD,IACAr0D,GAHAqB,GAMArB,EAAAojG,KAAA,SAAA/7C,GACA,OAAAr1D,UAAAC,QACAmxG,GAAA/7C,EACApnD,EAAAoB,SAAAiC,IAAA+wD,IACAr0D,GAHAojG,GAMApjG,EAAA4+F,KAAA,WACA,IAAA0E,EAAA3E,GAAAt9F,EAAAiC,IAAA+wD,GAAAgvC,EAAA3lG,KAAA6lG,IAGA,OAFAtjG,EAAAoB,OAAAiiG,GACAjiG,EAAAiiG,EAAAhgG,IAAAktB,GACAxwB,GAGAA,EAAAyB,MAAA,WACA,IAAAiW,EAAA6mF,GAAAl9F,GACAI,EAAA,GACAizD,EAAAh9C,EAAA,GACAza,EAAAya,EAAA,GACA3lB,EAAA2L,KAAA4nD,MAAA+O,EAAAK,IACAnhC,EAAA71B,KAAAC,KAAA02D,EAAAp3D,IACAY,EAAAulG,EAAA,IAAAA,EAEA,GAAAh3E,SAAAmH,EAAAxhC,GAAA,CACA,GAAAsxG,EAAA,CACA,KAAgBtxG,EAAAwhC,EAAOxhC,IACvB,QAAAg4C,EAAA,EAA2BA,EAAAlsC,EAAOksC,IAClCtoC,EAAAC,KAAA8uB,EAAAz+B,GAAAg4C,GAIAtoC,EAAAC,KAAA8uB,EAAAz+B,SAIA,IAFA0P,EAAAC,KAAA8uB,EAAAz+B,IAEgBA,IAAAwhC,GAChB,QAAAwW,EAAAlsC,EAAA,EAA+BksC,EAAA,EAAOA,IACtCtoC,EAAAC,KAAA8uB,EAAAz+B,GAAAg4C,GAKA,IAAAh4C,EAAA,EAAmB0P,EAAA1P,GAAA2iE,EAAc3iE,KAEjC,IAAAwhC,EAAA9xB,EAAAxP,OAA8BwP,EAAA8xB,EAAA,GAAAt2B,EAAkBs2B,KAEhD9xB,IAAA0C,MAAApS,EAAAwhC,GAGA,OAAA9xB,GAGAzB,EAAAS,WAAA,SAAA5C,EAAAkJ,GACA,IAAA/U,UAAAC,OAAA,OAAAuxG,GACAxxG,UAAAC,OAAA,EAAA8U,EAAAy8F,GAA4D,oBAAAz8F,MAAAhH,EAAAgH,WAC5D,IAAAgjC,EAAArsC,KAAA0G,IAAA,EAAAg/F,EAAAvlG,EAAAmC,EAAAyB,QAAAxP,QACA,gBAAA8L,GACA,IAAAhM,EAAAgM,EAAAyyB,EAAA9yB,KAAAsiC,MAAAq0B,EAAAt2D,KAEA,OADAhM,EAAAqxG,IAAA,KAAArxG,GAAAqxG,GACArxG,GAAAg4C,EAAAhjC,EAAAhJ,GAAA,KAIAiC,EAAA8B,KAAA,WACA,OAAAqhG,EAAAljG,EAAA6B,OAAAshG,EAAAC,EAAAhiG,IAGA,OAAAkhG,GAAAviG,EAAAC,GA9FAkjG,CAAApjG,EAAAC,MAAAC,SAAAoB,OAAA,sBAiGA,IAAAmiG,GAAAzjG,EAAAgH,OAAA,OACAw8F,GAAA,CACAj+C,MAAA,SAAAhmD,GACA,OAAA5B,KAAAC,MAAA2B,IAEA3B,KAAA,SAAA2B,GACA,OAAA5B,KAAA4nD,OAAAhmD,KAqDA,SAAAmkG,GAAAtkF,GACA,gBAAA7f,GACA,OAAAA,EAAA,GAAA5B,KAAA8yB,KAAAlxB,EAAA6f,GAAAzhB,KAAA8yB,IAAAlxB,EAAA6f,IAnDApf,EAAAC,MAAAwwB,IAAA,WACA,OAGA,SAAAkzE,EAAAzjG,EAAA4vB,EAAAxuB,GACA,IAAAsiG,EAAAF,GAAA5zE,GACA+zE,EAAAH,GAAA,EAAA5zE,GAEA,SAAA7vB,EAAAV,GACA,OAAAW,EAAA0jG,EAAArkG,IAGAU,EAAA+1D,OAAA,SAAAz2D,GACA,OAAAskG,EAAA3jG,EAAA81D,OAAAz2D,KAGAU,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAgO,EAAAoB,UAAA/B,EAAAgE,IAAA+F,SAAA/F,IAAAqgG,IACA3jG,GAFAqB,GAKArB,EAAAyB,MAAA,SAAAikD,GACA,OAAAi9C,GAAAthG,EAAAqkD,IAGA1lD,EAAAS,WAAA,SAAAilD,EAAA3+C,GACA,OAAA67F,GAAAvhG,EAAAqkD,EAAA3+C,IAGA/G,EAAA4+F,KAAA,SAAAl5C,GACA,OAAA1lD,EAAAqB,OAAAmhG,GAAAnhG,EAAAqkD,KAGA1lD,EAAA6vB,SAAA,SAAAvwB,GACA,OAAAtN,UAAAC,QACA0xG,EAAAF,GAAA5zE,EAAAvwB,GACAskG,EAAAH,GAAA,EAAA5zE,GACA5vB,EAAAoB,SAAAiC,IAAAqgG,IACA3jG,GAJA6vB,GAOA7vB,EAAA8B,KAAA,WACA,OAAA4hG,EAAAzjG,EAAA6B,OAAA+tB,EAAAxuB,IAGA,OAAAkhG,GAAAviG,EAAAC,GA7CAyjG,CAAA3jG,EAAAC,MAAAC,SAAA,UAsDAF,EAAAC,MAAA87B,KAAA,WACA,OAAA/7B,EAAAC,MAAAwwB,MAAAX,SAAA,KAGA9vB,EAAAC,MAAA6jG,QAAA,WACA,OAMA,SAAAC,EAAAziG,EAAA69F,GACA,IAAA17F,EAAAtD,EAAAuG,EAEA,SAAAzG,EAAAV,GACA,OAAAY,IAAAsD,EAAApN,IAAAkJ,KAAA,UAAA4/F,EAAA59E,EAAA9d,EAAAslB,IAAAxpB,EAAA+B,EAAAK,KAAApC,IAAAmc,MAAA,GAAAvb,EAAAjO,QAGA,SAAAilD,EAAA51C,EAAAi0C,GACA,OAAAx1C,EAAAG,MAAAmB,EAAApP,QAAAqR,IAAA,SAAAvR,GACA,OAAAuP,EAAAi0C,EAAAxjD,IAIAiO,EAAAqB,OAAA,SAAA/B,GACA,IAAAtN,UAAAC,OAAA,OAAAoP,EACAA,EAAA,GACAmC,EAAA,IAAA4jD,EAKA,IAJA,IAEA28C,EAFAhyG,GAAA,EACA8L,EAAAyB,EAAArN,SAGAF,EAAA8L,GACA2F,EAAA2+C,IAAA4hD,EAAAzkG,EAAAvN,KAAAyR,EAAAslB,IAAAi7E,EAAA1iG,EAAAK,KAAAqiG,IAGA,OAAA/jG,EAAAk/F,EAAA59E,GAAAjtB,MAAA2L,EAAAk/F,EAAAtuF,IAGA5Q,EAAAE,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAiO,EAAAZ,EACAmH,EAAA,EACAy4F,EAAA,CACA59E,EAAA,QACA1Q,EAAA5e,WAEAgO,GAPAE,GAUAF,EAAAgkG,YAAA,SAAA1kG,EAAA7I,GACAzE,UAAAC,OAAA,IAAAwE,EAAA,GACA,IAAA6K,EAAAhC,EAAA,GACAiC,EAAAjC,EAAA,GACAi2C,EAAAl0C,EAAApP,OAAA,GAAAqP,KAAAC,GAAA,MAAAA,EAAAD,IAAAD,EAAApP,OAAA,EAAAwE,GAOA,OANAyJ,EAAAg3C,EAAA51C,EAAAi0C,EAAA9+C,EAAA,EAAA8+C,GACA9uC,EAAA,EACAy4F,EAAA,CACA59E,EAAA,cACA1Q,EAAA5e,WAEAgO,GAGAA,EAAAikG,iBAAA,SAAA3kG,EAAA7I,GACAzE,UAAAC,OAAA,IAAAwE,EAAA,GACA,IAAA6K,EAAAhC,EAAA,GACAiC,EAAAjC,EAAA,GACAi2C,EAAAl0C,EAAApP,OAAA,GAAAqP,EAAAC,EAAA7D,KAAAsiC,OAAA1+B,EAAAC,GAAA,OAAAA,EAAAD,IAAAD,EAAApP,OAAA,EAAAwE,GAAA,EAOA,OANAyJ,EAAAg3C,EAAA51C,EAAA5D,KAAAsiC,MAAAuV,EAAA9+C,EAAA,GAAA8K,EAAAD,GAAAD,EAAApP,OAAA,EAAAwE,GAAA8+C,GAAA,GAAAA,GACA9uC,EAAA,EACAy4F,EAAA,CACA59E,EAAA,mBACA1Q,EAAA5e,WAEAgO,GAGAA,EAAAkkG,WAAA,SAAA5kG,EAAA7I,EAAA0tG,GACAnyG,UAAAC,OAAA,IAAAwE,EAAA,GACAzE,UAAAC,OAAA,IAAAkyG,EAAA1tG,GACA,IAAAy2C,EAAA5tC,EAAA,GAAAA,EAAA,GACAgC,EAAAhC,EAAA4tC,EAAA,GACA3rC,EAAAjC,EAAA,EAAA4tC,GACAqI,GAAAh0C,EAAAD,IAAAD,EAAApP,OAAAwE,EAAA,EAAA0tG,GAQA,OAPAjkG,EAAAg3C,EAAA51C,EAAAi0C,EAAA4uD,EAAA5uD,GACArI,GAAAhtC,EAAAgtC,UACAzmC,EAAA8uC,GAAA,EAAA9+C,GACAyoG,EAAA,CACA59E,EAAA,aACA1Q,EAAA5e,WAEAgO,GAGAA,EAAAokG,gBAAA,SAAA9kG,EAAA7I,EAAA0tG,GACAnyG,UAAAC,OAAA,IAAAwE,EAAA,GACAzE,UAAAC,OAAA,IAAAkyG,EAAA1tG,GACA,IAAAy2C,EAAA5tC,EAAA,GAAAA,EAAA,GACAgC,EAAAhC,EAAA4tC,EAAA,GACA3rC,EAAAjC,EAAA,EAAA4tC,GACAqI,EAAA73C,KAAA4nD,OAAA/jD,EAAAD,IAAAD,EAAApP,OAAAwE,EAAA,EAAA0tG,IAQA,OAPAjkG,EAAAg3C,EAAA51C,EAAA5D,KAAAsiC,OAAAz+B,EAAAD,GAAAD,EAAApP,OAAAwE,GAAA8+C,GAAA,GAAAA,GACArI,GAAAhtC,EAAAgtC,UACAzmC,EAAA/I,KAAAsiC,MAAAuV,GAAA,EAAA9+C,IACAyoG,EAAA,CACA59E,EAAA,kBACA1Q,EAAA5e,WAEAgO,GAGAA,EAAAyG,UAAA,WACA,OAAAA,GAGAzG,EAAAmC,YAAA,WACA,OAAAo8F,GAAAW,EAAAtuF,EAAA,KAGA5Q,EAAA8B,KAAA,WACA,OAAAgiG,EAAAziG,EAAA69F,IAGA,OAAAl/F,EAAAqB,UAvHAyiG,CAAA,IACAxiF,EAAA,QACA1Q,EAAA,QAwHA7Q,EAAAC,MAAA0iC,WAAA,WACA,OAAA3iC,EAAAC,MAAA6jG,UAAA3jG,MAAAmkG,KAGAtkG,EAAAC,MAAAskG,WAAA,WACA,OAAAvkG,EAAAC,MAAA6jG,UAAA3jG,MAAAqkG,KAGAxkG,EAAAC,MAAAwkG,YAAA,WACA,OAAAzkG,EAAAC,MAAA6jG,UAAA3jG,MAAAukG,KAGA1kG,EAAAC,MAAA0kG,YAAA,WACA,OAAA3kG,EAAAC,MAAA6jG,UAAA3jG,MAAAykG,KAGA,IAAAN,GAAA,sFAAA/gG,IAAAs2D,IACA2qC,GAAA,gLAAAjhG,IAAAs2D,IACA6qC,GAAA,8KAAAnhG,IAAAs2D,IACA+qC,GAAA,+KAAArhG,IAAAs2D,IAmKA,SAAAgrC,KACA,SAlKA7kG,EAAAC,MAAAolD,SAAA,WACA,OAGA,SAAAy/C,EAAAxjG,EAAAnB,GACA,IAAAo/F,EAEA,SAAAxpC,IACA,IAAA/rB,EAAA,EACAitB,EAAA92D,EAAAjO,OAGA,IAFAqtG,EAAA,KAEAv1D,EAAAitB,GACAsoC,EAAAv1D,EAAA,GAAAhqC,EAAAqlD,SAAA/jD,EAAA0oC,EAAAitB,GAGA,OAAAh3D,EAGA,SAAAA,EAAAV,GACA,IAAA0mB,MAAA1mB,MAAA,OAAAY,EAAAH,EAAAgmD,OAAAu5C,EAAAhgG,IAGAU,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAoP,EAAA/B,EAAAgE,IAAAmhD,GAAAvtC,OAAAwtC,GAAA/zC,KAAA6zC,GACAsR,KAFAz0D,GAKArB,EAAAE,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAiO,EAAAZ,EACAw2D,KAFA51D,GAKAF,EAAA8kG,UAAA,WACA,OAAAxF,GAGAt/F,EAAA+kG,aAAA,SAAAtlG,GAEA,OADAA,EAAAS,EAAAwM,QAAAjN,IACA,GAAAgc,SAAA,CAAAhc,EAAA,EAAA6/F,EAAA7/F,EAAA,GAAA4B,EAAA,GAAA5B,EAAA6/F,EAAArtG,OAAAqtG,EAAA7/F,GAAA4B,IAAApP,OAAA,KAGA+N,EAAA8B,KAAA,WACA,OAAA+iG,EAAAxjG,EAAAnB,IAGA,OAAA41D,IA/CA+uC,CAAA,QAkDA9kG,EAAAC,MAAAglG,SAAA,WACA,OAGA,SAAAC,EAAA3oD,EAAAtiC,EAAA9Z,GACA,IAAA6zF,EAAAhiG,EAEA,SAAAiO,EAAAV,GACA,OAAAY,EAAAxC,KAAA0G,IAAA,EAAA1G,KAAA8B,IAAAzN,EAAA2L,KAAA4nD,MAAAyuC,GAAAz0F,EAAAg9C,OAGA,SAAAwZ,IAGA,OAFAi+B,EAAA7zF,EAAAjO,QAAA+nB,EAAAsiC,GACAvqD,EAAAmO,EAAAjO,OAAA,EACA+N,EAGAA,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAqqD,GAAAh9C,EAAA,GACA0a,GAAA1a,IAAArN,OAAA,GACA6jE,KAHA,CAAAxZ,EAAAtiC,IAMAha,EAAAE,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAiO,EAAAZ,EACAw2D,KAFA51D,GAKAF,EAAA+kG,aAAA,SAAAtlG,GAGA,OADAA,GADAA,EAAAS,EAAAwM,QAAAjN,IACA,EAAAgc,IAAAhc,EAAAs0F,EAAAz3C,EACA78C,EAAA,EAAAs0F,IAGA/zF,EAAA8B,KAAA,WACA,OAAAmjG,EAAA3oD,EAAAtiC,EAAA9Z,IAGA,OAAA41D,IAvCAmvC,CAAA,YA0CAllG,EAAAC,MAAA4iC,UAAA,WACA,OAGA,SAAAsiE,EAAA7jG,EAAAnB,GACA,SAAAF,EAAAV,GACA,GAAAA,KAAA,OAAAY,EAAAH,EAAAgmD,OAAA1kD,EAAA/B,IAGAU,EAAAqB,OAAA,SAAAgmD,GACA,OAAAr1D,UAAAC,QACAoP,EAAAgmD,EACArnD,GAFAqB,GAKArB,EAAAE,MAAA,SAAAmnD,GACA,OAAAr1D,UAAAC,QACAiO,EAAAmnD,EACArnD,GAFAE,GAKAF,EAAA+kG,aAAA,SAAAtlG,GAEA,OADAA,EAAAS,EAAAwM,QAAAjN,GACA,CAAA4B,EAAA5B,EAAA,GAAA4B,EAAA5B,KAGAO,EAAA8B,KAAA,WACA,OAAAojG,EAAA7jG,EAAAnB,IAGA,OAAAF,EA7BAklG,CAAA,aAgCAnlG,EAAAC,MAAAmlG,SAAA,WACA,OAGA,SAAAC,EAAA/jG,GACA,SAAA8jG,EAAA7lG,GACA,OAAAA,EAGA6lG,EAAApvC,OAAAovC,EAEAA,EAAA9jG,OAAA8jG,EAAAjlG,MAAA,SAAAZ,GACA,OAAAtN,UAAAC,QACAoP,EAAA/B,EAAAgE,IAAA6hG,GACAA,GAFA9jG,GAKA8jG,EAAA1jG,MAAA,SAAAikD,GACA,OAAAi9C,GAAAthG,EAAAqkD,IAGAy/C,EAAA1kG,WAAA,SAAAilD,EAAA3+C,GACA,OAAA67F,GAAAvhG,EAAAqkD,EAAA3+C,IAGAo+F,EAAArjG,KAAA,WACA,OAAAsjG,EAAA/jG,IAGA,OAAA8jG,EA5BAC,CAAA,QA+BArlG,EAAA8O,IAAA,GAMA9O,EAAA8O,IAAApU,IAAA,WACA,IAAAm/B,EAAAyrE,GACArqE,EAAAsqE,GACAC,EAAAX,GACAY,EAAAC,GACAjrE,EAAAkrE,GACAjrE,EAAAkrE,GACA3K,EAAA4K,GAEA,SAAAnrG,IACA,IAAA+5D,EAAA92D,KAAA0G,IAAA,GAAAw1B,EAAAvlC,MAAAN,KAAA/B,YACA23B,EAAAjsB,KAAA0G,IAAA,GAAA42B,EAAA3mC,MAAAN,KAAA/B,YACAwtF,EAAAhlD,EAAAnmC,MAAAN,KAAA/B,WAAA6gE,GACAsoB,EAAA1gD,EAAApmC,MAAAN,KAAA/B,WAAA6gE,GACAooC,EAAAv9F,KAAAw+B,IAAAi/C,EAAAqE,GACAqmB,EAAArmB,EAAArE,EAAA,IAEA,GADAxxD,EAAA6qC,IAAAsxC,EAAAn8E,IAAA6qC,IAAAsxC,GACA7K,GAAAroC,GAAA,OAAAmzC,EAAAp8E,EAAAk8E,IAAArxC,EAAAuxC,EAAAvxC,EAAA,EAAAqxC,GAAA,QACA,IAAAC,EACA5kB,EACA8kB,EACAC,EAGA3pD,EACAtB,EACAhhC,EACAE,EACAD,EACApR,EACA+/E,EACAG,EATAn1B,EAAA,EACAnN,EAAA,EASA1nD,EAAA,GASA,IAPAknG,IAAAjL,EAAA3mG,MAAAN,KAAA/B,YAAA,QACAg0G,EAAAR,IAAAC,GAAA/nG,KAAAo+B,KAAA04B,IAAA7qC,MAAA67E,EAAAnxG,MAAAN,KAAA/B,WACA6zG,IAAAp/C,IAAA,GACA98B,IAAA88B,EAAA2M,GAAA4yC,EAAAr8E,EAAAjsB,KAAAuH,IAAAghG,KACAzxC,IAAAZ,EAAAR,GAAA4yC,EAAAxxC,EAAA92D,KAAAuH,IAAAghG,MAGAt8E,EAAA,CACA2yB,EAAA3yB,EAAAjsB,KAAAu+B,IAAAujD,EAAA/4B,GACAzL,EAAArxB,EAAAjsB,KAAAuH,IAAAu6E,EAAA/4B,GACAzsC,EAAA2P,EAAAjsB,KAAAu+B,IAAAk/C,EAAA10B,GACAvsC,EAAAyP,EAAAjsB,KAAAuH,IAAAk2E,EAAA10B,GACA,IAAAyQ,EAAAx5D,KAAAw+B,IAAAi/C,EAAAqE,EAAA,EAAA/4B,IAAAiM,GAAA,IAEA,GAAAjM,GAAAy/C,GAAA5pD,EAAAtB,EAAAhhC,EAAAE,KAAA2rF,EAAA3uC,EAAA,CACA,IAAAivC,GAAA3mB,EAAArE,GAAA,EACA7+B,EAAA3yB,EAAAjsB,KAAAu+B,IAAAkqE,GACAnrD,EAAArxB,EAAAjsB,KAAAuH,IAAAkhG,GACAnsF,EAAAE,EAAA,WAGAoiC,EAAAtB,EAAA,EAGA,GAAAwZ,EAAA,CACAv6C,EAAAu6C,EAAA92D,KAAAu+B,IAAAk/C,EAAAvnB,GACA/qD,EAAA2rD,EAAA92D,KAAAuH,IAAAk2E,EAAAvnB,GACAg1B,EAAAp0B,EAAA92D,KAAAu+B,IAAAujD,EAAA5rB,GACAm1B,EAAAv0B,EAAA92D,KAAAuH,IAAAu6E,EAAA5rB,GACA,IAAAqD,EAAAv5D,KAAAw+B,IAAAsjD,EAAArE,EAAA,EAAAvnB,IAAAlB,GAAA,IAEA,GAAAkB,GAAAsyC,GAAAjsF,EAAApR,EAAA+/E,EAAAG,KAAA,EAAA8c,EAAA5uC,EAAA,CACA,IAAAmvC,GAAA5mB,EAAArE,GAAA,EACAlhE,EAAAu6C,EAAA92D,KAAAu+B,IAAAmqE,GACAv9F,EAAA2rD,EAAA92D,KAAAuH,IAAAmhG,GACAxd,EAAAG,EAAA,WAGA9uE,EAAApR,EAAA,EAGA,GAAAoyF,EAAAzoC,KAAAszC,EAAApoG,KAAA8B,IAAA9B,KAAAw+B,IAAAvS,EAAA6qC,GAAA,GAAA+wC,EAAAlxG,MAAAN,KAAA/B,aAAA,MACAkvF,EAAA1sB,EAAA7qC,EAAAk8E,EAAA,IACA,IAAAQ,EAAAP,EACAQ,EAAAR,EAEA,GAAA7K,EAAAvoC,GAAA,CACA,IAAA6zC,EAAA,MAAA3d,EAAA,CAAA3uE,EAAApR,GAAA,MAAAmR,EAAA,CAAAsiC,EAAAtB,GAAA2tC,GAAA,CAAArsC,EAAAtB,GAAA,CAAA4tC,EAAAG,GAAA,CAAA/uE,EAAAE,GAAA,CAAAD,EAAApR,IACAsxE,EAAA79B,EAAAiqD,EAAA,GACAnsB,EAAAp/B,EAAAurD,EAAA,GACAhb,EAAAvxE,EAAAusF,EAAA,GACA/a,EAAAtxE,EAAAqsF,EAAA,GACAC,EAAA,EAAA9oG,KAAAuH,IAAAvH,KAAAy1D,MAAAgnB,EAAAoR,EAAAnR,EAAAoR,IAAA9tF,KAAAo+B,KAAAq+C,IAAAC,KAAA18E,KAAAo+B,KAAAyvD,IAAAC,OAAA,GACAib,EAAA/oG,KAAAo+B,KAAAyqE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAD,EAAA5oG,KAAA8B,IAAAsmG,GAAAtxC,EAAAiyC,IAAAD,EAAA,IACAH,EAAA3oG,KAAA8B,IAAAsmG,GAAAn8E,EAAA88E,IAAAD,EAAA,IAGA,SAAAxsF,EAAA,CACA,IAAA0sF,EAAAC,GAAA,MAAA/d,EAAA,CAAA3uE,EAAApR,GAAA,CAAA+/E,EAAAG,GAAA,CAAAzsC,EAAAtB,GAAArxB,EAAA08E,EAAAR,GACAe,EAAAD,GAAA,CAAA3sF,EAAAE,GAAA,CAAAD,EAAApR,GAAA8gB,EAAA08E,EAAAR,GAEAC,IAAAO,EACAtnG,EAAA2C,KAAA,IAAAglG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAnlB,EAAA,IAAAwlB,EAAA,OAAA/8E,EAAA,IAAAA,EAAA,QAAAk8E,EAAAK,GAAAQ,EAAA,MAAAA,EAAA,MAAAE,EAAA,MAAAA,EAAA,WAAAf,EAAA,IAAAe,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAnlB,EAAA,IAAA0lB,EAAA,IAEA7nG,EAAA2C,KAAA,IAAAglG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAnlB,EAAA,IAAA0lB,EAAA,SAGA7nG,EAAA2C,KAAA,IAAA46C,EAAA,IAAAtB,GAGA,SAAA4tC,EAAA,CACA,IAAAie,EAAAF,GAAA,CAAArqD,EAAAtB,GAAA,CAAA4tC,EAAAG,GAAAv0B,GAAA8xC,EAAAT,GACAiB,EAAAH,GAAA,CAAA1sF,EAAApR,GAAA,MAAAmR,EAAA,CAAAsiC,EAAAtB,GAAA,CAAAhhC,EAAAE,GAAAs6C,GAAA8xC,EAAAT,GAEAC,IAAAQ,EACAvnG,EAAA2C,KAAA,IAAAolG,EAAA,OAAAR,EAAA,IAAAA,EAAA,QAAAplB,EAAA,IAAA4lB,EAAA,OAAAtyC,EAAA,IAAAA,EAAA,MAAAqxC,EAAAK,GAAAY,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAAhB,EAAA,IAAAgB,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAplB,EAAA,IAAA2lB,EAAA,IAEA9nG,EAAA2C,KAAA,IAAAolG,EAAA,OAAAR,EAAA,IAAAA,EAAA,QAAAplB,EAAA,IAAA2lB,EAAA,SAGA9nG,EAAA2C,KAAA,IAAAuY,EAAA,IAAApR,QAGA9J,EAAA2C,KAAA,IAAA46C,EAAA,IAAAtB,GACA,MAAAhhC,GAAAjb,EAAA2C,KAAA,IAAAioB,EAAA,IAAAA,EAAA,MAAAutC,EAAA,IAAA2uC,EAAA,IAAA7rF,EAAA,IAAAE,GACAnb,EAAA2C,KAAA,IAAAuY,EAAA,IAAApR,GACA,MAAA+/E,GAAA7pF,EAAA2C,KAAA,IAAA8yD,EAAA,IAAAA,EAAA,MAAAyC,EAAA,MAAA4uC,EAAA,IAAAjd,EAAA,IAAAG,GAIA,OADAhqF,EAAA2C,KAAA,KACA3C,EAAA0mE,KAAA,IAGA,SAAAsgC,EAAAp8E,EAAAk8E,GACA,YAAAl8E,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAk8E,EAAA,OAAAl8E,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAk8E,EAAA,MAAAl8E,EAmDA,OAhDAlvB,EAAAm/B,YAAA,SAAA38B,GACA,OAAAjL,UAAAC,QACA2nC,EAAA6pC,GAAAxmE,GACAxC,GAFAm/B,GAKAn/B,EAAAugC,YAAA,SAAA/9B,GACA,OAAAjL,UAAAC,QACA+oC,EAAAyoC,GAAAxmE,GACAxC,GAFAugC,GAKAvgC,EAAA8qG,aAAA,SAAAtoG,GACA,OAAAjL,UAAAC,QACAszG,EAAA9hC,GAAAxmE,GACAxC,GAFA8qG,GAKA9qG,EAAA+qG,UAAA,SAAAvoG,GACA,OAAAjL,UAAAC,QACAuzG,EAAAvoG,GAAAwoG,MAAAhiC,GAAAxmE,GACAxC,GAFA+qG,GAKA/qG,EAAA+/B,WAAA,SAAAv9B,GACA,OAAAjL,UAAAC,QACAuoC,EAAAipC,GAAAxmE,GACAxC,GAFA+/B,GAKA//B,EAAAggC,SAAA,SAAAx9B,GACA,OAAAjL,UAAAC,QACAwoC,EAAAgpC,GAAAxmE,GACAxC,GAFAggC,GAKAhgC,EAAAugG,SAAA,SAAA/9F,GACA,OAAAjL,UAAAC,QACA+oG,EAAAv3B,GAAAxmE,GACAxC,GAFAugG,GAKAvgG,EAAA2gC,SAAA,WACA,IAAAie,IAAAzf,EAAAvlC,MAAAN,KAAA/B,aAAAgpC,EAAA3mC,MAAAN,KAAA/B,YAAA,EACA4e,IAAA4pB,EAAAnmC,MAAAN,KAAA/B,aAAAyoC,EAAApmC,MAAAN,KAAA/B,YAAA,EAAA6gE,GACA,OAAAn1D,KAAAu+B,IAAArrB,GAAAyoC,EAAA37C,KAAAuH,IAAA2L,GAAAyoC,IAGA5+C,GAGA,IAAAgrG,GAAA,OAEA,SAAAJ,GAAAtnG,GACA,OAAAA,EAAA67B,YAGA,SAAA0rE,GAAAvnG,GACA,OAAAA,EAAAi9B,YAGA,SAAA0qE,GAAA3nG,GACA,OAAAA,EAAAy8B,WAGA,SAAAmrE,GAAA5nG,GACA,OAAAA,EAAA08B,SAGA,SAAAmrE,GAAA7nG,GACA,OAAAA,KAAAi9F,SAGA,SAAAkL,GAAA5pD,EAAAtB,EAAAhhC,EAAAE,GACA,OAAAoiC,EAAAtiC,GAAAghC,KAAA9gC,GAAAoiC,EAAA,MAGA,SAAAqqD,GAAA/yC,EAAAnN,EAAA98B,EAAAm8E,EAAAD,GACA,IAAAkB,EAAAnzC,EAAA,GAAAnN,EAAA,GACAugD,EAAApzC,EAAA,GAAAnN,EAAA,GACA5B,GAAAghD,EAAAC,MAAApoG,KAAAo+B,KAAAirE,IAAAC,KACAC,EAAApiD,EAAAmiD,EACAE,GAAAriD,EAAAkiD,EACA/sF,EAAA45C,EAAA,GAAAqzC,EACA/sF,EAAA05C,EAAA,GAAAszC,EACAjtF,EAAAwsC,EAAA,GAAAwgD,EACAp+F,EAAA49C,EAAA,GAAAygD,EACAte,GAAA5uE,EAAAC,GAAA,EACA8uE,GAAA7uE,EAAArR,GAAA,EACAnC,EAAAuT,EAAAD,EACA5U,EAAAyD,EAAAqR,EACAk6C,EAAA1tD,IAAAtB,IACAi0C,EAAA1vB,EAAAm8E,EACAqB,EAAAntF,EAAAnR,EAAAoR,EAAAC,EACAnc,GAAAqH,EAAA,QAAA1H,KAAAo+B,KAAAp+B,KAAA0G,IAAA,EAAAi1C,IAAA+a,EAAA+yC,MACAC,GAAAD,EAAA/hG,EAAAsB,EAAA3I,GAAAq2D,EACAgxB,IAAA+hB,EAAAzgG,EAAAtB,EAAArH,GAAAq2D,EACAizC,GAAAF,EAAA/hG,EAAAsB,EAAA3I,GAAAq2D,EACAkxB,IAAA6hB,EAAAzgG,EAAAtB,EAAArH,GAAAq2D,EACAkzC,EAAAF,EAAAxe,EACA2e,EAAAniB,EAAA2D,EACAye,EAAAH,EAAAze,EACA6e,EAAAniB,EAAAyD,EAEA,OADAue,IAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAAjiB,EAAAE,GACA,EAAA8hB,EAAAH,EAAA7hB,EAAA8hB,GAAA,CAAAE,EAAAz9E,EAAA0vB,EAAA+rC,EAAAz7D,EAAA0vB,IAGA,SAAAquD,GAAA5mB,GACA,IAAAxhF,EAAAkoF,GACA/nF,EAAAgoF,GACAprC,EAAA46B,GACAn3C,EAAA6nE,GACAC,EAAA9nE,EAAA3tC,IACA01G,EAAA,GAEA,SAAAhwG,EAAApC,GACA,IAIAsI,EAJAo5E,EAAA,GACAtmD,EAAA,GACA9+B,GAAA,EACA8L,EAAApI,EAAAxD,OAEAi2F,EAAAzkB,GAAAnkE,GACA6oF,EAAA1kB,GAAAhkE,GAEA,SAAA63E,IACAH,EAAAz1E,KAAA,IAAAo+B,EAAAghD,EAAAjwD,GAAAg3E,IAGA,OAAA91G,EAAA8L,GACAw+C,EAAA/pD,KAAAyB,KAAAgK,EAAAtI,EAAA1D,MACA8+B,EAAAnvB,KAAA,EAAAwmF,EAAA51F,KAAAyB,KAAAgK,EAAAhM,IAAAo2F,EAAA71F,KAAAyB,KAAAgK,EAAAhM,KACS8+B,EAAA5+B,SACTqlF,IACAzmD,EAAA,IAKA,OADAA,EAAA5+B,QAAAqlF,IACAH,EAAAllF,OAAAklF,EAAA1R,KAAA,SAiCA,OA9BA5tE,EAAAyH,EAAA,SAAA+nD,GACA,OAAAr1D,UAAAC,QACAqN,EAAA+nD,EACAxvD,GAFAyH,GAKAzH,EAAA4H,EAAA,SAAA4nD,GACA,OAAAr1D,UAAAC,QACAwN,EAAA4nD,EACAxvD,GAFA4H,GAKA5H,EAAAwkD,QAAA,SAAAgL,GACA,OAAAr1D,UAAAC,QACAoqD,EAAAgL,EACAxvD,GAFAwkD,GAKAxkD,EAAAioC,YAAA,SAAAunB,GACA,OAAAr1D,UAAAC,QACA21G,EAAA,oBAAAvgD,EAAAvnB,EAAAunB,GAAoEvnB,EAAAgoE,GAAA1xG,IAAAixD,IAAAsgD,IAAAx1G,IACpE0F,GAFA+vG,GAKA/vG,EAAAgwG,QAAA,SAAAxgD,GACA,OAAAr1D,UAAAC,QACA41G,EAAAxgD,EACAxvD,GAFAgwG,GAKAhwG,EAGAkI,EAAA8O,IAAAhX,KAAA,WACA,OAAA6vG,GAAAz/C,IAGA,IAAA6/C,GAAA/nG,EAAAuD,IAAA,CACArD,OAAA0nG,GACAI,gBAAAC,GACAzyD,KAyBA,SAAA1kB,GACA,IAAA9+B,EAAA,EACA8L,EAAAgzB,EAAA5+B,OACA8d,EAAA8gB,EAAA,GACA9xB,EAAA,CAAAgR,EAAA,OAAAA,EAAA,IAEA,OAAAhe,EAAA8L,GACAkB,EAAA2C,KAAA,KAAAqO,EAAA,IAAAA,EAAA8gB,EAAA9+B,IAAA,UAAAge,EAAA,IAGAlS,EAAA,GAAAkB,EAAA2C,KAAA,IAAAqO,EAAA,IACA,OAAAhR,EAAA0mE,KAAA,KAnCAwiC,cAAAC,GACAC,aAAAC,GACAC,MAAAC,GACAC,aA8JA,SAAA13E,GACA,GAAAA,EAAA5+B,OAAA,SAAA01G,GAAA92E,GACA,IAGA23E,EAHAzpG,EAAA,GACAhN,GAAA,EACA8L,EAAAgzB,EAAA5+B,OAEAmlG,EAAA,IACAC,EAAA,IAEA,OAAAtlG,EAAA,GACAy2G,EAAA33E,EAAA9+B,GACAqlG,EAAA11F,KAAA8mG,EAAA,IACAnR,EAAA31F,KAAA8mG,EAAA,IAGAzpG,EAAA2C,KAAA+mG,GAAAC,GAAAtR,GAAA,IAAAqR,GAAAC,GAAArR,MACAtlG,EAEA,OAAAA,EAAA8L,GACA2qG,EAAA33E,EAAA9+B,GACAqlG,EAAAhvD,QACAgvD,EAAA11F,KAAA8mG,EAAA,IACAnR,EAAAjvD,QACAivD,EAAA31F,KAAA8mG,EAAA,IACAG,GAAA5pG,EAAAq4F,EAAAC,GAGA,OAAAt4F,EAAA0mE,KAAA,KAxLAmjC,eA2LA,SAAA/3E,GACA,IAAA9xB,EAIAypG,EAHAz2G,GAAA,EACA8L,EAAAgzB,EAAA5+B,OACAyzD,EAAA7nD,EAAA,EAEAu5F,EAAA,GACAC,EAAA,GAEA,OAAAtlG,EAAA,GACAy2G,EAAA33E,EAAA9+B,EAAA8L,GACAu5F,EAAA11F,KAAA8mG,EAAA,IACAnR,EAAA31F,KAAA8mG,EAAA,IAGAzpG,EAAA,CAAA0pG,GAAAC,GAAAtR,GAAA,IAAAqR,GAAAC,GAAArR,MACAtlG,EAEA,OAAAA,EAAA2zD,GACA8iD,EAAA33E,EAAA9+B,EAAA8L,GACAu5F,EAAAhvD,QACAgvD,EAAA11F,KAAA8mG,EAAA,IACAnR,EAAAjvD,QACAivD,EAAA31F,KAAA8mG,EAAA,IACAG,GAAA5pG,EAAAq4F,EAAAC,GAGA,OAAAt4F,EAAA0mE,KAAA,KArNA+xB,OAwNA,SAAA3mE,EAAAg3E,GACA,IAAAhqG,EAAAgzB,EAAA5+B,OAAA,EAEA,GAAA4L,EASA,IARA,IAKAkS,EACAuR,EANAg7B,EAAAzrB,EAAA,MACAmqB,EAAAnqB,EAAA,MACAnqB,EAAAmqB,EAAAhzB,GAAA,GAAAy+C,EACAl3C,EAAAyrB,EAAAhzB,GAAA,GAAAm9C,EACAjpD,GAAA,IAIAA,GAAA8L,GACAkS,EAAA8gB,EAAA9+B,GACAuvB,EAAAvvB,EAAA8L,EACAkS,EAAA,GAAA83F,EAAA93F,EAAA,MAAA83F,IAAAvrD,EAAAh7B,EAAA5a,GACAqJ,EAAA,GAAA83F,EAAA93F,EAAA,MAAA83F,IAAA7sD,EAAA15B,EAAAlc,GAIA,OAAAkjG,GAAAz3E,IA3OAg4E,SAkEA,SAAAh4E,EAAAg3E,GACA,OAAAh3E,EAAA5+B,OAAA,EAAA01G,GAAA92E,KAAA,GAAAi4E,GAAAj4E,EAAAk4E,GAAAl4E,EAAAg3E,KAlEAmB,gBAyDA,SAAAn4E,EAAAg3E,GACA,OAAAh3E,EAAA5+B,OAAA,EAAA01G,GAAA92E,KAAA,GAAAi4E,GAAAj4E,EAAA1sB,MAAA,MAAA4kG,GAAAl4E,EAAAg3E,KAzDAoB,kBA4DA,SAAAp4E,EAAAg3E,GACA,OAAAh3E,EAAA5+B,OAAA,EAAA+1G,GAAAn3E,KAAA,GAAAi4E,IAAAj4E,EAAAnvB,KAAAmvB,EAAA,IAAAA,GAAAk4E,GAAA,CAAAl4E,IAAA5+B,OAAA,IAAAkR,OAAA0tB,EAAA,CAAAA,EAAA,KAAAg3E,KA5DAqB,SAiTA,SAAAr4E,GACA,OAAAA,EAAA5+B,OAAA,EAAA01G,GAAA92E,KAAA,GAAAi4E,GAAAj4E,EAvCA,SAAAA,GACA,IACA9yB,EACA6S,EACAC,EACAtN,EAJA4lG,EAAA,GAKAzjD,EAtBA,SAAA70B,GACA,IAAA9+B,EAAA,EACAwhC,EAAA1C,EAAA5+B,OAAA,EACAyzD,EAAA,GACAkO,EAAA/iC,EAAA,GACA41B,EAAA51B,EAAA,GACA9yB,EAAA2nD,EAAA,GAAA0jD,GAAAx1C,EAAAnN,GAEA,OAAA10D,EAAAwhC,GACAmyB,EAAA3zD,IAAAgM,KAAAqrG,GAAAx1C,EAAAnN,IAAA51B,EAAA9+B,EAAA,QAIA,OADA2zD,EAAA3zD,GAAAgM,EACA2nD,EASA2jD,CAAAx4E,GACA9+B,GAAA,EACAwhC,EAAA1C,EAAA5+B,OAAA,EAEA,OAAAF,EAAAwhC,GACAx1B,EAAAqrG,GAAAv4E,EAAA9+B,GAAA8+B,EAAA9+B,EAAA,IAEAmqC,EAAAn+B,GAAAy0D,GACA9M,EAAA3zD,GAAA2zD,EAAA3zD,EAAA,MAEA6e,EAAA80C,EAAA3zD,GAAAgM,EACA8S,EAAA60C,EAAA3zD,EAAA,GAAAgM,GACAwF,EAAAqN,IAAAC,KAEA,IACAtN,EAAA,EAAAxF,EAAAL,KAAAo+B,KAAAv4B,GACAmiD,EAAA3zD,GAAAwR,EAAAqN,EACA80C,EAAA3zD,EAAA,GAAAwR,EAAAsN,IAKA9e,GAAA,EAEA,OAAAA,GAAAwhC,GACAhwB,GAAAstB,EAAAnzB,KAAA8B,IAAA+zB,EAAAxhC,EAAA,OAAA8+B,EAAAnzB,KAAA0G,IAAA,EAAArS,EAAA,cAAA2zD,EAAA3zD,GAAA2zD,EAAA3zD,KACAo3G,EAAAznG,KAAA,CAAA6B,GAAA,EAAAmiD,EAAA3zD,GAAAwR,GAAA,IAGA,OAAA4lG,EAIAG,CAAAz4E,OA3SA,SAAA82E,GAAA92E,GACA,OAAAA,EAAA5+B,OAAA,EAAA4+B,EAAA40C,KAAA,KAAA50C,EAAA,IAGA,SAAAm3E,GAAAn3E,GACA,OAAAA,EAAA40C,KAAA,SAiBA,SAAAyiC,GAAAr3E,GAMA,IALA,IAAA9+B,EAAA,EACA8L,EAAAgzB,EAAA5+B,OACA8d,EAAA8gB,EAAA,GACA9xB,EAAA,CAAAgR,EAAA,OAAAA,EAAA,MAEAhe,EAAA8L,GACAkB,EAAA2C,KAAA,KAAAqO,EAAA8gB,EAAA9+B,IAAA,OAAAge,EAAA,IAGA,OAAAhR,EAAA0mE,KAAA,IAGA,SAAA2iC,GAAAv3E,GAMA,IALA,IAAA9+B,EAAA,EACA8L,EAAAgzB,EAAA5+B,OACA8d,EAAA8gB,EAAA,GACA9xB,EAAA,CAAAgR,EAAA,OAAAA,EAAA,MAEAhe,EAAA8L,GACAkB,EAAA2C,KAAA,KAAAqO,EAAA8gB,EAAA9+B,IAAA,OAAAge,EAAA,IAGA,OAAAhR,EAAA0mE,KAAA,IAeA,SAAAqjC,GAAAj4E,EAAAs4E,GACA,GAAAA,EAAAl3G,OAAA,GAAA4+B,EAAA5+B,QAAAk3G,EAAAl3G,QAAA4+B,EAAA5+B,QAAAk3G,EAAAl3G,OAAA,EACA,OAAA01G,GAAA92E,GAGA,IAAA4hE,EAAA5hE,EAAA5+B,QAAAk3G,EAAAl3G,OACA8M,EAAA,GACA60D,EAAA/iC,EAAA,GACA9gB,EAAA8gB,EAAA,GACAm2C,EAAAmiC,EAAA,GACA7nF,EAAA0lD,EACAwhC,EAAA,EAQA,GANA/V,IACA1zF,GAAA,KAAAgR,EAAA,KAAAi3D,EAAA,WAAAj3D,EAAA,KAAAi3D,EAAA,UAAAj3D,EAAA,OAAAA,EAAA,GACA6jD,EAAA/iC,EAAA,GACA23E,EAAA,GAGAW,EAAAl3G,OAAA,GACAqvB,EAAA6nF,EAAA,GACAp5F,EAAA8gB,EAAA23E,GACAA,IACAzpG,GAAA,KAAA60D,EAAA,GAAAoT,EAAA,SAAApT,EAAA,GAAAoT,EAAA,SAAAj3D,EAAA,GAAAuR,EAAA,SAAAvR,EAAA,GAAAuR,EAAA,QAAAvR,EAAA,OAAAA,EAAA,GAEA,QAAAhe,EAAA,EAAqBA,EAAAo3G,EAAAl3G,OAAqBF,IAAAy2G,IAC1Cz4F,EAAA8gB,EAAA23E,GACAlnF,EAAA6nF,EAAAp3G,GACAgN,GAAA,KAAAgR,EAAA,GAAAuR,EAAA,SAAAvR,EAAA,GAAAuR,EAAA,QAAAvR,EAAA,OAAAA,EAAA,GAIA,GAAA0iF,EAAA,CACA,IAAA8W,EAAA14E,EAAA23E,GACAzpG,GAAA,KAAAgR,EAAA,KAAAuR,EAAA,WAAAvR,EAAA,KAAAuR,EAAA,UAAAioF,EAAA,OAAAA,EAAA,GAGA,OAAAxqG,EAGA,SAAAgqG,GAAAl4E,EAAAg3E,GASA,IARA,IAEAj0C,EAFAu1C,EAAA,GACAv4F,GAAA,EAAAi3F,GAAA,EAEAphD,EAAA51B,EAAA,GACA24E,EAAA34E,EAAA,GACA9+B,EAAA,EACA8L,EAAAgzB,EAAA5+B,SAEAF,EAAA8L,GACA+1D,EAAAnN,EACAA,EAAA+iD,EACAA,EAAA34E,EAAA9+B,GACAo3G,EAAAznG,KAAA,CAAAkP,GAAA44F,EAAA,GAAA51C,EAAA,IAAAhjD,GAAA44F,EAAA,GAAA51C,EAAA,MAGA,OAAAu1C,EAGA,SAAAb,GAAAz3E,GACA,GAAAA,EAAA5+B,OAAA,SAAA01G,GAAA92E,GACA,IAAA9+B,EAAA,EACA8L,EAAAgzB,EAAA5+B,OACAu2G,EAAA33E,EAAA,GACAyrB,EAAAksD,EAAA,GACAxtD,EAAAwtD,EAAA,GACApR,EAAA,CAAA96C,OAAAksD,EAAA33E,EAAA,QACAwmE,EAAA,CAAAr8C,MAAAwtD,EAAA,IACAzpG,EAAA,CAAAu9C,EAAA,IAAAtB,EAAA,IAAAytD,GAAAC,GAAAtR,GAAA,IAAAqR,GAAAC,GAAArR,IAGA,IAFAxmE,EAAAnvB,KAAAmvB,EAAAhzB,EAAA,MAEA9L,GAAA8L,GACA2qG,EAAA33E,EAAA9+B,GACAqlG,EAAAhvD,QACAgvD,EAAA11F,KAAA8mG,EAAA,IACAnR,EAAAjvD,QACAivD,EAAA31F,KAAA8mG,EAAA,IACAG,GAAA5pG,EAAAq4F,EAAAC,GAKA,OAFAxmE,EAAAwoD,MACAt6E,EAAA2C,KAAA,IAAA8mG,GACAzpG,EAAA0mE,KAAA,IAsFA,SAAAgjC,GAAA73F,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GA1OAi3F,GAAAppG,QAAA,SAAAvM,EAAAR,GACAA,EAAAQ,MACAR,EAAAygF,OAAA,WAAAvlB,KAAA16D,KA2OA,IAAAs3G,GAAA,cACAC,GAAA,cACAhB,GAAA,gBAEA,SAAAC,GAAA5pG,EAAAO,EAAAG,GACAV,EAAA2C,KAAA,IAAA+mG,GAAAgB,GAAAnqG,GAAA,IAAAmpG,GAAAgB,GAAAhqG,GAAA,IAAAgpG,GAAAiB,GAAApqG,GAAA,IAAAmpG,GAAAiB,GAAAjqG,GAAA,IAAAgpG,GAAAC,GAAAppG,GAAA,IAAAmpG,GAAAC,GAAAjpG,IAGA,SAAA2pG,GAAAx1C,EAAAnN,GACA,OAAAA,EAAA,GAAAmN,EAAA,KAAAnN,EAAA,GAAAmN,EAAA,IAoEA,SAAA+1C,GAAA94E,GAOA,IANA,IAAAj5B,EAGAyhD,EACAzoC,EAHA7e,GAAA,EACA8L,EAAAgzB,EAAA5+B,SAIAF,EAAA8L,GAEAw7C,GADAzhD,EAAAi5B,EAAA9+B,IACA,GACA6e,EAAAhZ,EAAA,GAAAi7D,GACAj7D,EAAA,GAAAyhD,EAAA37C,KAAAu+B,IAAArrB,GACAhZ,EAAA,GAAAyhD,EAAA37C,KAAAuH,IAAA2L,GAGA,OAAAigB,EAGA,SAAA+4E,GAAA9oB,GACA,IAAAxkC,EAAAkrC,GACAxtE,EAAAwtE,GACAxsC,EAAA,EACA9gC,EAAAutE,GACAprC,EAAA46B,GACAn3C,EAAA6nE,GACAC,EAAA9nE,EAAA3tC,IACA03G,EAAA/pE,EACA6sC,EAAA,IACAk7B,EAAA,GAEA,SAAA/vG,EAAArC,GACA,IAKAsI,EASAuB,EACAG,EAfA03E,EAAA,GACA2yB,EAAA,GACAC,EAAA,GACAh4G,GAAA,EACA8L,EAAApI,EAAAxD,OAEA+3G,EAAAvmC,GAAAnnB,GACA2tD,EAAAxmC,GAAAzoB,GACAkvD,EAAA5tD,IAAAtiC,EAAA,WACA,OAAA1a,GACOmkE,GAAAzpD,GACPmwF,EAAAnvD,IAAA9gC,EAAA,WACA,OAAAza,GACOgkE,GAAAvpD,GAIP,SAAAo9D,IACAH,EAAAz1E,KAAA,IAAAo+B,EAAAghD,EAAAipB,GAAAlC,GAAAl7B,EAAAk9B,EAAA/oB,EAAAgpB,EAAA58D,WAAA26D,GAAA,KAGA,OAAA91G,EAAA8L,GACAw+C,EAAA/pD,KAAAyB,KAAAgK,EAAAtI,EAAA1D,OACA+3G,EAAApoG,KAAA,CAAApC,GAAA0qG,EAAA13G,KAAAyB,KAAAgK,EAAAhM,GAAA0N,GAAAwqG,EAAA33G,KAAAyB,KAAAgK,EAAAhM,KACAg4G,EAAAroG,KAAA,EAAAwoG,EAAA53G,KAAAyB,KAAAgK,EAAAhM,IAAAo4G,EAAA73G,KAAAyB,KAAAgK,EAAAhM,MACS+3G,EAAA73G,SACTqlF,IACAwyB,EAAA,GACAC,EAAA,IAKA,OADAD,EAAA73G,QAAAqlF,IACAH,EAAAllF,OAAAklF,EAAA1R,KAAA,SA2DA,OAxDA3tE,EAAAwH,EAAA,SAAA+nD,GACA,OAAAr1D,UAAAC,QACAqqD,EAAAtiC,EAAAqtC,EACAvvD,GAFAkiB,GAKAliB,EAAAwkD,GAAA,SAAA+K,GACA,OAAAr1D,UAAAC,QACAqqD,EAAA+K,EACAvvD,GAFAwkD,GAKAxkD,EAAAkiB,GAAA,SAAAqtC,GACA,OAAAr1D,UAAAC,QACA+nB,EAAAqtC,EACAvvD,GAFAkiB,GAKAliB,EAAA2H,EAAA,SAAA4nD,GACA,OAAAr1D,UAAAC,QACA+oD,EAAA9gC,EAAAmtC,EACAvvD,GAFAoiB,GAKApiB,EAAAkjD,GAAA,SAAAqM,GACA,OAAAr1D,UAAAC,QACA+oD,EAAAqM,EACAvvD,GAFAkjD,GAKAljD,EAAAoiB,GAAA,SAAAmtC,GACA,OAAAr1D,UAAAC,QACAioB,EAAAmtC,EACAvvD,GAFAoiB,GAKApiB,EAAAukD,QAAA,SAAAgL,GACA,OAAAr1D,UAAAC,QACAoqD,EAAAgL,EACAvvD,GAFAukD,GAKAvkD,EAAAgoC,YAAA,SAAAunB,GACA,OAAAr1D,UAAAC,QACA21G,EAAA,oBAAAvgD,EAAAvnB,EAAAunB,GAAoEvnB,EAAAgoE,GAAA1xG,IAAAixD,IAAAsgD,IAAAx1G,IACpE03G,EAAA/pE,EAAAoN,SAAApN,EACA6sC,EAAA7sC,EAAAsyC,OAAA,QACAt6E,GAJA8vG,GAOA9vG,EAAA+vG,QAAA,SAAAxgD,GACA,OAAAr1D,UAAAC,QACA41G,EAAAxgD,EACAvvD,GAFA+vG,GAKA/vG,EA6FA,SAAAsyG,GAAArsG,GACA,OAAAA,EAAA27B,OA4CA,SAAA2wE,GAAAtsG,GACA,OAAAA,EAAAuB,EAAAvB,EAAA0B,GA+CA,SAAA6qG,KACA,UAGA,SAAAC,KACA,eAGA,SAAAC,GAAAh0G,GACA,IAAA6iD,EAAA37C,KAAAo+B,KAAAtlC,EAAAk8D,IACA,YAAArZ,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IAtUAt5C,EAAA8O,IAAAhX,KAAA4yG,OAAA,WACA,IAAA5yG,EAAA6vG,GAAAiC,IAGA,OAFA9xG,EAAA6hC,OAAA7hC,EAAAyH,SAAAzH,EAAAyH,EACAzH,EAAAgyB,MAAAhyB,EAAA4H,SAAA5H,EAAA4H,EACA5H,GAiIAqwG,GAAAh7D,QAAAk7D,GACAA,GAAAl7D,QAAAg7D,GAEAnoG,EAAA8O,IAAA/W,KAAA,WACA,OAAA8xG,GAAA3hD,IAGAloD,EAAA8O,IAAA/W,KAAA2yG,OAAA,WACA,IAAA3yG,EAAA8xG,GAAAD,IAOA,OANA7xG,EAAA4hC,OAAA5hC,EAAAwH,SAAAxH,EAAAwH,EACAxH,EAAA8hC,YAAA9hC,EAAAwkD,UAAAxkD,EAAAwkD,GACAxkD,EAAAkjC,YAAAljC,EAAAkiB,UAAAliB,EAAAkiB,GACAliB,EAAA+xB,MAAA/xB,EAAA2H,SAAA3H,EAAA2H,EACA3H,EAAA0iC,WAAA1iC,EAAAkjD,UAAAljD,EAAAkjD,GACAljD,EAAA2iC,SAAA3iC,EAAAoiB,UAAApiB,EAAAoiB,GACApiB,GAGAiI,EAAA8O,IAAA6oF,MAAA,WACA,IAAAxlG,EAAAqxF,GACAzxF,EAAA0xF,GACA9pD,EAAA0wE,GACA5vE,EAAAkrE,GACAjrE,EAAAkrE,GAEA,SAAAjO,EAAA35F,EAAAhM,GACA,IAmBA6e,EAAAC,EAnBAtN,EAAA6nD,EAAAr3D,KAAA7B,EAAA6L,EAAAhM,GACAuvB,EAAA8pC,EAAAr3D,KAAAjC,EAAAiM,EAAAhM,GACA,UAAAwR,EAAAqwD,GAAAn5D,EAAA8I,EAAA81C,EAAA91C,EAAAkjD,GAAAljD,EAAA43E,GAAA53E,EAAAi8E,KAiBA3uE,EAjBAyQ,GAiBA1Q,EAjBArN,GAkBAi8E,IAAA3uE,EAAA2uE,IAAA5uE,EAAAuqE,IAAAtqE,EAAAsqE,GAlBAuvB,EAAAnnG,EAAA81C,EAAA91C,EAAAkjD,GAAAljD,EAAA81C,EAAA91C,EAAAqwD,IAAA82C,EAAAnnG,EAAA81C,EAAA91C,EAAAkjD,GAAAnlC,EAAA+3B,EAAA/3B,EAAAsyC,IAAAn5D,EAAA6mB,EAAA+3B,EAAA/3B,EAAAmlC,GAAAnlC,EAAA65D,GAAA75D,EAAAk+D,IAAAkrB,EAAAppF,EAAA+3B,EAAA/3B,EAAAmlC,GAAAljD,EAAA81C,EAAA91C,EAAAqwD,KAAA,IAGA,SAAAxI,EAAAp3D,EAAAuxB,EAAAxnB,EAAAhM,GACA,IAAAq5D,EAAA7lC,EAAAjzB,KAAA0B,EAAA+J,EAAAhM,GACAsnD,EAAA3f,EAAApnC,KAAA0B,EAAAo3D,EAAAr5D,GACAytF,EAAAhlD,EAAAloC,KAAA0B,EAAAo3D,EAAAr5D,GAAA8gE,GACAsoB,EAAA1gD,EAAAnoC,KAAA0B,EAAAo3D,EAAAr5D,GAAA8gE,GACA,OACAxZ,IACAmmC,KACArE,KACAvnB,GAAA,CAAAva,EAAA37C,KAAAu+B,IAAAujD,GAAAnmC,EAAA37C,KAAAuH,IAAAu6E,IACA/4B,GAAA,CAAApN,EAAA37C,KAAAu+B,IAAAk/C,GAAA9hC,EAAA37C,KAAAuH,IAAAk2E,KAQA,SAAA1gF,EAAA4+C,EAAAtpC,EAAAa,GACA,UAAAyoC,EAAA,IAAAA,EAAA,SAAAzoC,EAAA8hD,IAAA,MAAA3iD,EAGA,SAAA26F,EAAAl2C,EAAAZ,EAAAjqC,EAAA88B,GACA,eAAAA,EAiCA,OA9BAixC,EAAAh+D,OAAA,SAAAz8B,GACA,OAAAjL,UAAAC,QACAynC,EAAA+pC,GAAAxmE,GACAy6F,GAFAh+D,GAKAg+D,EAAAxlG,OAAA,SAAA+K,GACA,OAAAjL,UAAAC,QACAC,EAAAuxE,GAAAxmE,GACAy6F,GAFAxlG,GAKAwlG,EAAA5lG,OAAA,SAAAmL,GACA,OAAAjL,UAAAC,QACAH,EAAA2xE,GAAAxmE,GACAy6F,GAFA5lG,GAKA4lG,EAAAl9D,WAAA,SAAAv9B,GACA,OAAAjL,UAAAC,QACAuoC,EAAAipC,GAAAxmE,GACAy6F,GAFAl9D,GAKAk9D,EAAAj9D,SAAA,SAAAx9B,GACA,OAAAjL,UAAAC,QACAwoC,EAAAgpC,GAAAxmE,GACAy6F,GAFAj9D,GAKAi9D,GAOA33F,EAAA8O,IAAA87F,SAAA,WACA,IAAAz4G,EAAAqxF,GACAzxF,EAAA0xF,GACA1C,EAAAupB,GAEA,SAAAM,EAAA5sG,EAAAhM,GACA,IAAA6hE,EAAA1hE,EAAAI,KAAAyB,KAAAgK,EAAAhM,GACA64G,EAAA94G,EAAAQ,KAAAyB,KAAAgK,EAAAhM,GACA2zD,GAAAkO,EAAAn0D,EAAAmrG,EAAAnrG,GAAA,EACAsQ,EAAA,CAAA6jD,EAAA,CACAt0D,EAAAs0D,EAAAt0D,EACAG,EAAAimD,GACO,CACPpmD,EAAAsrG,EAAAtrG,EACAG,EAAAimD,GACOklD,GAEP,WADA76F,IAAAzM,IAAAw9E,IACA,OAAA/wE,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAqBA,OAlBA46F,EAAAz4G,OAAA,SAAAoN,GACA,OAAAtN,UAAAC,QACAC,EAAAuxE,GAAAnkE,GACAqrG,GAFAz4G,GAKAy4G,EAAA74G,OAAA,SAAAwN,GACA,OAAAtN,UAAAC,QACAH,EAAA2xE,GAAAnkE,GACAqrG,GAFA74G,GAKA64G,EAAA7pB,WAAA,SAAAxhF,GACA,OAAAtN,UAAAC,QACA6uF,EAAAxhF,EACAqrG,GAFA7pB,GAKA6pB,GAOA5qG,EAAA8O,IAAA87F,SAAAF,OAAA,WACA,IAAAE,EAAA5qG,EAAA8O,IAAA87F,WACA7pB,EAAAupB,GACAQ,EAAAF,EAAA7pB,WAMA,OAJA6pB,EAAA7pB,WAAA,SAAAxhF,GACA,OAAAtN,UAAAC,OAAA44G,EAMA,SAAA/pB,GACA,kBACA,IAAA/iF,EAAA+iF,EAAAzsF,MAAAN,KAAA/B,WACAqnD,EAAAt7C,EAAA,GACA6S,EAAA7S,EAAA,GAAA80D,GACA,OAAAxZ,EAAA37C,KAAAu+B,IAAArrB,GAAAyoC,EAAA37C,KAAAuH,IAAA2L,KAXAk6F,CAAAhqB,EAAAxhF,IAAAwhF,GAGA6pB,GAYA5qG,EAAA8O,IAAAu4D,OAAA,WACA,IAAArtD,EAAAwwF,GACA/zG,EAAA8zG,GAEA,SAAAljC,EAAArpE,EAAAhM,GACA,OAAAg5G,GAAA30G,IAAA2jB,EAAAznB,KAAAyB,KAAAgK,EAAAhM,KAAAy4G,IAAAh0G,EAAAlE,KAAAyB,KAAAgK,EAAAhM,IAeA,OAZAq1E,EAAArtD,KAAA,SAAAza,GACA,OAAAtN,UAAAC,QACA8nB,EAAA0pD,GAAAnkE,GACA8nE,GAFArtD,GAKAqtD,EAAA5wE,KAAA,SAAA8I,GACA,OAAAtN,UAAAC,QACAuE,EAAAitE,GAAAnkE,GACA8nE,GAFA5wE,GAKA4wE,GAgBA,IAAA2jC,GAAAhrG,EAAAuD,IAAA,CACA/I,OAAAiwG,GACAQ,MAAA,SAAAx0G,GACA,IAAA6iD,EAAA37C,KAAAo+B,KAAAtlC,EAAA,KACA,aAAA6iD,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEA4xD,QAAA,SAAAz0G,GACA,IAAA02F,EAAAxvF,KAAAo+B,KAAAtlC,GAAA,EAAA00G,KACAje,EAAAC,EAAAge,GACA,aAAAhe,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEAke,OAAA,SAAA30G,GACA,IAAA6iD,EAAA37C,KAAAo+B,KAAAtlC,GAAA,EACA,WAAA6iD,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEA+xD,gBAAA,SAAA50G,GACA,IAAAy2F,EAAAvvF,KAAAo+B,KAAAtlC,EAAA60G,IACAne,EAAAD,EAAAoe,GAAA,EACA,YAAAne,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEAoe,cAAA,SAAA90G,GACA,IAAAy2F,EAAAvvF,KAAAo+B,KAAAtlC,EAAA60G,IACAne,EAAAD,EAAAoe,GAAA,EACA,aAAAne,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,OAGAntF,EAAA8O,IAAA08F,YAAAR,GAAA9sG,OACA,IAAAotG,GAAA3tG,KAAAo+B,KAAA,GACAovE,GAAAxtG,KAAAolE,IAAA,GAAAhQ,IAEAtI,EAAA5zD,WAAA,SAAA40C,GAaA,IAZA,IAGA4f,EACAjkD,EAJAyD,EAAA+sD,MAAA6zC,GACAz/C,EAAA0/C,GAAAjgE,GACA+f,EAAA,GAGA30D,EAAA80G,IAAA,CACAlhG,KAAAkG,KAAAizC,MACA/uB,KAAA++D,GACAhtB,MAAA,EACA51D,SAAA,KAGAwiB,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GAAS,CAC9C6F,EAAA7pD,KAAA0pD,EAAA,IAEA,QAAAE,EAAAv3D,KAAAw/B,GAAAxhC,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAyDF,EAAA8L,IACzDsJ,EAAAmkD,EAAAv5D,KAAA45G,GAAAxkG,EAAApV,EAAAg6D,EAAAnhD,EAAAhU,GACAw0D,EAAA1pD,KAAAyF,GAIA,OAAAykG,GAAArgD,EAAAQ,EAAAnhD,IAGA4/C,EAAAqhD,UAAA,SAAArgE,GACA,OAAAz3C,KAAA2O,KAAA,MAAA8oC,EAAA4qB,GAAA01C,GAAAL,GAAAjgE,MAGA,IAAA4qB,GAAA01C,GAAAL,MAEA,SAAAK,GAAA//C,GACA,kBACA,IAAAggD,EAAAC,EAAAC,GAEAF,EAAAh4G,KAAAg4D,MAAAkgD,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAAtmF,MAAAoR,EAAA,KACAk1E,EAAAtmF,MAAArE,EAAA7F,MACAswF,EAAAv7F,aAAAu7F,EAAAC,UAAgDj4G,KAAAg4D,GAChDggD,EAAAE,QAAA,GACAA,EAAAl3D,OAAAk3D,EAAAl3D,MAAA82D,UAAAv5G,KAAAyB,UAAAojC,SAAA80E,EAAAzoG,SAKA,SAAAooG,GAAA31E,EAAA81B,EAAAnhD,GAIA,OAHA0/C,EAAAr0B,EAAAi2E,IACAj2E,EAAAi3B,UAAAnB,EACA91B,EAAArrB,KACAqrB,EAGA,IAEA0hC,GACA+zC,GAHAQ,GAAA,GACAV,GAAA,EAoGA,SAAAW,GAAAl2E,EAAAuV,EAAA75C,EAAAimE,GACA,IAAAhtD,EAAAqrB,EAAArrB,GACAmhD,EAAA91B,EAAAi3B,UACA,OAAAM,GAAAv3B,EAAA,oBAAAtkC,EAAA,SAAAwV,EAAApV,EAAAwhC,GACApsB,EAAA4kD,GAAAnhD,GAAAgtD,MAAA9uC,IAAA0iB,EAAAosB,EAAAjmE,EAAAW,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,OACK5hC,EAAAimE,EAAAjmE,GAAA,SAAAwV,GACLA,EAAA4kD,GAAAnhD,GAAAgtD,MAAA9uC,IAAA0iB,EAAA75C,MAsHA,SAAAy6G,GAAAv7F,GAEA,OADA,MAAAA,MAAA,IACA,WACA9c,KAAA0jD,YAAA5mC,GAuGA,SAAA46F,GAAAjgE,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAGA,SAAAmgE,GAAAxkG,EAAApV,EAAAg6D,EAAAnhD,EAAAyhG,GACA,IAKA7hG,EACAmb,EACA5U,EACA6jB,EACA03E,EATAP,EAAA5kG,EAAA4kD,KAAA5kD,EAAA4kD,GAAA,CACAkgD,OAAA,EACAz7F,MAAA,IAEA5Z,EAAAm1G,EAAAnhG,GAcA,SAAAtJ,EAAAirG,GACA,IAAAP,EAAAD,EAAAE,OACAA,EAAAF,EAAAC,GAUA,QAAAQ,KARAP,IACAA,EAAAtmF,MAAAoR,EAAA,KACAk1E,EAAAtmF,MAAArE,EAAA7F,MACAswF,EAAAv7F,aACAu7F,EAAAC,GACAC,EAAAl3D,OAAAk3D,EAAAl3D,MAAA82D,UAAAv5G,KAAA6U,IAAAgwB,SAAA80E,EAAAzoG,QAGAuoG,EACA,IAAAS,EAAA5hG,EAAA,CACA,IAAA6hG,EAAAV,EAAAS,GACAC,EAAA9mF,MAAAoR,EAAA,KACA01E,EAAA9mF,MAAArE,EAAA7F,MACAswF,EAAAv7F,aACAu7F,EAAAS,GAIA7mF,EAAAoR,EAAA10B,EACAqkE,GAAA,WAMA,OALA/gD,EAAAoR,GAAA10B,EAAAkqG,GAAA,KACA5mF,EAAAoR,EAAA,KACApR,EAAArE,EAAA7F,KAGA,GACO,EAAAjR,GACPuhG,EAAAE,OAAArhG,EACAhU,EAAAm+C,OAAAn+C,EAAAm+C,MAAAzzC,MAAAhP,KAAA6U,IAAAgwB,SAAAplC,GACAu6G,EAAA,GACA11G,EAAAghE,MAAAl5D,QAAA,SAAAvM,EAAAR,IACAA,IAAAW,KAAA6U,IAAAgwB,SAAAplC,KACAu6G,EAAA5qG,KAAA/P,KAGAijC,EAAAh+B,EAAAg+B,KACA7jB,EAAAna,EAAAma,SAGA,SAAA1O,EAAAkqG,GAKA,IAJA,IAAAjrF,EAAAirF,EAAAx7F,EACAoO,EAAAyV,EAAAtT,GACAzjB,EAAAyuG,EAAAr6G,OAEA4L,EAAA,GACAyuG,IAAAzuG,GAAAvL,KAAA6U,EAAAgY,GAGA,GAAAmC,GAAA,EAGA,OAFA1qB,EAAAm+C,OAAAn+C,EAAAm+C,MAAAxkC,IAAAje,KAAA6U,IAAAgwB,SAAAplC,KACAg6G,EAAAv7F,aAAAu7F,EAAAnhG,UAA0CzD,EAAA4kD,GAC1C,EAIAn1D,IACA4T,EAAA6hG,EAAA7hG,KACAmb,EAAA+gD,GApEA,SAAA6lC,GACA,IAAA5lC,EAAA/vE,EAAA+vE,MAEA,GADAhhD,EAAArE,EAAAqlD,EAAAn8D,EACAm8D,GAAA4lC,EAAA,OAAAjrG,EAAAirG,EAAA5lC,GACAhhD,EAAAoR,EAAAz1B,GAgEA,EAAAkJ,GACA5T,EAAAm1G,EAAAnhG,GAAA,CACAgtD,MAAA,IAAAxQ,EACA58C,OACAmb,QACAghD,MAAA0lC,EAAA1lC,MACA51D,SAAAs7F,EAAAt7F,SACA6jB,KAAAy3E,EAAAz3E,KACApxB,MAAAzR,GAEAs6G,EAAA,OACAN,EAAAv7F,OAtaA07F,GAAA55G,KAAAk4D,EAAAl4D,KACA45G,GAAArxG,MAAA2vD,EAAA3vD,MACAqxG,GAAA/kG,KAAAqjD,EAAArjD,KACA+kG,GAAA11G,KAAAg0D,EAAAh0D,KAEAuJ,EAAAnJ,WAAA,SAAAsK,EAAAsqC,GACA,OAAAtqC,KAAAtK,WAAA+gE,GAAAz2D,EAAAtK,WAAA40C,GAAAtqC,EAAAnB,EAAAmB,YAAAtK,WAAAsK,IAGAnB,EAAAnJ,WAAAxE,UAAA85G,GAEAA,GAAAzpG,OAAA,SAAAqyC,GACA,IAGAsW,EACAC,EACAlkD,EALAyD,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA3B,EAAA,GAIAzW,EAAAoW,EAAApW,GAEA,QAAAvhB,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GAAS,CAC9C6F,EAAA7pD,KAAA0pD,EAAA,IAEA,QAAAE,EAAAv3D,KAAAw/B,GAAAxhC,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAyDF,EAAA8L,IACzDsJ,EAAAmkD,EAAAv5D,MAAAs5D,EAAAvW,EAAAxiD,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,KACA,aAAApsB,IAAAkkD,EAAAl0B,SAAAhwB,EAAAgwB,UACAw0E,GAAAtgD,EAAAt5D,EAAAg6D,EAAAnhD,EAAAzD,EAAA4kD,GAAAnhD,IACAwgD,EAAA1pD,KAAA2pD,IAEAD,EAAA1pD,KAAA,MAKA,OAAAkqG,GAAArgD,EAAAQ,EAAAnhD,IAGAshG,GAAAtmG,UAAA,SAAAkvC,GACA,IAGAsW,EACAshD,EACAvlG,EACAkkD,EACAz0D,EAPAgU,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA3B,EAAA,GAMAzW,EAAAqW,EAAArW,GAEA,QAAAvhB,GAAA,EAAAmyB,EAAA3xD,KAAA9B,SAAqCshC,EAAAmyB,GACrC,QAAA4F,EAAAv3D,KAAAw/B,GAAAxhC,GAAA,EAAA8L,EAAAytD,EAAAr5D,SAAyDF,EAAA8L,GACzD,GAAAsJ,EAAAmkD,EAAAv5D,GAAA,CACA6E,EAAAuQ,EAAA4kD,GAAAnhD,GACA8hG,EAAA53D,EAAAxiD,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,GACAg4B,EAAA7pD,KAAA0pD,EAAA,IAEA,QAAArhB,GAAA,EAAA5sC,EAAAuvG,EAAAz6G,SAA+C83C,EAAA5sC,IAC/CkuD,EAAAqhD,EAAA3iE,KAAA4hE,GAAAtgD,EAAAthB,EAAAgiB,EAAAnhD,EAAAhU,GACAw0D,EAAA1pD,KAAA2pD,GAMA,OAAAugD,GAAArgD,EAAAQ,EAAAnhD,IAGAshG,GAAAh1F,OAAA,SAAAA,GACA,IACAk0C,EAEAjkD,EAHAokD,EAAA,GAIA,oBAAAr0C,MAAAq2C,GAAAr2C,IAEA,QAAAqc,EAAA,EAAAmyB,EAAA3xD,KAAA9B,OAAoCshC,EAAAmyB,EAAOnyB,IAAA,CAC3Cg4B,EAAA7pD,KAAA0pD,EAAA,IAEA,QAAAE,EAAAv5D,EAAA,EAAA8L,GAAAytD,EAAAv3D,KAAAw/B,IAAAthC,OAAwDF,EAAA8L,EAAO9L,KAC/DoV,EAAAmkD,EAAAv5D,KAAAmlB,EAAA5kB,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,IACA63B,EAAA1pD,KAAAyF,GAKA,OAAAykG,GAAArgD,EAAAx3D,KAAAm5D,UAAAn5D,KAAA6W,KAGAshG,GAAAt0C,MAAA,SAAApsB,EAAAosB,GACA,IAAAhtD,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA,OAAAl7D,UAAAC,OAAA,EAAA8B,KAAAoT,OAAA4kD,GAAAnhD,GAAAgtD,MAAAxhE,IAAAo1C,GACAgiB,GAAAz5D,KAAA,MAAA6jE,EAAA,SAAAzwD,GACAA,EAAA4kD,GAAAnhD,GAAAgtD,MAAA1xD,OAAAslC,IACK,SAAArkC,GACLA,EAAA4kD,GAAAnhD,GAAAgtD,MAAA9uC,IAAA0iB,EAAAosB,MAcAs0C,GAAA/qG,KAAA,SAAAwrG,EAAAh7G,GACA,GAAAK,UAAAC,OAAA,GACA,IAAAN,KAAAg7G,EACA54G,KAAAoN,KAAAxP,EAAAg7G,EAAAh7G,IAGA,OAAAoC,KAGA,IAAA+rC,EAAA,aAAA6sE,EAAArX,GAAAzF,GACArkD,EAAAzrC,EAAAgsD,GAAAC,QAAA2gD,GAEA,SAAAC,IACA74G,KAAAm4D,gBAAA1gB,GAGA,SAAAqhE,IACA94G,KAAAk4D,kBAAAzgB,EAAA6Y,MAAA7Y,EAAA8Y,OAuBA,OAAA6nD,GAAAp4G,KAAA,QAAA44G,EAAAh7G,EAAA65C,EAAA8Y,MAVA,SAAAzzC,GACA,aAAAA,EAAAg8F,GAAAh8F,GAAA,cACA,IACA9e,EADA6e,EAAA7c,KAAA45D,eAAAniB,EAAA6Y,MAAA7Y,EAAA8Y,OAEA,OAAA1zC,IAAAC,IAAA9e,EAAA+tC,EAAAlvB,EAAAC,GAAA,SAAAyQ,GACAvtB,KAAAkwD,eAAAzY,EAAA6Y,MAAA7Y,EAAA8Y,MAAAvyD,EAAAuvB,SAfA,SAAAzQ,GACA,aAAAA,EAAA+7F,GAAA/7F,GAAA,cACA,IACA9e,EADA6e,EAAA7c,KAAAy4B,aAAAgf,GAEA,OAAA56B,IAAAC,IAAA9e,EAAA+tC,EAAAlvB,EAAAC,GAAA,SAAAyQ,GACAvtB,KAAAw4B,aAAAif,EAAAz5C,EAAAuvB,WAkBA4qF,GAAArsE,UAAA,SAAA8sE,EAAA/0C,GACA,IAAApsB,EAAAzrC,EAAAgsD,GAAAC,QAAA2gD,GAgBA,OAAA54G,KAAA6jE,MAAA,QAAA+0C,EAAAnhE,EAAA8Y,MAPA,SAAAvmD,EAAAhM,GACA,IAAAwzB,EAAAqyC,EAAAtlE,KAAAyB,KAAAgK,EAAAhM,EAAAgC,KAAA45D,eAAAniB,EAAA6Y,MAAA7Y,EAAA8Y,QACA,OAAA/+B,GAAA,SAAAjE,GACAvtB,KAAAkwD,eAAAzY,EAAA6Y,MAAA7Y,EAAA8Y,MAAA/+B,EAAAjE,MAVA,SAAAvjB,EAAAhM,GACA,IAAAwzB,EAAAqyC,EAAAtlE,KAAAyB,KAAAgK,EAAAhM,EAAAgC,KAAAy4B,aAAAgf,IACA,OAAAjmB,GAAA,SAAAjE,GACAvtB,KAAAw4B,aAAAif,EAAAjmB,EAAAjE,QAcA4qF,GAAAh2G,MAAA,SAAAs1C,EAAA75C,EAAA4yD,GACA,IAAA1mD,EAAA7L,UAAAC,OAEA,GAAA4L,EAAA,GACA,qBAAA2tC,EAAA,CAGA,IAAA+Y,KAFA1mD,EAAA,IAAAlM,EAAA,IAEA65C,EACAz3C,KAAAmC,MAAAquD,EAAA/Y,EAAA+Y,GAAA5yD,GAGA,OAAAoC,KAGAwwD,EAAA,GAGA,SAAAuoD,IACA/4G,KAAAmC,MAAA62D,eAAAvhB,GAaA,OAAA2gE,GAAAp4G,KAAA,SAAAy3C,EAAA75C,EAVA,SAAAkf,GACA,aAAAA,EAAAi8F,GAAAj8F,GAAA,cACA,IACA9e,EADA6e,EAAA2yC,EAAAxvD,MAAA85D,iBAAA95D,KAAA,MAAA+5D,iBAAAtiB,GAEA,OAAA56B,IAAAC,IAAA9e,EAAA89F,GAAAj/E,EAAAC,GAAA,SAAAyQ,GACAvtB,KAAAmC,MAAA0tD,YAAApY,EAAAz5C,EAAAuvB,GAAAijC,UAQA2nD,GAAAa,WAAA,SAAAvhE,EAAAosB,EAAArT,GAUA,OATAvyD,UAAAC,OAAA,IAAAsyD,EAAA,IASAxwD,KAAA6jE,MAAA,SAAApsB,EAPA,SAAAztC,EAAAhM,GACA,IAAAwzB,EAAAqyC,EAAAtlE,KAAAyB,KAAAgK,EAAAhM,EAAAwxD,EAAAxvD,MAAA85D,iBAAA95D,KAAA,MAAA+5D,iBAAAtiB,IACA,OAAAjmB,GAAA,SAAAjE,GACAvtB,KAAAmC,MAAA0tD,YAAApY,EAAAjmB,EAAAjE,GAAAijC,OAOA2nD,GAAApxG,KAAA,SAAAnJ,GACA,OAAAw6G,GAAAp4G,KAAA,OAAApC,EAAAy6G,KAUAF,GAAAhmG,OAAA,WACA,IAAA6lD,EAAAh4D,KAAAm5D,UACA,OAAAn5D,KAAA2O,KAAA,4BACA,IAAAqN,EACAhc,KAAAg4D,GAAAv7C,MAAA,IAAAT,EAAAhc,KAAAiwB,aAAAjU,EAAAs9C,YAAAt5D,SAIAm4G,GAAAt3E,KAAA,SAAAjjC,GACA,IAAAiZ,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA,OAAAl7D,UAAAC,OAAA,EAAA8B,KAAAoT,OAAA4kD,GAAAnhD,GAAAgqB,MACA,oBAAAjjC,MAAAoO,EAAA60B,KAAAvgC,MAAA0L,EAAA/N,YACAw7D,GAAAz5D,KAAA,SAAAoT,GACAA,EAAA4kD,GAAAnhD,GAAAgqB,KAAAjjC,MAIAu6G,GAAAvlC,MAAA,SAAAh1E,GACA,IAAAiZ,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA,OAAAl7D,UAAAC,OAAA,EAAA8B,KAAAoT,OAAA4kD,GAAAnhD,GAAA+7D,MACAnZ,GAAAz5D,KAAA,oBAAApC,EAAA,SAAAwV,EAAApV,EAAAwhC,GACApsB,EAAA4kD,GAAAnhD,GAAA+7D,OAAAh1E,EAAAW,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,KACK5hC,KAAA,SAAAwV,GACLA,EAAA4kD,GAAAnhD,GAAA+7D,MAAAh1E,MAIAu6G,GAAAn7F,SAAA,SAAApf,GACA,IAAAiZ,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UACA,OAAAl7D,UAAAC,OAAA,EAAA8B,KAAAoT,OAAA4kD,GAAAnhD,GAAAmG,SACAy8C,GAAAz5D,KAAA,oBAAApC,EAAA,SAAAwV,EAAApV,EAAAwhC,GACApsB,EAAA4kD,GAAAnhD,GAAAmG,SAAArT,KAAA0G,IAAA,EAAAzS,EAAAW,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,MACK5hC,EAAA+L,KAAA0G,IAAA,EAAAzS,GAAA,SAAAwV,GACLA,EAAA4kD,GAAAnhD,GAAAmG,SAAApf,MAIAu6G,GAAAxpG,KAAA,SAAAqX,EAAA2vC,GACA,IAAA9+C,EAAA7W,KAAA6W,GACAmhD,EAAAh4D,KAAAm5D,UAEA,GAAAl7D,UAAAC,OAAA,GACA,IAAAo6G,EAAAX,GACAsB,EAAAr1C,GAEA,IACAA,GAAA/sD,EACA4iD,GAAAz5D,KAAA,SAAAoT,EAAApV,EAAAwhC,GACAm4E,GAAAvkG,EAAA4kD,GAAAnhD,GACAmP,EAAAznB,KAAA6U,IAAAgwB,SAAAplC,EAAAwhC,KAEO,QACPm4E,GAAAW,EACA10C,GAAAq1C,QAGAx/C,GAAAz5D,KAAA,SAAAoT,GACA,IAAAvQ,EAAAuQ,EAAA4kD,GAAAnhD,IACAhU,EAAAm+C,QAAAn+C,EAAAm+C,MAAAh1C,EAAAwpD,SAAA,6BAAAvxC,GAAA+B,EAAA2vC,KAIA,OAAA31D,MAGAm4G,GAAAt1G,WAAA,WAUA,IATA,IAIAw0D,EAEAjkD,EACAvQ,EAPAq2G,EAAAl5G,KAAA6W,GACAsiG,IAAA1B,GACAz/C,EAAAh4D,KAAAm5D,UACA3B,EAAA,GAMAh4B,EAAA,EAAAmyB,EAAA3xD,KAAA9B,OAAoCshC,EAAAmyB,EAAOnyB,IAAA,CAC3Cg4B,EAAA7pD,KAAA0pD,EAAA,IAEA,QAAAE,EAAAv5D,EAAA,EAAA8L,GAAAytD,EAAAv3D,KAAAw/B,IAAAthC,OAAwDF,EAAA8L,EAAO9L,KAC/DoV,EAAAmkD,EAAAv5D,KAEA45G,GAAAxkG,EAAApV,EAAAg6D,EAAAmhD,EAAA,CACA1iG,MAFA5T,EAAAuQ,EAAA4kD,GAAAkhD,IAEAziG,KACAoqB,KAAAh+B,EAAAg+B,KACA+xC,MAAA/vE,EAAA+vE,MAAA/vE,EAAAma,SACAA,SAAAna,EAAAma,WAIAq6C,EAAA1pD,KAAAyF,GAIA,OAAAykG,GAAArgD,EAAAQ,EAAAmhD,IAsGAntG,EAAA8O,IAAAzX,KAAA,WACA,IAOA+1G,EAPAntG,EAAAD,EAAAC,MAAAC,SACAE,EAAAitG,GACAhtG,EAAA,EACAC,EAAA,EACAE,EAAA,EACA8sG,EAAA,KACA7sG,EAAA,KAGA,SAAApJ,EAAAiO,GACAA,EAAA3C,KAAA,WACA,IAUA4C,EAVAD,EAAAtF,EAAA0C,OAAA1O,MACA0R,EAAA1R,KAAA2R,WAAA1F,EACA2F,EAAA5R,KAAA2R,UAAA1F,EAAA8B,OACAL,EAAA,MAAAjB,EAAAmF,EAAAlE,MAAAkE,EAAAlE,MAAApN,MAAAsR,EAAA0nG,GAAA1nG,EAAAtE,SAAAb,EACAC,EAAA,MAAA0sG,EAAAxnG,EAAAlF,WAAAkF,EAAAlF,WAAApM,MAAAsR,EAAA0nG,GAAAplD,EAAAklD,EACA9qG,EAAAgD,EAAAO,UAAA,SAAAnQ,KAAAgM,EAAAkE,GACAE,EAAAxD,EAAAyD,QAAAC,OAAA,eAAA5E,KAAA,gBAAAjL,MAAA,UAAAs8D,IACAxsD,EAAAjG,EAAAnJ,WAAAyL,EAAA4D,QAAA/P,MAAA,UAAAs8D,IAAAtsD,SACAC,EAAApG,EAAAnJ,WAAAyL,EAAA0qC,SAAA72C,MAAA,aACAo3G,EAAA5vG,KAAA0G,IAAAhE,EAAA,GAAAG,EAEAL,EAAAs+F,GAAA74F,GACA5G,EAAAsG,EAAAO,UAAA,WAAAnQ,KAAA,KACA+Q,GAAAzH,EAAA+G,QAAAM,OAAA,QAAAjF,KAAA,kBAAApB,EAAAnJ,WAAAmI,IACA8G,EAAAO,OAAA,QACAP,EAAAO,OAAA,QACA,IAMA4T,EACAC,EACAC,EACArR,EATA0kG,EAAA1nG,EAAApD,OAAA,QACA4D,EAAAF,EAAA1D,OAAA,QACA3H,EAAAuH,EAAAI,OAAA,QAAA3H,KAAA2F,GACA+sG,EAAA3nG,EAAApD,OAAA,QACA6D,EAAAH,EAAA1D,OAAA,QACAwtB,EAAA,QAAA9vB,GAAA,SAAAA,GAAA,IAqBA,GAfA,WAAAA,GAAA,QAAAA,GACAmF,EAAAmoG,GAAAzzF,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAApR,EAAA,KACA/N,EAAAqG,KAAA,KAAA8uB,EAAA,iBAAA/5B,MAAA,wBACAsQ,EAAArF,KAAA,QAAAjB,EAAA,OAAA+vB,EAAA5vB,EAAA,MAAAH,EAAA,OAAA+vB,EAAA5vB,KAEAiF,EAAAooG,GAAA1zF,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAApR,EAAA,KACA/N,EAAAqG,KAAA,cAAAjL,MAAA,cAAA+5B,EAAA,iBACAzpB,EAAArF,KAAA,QAAA8uB,EAAA5vB,EAAA,IAAAH,EAAA,SAAAA,EAAA,OAAA+vB,EAAA5vB,IAGAktG,EAAApsG,KAAA0H,EAAAonB,EAAA7vB,GACAotG,EAAArsG,KAAA+Y,EAAA+V,EAAAq9E,GACAjnG,EAAAlF,KAAA8Y,EAAA,GAAA9Y,KAAA0H,EAAAonB,EAAA7vB,GACAkG,EAAAnF,KAAA6Y,EAAA,GAAA7Y,KAAA+Y,EAAA+V,EAAAq9E,GAEA3nG,EAAAc,UAAA,CACA,IAAAnH,EAAAqG,EACAe,EAAApH,EAAAmH,YAAA,EAEAhB,EAAAE,EAAA,SAAA5H,GACA,OAAAuB,EAAAvB,GAAA2I,QAESjB,EAAAgB,UACThB,EAAAE,EAEAK,EAAA1T,KAAAgT,EAAAK,EAAAF,GAGAI,EAAAvT,KAAAgT,EAAAG,EAAAE,GACAQ,EAAA7T,KAAAgT,EAAAK,OAgEA,OA5DAvO,EAAA4I,MAAA,SAAAV,GACA,OAAAtN,UAAAC,QACA+N,EAAAV,EACAlI,GAFA4I,GAKA5I,EAAA+I,OAAA,SAAAb,GACA,OAAAtN,UAAAC,QACAkO,EAAAb,KAAAquG,GAAAruG,EAAA,GAAA8tG,GACAh2G,GAFA+I,GAKA/I,EAAAqK,MAAA,WACA,OAAAzP,UAAAC,QACAo7G,EAAApqD,EAAAjxD,WACAoF,GAFAi2G,GAKAj2G,EAAAoJ,WAAA,SAAAlB,GACA,OAAAtN,UAAAC,QACAuO,EAAAlB,EACAlI,GAFAoJ,GAKApJ,EAAAqJ,WAAA,SAAAnB,GACA,OAAAtN,UAAAC,QACAk7G,EAAA7tG,EACAlI,GAFA+1G,GAKA/1G,EAAAw2G,SAAA,SAAAtuG,GACA,IAAAzB,EAAA7L,UAAAC,OACA,OAAA4L,GACAuC,GAAAd,EACAe,GAAArO,UAAA6L,EAAA,GACAzG,GAHAgJ,GAMAhJ,EAAAgJ,cAAA,SAAAd,GACA,OAAAtN,UAAAC,QACAmO,GAAAd,EACAlI,GAFAgJ,GAKAhJ,EAAAiJ,cAAA,SAAAf,GACA,OAAAtN,UAAAC,QACAoO,GAAAf,EACAlI,GAFAiJ,GAKAjJ,EAAAmJ,YAAA,SAAAjB,GACA,OAAAtN,UAAAC,QACAsO,GAAAjB,EACAlI,GAFAmJ,GAKAnJ,EAAAy2G,cAAA,WACA,OAAA77G,UAAAC,QAAAmF,GAGAA,GAGA,IAAAg2G,GAAA,SACAO,GAAA,CACAhnG,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAGA,SAAA2mG,GAAAvsG,EAAAo7C,EAAAtiC,GACA9Y,EAAAC,KAAA,qBAAApD,GACA,IAAAsjF,EAAA/kC,EAAAv+C,GACA,oBAAAquB,SAAAi1D,KAAArnE,EAAAjc,IAAA,QAIA,SAAA2vG,GAAAxsG,EAAA85C,EAAA9gC,GACAhZ,EAAAC,KAAA,qBAAApD,GACA,IAAAsjF,EAAArmC,EAAAj9C,GACA,sBAAAquB,SAAAi1D,KAAAnnE,EAAAnc,IAAA,MAIAgC,EAAA8O,IAAAhV,MAAA,WACA,IAKAi0G,EACAC,EANAh5D,EAAA+U,EAAAjwD,EAAA,iCACAyF,EAAA,KACAG,EAAA,KACAuuG,EAAA,MACAC,EAAA,MAGAC,GAAA,EACAC,GAAA,EACAC,EAAAC,GAAA,GAEA,SAAAx0G,EAAAwL,GACAA,EAAA3C,KAAA,WACA,IAAA2C,EAAAtF,EAAA0C,OAAA1O,MAAAmC,MAAA,wBAAAA,MAAA,+CAAA8hB,GAAA,kBAAAs2F,GAAAt2F,GAAA,mBAAAs2F,GACA93D,EAAAnxC,EAAAO,UAAA,eAAAnQ,KAAA,KACA+gD,EAAA1wC,QAAAM,OAAA,QAAAjF,KAAA,sBAAAjL,MAAA,uBAAAA,MAAA,sBACAmP,EAAAO,UAAA,WAAAnQ,KAAA,KAAAqQ,QAAAM,OAAA,QAAAjF,KAAA,kBAAAjL,MAAA,iBACA,IAAA67B,EAAA1sB,EAAAO,UAAA,WAAAnQ,KAAA24G,EAAAnmD,GACAl2B,EAAA9rB,OAAAC,SACA6rB,EAAAjsB,QAAAM,OAAA,KAAAjF,KAAA,iBAAApD,GACA,gBAAAA,IACS7H,MAAA,kBAAA6H,GACT,OAAAwwG,GAAAxwG,KACSqI,OAAA,QAAAjF,KAAA,aAAApD,GACT,cAAA8uD,KAAA9uD,IAAA,SACSoD,KAAA,aAAApD,GACT,cAAA8uD,KAAA9uD,IAAA,SACSoD,KAAA,WAAAA,KAAA,YAAAjL,MAAA,uBACT67B,EAAA77B,MAAA,UAAA2D,EAAAgB,QAAA,aACA,IAEAqF,EAFAsuG,EAAAzuG,EAAAnJ,WAAAyO,GACAopG,EAAA1uG,EAAAnJ,WAAA4/C,GAGAl3C,IACAY,EAAAs+F,GAAAl/F,GACAmvG,EAAAttG,KAAA,IAAAjB,EAAA,IAAAiB,KAAA,QAAAjB,EAAA,GAAAA,EAAA,IACAwuG,EAAAF,IAGA/uG,IACAS,EAAAs+F,GAAA/+F,GACAgvG,EAAAttG,KAAA,IAAAjB,EAAA,IAAAiB,KAAA,SAAAjB,EAAA,GAAAA,EAAA,IACAyuG,EAAAH,IAGAt9F,EAAAs9F,KA+DA,SAAAt9F,EAAA7L,GACAA,EAAAO,UAAA,WAAAzE,KAAA,qBAAApD,GACA,mBAAAiwG,GAAA,KAAAnhD,KAAA9uD,IAAA,IAAAkwG,GAAA,KAAAphD,KAAA9uD,IAAA,MAIA,SAAA2wG,EAAArpG,GACAA,EAAA5C,OAAA,WAAAtB,KAAA,IAAA6sG,EAAA,IACA3oG,EAAAO,UAAA,2BAAAzE,KAAA,QAAA6sG,EAAA,GAAAA,EAAA,IAGA,SAAAW,EAAAtpG,GACAA,EAAA5C,OAAA,WAAAtB,KAAA,IAAA8sG,EAAA,IACA5oG,EAAAO,UAAA,2BAAAzE,KAAA,SAAA8sG,EAAA,GAAAA,EAAA,IAGA,SAAAK,IACA,IASA7+D,EAEA+I,EAXA1mD,EAAAiC,KACA66G,EAAA7uG,EAAA0C,OAAA1C,EAAAg1C,MAAAjjD,QACA+8G,EAAA95D,EAAAgV,GAAAj4D,EAAAE,WACAqT,EAAAtF,EAAA0C,OAAA3Q,GACAg9G,EAAAF,EAAAh7D,QACAm7D,GAAA,UAAAliD,KAAAiiD,IAAAxvG,EACA0vG,GAAA,UAAAniD,KAAAiiD,IAAArvG,EACAgU,EAAAm7F,EAAAl/F,QAAA,UACA6iD,EAAArC,GAAAp+D,GAEA8iD,EAAA70C,EAAAk4B,MAAAnmC,GAEA0Q,EAAAzC,EAAA0C,OAAA8gD,EAAAzxD,IAAAkmB,GAAA,gBA4BA,WACA,IAAAjY,EAAAg1C,MAAAk6D,UACAx7F,IACAg8B,EAAA,KACAmF,EAAA,IAAAo5D,EAAA,GACAp5D,EAAA,IAAAq5D,EAAA,GACAx6F,EAAA,GAGAk2C,OArCA3xC,GAAA,cAyCA,WACA,IAAAjY,EAAAg1C,MAAAk6D,SAAA,GAAAx7F,IACAmhC,EAAA,IAAAo5D,EAAA,GACAp5D,EAAA,IAAAq5D,EAAA,GACAx6F,EAAA,EACAk2C,OApCA,GARA5pD,EAAAg1C,MAAA0b,eACAjuD,EAAAwV,GAAA,kBAAAk3F,GAAAl3F,GAAA,iBAAAm3F,GAEA3sG,EAAAwV,GAAA,kBAAAk3F,GAAAl3F,GAAA,gBAAAm3F,GAGA9pG,EAAAwmG,YAAAjmG,UAAA,KAAAimG,YAEAp4F,EACAmhC,EAAA,GAAAo5D,EAAA,GAAAp5D,EAAA,GACAA,EAAA,GAAAq5D,EAAA,GAAAr5D,EAAA,QACO,GAAAk6D,EAAA,CACP,IAAAzzD,GAAA,KAAAwR,KAAAiiD,GACAxzD,GAAA,KAAAuR,KAAAiiD,GACAt2D,EAAA,CAAAw1D,EAAA,EAAA3yD,GAAAzG,EAAA,GAAAq5D,EAAA,EAAA3yD,GAAA1G,EAAA,IACAA,EAAA,GAAAo5D,EAAA3yD,GACAzG,EAAA,GAAAq5D,EAAA3yD,QACOv7C,EAAAg1C,MAAAkD,SAAAxI,EAAAmF,EAAAzwC,SA+BP,SAAA+qG,IACA,IAAAt3G,EAAAmI,EAAAk4B,MAAAnmC,GACA8kE,GAAA,EAEApe,IACA5gD,EAAA,IAAA4gD,EAAA,GACA5gD,EAAA,IAAA4gD,EAAA,IAGA/kC,IACA1T,EAAAg1C,MAAAkD,QACAxI,MAAA,EAAAu+D,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAr5D,EAAA,GAAAo5D,IAAAp2G,EAAA,GAAA63C,EAAA,KACAmF,EAAA,GAAAq5D,IAAAr2G,EAAA,GAAA63C,EAAA,MACWA,EAAA,MAGXs/D,GAAAK,EAAAx3G,EAAA0H,EAAA,KACAovG,EAAArpG,GACAuxD,GAAA,GAGAo4C,GAAAI,EAAAx3G,EAAA6H,EAAA,KACAkvG,EAAAtpG,GACAuxD,GAAA,GAGAA,IACA1lD,EAAA7L,GACAwpG,EAAA,CACA90F,KAAA,QACA0nF,KAAAhuF,EAAA,mBAKA,SAAA27F,EAAAx3G,EAAAoI,EAAAjO,GACA,IAMAyN,EACA4E,EAPAlE,EAAAs+F,GAAAx+F,GACAw0D,EAAAt0D,EAAA,GACAypB,EAAAzpB,EAAA,GACAsM,EAAAooC,EAAA7iD,GACA2lB,EAAA3lB,EAAAk8G,EAAAD,EACAx3G,EAAAkhB,EAAA,GAAAA,EAAA,GAwBA,GApBAjE,IACA+gD,GAAAhoD,EACAmd,GAAAnzB,EAAAgW,GAGAhN,GAAAzN,EAAAo8G,EAAAD,GAAAxwG,KAAA0G,IAAAowD,EAAA92D,KAAA8B,IAAAmqB,EAAA/xB,EAAA7F,KAAA6F,EAAA7F,GAEA0hB,EACArP,GAAA5E,GAAAgN,GAAAhW,GAEAi5C,IAAAjjC,EAAA9O,KAAA0G,IAAAowD,EAAA92D,KAAA8B,IAAAmqB,EAAA,EAAA8lB,EAAA19C,GAAAyN,KAEAgN,EAAAhN,GACA4E,EAAA5E,EACAA,EAAAgN,GAEApI,EAAAoI,GAIAkL,EAAA,IAAAlY,GAAAkY,EAAA,IAAAtT,EAIA,OAHArS,EAAAg8G,EAAA,KAAsCD,EAAA,KACtCp2F,EAAA,GAAAlY,EACAkY,EAAA,GAAAtT,GACA,EAIA,SAAA+qG,IACAD,IACA7pG,EAAAnP,MAAA,wBAAA0P,UAAA,WAAA1P,MAAA,UAAA2D,EAAAgB,QAAA,aACAkF,EAAA0C,OAAA,QAAAvM,MAAA,eACAsM,EAAAwV,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAu6C,IACAs8C,EAAA,CACA90F,KAAA,aA9GA1U,EAAAnP,MAAA,yBAAA0P,UAAA,WAAA1P,MAAA,gBACA6J,EAAA0C,OAAA,QAAAvM,MAAA,SAAA04G,EAAA14G,MAAA,WACA24G,EAAA,CACA90F,KAAA,eAEAm1F,IA+LA,OAjTAr1G,EAAAk7C,MAAA,SAAA1vC,GACAA,EAAA3C,KAAA,WACA,IAAAmsG,EAAA95D,EAAAgV,GAAAh2D,KAAA/B,WACAq9G,EAAA,CACA/vG,EAAA0uG,EACAvuG,EAAAwuG,EACAl8G,EAAA+7G,EACAv6E,EAAAw6E,GAEAuB,EAAAv7G,KAAA2R,WAAA2pG,EACAt7G,KAAA2R,UAAA2pG,EAEA13C,GACA53D,EAAA0C,OAAA1O,MAAA6C,aAAA8L,KAAA,yBACAorG,EAAAwB,EAAAv9G,EACAg8G,EAAAuB,EAAA/7E,EACAy6E,EAAAsB,EAAAhwG,EACA2uG,EAAAqB,EAAA7vG,EACAovG,EAAA,CACA90F,KAAA,iBAEW69C,MAAA,yBACX,IAAAmsC,EAAA7R,GAAA8b,EAAAqB,EAAA/vG,GACAiwG,EAAArd,GAAA+b,EAAAoB,EAAA5vG,GAEA,OADAquG,EAAAC,EAAA,KACA,SAAAzsF,GACA0sF,EAAAqB,EAAA/vG,EAAAykG,EAAAziF,GACA2sF,EAAAoB,EAAA5vG,EAAA8vG,EAAAjuF,GACAutF,EAAA,CACA90F,KAAA,QACA0nF,KAAA,cAGW/+F,KAAA,uBACXorG,EAAAuB,EAAAt9G,EACAg8G,EAAAsB,EAAA97E,EACAs7E,EAAA,CACA90F,KAAA,QACA0nF,KAAA,WAEAoN,EAAA,CACA90F,KAAA,gBAIA80F,EAAA,CACA90F,KAAA,eAEA80F,EAAA,CACA90F,KAAA,QACA0nF,KAAA,WAEAoN,EAAA,CACA90F,KAAA,iBA2KAlgB,EAAAyF,EAAA,SAAAsjD,GACA,OAAA5wD,UAAAC,QAEAm8G,EAAAC,KADA/uG,EAAAsjD,IACA,GAAAnjD,GACA5F,GAHAyF,GAMAzF,EAAA4F,EAAA,SAAAmjD,GACA,OAAA5wD,UAAAC,QAEAm8G,EAAAC,IAAA/uG,GAAA,IADAG,EAAAmjD,IAEA/oD,GAHA4F,GAMA5F,EAAAopG,MAAA,SAAArgD,GACA,OAAA5wD,UAAAC,QACAqN,GAAAG,GAAAyuG,IAAAtrD,EAAA,GAAAurD,IAAAvrD,EAAA,IAAmDtjD,EAAA4uG,IAAAtrD,EAAyBnjD,IAAA0uG,IAAAvrD,GAC5E/oD,GAFAyF,GAAAG,EAAA,CAAAyuG,EAAAC,GAAA7uG,EAAA4uG,EAAAzuG,EAAA0uG,EAAA,MAKAt0G,EAAA6d,OAAA,SAAAkrC,GACA,IAAAtG,EAAAtiC,EAAAghC,EAAA9gC,EAAAoH,EAEA,OAAAtvB,UAAAC,QAwBAqN,IACAg9C,EAAAsG,EAAA,GAAA5oC,EAAA4oC,EAAA,GACAnjD,IAAA68C,IAAA,GAAAtiC,IAAA,IACA8zF,EAAA,CAAAxxD,EAAAtiC,GACA1a,EAAAy2D,SAAAzZ,EAAAh9C,EAAAg9C,GAAAtiC,EAAA1a,EAAA0a,IACAA,EAAAsiC,IAAAh7B,EAAAg7B,IAAAtiC,IAAAsH,GACAg7B,GAAA0xD,EAAA,IAAAh0F,GAAAg0F,EAAA,KAAAA,EAAA,CAAA1xD,EAAAtiC,KAGAva,IACAu7C,EAAA4H,EAAA,GAAA1oC,EAAA0oC,EAAA,GACAtjD,IAAA07C,IAAA,GAAA9gC,IAAA,IACA6zF,EAAA,CAAA/yD,EAAA9gC,GACAza,EAAAs2D,SAAA/a,EAAAv7C,EAAAu7C,GAAA9gC,EAAAza,EAAAya,IACAA,EAAA8gC,IAAA15B,EAAA05B,IAAA9gC,IAAAoH,GACA05B,GAAAizD,EAAA,IAAA/zF,GAAA+zF,EAAA,KAAAA,EAAA,CAAAjzD,EAAA9gC,KAGArgB,IAzCAyF,IACAwuG,GACAxxD,EAAAwxD,EAAA,GAAA9zF,EAAA8zF,EAAA,KAEAxxD,EAAA0xD,EAAA,GAAAh0F,EAAAg0F,EAAA,GACA1uG,EAAAy2D,SAAAzZ,EAAAh9C,EAAAy2D,OAAAzZ,GAAAtiC,EAAA1a,EAAAy2D,OAAA/7C,IACAA,EAAAsiC,IAAAh7B,EAAAg7B,IAAAtiC,IAAAsH,KAIA7hB,IACAsuG,GACA/yD,EAAA+yD,EAAA,GAAA7zF,EAAA6zF,EAAA,KAEA/yD,EAAAizD,EAAA,GAAA/zF,EAAA+zF,EAAA,GACAxuG,EAAAs2D,SAAA/a,EAAAv7C,EAAAs2D,OAAA/a,GAAA9gC,EAAAza,EAAAs2D,OAAA77C,IACAA,EAAA8gC,IAAA15B,EAAA05B,IAAA9gC,IAAAoH,KAIAhiB,GAAAG,EAAA,EAAA68C,EAAAtB,GAAA,CAAAhhC,EAAAE,IAAA5a,EAAA,CAAAg9C,EAAAtiC,GAAAva,GAAA,CAAAu7C,EAAA9gC,KAwBArgB,EAAAk0B,MAAA,WAMA,OALAl0B,EAAAgB,UACAmzG,EAAA,MAAAC,EAAA,MACAH,EAAAC,EAAA,MAGAl0G,GAGAA,EAAAgB,MAAA,WACA,QAAAyE,GAAA0uG,EAAA,IAAAA,EAAA,MAAAvuG,GAAAwuG,EAAA,IAAAA,EAAA,IAGAluG,EAAAopD,OAAAtvD,EAAAk7C,EAAA,OAGA,IAAAw5D,GAAA,CACA1wG,EAAA,YACAshB,EAAA,YACA5b,EAAA,YACAf,EAAA,YACAgtG,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAtB,GAAA,+DACA/hC,GAAAlD,GAAAriE,OAAAwpE,GAAAD,WACAs/B,GAAAtjC,GAAAn4D,IACA07F,GAAAD,GAAA,yBAGA,SAAAE,GAAA3kG,GACA,OAAAA,EAAA4kG,cAiDA,SAAAC,GAAA/vG,EAAA4jF,EAAA98E,GACA,SAAA/G,EAAAV,GACA,OAAAW,EAAAX,GAaA,SAAA2wG,EAAAv4F,EAAAlH,GACA,IACA1e,GADA4lB,EAAA,GAAAA,EAAA,IACAlH,EACAze,EAAAgO,EAAAgmD,OAAAmqD,GAAAp+G,GACA,OAAAC,GAAAm+G,GAAAj+G,OAAA,CAAA4xF,EAAAvU,KAAAmzB,GAAA/qF,EAAApU,IAAA,SAAAvF,GACA,OAAAA,EAAA,UACOyS,GAAA,IAAAze,EAAA8xF,EAAA/xF,EAAAo+G,GAAAn+G,EAAA,GAAAm+G,GAAAn+G,GAAAD,EAAAC,EAAA,EAAAA,GAAA,CAAAo+G,GAAA1N,GAAA/qF,EAAAlH,GAAA,IAgDP,OAhEAxQ,EAAA+1D,OAAA,SAAAz2D,GACA,OAAA8wG,GAAAnwG,EAAA81D,OAAAz2D,KAGAU,EAAAqB,OAAA,SAAA/B,GACA,OAAAtN,UAAAC,QACAgO,EAAAoB,OAAA/B,GACAU,GAFAC,EAAAoB,SAAAiC,IAAA8sG,KAcApwG,EAAA4+F,KAAA,SAAA13F,EAAAmpG,GACA,IAAAhvG,EAAArB,EAAAqB,SACAqW,EAAA6mF,GAAAl9F,GACA8mD,EAAA,MAAAjhD,EAAA+oG,EAAAv4F,EAAA,sBAAAxQ,GAAA+oG,EAAAv4F,EAAAxQ,GAGA,SAAAopG,EAAAnlG,GACA,OAAA6a,MAAA7a,KAAAjE,EAAAhH,MAAAiL,EAAAilG,IAAAjlG,EAAA,GAAAklG,GAAAp+G,OAGA,OANAk2D,IAAAjhD,EAAAihD,EAAA,GAAAkoD,EAAAloD,EAAA,IAMAnoD,EAAAqB,OAAAs9F,GAAAt9F,EAAAgvG,EAAA,GACA/qD,MAAA,SAAAn6C,GACA,KAAAmlG,EAAAnlG,EAAAjE,EAAAo+C,MAAAn6C,KACAA,EAAAilG,GAAAjlG,EAAA,GAGA,OAAAA,GAEAxN,KAAA,SAAAwN,GACA,KAAAmlG,EAAAnlG,EAAAjE,EAAAvJ,KAAAwN,KACAA,EAAAilG,IAAAjlG,EAAA,GAGA,OAAAA,IAEOjE,KAGPlH,EAAAyB,MAAA,SAAAyF,EAAAmpG,GACA,IAAA34F,EAAA6mF,GAAAv+F,EAAAqB,UACA8mD,EAAA,MAAAjhD,EAAA+oG,EAAAv4F,EAAA,sBAAAxQ,EAAA+oG,EAAAv4F,EAAAxQ,MAAAhH,OAAA,EACAA,MAAAgH,GACOmpG,GAEP,OADAloD,IAAAjhD,EAAAihD,EAAA,GAAAkoD,EAAAloD,EAAA,IACAjhD,EAAAhH,MAAAwX,EAAA,GAAA04F,IAAA14F,EAAA,MAAA24F,EAAA,IAAAA,IAGArwG,EAAAS,WAAA,WACA,OAAAsG,GAGA/G,EAAA8B,KAAA,WACA,OAAAkuG,GAAA/vG,EAAA6B,OAAA+hF,EAAA98E,IAGAw7F,GAAAviG,EAAAC,GAGA,SAAAmwG,GAAA9uF,GACA,WAAA5Q,KAAA4Q,GA7HAgrD,GAAAikC,IAAA7/F,KAAAte,UAAA29G,cAAA,IAAAr/F,KAAA,4BAAAo/F,GAAAD,GAMAC,GAAA/pF,MAAA,SAAA5tB,GACA,IAAAgT,EAAA,IAAAuF,KAAAvY,GACA,OAAA6tB,MAAA7a,GAAA,KAAAA,GAGA2kG,GAAA/rG,SAAA8rG,GAAA9rG,SACAqlE,GAAAonC,OAAArlC,GAAA,SAAAhgE,GACA,WAAAk+D,GAAA,IAAA3rE,KAAA4nD,MAAAn6C,EAAA,OACG,SAAAA,EAAAqtC,GACHrtC,EAAA+/D,QAAA//D,EAAAmlC,UAAA,IAAA5yC,KAAA4nD,MAAA9M,KACG,SAAArtC,GACH,OAAAA,EAAAoJ,eAEA60D,GAAAqnC,QAAArnC,GAAAonC,OAAAtwG,MACAkpE,GAAAqnC,QAAAt8F,IAAAi1D,GAAAonC,OAAAr8F,IAAAjU,MACAkpE,GAAAsnC,OAAAvlC,GAAA,SAAAhgE,GACA,WAAAk+D,GAAA,IAAA3rE,KAAA4nD,MAAAn6C,EAAA,OACG,SAAAA,EAAAqtC,GACHrtC,EAAA+/D,QAAA//D,EAAAmlC,UAAA,IAAA5yC,KAAA4nD,MAAA9M,KACG,SAAArtC,GACH,OAAAA,EAAAqJ,eAEA40D,GAAAunC,QAAAvnC,GAAAsnC,OAAAxwG,MACAkpE,GAAAunC,QAAAx8F,IAAAi1D,GAAAsnC,OAAAv8F,IAAAjU,MACAkpE,GAAAwnC,KAAAzlC,GAAA,SAAAhgE,GACA,IAAA0lG,EAAA1lG,EAAA6+D,oBAAA,GACA,WAAAX,GAAA,MAAA3rE,KAAA4nD,MAAAn6C,EAAA,KAAA0lG,QACG,SAAA1lG,EAAAqtC,GACHrtC,EAAA+/D,QAAA//D,EAAAmlC,UAAA,KAAA5yC,KAAA4nD,MAAA9M,KACG,SAAArtC,GACH,OAAAA,EAAAsJ,aAEA20D,GAAA0nC,MAAA1nC,GAAAwnC,KAAA1wG,MACAkpE,GAAA0nC,MAAA38F,IAAAi1D,GAAAwnC,KAAAz8F,IAAAjU,MACAkpE,GAAA2nC,MAAA5lC,GAAA,SAAAhgE,GAGA,OAFAA,EAAAi+D,GAAAmG,IAAApkE,IACA8+D,QAAA,GACA9+D,GACG,SAAAA,EAAAqtC,GACHrtC,EAAA2/D,SAAA3/D,EAAAyJ,WAAA4jC,IACG,SAAArtC,GACH,OAAAA,EAAAyJ,aAEAw0D,GAAA+C,OAAA/C,GAAA2nC,MAAA7wG,MACAkpE,GAAA+C,OAAAh4D,IAAAi1D,GAAA2nC,MAAA58F,IAAAjU,MA8EA,IAAAgwG,GAAA,qGACAc,GAAA,EAAA5nC,GAAAonC,OAAA,IAAApnC,GAAAonC,OAAA,IAAApnC,GAAAonC,OAAA,KAAApnC,GAAAonC,OAAA,KAAApnC,GAAAsnC,OAAA,IAAAtnC,GAAAsnC,OAAA,IAAAtnC,GAAAsnC,OAAA,KAAAtnC,GAAAsnC,OAAA,KAAAtnC,GAAAwnC,KAAA,IAAAxnC,GAAAwnC,KAAA,IAAAxnC,GAAAwnC,KAAA,IAAAxnC,GAAAwnC,KAAA,KAAAxnC,GAAAmG,IAAA,IAAAnG,GAAAmG,IAAA,IAAAnG,GAAAqG,KAAA,IAAArG,GAAA2nC,MAAA,IAAA3nC,GAAA2nC,MAAA,IAAA3nC,GAAAkG,KAAA,IACA2hC,GAAA3kC,GAAAj4D,MAAA,iBAAAtW,GACA,OAAAA,EAAAuW,oBACG,gBAAAvW,GACH,OAAAA,EAAAwW,eACG,kBAAAxW,GACH,OAAAA,EAAAyW,eACG,kBAAAzW,GACH,OAAAA,EAAA0W,aACG,kBAAA1W,GACH,OAAAA,EAAA2W,UAAA,GAAA3W,EAAA4W,YACG,kBAAA5W,GACH,UAAAA,EAAA4W,YACG,eAAA5W,GACH,OAAAA,EAAA6W,aACG,MAAAqiE,MACHk5B,GAAA,CACAjwG,MAAA,SAAAoB,EAAAC,EAAAg0C,GACA,OAAAx1C,EAAAG,MAAAxC,KAAAC,KAAA2D,EAAAi0C,MAAAh0C,EAAAg0C,GAAAjyC,IAAA8sG,KAEA9qD,MAAA2C,EACAtqD,KAAAsqD,GAEA+oD,GAAA1hC,KAAAlG,GAAAkG,KAEAlG,GAAAppE,MAAA,WACA,OAAAgwG,GAAAjwG,EAAAC,MAAAC,SAAA+wG,GAAAC,KAGA,IAAAC,GAAAF,GAAA1tG,IAAA,SAAAoiD,GACA,OAAAA,EAAA,GAAAvxC,IAAAuxC,EAAA,MAEAyrD,GAAAvB,GAAAv7F,MAAA,iBAAAtW,GACA,OAAAA,EAAA6rE,uBACG,gBAAA7rE,GACH,OAAAA,EAAAgsE,kBACG,kBAAAhsE,GACH,OAAAA,EAAA8rE,kBACG,kBAAA9rE,GACH,OAAAA,EAAA4rE,gBACG,kBAAA5rE,GACH,OAAAA,EAAA0rE,aAAA,GAAA1rE,EAAAyrE,eACG,kBAAAzrE,GACH,UAAAA,EAAAyrE,eACG,eAAAzrE,GACH,OAAAA,EAAA+rE,gBACG,MAAAmN,MAeH,SAAAm6B,GAAAxtC,GACA,OAAA36B,KAAAljB,MAAA69C,EAAA/6B,cAOA,SAAAwoE,GAAAztC,GACA,IAAA1jE,EAAAijD,EAAAmuD,cAEA,OADApxG,EAAAqxG,WAAApuD,EAAAquD,MACAtxG,EAAAuxG,yBAAA7tC,EAAA/6B,cAzBAqoE,GAAA5hC,KAAAlG,GAAAkG,KAAAn7D,IAEAi1D,GAAAppE,MAAAmU,IAAA,WACA,OAAA67F,GAAAjwG,EAAAC,MAAAC,SAAAixG,GAAAC,KAGApxG,EAAAjF,KAAA4oE,GAAA,SAAAE,GACA,OAAAA,EAAA/6B,eAGA9oC,EAAAqzB,KAAA,SAAAiV,EAAA3iB,GACA,OAAAi+C,GAAAt7B,EAAA,mBAAA+oE,GAAA1rF,IAOA3lB,EAAA+W,KAAA,SAAAuxB,EAAA3iB,GACA,OAAAi+C,GAAAt7B,EAAA,YAAAgpE,GAAA3rF,IASA3lB,EAAA6rD,IAAA8X,GAAA,SAAAE,GACA,OAAAA,EAAA8tC,cAEgD39G,KAAAgM,UAAyB4C,KAAAogD,EAAA,oBAATD,EAAA,GAASA,EAAAxwD,KAAAZ,EAAAyB,EAAAzB,EAAA2G,GAAAyqD,KAAAzqD,EAAA3G,QAAAqxD,GA17ZzE","file":"static/js/50.390d0d6e.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar c3 = void 0;\n\nvar C3Chart = function (_React$Component) {\n  _inherits(C3Chart, _React$Component);\n\n  function C3Chart() {\n    _classCallCheck(this, C3Chart);\n\n    return _possibleConstructorReturn(this, (C3Chart.__proto__ || Object.getPrototypeOf(C3Chart)).apply(this, arguments));\n  }\n\n  _createClass(C3Chart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      c3 = require('c3');\n      this.updateChart(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      this.updateChart(newProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroyChart();\n    }\n  }, {\n    key: 'destroyChart',\n    value: function destroyChart() {\n      try {\n        this.chart = this.chart.destroy();\n      } catch (err) {\n        throw new Error('Internal C3 error', err);\n      }\n    }\n  }, {\n    key: 'generateChart',\n    value: function generateChart(mountNode, config) {\n      var newConfig = _extends({\n        bindto: mountNode\n      }, config);\n\n      return c3.generate(newConfig);\n    }\n  }, {\n    key: 'loadNewData',\n    value: function loadNewData(data) {\n      this.chart.load(data);\n    }\n  }, {\n    key: 'unloadData',\n    value: function unloadData() {\n      this.chart.unload();\n    }\n  }, {\n    key: 'updateChart',\n    value: function updateChart(config) {\n      if (!this.chart) {\n        this.chart = this.generateChart((0, _reactDom.findDOMNode)(this), config);\n      }\n\n      if (config.unloadBeforeLoad) {\n        this.unloadData();\n      }\n\n      this.loadNewData(config.data);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = this.props.className ? ' ' + this.props.className : '';\n      var style = this.props.style ? this.props.style : {};\n      return _react2.default.createElement('div', {\n        className: className,\n        style: style\n      });\n    }\n  }], [{\n    key: 'displayName',\n    get: function get() {\n      return 'C3Chart';\n    }\n  }, {\n    key: 'propTypes',\n    get: function get() {\n      return {\n        data: _propTypes2.default.object.isRequired,\n        title: _propTypes2.default.object,\n        size: _propTypes2.default.object,\n        padding: _propTypes2.default.object,\n        color: _propTypes2.default.object,\n        interaction: _propTypes2.default.object,\n        transition: _propTypes2.default.object,\n        oninit: _propTypes2.default.func,\n        onrendered: _propTypes2.default.func,\n        onmouseover: _propTypes2.default.func,\n        onmouseout: _propTypes2.default.func,\n        onresize: _propTypes2.default.func,\n        onresized: _propTypes2.default.func,\n        axis: _propTypes2.default.object,\n        grid: _propTypes2.default.object,\n        regions: _propTypes2.default.array,\n        legend: _propTypes2.default.object,\n        tooltip: _propTypes2.default.object,\n        subchart: _propTypes2.default.object,\n        zoom: _propTypes2.default.object,\n        point: _propTypes2.default.object,\n        line: _propTypes2.default.object,\n        area: _propTypes2.default.object,\n        bar: _propTypes2.default.object,\n        pie: _propTypes2.default.object,\n        donut: _propTypes2.default.object,\n        gauge: _propTypes2.default.object,\n        className: _propTypes2.default.string,\n        style: _propTypes2.default.object,\n        unloadBeforeLoad: _propTypes2.default.bool\n      };\n    }\n  }]);\n\n  return C3Chart;\n}(_react2.default.Component);\n\nexports.default = C3Chart;","/* @license C3.js v0.4.23 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.c3 = factory();\n})(this, function () {\n  'use strict';\n\n  var CLASS = {\n    target: 'c3-target',\n    chart: 'c3-chart',\n    chartLine: 'c3-chart-line',\n    chartLines: 'c3-chart-lines',\n    chartBar: 'c3-chart-bar',\n    chartBars: 'c3-chart-bars',\n    chartText: 'c3-chart-text',\n    chartTexts: 'c3-chart-texts',\n    chartArc: 'c3-chart-arc',\n    chartArcs: 'c3-chart-arcs',\n    chartArcsTitle: 'c3-chart-arcs-title',\n    chartArcsBackground: 'c3-chart-arcs-background',\n    chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n    chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n    chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n    selectedCircle: 'c3-selected-circle',\n    selectedCircles: 'c3-selected-circles',\n    eventRect: 'c3-event-rect',\n    eventRects: 'c3-event-rects',\n    eventRectsSingle: 'c3-event-rects-single',\n    eventRectsMultiple: 'c3-event-rects-multiple',\n    zoomRect: 'c3-zoom-rect',\n    brush: 'c3-brush',\n    focused: 'c3-focused',\n    defocused: 'c3-defocused',\n    region: 'c3-region',\n    regions: 'c3-regions',\n    title: 'c3-title',\n    tooltipContainer: 'c3-tooltip-container',\n    tooltip: 'c3-tooltip',\n    tooltipName: 'c3-tooltip-name',\n    shape: 'c3-shape',\n    shapes: 'c3-shapes',\n    line: 'c3-line',\n    lines: 'c3-lines',\n    bar: 'c3-bar',\n    bars: 'c3-bars',\n    circle: 'c3-circle',\n    circles: 'c3-circles',\n    arc: 'c3-arc',\n    arcLabelLine: 'c3-arc-label-line',\n    arcs: 'c3-arcs',\n    area: 'c3-area',\n    areas: 'c3-areas',\n    empty: 'c3-empty',\n    text: 'c3-text',\n    texts: 'c3-texts',\n    gaugeValue: 'c3-gauge-value',\n    grid: 'c3-grid',\n    gridLines: 'c3-grid-lines',\n    xgrid: 'c3-xgrid',\n    xgrids: 'c3-xgrids',\n    xgridLine: 'c3-xgrid-line',\n    xgridLines: 'c3-xgrid-lines',\n    xgridFocus: 'c3-xgrid-focus',\n    ygrid: 'c3-ygrid',\n    ygrids: 'c3-ygrids',\n    ygridLine: 'c3-ygrid-line',\n    ygridLines: 'c3-ygrid-lines',\n    axis: 'c3-axis',\n    axisX: 'c3-axis-x',\n    axisXLabel: 'c3-axis-x-label',\n    axisY: 'c3-axis-y',\n    axisYLabel: 'c3-axis-y-label',\n    axisY2: 'c3-axis-y2',\n    axisY2Label: 'c3-axis-y2-label',\n    legendBackground: 'c3-legend-background',\n    legendItem: 'c3-legend-item',\n    legendItemEvent: 'c3-legend-item-event',\n    legendItemTile: 'c3-legend-item-tile',\n    legendItemHidden: 'c3-legend-item-hidden',\n    legendItemFocused: 'c3-legend-item-focused',\n    dragarea: 'c3-dragarea',\n    EXPANDED: '_expanded_',\n    SELECTED: '_selected_',\n    INCLUDED: '_included_'\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var isValue = function isValue(v) {\n    return v || v === 0;\n  };\n\n  var isFunction = function isFunction(o) {\n    return typeof o === 'function';\n  };\n\n  var isArray = function isArray(o) {\n    return Array.isArray(o);\n  };\n\n  var isString = function isString(o) {\n    return typeof o === 'string';\n  };\n\n  var isUndefined = function isUndefined(v) {\n    return typeof v === 'undefined';\n  };\n\n  var isDefined = function isDefined(v) {\n    return typeof v !== 'undefined';\n  };\n\n  var ceil10 = function ceil10(v) {\n    return Math.ceil(v / 10) * 10;\n  };\n\n  var asHalfPixel = function asHalfPixel(n) {\n    return Math.ceil(n) + 0.5;\n  };\n\n  var diffDomain = function diffDomain(d) {\n    return d[1] - d[0];\n  };\n\n  var isEmpty = function isEmpty(o) {\n    return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n  };\n\n  var notEmpty = function notEmpty(o) {\n    return !c3_chart_internal_fn.isEmpty(o);\n  };\n\n  var getOption = function getOption(options, key, defaultValue) {\n    return isDefined(options[key]) ? options[key] : defaultValue;\n  };\n\n  var hasValue = function hasValue(dict, value) {\n    var found = false;\n    Object.keys(dict).forEach(function (key) {\n      if (dict[key] === value) {\n        found = true;\n      }\n    });\n    return found;\n  };\n\n  var sanitise = function sanitise(str) {\n    return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n  };\n\n  var getPathBox = function getPathBox(path) {\n    var box = path.getBoundingClientRect(),\n        items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n        minX = items[0].x,\n        minY = Math.min(items[0].y, items[1].y);\n    return {\n      x: minX,\n      y: minY,\n      width: box.width,\n      height: box.height\n    };\n  };\n\n  var c3_axis_fn;\n  var c3_axis_internal_fn;\n\n  function AxisInternal(component, params) {\n    var internal = this;\n    internal.component = component;\n    internal.params = params || {};\n    internal.d3 = component.d3;\n    internal.scale = internal.d3.scale.linear();\n    internal.range;\n    internal.orient = \"bottom\";\n    internal.innerTickSize = 6;\n    internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n    internal.tickPadding = 3;\n    internal.tickValues = null;\n    internal.tickFormat;\n    internal.tickArguments;\n    internal.tickOffset = 0;\n    internal.tickCulling = true;\n    internal.tickCentered;\n    internal.tickTextCharSize;\n    internal.tickTextRotate = internal.params.tickTextRotate;\n    internal.tickLength;\n    internal.axis = internal.generateAxis();\n  }\n\n  c3_axis_internal_fn = AxisInternal.prototype;\n\n  c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n    selection.attr(\"transform\", function (d) {\n      return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n    });\n  };\n\n  c3_axis_internal_fn.axisY = function (selection, y) {\n    selection.attr(\"transform\", function (d) {\n      return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n    });\n  };\n\n  c3_axis_internal_fn.scaleExtent = function (domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  };\n\n  c3_axis_internal_fn.generateTicks = function (scale) {\n    var internal = this;\n    var i,\n        domain,\n        ticks = [];\n\n    if (scale.ticks) {\n      return scale.ticks.apply(scale, internal.tickArguments);\n    }\n\n    domain = scale.domain();\n\n    for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n      ticks.push(i);\n    }\n\n    if (ticks.length > 0 && ticks[0] > 0) {\n      ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n    }\n\n    return ticks;\n  };\n\n  c3_axis_internal_fn.copyScale = function () {\n    var internal = this;\n    var newScale = internal.scale.copy(),\n        domain;\n\n    if (internal.params.isCategory) {\n      domain = internal.scale.domain();\n      newScale.domain([domain[0], domain[1] - 1]);\n    }\n\n    return newScale;\n  };\n\n  c3_axis_internal_fn.textFormatted = function (v) {\n    var internal = this,\n        formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n    return typeof formatted !== 'undefined' ? formatted : '';\n  };\n\n  c3_axis_internal_fn.updateRange = function () {\n    var internal = this;\n    internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n    return internal.range;\n  };\n\n  c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n    var internal = this;\n\n    if (internal.tickTextCharSize) {\n      return internal.tickTextCharSize;\n    }\n\n    var size = {\n      h: 11.5,\n      w: 5.5\n    };\n    tick.select('text').text(function (d) {\n      return internal.textFormatted(d);\n    }).each(function (d) {\n      var box = this.getBoundingClientRect(),\n          text = internal.textFormatted(d),\n          h = box.height,\n          w = text ? box.width / text.length : undefined;\n\n      if (h && w) {\n        size.h = h;\n        size.w = w;\n      }\n    }).text('');\n    internal.tickTextCharSize = size;\n    return size;\n  };\n\n  c3_axis_internal_fn.transitionise = function (selection) {\n    return this.params.withoutTransition ? selection : this.d3.transition(selection);\n  };\n\n  c3_axis_internal_fn.isVertical = function () {\n    return this.orient === 'left' || this.orient === 'right';\n  };\n\n  c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\n    var internal = this;\n    var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\n\n    if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n      splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n    }\n\n    return splitted.map(function (s) {\n      return {\n        index: i,\n        splitted: s,\n        length: splitted.length\n      };\n    });\n  };\n\n  c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\n    var internal = this,\n        tickText = internal.textFormatted(d),\n        maxWidth = internal.params.tickWidth,\n        subtext,\n        spaceIndex,\n        textWidth,\n        splitted = [];\n\n    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n      return tickText;\n    }\n\n    if (!maxWidth || maxWidth <= 0) {\n      maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\n    }\n\n    function split(splitted, text) {\n      spaceIndex = undefined;\n\n      for (var i = 1; i < text.length; i++) {\n        if (text.charAt(i) === ' ') {\n          spaceIndex = i;\n        }\n\n        subtext = text.substr(0, i + 1);\n        textWidth = internal.tickTextCharSize.w * subtext.length; // if text width gets over tick width, split by space index or crrent index\n\n        if (maxWidth < textWidth) {\n          return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n        }\n      }\n\n      return splitted.concat(text);\n    }\n\n    return split(splitted, tickText + \"\");\n  };\n\n  c3_axis_internal_fn.ellipsify = function (splitted, max) {\n    if (splitted.length <= max) {\n      return splitted;\n    }\n\n    var ellipsified = splitted.slice(0, max);\n    var remaining = 3;\n\n    for (var i = max - 1; i >= 0; i--) {\n      var available = ellipsified[i].length;\n      ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n      remaining -= available;\n\n      if (remaining <= 0) {\n        break;\n      }\n    }\n\n    return ellipsified;\n  };\n\n  c3_axis_internal_fn.updateTickLength = function () {\n    var internal = this;\n    internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n  };\n\n  c3_axis_internal_fn.lineY2 = function (d) {\n    var internal = this,\n        tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n    return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n  };\n\n  c3_axis_internal_fn.textY = function () {\n    var internal = this,\n        rotate = internal.tickTextRotate;\n    return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n  };\n\n  c3_axis_internal_fn.textTransform = function () {\n    var internal = this,\n        rotate = internal.tickTextRotate;\n    return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n  };\n\n  c3_axis_internal_fn.textTextAnchor = function () {\n    var internal = this,\n        rotate = internal.tickTextRotate;\n    return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n  };\n\n  c3_axis_internal_fn.tspanDx = function () {\n    var internal = this,\n        rotate = internal.tickTextRotate;\n    return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n  };\n\n  c3_axis_internal_fn.tspanDy = function (d, i) {\n    var internal = this,\n        dy = internal.tickTextCharSize.h;\n\n    if (i === 0) {\n      if (internal.isVertical()) {\n        dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n      } else {\n        dy = \".71em\";\n      }\n    }\n\n    return dy;\n  };\n\n  c3_axis_internal_fn.generateAxis = function () {\n    var internal = this,\n        d3 = internal.d3,\n        params = internal.params;\n\n    function axis(g) {\n      g.each(function () {\n        var g = axis.g = d3.select(this);\n        var scale0 = this.__chart__ || internal.scale,\n            scale1 = this.__chart__ = internal.copyScale();\n        var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n            // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n        tickExit = tick.exit().remove(),\n            tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\n            tickTransform,\n            tickX,\n            tickY;\n\n        if (params.isCategory) {\n          internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n          tickX = internal.tickCentered ? 0 : internal.tickOffset;\n          tickY = internal.tickCentered ? internal.tickOffset : 0;\n        } else {\n          internal.tickOffset = tickX = 0;\n        }\n\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        internal.updateRange();\n        internal.updateTickLength();\n        internal.updateTickTextCharSize(g.select('.tick'));\n        var lineUpdate = tickUpdate.select(\"line\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\n          return internal.tspanData(d, i, ticks, scale1);\n        });\n        tspanUpdate.enter().append('tspan');\n        tspanUpdate.exit().remove();\n        tspanUpdate.text(function (d) {\n          return d.splitted;\n        });\n        var path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path)); // TODO: each attr should be one function and change its behavior by internal.orient, probably\n\n        switch (internal.orient) {\n          case \"bottom\":\n            {\n              tickTransform = internal.axisX;\n              lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                return internal.lineY2(d, i);\n              });\n              textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return internal.textY(d, i);\n              }).attr(\"transform\", function (d, i) {\n                return internal.textTransform(d, i);\n              }).style(\"text-anchor\", function (d, i) {\n                return internal.textTextAnchor(d, i);\n              });\n              tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                return internal.tspanDy(d, i);\n              }).attr('dx', function (d, i) {\n                return internal.tspanDx(d, i);\n              });\n              pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n              break;\n            }\n\n          case \"top\":\n            {\n              // TODO: rotated tick text\n              tickTransform = internal.axisX;\n              lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                return -1 * internal.lineY2(d, i);\n              });\n              textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n              }).attr(\"transform\", function (d, i) {\n                return internal.textTransform(d, i);\n              }).style(\"text-anchor\", function (d, i) {\n                return internal.textTextAnchor(d, i);\n              });\n              tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                return internal.tspanDy(d, i);\n              }).attr('dx', function (d, i) {\n                return internal.tspanDx(d, i);\n              });\n              pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n              break;\n            }\n\n          case \"left\":\n            {\n              tickTransform = internal.axisY;\n              lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n              textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n              tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                return internal.tspanDy(d, i);\n              });\n              pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n              break;\n            }\n\n          case \"right\":\n            {\n              tickTransform = internal.axisY;\n              lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n              textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n              tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                return internal.tspanDy(d, i);\n              });\n              pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n              break;\n            }\n        }\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, internal.tickOffset);\n        }\n\n        tickEnter.call(tickTransform, scale0, internal.tickOffset);\n        tickUpdate.call(tickTransform, scale1, internal.tickOffset);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) {\n        return internal.scale;\n      }\n\n      internal.scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) {\n        return internal.orient;\n      }\n\n      internal.orient = x in {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1\n      } ? x + \"\" : \"bottom\";\n      return axis;\n    };\n\n    axis.tickFormat = function (format) {\n      if (!arguments.length) {\n        return internal.tickFormat;\n      }\n\n      internal.tickFormat = format;\n      return axis;\n    };\n\n    axis.tickCentered = function (isCentered) {\n      if (!arguments.length) {\n        return internal.tickCentered;\n      }\n\n      internal.tickCentered = isCentered;\n      return axis;\n    };\n\n    axis.tickOffset = function () {\n      return internal.tickOffset;\n    };\n\n    axis.tickInterval = function () {\n      var interval, length;\n\n      if (params.isCategory) {\n        interval = internal.tickOffset * 2;\n      } else {\n        length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n        interval = length / axis.g.selectAll('line').size();\n      }\n\n      return interval === Infinity ? 0 : interval;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) {\n        return internal.tickArguments;\n      }\n\n      internal.tickArguments = arguments;\n      return axis;\n    };\n\n    axis.tickCulling = function (culling) {\n      if (!arguments.length) {\n        return internal.tickCulling;\n      }\n\n      internal.tickCulling = culling;\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (typeof x === 'function') {\n        internal.tickValues = function () {\n          return x(internal.scale.domain());\n        };\n      } else {\n        if (!arguments.length) {\n          return internal.tickValues;\n        }\n\n        internal.tickValues = x;\n      }\n\n      return axis;\n    };\n\n    return axis;\n  };\n\n  var Axis = function (_Component) {\n    inherits(Axis, _Component);\n\n    function Axis(owner) {\n      classCallCheck(this, Axis);\n      var fn = {\n        fn: c3_axis_fn,\n        internal: {\n          fn: c3_axis_internal_fn\n        }\n      };\n\n      var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n      _this.d3 = owner.d3;\n      _this.internal = AxisInternal;\n      return _this;\n    }\n\n    return Axis;\n  }(Component);\n\n  c3_axis_fn = Axis.prototype;\n\n  c3_axis_fn.init = function init() {\n    var $$ = this.owner,\n        config = $$.config,\n        main = $$.main;\n    $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n    $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n    $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n    $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n    $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2) // clip-path?\n    .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n    $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n  };\n\n  c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n      isCategory: $$.isCategorized(),\n      withOuterTick: withOuterTick,\n      tickMultiline: config.axis_x_tick_multiline,\n      tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n      tickWidth: config.axis_x_tick_width,\n      tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n      withoutTransition: withoutTransition\n    },\n        axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n    if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n      tickValues = tickValues.map(function (v) {\n        return $$.parseDate(v);\n      });\n    } // Set tick\n\n\n    axis.tickFormat(tickFormat).tickValues(tickValues);\n\n    if ($$.isCategorized()) {\n      axis.tickCentered(config.axis_x_tick_centered);\n\n      if (isEmpty(config.axis_x_tick_culling)) {\n        config.axis_x_tick_culling = false;\n      }\n    }\n\n    return axis;\n  };\n\n  c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n    var $$ = this.owner,\n        config = $$.config,\n        tickValues;\n\n    if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n      tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n    }\n\n    if (axis) {\n      axis.tickValues(tickValues);\n    } else {\n      $$.xAxis.tickValues(tickValues);\n      $$.subXAxis.tickValues(tickValues);\n    }\n\n    return tickValues;\n  };\n\n  c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n      withOuterTick: withOuterTick,\n      withoutTransition: withoutTransition,\n      tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n    },\n        axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n\n    if ($$.isTimeSeriesY()) {\n      axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n    } else {\n      axis.tickValues(tickValues);\n    }\n\n    return axis;\n  };\n\n  c3_axis_fn.getId = function getId(id) {\n    var config = this.owner.config;\n    return id in config.data_axes ? config.data_axes[id] : 'y';\n  };\n\n  c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n    var $$ = this.owner,\n        config = $$.config,\n        format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n      return v < 0 ? v.toFixed(0) : v;\n    };\n\n    if (config.axis_x_tick_format) {\n      if (isFunction(config.axis_x_tick_format)) {\n        format = config.axis_x_tick_format;\n      } else if ($$.isTimeSeries()) {\n        format = function format(date) {\n          return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n        };\n      }\n    }\n\n    return isFunction(format) ? function (v) {\n      return format.call($$, v);\n    } : format;\n  };\n\n  c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n    return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n  };\n\n  c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n  };\n\n  c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n  };\n\n  c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n  };\n\n  c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n    var $$ = this.owner,\n        config = $$.config,\n        option;\n\n    if (axisId === 'y') {\n      option = config.axis_y_label;\n    } else if (axisId === 'y2') {\n      option = config.axis_y2_label;\n    } else if (axisId === 'x') {\n      option = config.axis_x_label;\n    }\n\n    return option;\n  };\n\n  c3_axis_fn.getLabelText = function getLabelText(axisId) {\n    var option = this.getLabelOptionByAxisId(axisId);\n    return isString(option) ? option : option ? option.text : null;\n  };\n\n  c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n    var $$ = this.owner,\n        config = $$.config,\n        option = this.getLabelOptionByAxisId(axisId);\n\n    if (isString(option)) {\n      if (axisId === 'y') {\n        config.axis_y_label = text;\n      } else if (axisId === 'y2') {\n        config.axis_y2_label = text;\n      } else if (axisId === 'x') {\n        config.axis_x_label = text;\n      }\n    } else if (option) {\n      option.text = text;\n    }\n  };\n\n  c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n    var option = this.getLabelOptionByAxisId(axisId),\n        position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n    return {\n      isInner: position.indexOf('inner') >= 0,\n      isOuter: position.indexOf('outer') >= 0,\n      isLeft: position.indexOf('left') >= 0,\n      isCenter: position.indexOf('center') >= 0,\n      isRight: position.indexOf('right') >= 0,\n      isTop: position.indexOf('top') >= 0,\n      isMiddle: position.indexOf('middle') >= 0,\n      isBottom: position.indexOf('bottom') >= 0\n    };\n  };\n\n  c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n    return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n  };\n\n  c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n    return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n  };\n\n  c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n    return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n  };\n\n  c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n    return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n  };\n\n  c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n    return this.getLabelText('x');\n  };\n\n  c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n    return this.getLabelText('y');\n  };\n\n  c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n    return this.getLabelText('y2');\n  };\n\n  c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n    var $$ = this.owner;\n\n    if (forHorizontal) {\n      return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n    } else {\n      return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n    }\n  };\n\n  c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n      return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n    } else {\n      return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n    }\n  };\n\n  c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n      return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n    } else {\n      return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n    }\n  };\n\n  c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n    return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n  };\n\n  c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n  };\n\n  c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n  };\n\n  c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n    return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n  };\n\n  c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n  };\n\n  c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n  };\n\n  c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n    var $$ = this.owner,\n        config = $$.config,\n        position = this.getXAxisLabelPosition();\n\n    if (config.axis_rotated) {\n      return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n    } else {\n      return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n    }\n  };\n\n  c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n    var $$ = this.owner,\n        position = this.getYAxisLabelPosition();\n\n    if ($$.config.axis_rotated) {\n      return position.isInner ? \"-0.5em\" : \"3em\";\n    } else {\n      return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n    }\n  };\n\n  c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n    var $$ = this.owner,\n        position = this.getY2AxisLabelPosition();\n\n    if ($$.config.axis_rotated) {\n      return position.isInner ? \"1.2em\" : \"-2.2em\";\n    } else {\n      return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n    }\n  };\n\n  c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n  };\n\n  c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n  };\n\n  c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n  };\n\n  c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n    var $$ = this.owner,\n        config = $$.config,\n        maxWidth = 0,\n        targetsToShow,\n        scale,\n        axis,\n        dummy,\n        svg;\n\n    if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n      return $$.currentMaxTickWidths[id];\n    }\n\n    if ($$.svg) {\n      targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\n      if (id === 'y') {\n        scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n        axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n      } else if (id === 'y2') {\n        scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n        axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n      } else {\n        scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n        axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n        this.updateXAxisTickValues(targetsToShow, axis);\n      }\n\n      dummy = $$.d3.select('body').append('div').classed('c3', true);\n      svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n        $$.d3.select(this).selectAll('text').each(function () {\n          var box = this.getBoundingClientRect();\n\n          if (maxWidth < box.width) {\n            maxWidth = box.width;\n          }\n        });\n        dummy.remove();\n      });\n    }\n\n    $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n    return $$.currentMaxTickWidths[id];\n  };\n\n  c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n    var $$ = this.owner;\n    var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n        axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n        axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n    (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n    (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n    (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n  };\n\n  c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n    var p = typeof padding === 'number' ? padding : padding[key];\n\n    if (!isValue(p)) {\n      return defaultValue;\n    }\n\n    if (padding.unit === 'ratio') {\n      return padding[key] * domainLength;\n    } // assume padding is pixels if unit is not specified\n\n\n    return this.convertPixelsToAxisPadding(p, domainLength);\n  };\n\n  c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n    var $$ = this.owner,\n        length = $$.config.axis_rotated ? $$.width : $$.height;\n    return domainLength * (pixels / length);\n  };\n\n  c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n    var tickValues = values,\n        targetCount,\n        start,\n        end,\n        count,\n        interval,\n        i,\n        tickValue;\n\n    if (tickCount) {\n      targetCount = isFunction(tickCount) ? tickCount() : tickCount; // compute ticks according to tickCount\n\n      if (targetCount === 1) {\n        tickValues = [values[0]];\n      } else if (targetCount === 2) {\n        tickValues = [values[0], values[values.length - 1]];\n      } else if (targetCount > 2) {\n        count = targetCount - 2;\n        start = values[0];\n        end = values[values.length - 1];\n        interval = (end - start) / (count + 1); // re-construct unique values\n\n        tickValues = [start];\n\n        for (i = 0; i < count; i++) {\n          tickValue = +start + interval * (i + 1);\n          tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n        }\n\n        tickValues.push(end);\n      }\n    }\n\n    if (!forTimeSeries) {\n      tickValues = tickValues.sort(function (a, b) {\n        return a - b;\n      });\n    }\n\n    return tickValues;\n  };\n\n  c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n    var $$ = this.owner,\n        axes = $$.axes;\n    return {\n      axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n      axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n      axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n      axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n    };\n  };\n\n  c3_axis_fn.redraw = function redraw(transitions, isHidden) {\n    var $$ = this.owner;\n    $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n    transitions.axisX.call($$.xAxis);\n    transitions.axisY.call($$.yAxis);\n    transitions.axisY2.call($$.y2Axis);\n    transitions.axisSubX.call($$.subXAxis);\n  };\n\n  var c3 = {\n    version: \"0.4.23\"\n  };\n  var c3_chart_fn;\n  var c3_chart_internal_fn;\n\n  function Component(owner, componentKey, fn) {\n    this.owner = owner;\n    c3.chart.internal[componentKey] = fn;\n  }\n\n  function Chart(config) {\n    var $$ = this.internal = new ChartInternal(this);\n    $$.loadConfig(config);\n    $$.beforeInit(config);\n    $$.init();\n    $$.afterInit(config); // bind \"this\" to nested API\n\n    (function bindThis(fn, target, argThis) {\n      Object.keys(fn).forEach(function (key) {\n        target[key] = fn[key].bind(argThis);\n\n        if (Object.keys(fn[key]).length > 0) {\n          bindThis(fn[key], target[key], argThis);\n        }\n      });\n    })(c3_chart_fn, this, this);\n  }\n\n  function ChartInternal(api) {\n    var $$ = this;\n    $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n    $$.api = api;\n    $$.config = $$.getDefaultConfig();\n    $$.data = {};\n    $$.cache = {};\n    $$.axes = {};\n  }\n\n  c3.generate = function (config) {\n    return new Chart(config);\n  };\n\n  c3.chart = {\n    fn: Chart.prototype,\n    internal: {\n      fn: ChartInternal.prototype\n    }\n  };\n  c3_chart_fn = c3.chart.fn;\n  c3_chart_internal_fn = c3.chart.internal.fn;\n\n  c3_chart_internal_fn.beforeInit = function () {// can do something\n  };\n\n  c3_chart_internal_fn.afterInit = function () {// can do something\n  };\n\n  c3_chart_internal_fn.init = function () {\n    var $$ = this,\n        config = $$.config;\n    $$.initParams();\n\n    if (config.data_url) {\n      $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n    } else if (config.data_json) {\n      $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n    } else if (config.data_rows) {\n      $$.initWithData($$.convertRowsToData(config.data_rows));\n    } else if (config.data_columns) {\n      $$.initWithData($$.convertColumnsToData(config.data_columns));\n    } else {\n      throw Error('url or json or rows or columns is required.');\n    }\n  };\n\n  c3_chart_internal_fn.initParams = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config; // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n\n    $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n    $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n    $$.dragging = false;\n    $$.flowing = false;\n    $$.cancelClick = false;\n    $$.mouseover = false;\n    $$.transiting = false;\n    $$.color = $$.generateColor();\n    $$.levelColor = $$.generateLevelColor();\n    $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n    $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n    $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n      return d.getMilliseconds();\n    }], [\":%S\", function (d) {\n      return d.getSeconds();\n    }], [\"%I:%M\", function (d) {\n      return d.getMinutes();\n    }], [\"%I %p\", function (d) {\n      return d.getHours();\n    }], [\"%-m/%-d\", function (d) {\n      return d.getDay() && d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n      return d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n      return d.getMonth();\n    }], [\"%Y/%-m/%-d\", function () {\n      return true;\n    }]]);\n    $$.hiddenTargetIds = [];\n    $$.hiddenLegendIds = [];\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n    $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n    $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n    $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n    $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n    $$.isLegendRight = config.legend_position === 'right';\n    $$.isLegendInset = config.legend_position === 'inset';\n    $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n    $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n    $$.legendStep = 0;\n    $$.legendItemWidth = 0;\n    $$.legendItemHeight = 0;\n    $$.currentMaxTickWidths = {\n      x: 0,\n      y: 0,\n      y2: 0\n    };\n    $$.rotated_padding_left = 30;\n    $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n    $$.rotated_padding_top = 5;\n    $$.withoutFadeIn = {};\n    $$.intervalForObserveInserted = undefined;\n    $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n  };\n\n  c3_chart_internal_fn.initChartElements = function () {\n    if (this.initBar) {\n      this.initBar();\n    }\n\n    if (this.initLine) {\n      this.initLine();\n    }\n\n    if (this.initArc) {\n      this.initArc();\n    }\n\n    if (this.initGauge) {\n      this.initGauge();\n    }\n\n    if (this.initText) {\n      this.initText();\n    }\n  };\n\n  c3_chart_internal_fn.initWithData = function (data) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    var defs,\n        main,\n        binding = true;\n    $$.axis = new Axis($$);\n\n    if ($$.initPie) {\n      $$.initPie();\n    }\n\n    if ($$.initBrush) {\n      $$.initBrush();\n    }\n\n    if ($$.initZoom) {\n      $$.initZoom();\n    }\n\n    if (!config.bindto) {\n      $$.selectChart = d3.selectAll([]);\n    } else if (typeof config.bindto.node === 'function') {\n      $$.selectChart = config.bindto;\n    } else {\n      $$.selectChart = d3.select(config.bindto);\n    }\n\n    if ($$.selectChart.empty()) {\n      $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n      $$.observeInserted($$.selectChart);\n      binding = false;\n    }\n\n    $$.selectChart.html(\"\").classed(\"c3\", true); // Init data as targets\n\n    $$.data.xs = {};\n    $$.data.targets = $$.convertDataToTargets(data);\n\n    if (config.data_filter) {\n      $$.data.targets = $$.data.targets.filter(config.data_filter);\n    } // Set targets to hide if needed\n\n\n    if (config.data_hide) {\n      $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n    }\n\n    if (config.legend_hide) {\n      $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n    } // Init sizes and scales\n\n\n    $$.updateSizes();\n    $$.updateScales(); // Set domains for each scale\n\n    $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n    $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n    $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n    $$.subX.domain($$.x.domain());\n    $$.subY.domain($$.y.domain());\n    $$.subY2.domain($$.y2.domain()); // Save original x domain for zoom update\n\n    $$.orgXDomain = $$.x.domain(); // Set initialized scales to brush and zoom\n\n    if ($$.brush) {\n      $$.brush.scale($$.subX);\n    }\n\n    if (config.zoom_enabled) {\n      $$.zoom.scale($$.x);\n    }\n    /*-- Basic Elements --*/\n    // Define svgs\n\n\n    $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n      return config.onmouseover.call($$);\n    }).on('mouseleave', function () {\n      return config.onmouseout.call($$);\n    });\n\n    if ($$.config.svg_classname) {\n      $$.svg.attr('class', $$.config.svg_classname);\n    } // Define defs\n\n\n    defs = $$.svg.append(\"defs\");\n    $$.clipChart = $$.appendClip(defs, $$.clipId);\n    $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n    $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n    $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n    $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n    $$.updateSvgSize(); // Define regions\n\n    main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n    if ($$.initSubchart) {\n      $$.initSubchart();\n    }\n\n    if ($$.initTooltip) {\n      $$.initTooltip();\n    }\n\n    if ($$.initLegend) {\n      $$.initLegend();\n    }\n\n    if ($$.initTitle) {\n      $$.initTitle();\n    }\n    /*-- Main Region --*/\n    // text when empty\n\n\n    main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n    .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n    // Regions\n\n    $$.initRegion(); // Grids\n\n    $$.initGrid(); // Define g for chart area\n\n    main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart); // Grid lines\n\n    if (config.grid_lines_front) {\n      $$.initGridLines();\n    } // Cover whole with rects for events\n\n\n    $$.initEventRect(); // Define g for chart\n\n    $$.initChartElements(); // if zoom privileged, insert rect to forefront\n    // TODO: is this needed?\n\n    main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null); // Set default extent if defined\n\n    if (config.axis_x_extent) {\n      $$.brush.extent($$.getDefaultExtent());\n    } // Add Axis\n\n\n    $$.axis.init(); // Set targets\n\n    $$.updateTargets($$.data.targets); // Draw with targets\n\n    if (binding) {\n      $$.updateDimension();\n      $$.config.oninit.call($$);\n      $$.redraw({\n        withTransition: false,\n        withTransform: true,\n        withUpdateXDomain: true,\n        withUpdateOrgXDomain: true,\n        withTransitionForAxis: false\n      });\n    } // Bind resize event\n\n\n    $$.bindResize(); // export element of the chart\n\n    $$.api.element = $$.selectChart.node();\n  };\n\n  c3_chart_internal_fn.smoothLines = function (el, type) {\n    var $$ = this;\n\n    if (type === 'grid') {\n      el.each(function () {\n        var g = $$.d3.select(this),\n            x1 = g.attr('x1'),\n            x2 = g.attr('x2'),\n            y1 = g.attr('y1'),\n            y2 = g.attr('y2');\n        g.attr({\n          'x1': Math.ceil(x1),\n          'x2': Math.ceil(x2),\n          'y1': Math.ceil(y1),\n          'y2': Math.ceil(y2)\n        });\n      });\n    }\n  };\n\n  c3_chart_internal_fn.updateSizes = function () {\n    var $$ = this,\n        config = $$.config;\n    var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n        legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n        legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n        hasArc = $$.hasArcType(),\n        xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n        subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n    $$.currentWidth = $$.getCurrentWidth();\n    $$.currentHeight = $$.getCurrentHeight(); // for main\n\n    $$.margin = config.axis_rotated ? {\n      top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n      right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n      bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n      left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n    } : {\n      top: 4 + $$.getCurrentPaddingTop(),\n      // for top tick text\n      right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n      bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n      left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n    }; // for subchart\n\n    $$.margin2 = config.axis_rotated ? {\n      top: $$.margin.top,\n      right: NaN,\n      bottom: 20 + legendHeightForBottom,\n      left: $$.rotated_padding_left\n    } : {\n      top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n      right: NaN,\n      bottom: xAxisHeight + legendHeightForBottom,\n      left: $$.margin.left\n    }; // for legend\n\n    $$.margin3 = {\n      top: 0,\n      right: NaN,\n      bottom: 0,\n      left: 0\n    };\n\n    if ($$.updateSizeForLegend) {\n      $$.updateSizeForLegend(legendHeight, legendWidth);\n    }\n\n    $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n    $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n\n    if ($$.width < 0) {\n      $$.width = 0;\n    }\n\n    if ($$.height < 0) {\n      $$.height = 0;\n    }\n\n    $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n    $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n\n    if ($$.width2 < 0) {\n      $$.width2 = 0;\n    }\n\n    if ($$.height2 < 0) {\n      $$.height2 = 0;\n    } // for arc\n\n\n    $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n    $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n\n    if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n      $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n    }\n\n    if ($$.updateRadius) {\n      $$.updateRadius();\n    }\n\n    if ($$.isLegendRight && hasArc) {\n      $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n    }\n  };\n\n  c3_chart_internal_fn.updateTargets = function (targets) {\n    var $$ = this;\n    /*-- Main --*/\n    //-- Text --//\n\n    $$.updateTargetsForText(targets); //-- Bar --//\n\n    $$.updateTargetsForBar(targets); //-- Line --//\n\n    $$.updateTargetsForLine(targets); //-- Arc --//\n\n    if ($$.hasArcType() && $$.updateTargetsForArc) {\n      $$.updateTargetsForArc(targets);\n    }\n    /*-- Sub --*/\n\n\n    if ($$.updateTargetsForSubchart) {\n      $$.updateTargetsForSubchart(targets);\n    } // Fade-in each chart\n\n\n    $$.showTargets();\n  };\n\n  c3_chart_internal_fn.showTargets = function () {\n    var $$ = this;\n    $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n      return $$.isTargetToShow(d.id);\n    }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n  };\n\n  c3_chart_internal_fn.redraw = function (options, transitions) {\n    var $$ = this,\n        main = $$.main,\n        d3 = $$.d3,\n        config = $$.config;\n    var areaIndices = $$.getShapeIndices($$.isAreaType),\n        barIndices = $$.getShapeIndices($$.isBarType),\n        lineIndices = $$.getShapeIndices($$.isLineType);\n    var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n    var hideAxis = $$.hasArcType();\n    var drawArea, drawBar, drawLine, xForText, yForText;\n    var duration, durationForExit, durationForAxis;\n    var waitForDraw, flow;\n    var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n        tickValues,\n        i,\n        intervalForCulling,\n        xDomainForZoom;\n    var xv = $$.xv.bind($$),\n        cx,\n        cy;\n    options = options || {};\n    withY = getOption(options, \"withY\", true);\n    withSubchart = getOption(options, \"withSubchart\", true);\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransform = getOption(options, \"withTransform\", false);\n    withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n    withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n    withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n    withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n    withLegend = getOption(options, \"withLegend\", false);\n    withEventRect = getOption(options, \"withEventRect\", true);\n    withDimension = getOption(options, \"withDimension\", true);\n    withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n    withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n    duration = withTransition ? config.transition_duration : 0;\n    durationForExit = withTransitionForExit ? duration : 0;\n    durationForAxis = withTransitionForAxis ? duration : 0;\n    transitions = transitions || $$.axis.generateTransitions(durationForAxis); // update legend and transform each g\n\n    if (withLegend && config.legend_show) {\n      $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n    } else if (withDimension) {\n      // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n      // no need to update axis in it because they will be updated in redraw()\n      $$.updateDimension(true);\n    } // MEMO: needed for grids calculation\n\n\n    if ($$.isCategorized() && targetsToShow.length === 0) {\n      $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n    }\n\n    if (targetsToShow.length) {\n      $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n\n      if (!config.axis_x_tick_values) {\n        tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n      }\n    } else {\n      $$.xAxis.tickValues([]);\n      $$.subXAxis.tickValues([]);\n    }\n\n    if (config.zoom_rescale && !options.flow) {\n      xDomainForZoom = $$.x.orgDomain();\n    }\n\n    $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n    $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n    if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n      $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n    }\n\n    if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n      $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n    } // axes\n\n\n    $$.axis.redraw(transitions, hideAxis); // Update axis label\n\n    $$.axis.updateLabels(withTransition); // show/hide if manual culling needed\n\n    if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n      if (config.axis_x_tick_culling && tickValues) {\n        for (i = 1; i < tickValues.length; i++) {\n          if (tickValues.length / i < config.axis_x_tick_culling_max) {\n            intervalForCulling = i;\n            break;\n          }\n        }\n\n        $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n          var index = tickValues.indexOf(e);\n\n          if (index >= 0) {\n            d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n          }\n        });\n      } else {\n        $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n      }\n    } // setup drawer - MEMO: these must be called after axis updated\n\n\n    drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n    drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n    drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n    xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n    yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false); // Update sub domain\n\n    if (withY) {\n      $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n      $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n    } // xgrid focus\n\n\n    $$.updateXgridFocus(); // Data empty label positioning and text.\n\n    main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1); // grid\n\n    $$.updateGrid(duration); // rect for regions\n\n    $$.updateRegion(duration); // bars\n\n    $$.updateBar(durationForExit); // lines, areas and cricles\n\n    $$.updateLine(durationForExit);\n    $$.updateArea(durationForExit);\n    $$.updateCircle(); // text\n\n    if ($$.hasDataLabel()) {\n      $$.updateText(durationForExit);\n    } // title\n\n\n    if ($$.redrawTitle) {\n      $$.redrawTitle();\n    } // arc\n\n\n    if ($$.redrawArc) {\n      $$.redrawArc(duration, durationForExit, withTransform);\n    } // subchart\n\n\n    if ($$.redrawSubchart) {\n      $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n    } // circles for select\n\n\n    main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove(); // event rects will redrawn when flow called\n\n    if (config.interaction_enabled && !options.flow && withEventRect) {\n      $$.redrawEventRect();\n\n      if ($$.updateZoom) {\n        $$.updateZoom();\n      }\n    } // update circleY based on updated parameters\n\n\n    $$.updateCircleY(); // generate circle x/y functions depending on updated params\n\n    cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n    cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n    if (options.flow) {\n      flow = $$.generateFlow({\n        targets: targetsToShow,\n        flow: options.flow,\n        duration: options.flow.duration,\n        drawBar: drawBar,\n        drawLine: drawLine,\n        drawArea: drawArea,\n        cx: cx,\n        cy: cy,\n        xv: xv,\n        xForText: xForText,\n        yForText: yForText\n      });\n    }\n\n    if ((duration || flow) && $$.isTabVisible()) {\n      // Only use transition if tab visible. See #938.\n      // transition should be derived from one transition\n      d3.transition().duration(duration).each(function () {\n        var transitionsToWait = []; // redraw and gather transitions\n\n        [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n          transitions.forEach(function (transition) {\n            transitionsToWait.push(transition);\n          });\n        }); // Wait for end of transitions to call flow and onrendered callback\n\n        waitForDraw = $$.generateWait();\n        transitionsToWait.forEach(function (t) {\n          waitForDraw.add(t);\n        });\n      }).call(waitForDraw, function () {\n        if (flow) {\n          flow();\n        }\n\n        if (config.onrendered) {\n          config.onrendered.call($$);\n        }\n      });\n    } else {\n      $$.redrawBar(drawBar);\n      $$.redrawLine(drawLine);\n      $$.redrawArea(drawArea);\n      $$.redrawCircle(cx, cy);\n      $$.redrawText(xForText, yForText, options.flow);\n      $$.redrawRegion();\n      $$.redrawGrid();\n\n      if (config.onrendered) {\n        config.onrendered.call($$);\n      }\n    } // update fadein condition\n\n\n    $$.mapToIds($$.data.targets).forEach(function (id) {\n      $$.withoutFadeIn[id] = true;\n    });\n  };\n\n  c3_chart_internal_fn.updateAndRedraw = function (options) {\n    var $$ = this,\n        config = $$.config,\n        transitions;\n    options = options || {}; // same with redraw\n\n    options.withTransition = getOption(options, \"withTransition\", true);\n    options.withTransform = getOption(options, \"withTransform\", false);\n    options.withLegend = getOption(options, \"withLegend\", false); // NOT same with redraw\n\n    options.withUpdateXDomain = true;\n    options.withUpdateOrgXDomain = true;\n    options.withTransitionForExit = false;\n    options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition); // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n\n    $$.updateSizes(); // MEMO: called in updateLegend in redraw if withLegend\n\n    if (!(options.withLegend && config.legend_show)) {\n      transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0); // Update scales\n\n      $$.updateScales();\n      $$.updateSvgSize(); // Update g positions\n\n      $$.transformAll(options.withTransitionForTransform, transitions);\n    } // Draw with new sizes & scales\n\n\n    $$.redraw(options, transitions);\n  };\n\n  c3_chart_internal_fn.redrawWithoutRescale = function () {\n    this.redraw({\n      withY: false,\n      withSubchart: false,\n      withEventRect: false,\n      withTransitionForAxis: false\n    });\n  };\n\n  c3_chart_internal_fn.isTimeSeries = function () {\n    return this.config.axis_x_type === 'timeseries';\n  };\n\n  c3_chart_internal_fn.isCategorized = function () {\n    return this.config.axis_x_type.indexOf('categor') >= 0;\n  };\n\n  c3_chart_internal_fn.isCustomX = function () {\n    var $$ = this,\n        config = $$.config;\n    return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n  };\n\n  c3_chart_internal_fn.isTimeSeriesY = function () {\n    return this.config.axis_y_type === 'timeseries';\n  };\n\n  c3_chart_internal_fn.getTranslate = function (target) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y;\n\n    if (target === 'main') {\n      x = asHalfPixel($$.margin.left);\n      y = asHalfPixel($$.margin.top);\n    } else if (target === 'context') {\n      x = asHalfPixel($$.margin2.left);\n      y = asHalfPixel($$.margin2.top);\n    } else if (target === 'legend') {\n      x = $$.margin3.left;\n      y = $$.margin3.top;\n    } else if (target === 'x') {\n      x = 0;\n      y = config.axis_rotated ? 0 : $$.height;\n    } else if (target === 'y') {\n      x = 0;\n      y = config.axis_rotated ? $$.height : 0;\n    } else if (target === 'y2') {\n      x = config.axis_rotated ? 0 : $$.width;\n      y = config.axis_rotated ? 1 : 0;\n    } else if (target === 'subx') {\n      x = 0;\n      y = config.axis_rotated ? 0 : $$.height2;\n    } else if (target === 'arc') {\n      x = $$.arcWidth / 2;\n      y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n    }\n\n    return \"translate(\" + x + \",\" + y + \")\";\n  };\n\n  c3_chart_internal_fn.initialOpacity = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n  };\n\n  c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n  };\n\n  c3_chart_internal_fn.opacityForCircle = function (d) {\n    var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n    var opacity = isPointShouldBeShown ? 1 : 0;\n    return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n  };\n\n  c3_chart_internal_fn.opacityForText = function () {\n    return this.hasDataLabel() ? 1 : 0;\n  };\n\n  c3_chart_internal_fn.xx = function (d) {\n    return d ? this.x(d.x) : null;\n  };\n\n  c3_chart_internal_fn.xv = function (d) {\n    var $$ = this,\n        value = d.value;\n\n    if ($$.isTimeSeries()) {\n      value = $$.parseDate(d.value);\n    } else if ($$.isCategorized() && typeof d.value === 'string') {\n      value = $$.config.axis_x_categories.indexOf(d.value);\n    }\n\n    return Math.ceil($$.x(value));\n  };\n\n  c3_chart_internal_fn.yv = function (d) {\n    var $$ = this,\n        yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n    return Math.ceil(yScale(d.value));\n  };\n\n  c3_chart_internal_fn.subxx = function (d) {\n    return d ? this.subX(d.x) : null;\n  };\n\n  c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n    var $$ = this,\n        xAxis,\n        yAxis,\n        y2Axis;\n\n    if (transitions && transitions.axisX) {\n      xAxis = transitions.axisX;\n    } else {\n      xAxis = $$.main.select('.' + CLASS.axisX);\n\n      if (withTransition) {\n        xAxis = xAxis.transition();\n      }\n    }\n\n    if (transitions && transitions.axisY) {\n      yAxis = transitions.axisY;\n    } else {\n      yAxis = $$.main.select('.' + CLASS.axisY);\n\n      if (withTransition) {\n        yAxis = yAxis.transition();\n      }\n    }\n\n    if (transitions && transitions.axisY2) {\n      y2Axis = transitions.axisY2;\n    } else {\n      y2Axis = $$.main.select('.' + CLASS.axisY2);\n\n      if (withTransition) {\n        y2Axis = y2Axis.transition();\n      }\n    }\n\n    (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n    xAxis.attr(\"transform\", $$.getTranslate('x'));\n    yAxis.attr(\"transform\", $$.getTranslate('y'));\n    y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n    $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n  };\n\n  c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n    var $$ = this;\n    $$.transformMain(withTransition, transitions);\n\n    if ($$.config.subchart_show) {\n      $$.transformContext(withTransition, transitions);\n    }\n\n    if ($$.legend) {\n      $$.transformLegend(withTransition);\n    }\n  };\n\n  c3_chart_internal_fn.updateSvgSize = function () {\n    var $$ = this,\n        brush = $$.svg.select(\".c3-brush .background\");\n    $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n    $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n    $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n    $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height); // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n\n    $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n  };\n\n  c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n    var $$ = this;\n\n    if (!withoutAxis) {\n      if ($$.config.axis_rotated) {\n        $$.axes.x.call($$.xAxis);\n        $$.axes.subx.call($$.subXAxis);\n      } else {\n        $$.axes.y.call($$.yAxis);\n        $$.axes.y2.call($$.y2Axis);\n      }\n    }\n\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize();\n    $$.transformAll(false);\n  };\n\n  c3_chart_internal_fn.observeInserted = function (selection) {\n    var $$ = this,\n        observer;\n\n    if (typeof MutationObserver === 'undefined') {\n      window.console.error(\"MutationObserver not defined.\");\n      return;\n    }\n\n    observer = new MutationObserver(function (mutations) {\n      mutations.forEach(function (mutation) {\n        if (mutation.type === 'childList' && mutation.previousSibling) {\n          observer.disconnect(); // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n\n          $$.intervalForObserveInserted = window.setInterval(function () {\n            // parentNode will NOT be null when completed\n            if (selection.node().parentNode) {\n              window.clearInterval($$.intervalForObserveInserted);\n              $$.updateDimension();\n\n              if ($$.brush) {\n                $$.brush.update();\n              }\n\n              $$.config.oninit.call($$);\n              $$.redraw({\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransition: false,\n                withTransitionForTransform: false,\n                withLegend: true\n              });\n              selection.transition().style('opacity', 1);\n            }\n          }, 10);\n        }\n      });\n    });\n    observer.observe(selection.node(), {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  };\n\n  c3_chart_internal_fn.bindResize = function () {\n    var $$ = this,\n        config = $$.config;\n    $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n    $$.resizeFunction.add(function () {\n      config.onresize.call($$);\n    });\n\n    if (config.resize_auto) {\n      $$.resizeFunction.add(function () {\n        if ($$.resizeTimeout !== undefined) {\n          window.clearTimeout($$.resizeTimeout);\n        }\n\n        $$.resizeTimeout = window.setTimeout(function () {\n          delete $$.resizeTimeout;\n          $$.api.flush();\n        }, 100);\n      });\n    }\n\n    $$.resizeFunction.add(function () {\n      config.onresized.call($$);\n    });\n\n    $$.resizeIfElementDisplayed = function () {\n      // if element not displayed skip it\n      if ($$.api == null || !$$.api.element.offsetParent) {\n        return;\n      }\n\n      $$.resizeFunction();\n    };\n\n    if (window.attachEvent) {\n      window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n    } else if (window.addEventListener) {\n      window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n    } else {\n      // fallback to this, if this is a very old browser\n      var wrapper = window.onresize;\n\n      if (!wrapper) {\n        // create a wrapper that will call all charts\n        wrapper = $$.generateResize();\n      } else if (!wrapper.add || !wrapper.remove) {\n        // there is already a handler registered, make sure we call it too\n        wrapper = $$.generateResize();\n        wrapper.add(window.onresize);\n      } // add this graph to the wrapper, we will be removed if the user calls destroy\n\n\n      wrapper.add($$.resizeFunction);\n\n      window.onresize = function () {\n        // if element not displayed skip it\n        if (!$$.api.element.offsetParent) {\n          return;\n        }\n\n        wrapper();\n      };\n    }\n  };\n\n  c3_chart_internal_fn.generateResize = function () {\n    var resizeFunctions = [];\n\n    function callResizeFunctions() {\n      resizeFunctions.forEach(function (f) {\n        f();\n      });\n    }\n\n    callResizeFunctions.add = function (f) {\n      resizeFunctions.push(f);\n    };\n\n    callResizeFunctions.remove = function (f) {\n      for (var i = 0; i < resizeFunctions.length; i++) {\n        if (resizeFunctions[i] === f) {\n          resizeFunctions.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return callResizeFunctions;\n  };\n\n  c3_chart_internal_fn.endall = function (transition, callback) {\n    var n = 0;\n    transition.each(function () {\n      ++n;\n    }).each(\"end\", function () {\n      if (! --n) {\n        callback.apply(this, arguments);\n      }\n    });\n  };\n\n  c3_chart_internal_fn.generateWait = function () {\n    var transitionsToWait = [],\n        f = function f(transition, callback) {\n      var timer = setInterval(function () {\n        var done = 0;\n        transitionsToWait.forEach(function (t) {\n          if (t.empty()) {\n            done += 1;\n            return;\n          }\n\n          try {\n            t.transition();\n          } catch (e) {\n            done += 1;\n          }\n        });\n\n        if (done === transitionsToWait.length) {\n          clearInterval(timer);\n\n          if (callback) {\n            callback();\n          }\n        }\n      }, 10);\n    };\n\n    f.add = function (transition) {\n      transitionsToWait.push(transition);\n    };\n\n    return f;\n  };\n\n  c3_chart_internal_fn.parseDate = function (date) {\n    var $$ = this,\n        parsedDate;\n\n    if (date instanceof Date) {\n      parsedDate = date;\n    } else if (typeof date === 'string') {\n      parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n    } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n      parsedDate = new Date(+date);\n    } else if (typeof date === 'number' && !isNaN(date)) {\n      parsedDate = new Date(+date);\n    }\n\n    if (!parsedDate || isNaN(+parsedDate)) {\n      window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n    }\n\n    return parsedDate;\n  };\n\n  c3_chart_internal_fn.isTabVisible = function () {\n    var hidden;\n\n    if (typeof document.hidden !== \"undefined\") {\n      // Opera 12.10 and Firefox 18 and later support\n      hidden = \"hidden\";\n    } else if (typeof document.mozHidden !== \"undefined\") {\n      hidden = \"mozHidden\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n      hidden = \"msHidden\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n      hidden = \"webkitHidden\";\n    }\n\n    return document[hidden] ? false : true;\n  };\n\n  c3_chart_internal_fn.isValue = isValue;\n  c3_chart_internal_fn.isFunction = isFunction;\n  c3_chart_internal_fn.isString = isString;\n  c3_chart_internal_fn.isUndefined = isUndefined;\n  c3_chart_internal_fn.isDefined = isDefined;\n  c3_chart_internal_fn.ceil10 = ceil10;\n  c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n  c3_chart_internal_fn.diffDomain = diffDomain;\n  c3_chart_internal_fn.isEmpty = isEmpty;\n  c3_chart_internal_fn.notEmpty = notEmpty;\n  c3_chart_internal_fn.notEmpty = notEmpty;\n  c3_chart_internal_fn.getOption = getOption;\n  c3_chart_internal_fn.hasValue = hasValue;\n  c3_chart_internal_fn.sanitise = sanitise;\n  c3_chart_internal_fn.getPathBox = getPathBox;\n  c3_chart_internal_fn.CLASS = CLASS;\n  /* jshint ignore:start */\n  // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n  // this polyfill to avoid the confusion.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } // SVGPathSeg API polyfill\n  // https://github.com/progers/pathseg\n  //\n  // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n  // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n  // changes which were implemented in Firefox 43 and Chrome 46.\n\n\n  (function () {\n    if (!(\"SVGPathSeg\" in window)) {\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n      window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n        this.pathSegType = type;\n        this.pathSegTypeAsLetter = typeAsLetter;\n        this._owningPathSegList = owningPathSegList;\n      };\n\n      window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n      window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n      window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n      window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n      window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n      window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n      window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n      window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n      window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n      window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n      window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n      window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n      window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n      window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n      window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19; // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n\n      window.SVGPathSeg.prototype._segmentChanged = function () {\n        if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n      };\n\n      window.SVGPathSegClosePath = function (owningPathSegList) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n      };\n\n      window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegClosePath.prototype.toString = function () {\n        return \"[object SVGPathSegClosePath]\";\n      };\n\n      window.SVGPathSegClosePath.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter;\n      };\n\n      window.SVGPathSegClosePath.prototype.clone = function () {\n        return new window.SVGPathSegClosePath(undefined);\n      };\n\n      window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegMovetoAbs.prototype.toString = function () {\n        return \"[object SVGPathSegMovetoAbs]\";\n      };\n\n      window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegMovetoAbs.prototype.clone = function () {\n        return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegMovetoRel.prototype.toString = function () {\n        return \"[object SVGPathSegMovetoRel]\";\n      };\n\n      window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegMovetoRel.prototype.clone = function () {\n        return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoAbs.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoAbs]\";\n      };\n\n      window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegLinetoAbs.prototype.clone = function () {\n        return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoRel.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoRel]\";\n      };\n\n      window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegLinetoRel.prototype.clone = function () {\n        return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n      };\n\n      window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoCubicAbs]\";\n      };\n\n      window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", {\n        get: function get() {\n          return this._x1;\n        },\n        set: function set(x1) {\n          this._x1 = x1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", {\n        get: function get() {\n          return this._y1;\n        },\n        set: function set(y1) {\n          this._y1 = y1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", {\n        get: function get() {\n          return this._x2;\n        },\n        set: function set(x2) {\n          this._x2 = x2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", {\n        get: function get() {\n          return this._y2;\n        },\n        set: function set(y2) {\n          this._y2 = y2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n      };\n\n      window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoCubicRel]\";\n      };\n\n      window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", {\n        get: function get() {\n          return this._x1;\n        },\n        set: function set(x1) {\n          this._x1 = x1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", {\n        get: function get() {\n          return this._y1;\n        },\n        set: function set(y1) {\n          this._y1 = y1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", {\n        get: function get() {\n          return this._x2;\n        },\n        set: function set(x2) {\n          this._x2 = x2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", {\n        get: function get() {\n          return this._y2;\n        },\n        set: function set(y2) {\n          this._y2 = y2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x1 = x1;\n        this._y1 = y1;\n      };\n\n      window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n      };\n\n      window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", {\n        get: function get() {\n          return this._x1;\n        },\n        set: function set(x1) {\n          this._x1 = x1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", {\n        get: function get() {\n          return this._y1;\n        },\n        set: function set(y1) {\n          this._y1 = y1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x1 = x1;\n        this._y1 = y1;\n      };\n\n      window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoQuadraticRel]\";\n      };\n\n      window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", {\n        get: function get() {\n          return this._x1;\n        },\n        set: function set(x1) {\n          this._x1 = x1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", {\n        get: function get() {\n          return this._y1;\n        },\n        set: function set(y1) {\n          this._y1 = y1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._r1 = r1;\n        this._r2 = r2;\n        this._angle = angle;\n        this._largeArcFlag = largeArcFlag;\n        this._sweepFlag = sweepFlag;\n      };\n\n      window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegArcAbs.prototype.toString = function () {\n        return \"[object SVGPathSegArcAbs]\";\n      };\n\n      window.SVGPathSegArcAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegArcAbs.prototype.clone = function () {\n        return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n      };\n\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", {\n        get: function get() {\n          return this._r1;\n        },\n        set: function set(r1) {\n          this._r1 = r1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", {\n        get: function get() {\n          return this._r2;\n        },\n        set: function set(r2) {\n          this._r2 = r2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", {\n        get: function get() {\n          return this._angle;\n        },\n        set: function set(angle) {\n          this._angle = angle;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", {\n        get: function get() {\n          return this._largeArcFlag;\n        },\n        set: function set(largeArcFlag) {\n          this._largeArcFlag = largeArcFlag;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", {\n        get: function get() {\n          return this._sweepFlag;\n        },\n        set: function set(sweepFlag) {\n          this._sweepFlag = sweepFlag;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._r1 = r1;\n        this._r2 = r2;\n        this._angle = angle;\n        this._largeArcFlag = largeArcFlag;\n        this._sweepFlag = sweepFlag;\n      };\n\n      window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegArcRel.prototype.toString = function () {\n        return \"[object SVGPathSegArcRel]\";\n      };\n\n      window.SVGPathSegArcRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegArcRel.prototype.clone = function () {\n        return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n      };\n\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", {\n        get: function get() {\n          return this._r1;\n        },\n        set: function set(r1) {\n          this._r1 = r1;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", {\n        get: function get() {\n          return this._r2;\n        },\n        set: function set(r2) {\n          this._r2 = r2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", {\n        get: function get() {\n          return this._angle;\n        },\n        set: function set(angle) {\n          this._angle = angle;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", {\n        get: function get() {\n          return this._largeArcFlag;\n        },\n        set: function set(largeArcFlag) {\n          this._largeArcFlag = largeArcFlag;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", {\n        get: function get() {\n          return this._sweepFlag;\n        },\n        set: function set(sweepFlag) {\n          this._sweepFlag = sweepFlag;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n        this._x = x;\n      };\n\n      window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoHorizontalAbs]\";\n      };\n\n      window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x;\n      };\n\n      window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n        return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n        this._x = x;\n      };\n\n      window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoHorizontalRel]\";\n      };\n\n      window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x;\n      };\n\n      window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n        return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n        this._y = y;\n      };\n\n      window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoVerticalAbs]\";\n      };\n\n      window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._y;\n      };\n\n      window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n        return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n        this._y = y;\n      };\n\n      window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n        return \"[object SVGPathSegLinetoVerticalRel]\";\n      };\n\n      window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._y;\n      };\n\n      window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n        return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x2 = x2;\n        this._y2 = y2;\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", {\n        get: function get() {\n          return this._x2;\n        },\n        set: function set(x2) {\n          this._x2 = x2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", {\n        get: function get() {\n          return this._y2;\n        },\n        set: function set(y2) {\n          this._y2 = y2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n        this._x2 = x2;\n        this._y2 = y2;\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", {\n        get: function get() {\n          return this._x2;\n        },\n        set: function set(x2) {\n          this._x2 = x2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", {\n        get: function get() {\n          return this._y2;\n        },\n        set: function set(y2) {\n          this._y2 = y2;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n\n      window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n        window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n        this._x = x;\n        this._y = y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n        return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n        return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n      };\n\n      window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n        return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n      };\n\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", {\n        get: function get() {\n          return this._x;\n        },\n        set: function set(x) {\n          this._x = x;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", {\n        get: function get() {\n          return this._y;\n        },\n        set: function set(y) {\n          this._y = y;\n\n          this._segmentChanged();\n        },\n        enumerable: true\n      }); // Add createSVGPathSeg* functions to window.SVGPathElement.\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n\n      window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n        return new window.SVGPathSegClosePath(undefined);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n        return new window.SVGPathSegMovetoAbs(undefined, x, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n        return new window.SVGPathSegMovetoRel(undefined, x, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n        return new window.SVGPathSegLinetoAbs(undefined, x, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n        return new window.SVGPathSegLinetoRel(undefined, x, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n        return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n        return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n        return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n        return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n        return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n        return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n        return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n        return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n        return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n        return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n        return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n        return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n        return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n      };\n\n      window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n        return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n      };\n\n      if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n        // Add getPathSegAtLength to SVGPathElement.\n        // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n        // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n        window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n          if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n          var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n          measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n          var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1; // If the path is empty, return 0.\n\n          if (lastPathSegment <= 0) return 0;\n\n          do {\n            measurementElement.pathSegList.removeItem(lastPathSegment);\n            if (distance > measurementElement.getTotalLength()) break;\n            lastPathSegment--;\n          } while (lastPathSegment > 0);\n\n          return lastPathSegment;\n        };\n      }\n    }\n\n    if (!(\"SVGPathSegList\" in window)) {\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n      window.SVGPathSegList = function (pathElement) {\n        this._pathElement = pathElement;\n        this._list = this._parsePath(this._pathElement.getAttribute(\"d\")); // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n\n        this._mutationObserverConfig = {\n          \"attributes\": true,\n          \"attributeFilter\": [\"d\"]\n        };\n        this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n\n        this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n      };\n\n      window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n      Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n        get: function get() {\n          this._checkPathSynchronizedToList();\n\n          return this._list.length;\n        },\n        enumerable: true\n      }); // Add the pathSegList accessors to window.SVGPathElement.\n      // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n\n      Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n        get: function get() {\n          if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n          return this._pathSegList;\n        },\n        enumerable: true\n      }); // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n\n      Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", {\n        get: function get() {\n          return this.pathSegList;\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", {\n        get: function get() {\n          return this.pathSegList;\n        },\n        enumerable: true\n      });\n      Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", {\n        get: function get() {\n          return this.pathSegList;\n        },\n        enumerable: true\n      }); // Process any pending mutations to the path element and update the list as needed.\n      // This should be the first call of all public functions and is needed because\n      // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n\n      window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n        this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n      };\n\n      window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n        if (!this._pathElement) return;\n        var hasPathMutations = false;\n        mutationRecords.forEach(function (record) {\n          if (record.attributeName == \"d\") hasPathMutations = true;\n        });\n        if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n      }; // Serialize the list and update the path's 'd' attribute.\n\n\n      window.SVGPathSegList.prototype._writeListToPath = function () {\n        this._pathElementMutationObserver.disconnect();\n\n        this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n\n        this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n      }; // When a path segment changes the list needs to be synchronized back to the path element.\n\n\n      window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n        this._writeListToPath();\n      };\n\n      window.SVGPathSegList.prototype.clear = function () {\n        this._checkPathSynchronizedToList();\n\n        this._list.forEach(function (pathSeg) {\n          pathSeg._owningPathSegList = null;\n        });\n\n        this._list = [];\n\n        this._writeListToPath();\n      };\n\n      window.SVGPathSegList.prototype.initialize = function (newItem) {\n        this._checkPathSynchronizedToList();\n\n        this._list = [newItem];\n        newItem._owningPathSegList = this;\n\n        this._writeListToPath();\n\n        return newItem;\n      };\n\n      window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n        if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n      };\n\n      window.SVGPathSegList.prototype.getItem = function (index) {\n        this._checkPathSynchronizedToList();\n\n        this._checkValidIndex(index);\n\n        return this._list[index];\n      };\n\n      window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n        this._checkPathSynchronizedToList(); // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n\n\n        if (index > this.numberOfItems) index = this.numberOfItems;\n\n        if (newItem._owningPathSegList) {\n          // SVG2 spec says to make a copy.\n          newItem = newItem.clone();\n        }\n\n        this._list.splice(index, 0, newItem);\n\n        newItem._owningPathSegList = this;\n\n        this._writeListToPath();\n\n        return newItem;\n      };\n\n      window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n        this._checkPathSynchronizedToList();\n\n        if (newItem._owningPathSegList) {\n          // SVG2 spec says to make a copy.\n          newItem = newItem.clone();\n        }\n\n        this._checkValidIndex(index);\n\n        this._list[index] = newItem;\n        newItem._owningPathSegList = this;\n\n        this._writeListToPath();\n\n        return newItem;\n      };\n\n      window.SVGPathSegList.prototype.removeItem = function (index) {\n        this._checkPathSynchronizedToList();\n\n        this._checkValidIndex(index);\n\n        var item = this._list[index];\n\n        this._list.splice(index, 1);\n\n        this._writeListToPath();\n\n        return item;\n      };\n\n      window.SVGPathSegList.prototype.appendItem = function (newItem) {\n        this._checkPathSynchronizedToList();\n\n        if (newItem._owningPathSegList) {\n          // SVG2 spec says to make a copy.\n          newItem = newItem.clone();\n        }\n\n        this._list.push(newItem);\n\n        newItem._owningPathSegList = this; // TODO: Optimize this to just append to the existing attribute.\n\n        this._writeListToPath();\n\n        return newItem;\n      };\n\n      window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n        var string = \"\";\n        var first = true;\n        pathSegArray.forEach(function (pathSeg) {\n          if (first) {\n            first = false;\n            string += pathSeg._asPathString();\n          } else {\n            string += \" \" + pathSeg._asPathString();\n          }\n        });\n        return string;\n      }; // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n\n\n      window.SVGPathSegList.prototype._parsePath = function (string) {\n        if (!string || string.length == 0) return [];\n        var owningPathSegList = this;\n\n        var Builder = function Builder() {\n          this.pathSegList = [];\n        };\n\n        Builder.prototype.appendSegment = function (pathSeg) {\n          this.pathSegList.push(pathSeg);\n        };\n\n        var Source = function Source(string) {\n          this._string = string;\n          this._currentIndex = 0;\n          this._endIndex = this._string.length;\n          this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n          this._skipOptionalSpaces();\n        };\n\n        Source.prototype._isCurrentSpace = function () {\n          var character = this._string[this._currentIndex];\n          return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n        };\n\n        Source.prototype._skipOptionalSpaces = function () {\n          while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n            this._currentIndex++;\n          }\n\n          return this._currentIndex < this._endIndex;\n        };\n\n        Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n          if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n\n          if (this._skipOptionalSpaces()) {\n            if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n              this._currentIndex++;\n\n              this._skipOptionalSpaces();\n            }\n          }\n\n          return this._currentIndex < this._endIndex;\n        };\n\n        Source.prototype.hasMoreData = function () {\n          return this._currentIndex < this._endIndex;\n        };\n\n        Source.prototype.peekSegmentType = function () {\n          var lookahead = this._string[this._currentIndex];\n          return this._pathSegTypeFromChar(lookahead);\n        };\n\n        Source.prototype._pathSegTypeFromChar = function (lookahead) {\n          switch (lookahead) {\n            case \"Z\":\n            case \"z\":\n              return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n\n            case \"M\":\n              return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n\n            case \"m\":\n              return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n\n            case \"L\":\n              return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n\n            case \"l\":\n              return window.SVGPathSeg.PATHSEG_LINETO_REL;\n\n            case \"C\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n\n            case \"c\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n\n            case \"Q\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n\n            case \"q\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n\n            case \"A\":\n              return window.SVGPathSeg.PATHSEG_ARC_ABS;\n\n            case \"a\":\n              return window.SVGPathSeg.PATHSEG_ARC_REL;\n\n            case \"H\":\n              return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n\n            case \"h\":\n              return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n\n            case \"V\":\n              return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n\n            case \"v\":\n              return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n\n            case \"S\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n\n            case \"s\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n\n            case \"T\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n\n            case \"t\":\n              return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n\n            default:\n              return window.SVGPathSeg.PATHSEG_UNKNOWN;\n          }\n        };\n\n        Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n          // Check for remaining coordinates in the current command.\n          if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n            if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n            if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n            return previousCommand;\n          }\n\n          return window.SVGPathSeg.PATHSEG_UNKNOWN;\n        };\n\n        Source.prototype.initialCommandIsMoveTo = function () {\n          // If the path is empty it is still valid, so return true.\n          if (!this.hasMoreData()) return true;\n          var command = this.peekSegmentType(); // Path must start with moveTo.\n\n          return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n        }; // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n\n\n        Source.prototype._parseNumber = function () {\n          var exponent = 0;\n          var integer = 0;\n          var frac = 1;\n          var decimal = 0;\n          var sign = 1;\n          var expsign = 1;\n          var startIndex = this._currentIndex;\n\n          this._skipOptionalSpaces(); // Read the sign.\n\n\n          if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n            this._currentIndex++;\n            sign = -1;\n          }\n          if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\") // The first character of a number must be one of [0-9+-.].\n            return undefined; // Read the integer part, build right-to-left.\n\n          var startIntPartIndex = this._currentIndex;\n\n          while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n            this._currentIndex++;\n          } // Advance to first non-digit.\n\n\n          if (this._currentIndex != startIntPartIndex) {\n            var scanIntPartIndex = this._currentIndex - 1;\n            var multiplier = 1;\n\n            while (scanIntPartIndex >= startIntPartIndex) {\n              integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n              multiplier *= 10;\n            }\n          } // Read the decimals.\n\n\n          if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n            this._currentIndex++; // There must be a least one digit following the .\n\n            if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n            while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n              frac *= 10;\n              decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n              this._currentIndex += 1;\n            }\n          } // Read the exponent part.\n\n\n          if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n            this._currentIndex++; // Read the sign of the exponent.\n\n            if (this._string.charAt(this._currentIndex) == \"+\") {\n              this._currentIndex++;\n            } else if (this._string.charAt(this._currentIndex) == \"-\") {\n              this._currentIndex++;\n              expsign = -1;\n            } // There must be an exponent.\n\n\n            if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n            while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n              exponent *= 10;\n              exponent += this._string.charAt(this._currentIndex) - \"0\";\n              this._currentIndex++;\n            }\n          }\n\n          var number = integer + decimal;\n          number *= sign;\n          if (exponent) number *= Math.pow(10, expsign * exponent);\n          if (startIndex == this._currentIndex) return undefined;\n\n          this._skipOptionalSpacesOrDelimiter();\n\n          return number;\n        };\n\n        Source.prototype._parseArcFlag = function () {\n          if (this._currentIndex >= this._endIndex) return undefined;\n          var flag = false;\n\n          var flagChar = this._string.charAt(this._currentIndex++);\n\n          if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n          this._skipOptionalSpacesOrDelimiter();\n\n          return flag;\n        };\n\n        Source.prototype.parseSegment = function () {\n          var lookahead = this._string[this._currentIndex];\n\n          var command = this._pathSegTypeFromChar(lookahead);\n\n          if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n            // Possibly an implicit command. Not allowed if this is the first command.\n            if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n            command = this._nextCommandHelper(lookahead, this._previousCommand);\n            if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n          } else {\n            this._currentIndex++;\n          }\n\n          this._previousCommand = command;\n\n          switch (command) {\n            case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n              return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n              return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_REL:\n              return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n              return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n              return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n              return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n              return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n              return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n              this._skipOptionalSpaces();\n\n              return new window.SVGPathSegClosePath(owningPathSegList);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                x2: this._parseNumber(),\n                y2: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                x2: this._parseNumber(),\n                y2: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n              var points = {\n                x2: this._parseNumber(),\n                y2: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n              var points = {\n                x2: this._parseNumber(),\n                y2: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n              return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n              return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\n            case window.SVGPathSeg.PATHSEG_ARC_REL:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                arcAngle: this._parseNumber(),\n                arcLarge: this._parseArcFlag(),\n                arcSweep: this._parseArcFlag(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\n            case window.SVGPathSeg.PATHSEG_ARC_ABS:\n              var points = {\n                x1: this._parseNumber(),\n                y1: this._parseNumber(),\n                arcAngle: this._parseNumber(),\n                arcLarge: this._parseArcFlag(),\n                arcSweep: this._parseArcFlag(),\n                x: this._parseNumber(),\n                y: this._parseNumber()\n              };\n              return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\n            default:\n              throw \"Unknown path seg type.\";\n          }\n        };\n\n        var builder = new Builder();\n        var source = new Source(string);\n        if (!source.initialCommandIsMoveTo()) return [];\n\n        while (source.hasMoreData()) {\n          var pathSeg = source.parseSegment();\n          if (!pathSeg) return [];\n          builder.appendSegment(pathSeg);\n        }\n\n        return builder.pathSegList;\n      };\n    }\n  })(); // String.padEnd polyfill for IE11\n  //\n  // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n\n\n  if (!String.prototype.padEnd) {\n    String.prototype.padEnd = function padEnd(targetLength, padString) {\n      targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n\n      padString = String(typeof padString !== 'undefined' ? padString : ' ');\n\n      if (this.length > targetLength) {\n        return String(this);\n      } else {\n        targetLength = targetLength - this.length;\n\n        if (targetLength > padString.length) {\n          padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n        }\n\n        return String(this) + padString.slice(0, targetLength);\n      }\n    };\n  }\n  /* jshint ignore:end */\n\n\n  c3_chart_fn.axis = function () {};\n\n  c3_chart_fn.axis.labels = function (labels) {\n    var $$ = this.internal;\n\n    if (arguments.length) {\n      Object.keys(labels).forEach(function (axisId) {\n        $$.axis.setLabelText(axisId, labels[axisId]);\n      });\n      $$.axis.updateLabels();\n    } // TODO: return some values?\n\n  };\n\n  c3_chart_fn.axis.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (arguments.length) {\n      if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n        if (isValue(max.x)) {\n          config.axis_x_max = max.x;\n        }\n\n        if (isValue(max.y)) {\n          config.axis_y_max = max.y;\n        }\n\n        if (isValue(max.y2)) {\n          config.axis_y2_max = max.y2;\n        }\n      } else {\n        config.axis_y_max = config.axis_y2_max = max;\n      }\n\n      $$.redraw({\n        withUpdateOrgXDomain: true,\n        withUpdateXDomain: true\n      });\n    } else {\n      return {\n        x: config.axis_x_max,\n        y: config.axis_y_max,\n        y2: config.axis_y2_max\n      };\n    }\n  };\n\n  c3_chart_fn.axis.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (arguments.length) {\n      if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n        if (isValue(min.x)) {\n          config.axis_x_min = min.x;\n        }\n\n        if (isValue(min.y)) {\n          config.axis_y_min = min.y;\n        }\n\n        if (isValue(min.y2)) {\n          config.axis_y2_min = min.y2;\n        }\n      } else {\n        config.axis_y_min = config.axis_y2_min = min;\n      }\n\n      $$.redraw({\n        withUpdateOrgXDomain: true,\n        withUpdateXDomain: true\n      });\n    } else {\n      return {\n        x: config.axis_x_min,\n        y: config.axis_y_min,\n        y2: config.axis_y2_min\n      };\n    }\n  };\n\n  c3_chart_fn.axis.range = function (range) {\n    if (arguments.length) {\n      if (isDefined(range.max)) {\n        this.axis.max(range.max);\n      }\n\n      if (isDefined(range.min)) {\n        this.axis.min(range.min);\n      }\n    } else {\n      return {\n        max: this.axis.max(),\n        min: this.axis.min()\n      };\n    }\n  };\n\n  c3_chart_fn.category = function (i, category) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (arguments.length > 1) {\n      config.axis_x_categories[i] = category;\n      $$.redraw();\n    }\n\n    return config.axis_x_categories[i];\n  };\n\n  c3_chart_fn.categories = function (categories) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (!arguments.length) {\n      return config.axis_x_categories;\n    }\n\n    config.axis_x_categories = categories;\n    $$.redraw();\n    return config.axis_x_categories;\n  };\n\n  c3_chart_fn.resize = function (size) {\n    var $$ = this.internal,\n        config = $$.config;\n    config.size_width = size ? size.width : null;\n    config.size_height = size ? size.height : null;\n    this.flush();\n  };\n\n  c3_chart_fn.flush = function () {\n    var $$ = this.internal;\n    $$.updateAndRedraw({\n      withLegend: true,\n      withTransition: false,\n      withTransitionForTransform: false\n    });\n  };\n\n  c3_chart_fn.destroy = function () {\n    var $$ = this.internal;\n    window.clearInterval($$.intervalForObserveInserted);\n\n    if ($$.resizeTimeout !== undefined) {\n      window.clearTimeout($$.resizeTimeout);\n    }\n\n    if (window.detachEvent) {\n      window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n    } else if (window.removeEventListener) {\n      window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n    } else {\n      var wrapper = window.onresize; // check if no one else removed our wrapper and remove our resizeFunction from it\n\n      if (wrapper && wrapper.add && wrapper.remove) {\n        wrapper.remove($$.resizeFunction);\n      }\n    } // remove the inner resize functions\n\n\n    $$.resizeFunction.remove();\n    $$.selectChart.classed('c3', false).html(\"\"); // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n\n    Object.keys($$).forEach(function (key) {\n      $$[key] = null;\n    });\n    return null;\n  }; // TODO: fix\n\n\n  c3_chart_fn.color = function (id) {\n    var $$ = this.internal;\n    return $$.color(id); // more patterns\n  };\n\n  c3_chart_fn.data = function (targetIds) {\n    var targets = this.internal.data.targets;\n    return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n      return [].concat(targetIds).indexOf(t.id) >= 0;\n    });\n  };\n\n  c3_chart_fn.data.shown = function (targetIds) {\n    return this.internal.filterTargetsToShow(this.data(targetIds));\n  };\n\n  c3_chart_fn.data.values = function (targetId) {\n    var targets,\n        values = null;\n\n    if (targetId) {\n      targets = this.data(targetId);\n      values = targets[0] ? targets[0].values.map(function (d) {\n        return d.value;\n      }) : null;\n    }\n\n    return values;\n  };\n\n  c3_chart_fn.data.names = function (names) {\n    this.internal.clearLegendItemTextBoxCache();\n    return this.internal.updateDataAttributes('names', names);\n  };\n\n  c3_chart_fn.data.colors = function (colors) {\n    return this.internal.updateDataAttributes('colors', colors);\n  };\n\n  c3_chart_fn.data.axes = function (axes) {\n    return this.internal.updateDataAttributes('axes', axes);\n  };\n\n  c3_chart_fn.flow = function (args) {\n    var $$ = this.internal,\n        targets,\n        data,\n        notfoundIds = [],\n        orgDataCount = $$.getMaxDataCount(),\n        dataCount,\n        domain,\n        baseTarget,\n        baseValue,\n        length = 0,\n        tail = 0,\n        diff,\n        to;\n\n    if (args.json) {\n      data = $$.convertJsonToData(args.json, args.keys);\n    } else if (args.rows) {\n      data = $$.convertRowsToData(args.rows);\n    } else if (args.columns) {\n      data = $$.convertColumnsToData(args.columns);\n    } else {\n      return;\n    }\n\n    targets = $$.convertDataToTargets(data, true); // Update/Add data\n\n    $$.data.targets.forEach(function (t) {\n      var found = false,\n          i,\n          j;\n\n      for (i = 0; i < targets.length; i++) {\n        if (t.id === targets[i].id) {\n          found = true;\n\n          if (t.values[t.values.length - 1]) {\n            tail = t.values[t.values.length - 1].index + 1;\n          }\n\n          length = targets[i].values.length;\n\n          for (j = 0; j < length; j++) {\n            targets[i].values[j].index = tail + j;\n\n            if (!$$.isTimeSeries()) {\n              targets[i].values[j].x = tail + j;\n            }\n          }\n\n          t.values = t.values.concat(targets[i].values);\n          targets.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!found) {\n        notfoundIds.push(t.id);\n      }\n    }); // Append null for not found targets\n\n    $$.data.targets.forEach(function (t) {\n      var i, j;\n\n      for (i = 0; i < notfoundIds.length; i++) {\n        if (t.id === notfoundIds[i]) {\n          tail = t.values[t.values.length - 1].index + 1;\n\n          for (j = 0; j < length; j++) {\n            t.values.push({\n              id: t.id,\n              index: tail + j,\n              x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n              value: null\n            });\n          }\n        }\n      }\n    }); // Generate null values for new target\n\n    if ($$.data.targets.length) {\n      targets.forEach(function (t) {\n        var i,\n            missing = [];\n\n        for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n          missing.push({\n            id: t.id,\n            index: i,\n            x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n            value: null\n          });\n        }\n\n        t.values.forEach(function (v) {\n          v.index += tail;\n\n          if (!$$.isTimeSeries()) {\n            v.x += tail;\n          }\n        });\n        t.values = missing.concat(t.values);\n      });\n    }\n\n    $$.data.targets = $$.data.targets.concat(targets); // add remained\n    // check data count because behavior needs to change when it's only one\n\n    dataCount = $$.getMaxDataCount();\n    baseTarget = $$.data.targets[0];\n    baseValue = baseTarget.values[0]; // Update length to flow if needed\n\n    if (isDefined(args.to)) {\n      length = 0;\n      to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n      baseTarget.values.forEach(function (v) {\n        if (v.x < to) {\n          length++;\n        }\n      });\n    } else if (isDefined(args.length)) {\n      length = args.length;\n    } // If only one data, update the domain to flow from left edge of the chart\n\n\n    if (!orgDataCount) {\n      if ($$.isTimeSeries()) {\n        if (baseTarget.values.length > 1) {\n          diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n        } else {\n          diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n        }\n      } else {\n        diff = 1;\n      }\n\n      domain = [baseValue.x - diff, baseValue.x];\n      $$.updateXDomain(null, true, true, false, domain);\n    } else if (orgDataCount === 1) {\n      if ($$.isTimeSeries()) {\n        diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n        domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n        $$.updateXDomain(null, true, true, false, domain);\n      }\n    } // Set targets\n\n\n    $$.updateTargets($$.data.targets); // Redraw with new targets\n\n    $$.redraw({\n      flow: {\n        index: baseValue.index,\n        length: length,\n        duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n        done: args.done,\n        orgDataCount: orgDataCount\n      },\n      withLegend: true,\n      withTransition: orgDataCount > 1,\n      withTrimXDomain: false,\n      withUpdateXAxis: true\n    });\n  };\n\n  c3_chart_internal_fn.generateFlow = function (args) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    return function () {\n      var targets = args.targets,\n          flow = args.flow,\n          drawBar = args.drawBar,\n          drawLine = args.drawLine,\n          drawArea = args.drawArea,\n          cx = args.cx,\n          cy = args.cy,\n          xv = args.xv,\n          xForText = args.xForText,\n          yForText = args.yForText,\n          duration = args.duration;\n\n      var translateX,\n          scaleX = 1,\n          transform,\n          flowIndex = flow.index,\n          flowLength = flow.length,\n          flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n          flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n          orgDomain = $$.x.domain(),\n          domain,\n          durationForFlow = flow.duration || duration,\n          done = flow.done || function () {},\n          wait = $$.generateWait();\n\n      var xgrid = $$.xgrid || d3.selectAll([]),\n          xgridLines = $$.xgridLines || d3.selectAll([]),\n          mainRegion = $$.mainRegion || d3.selectAll([]),\n          mainText = $$.mainText || d3.selectAll([]),\n          mainBar = $$.mainBar || d3.selectAll([]),\n          mainLine = $$.mainLine || d3.selectAll([]),\n          mainArea = $$.mainArea || d3.selectAll([]),\n          mainCircle = $$.mainCircle || d3.selectAll([]); // set flag\n\n      $$.flowing = true; // remove head data after rendered\n\n      $$.data.targets.forEach(function (d) {\n        d.values.splice(0, flowLength);\n      }); // update x domain to generate axis elements for flow\n\n      domain = $$.updateXDomain(targets, true, true); // update elements related to x scale\n\n      if ($$.updateXGrid) {\n        $$.updateXGrid(true);\n      } // generate transform to flow\n\n\n      if (!flow.orgDataCount) {\n        // if empty\n        if ($$.data.targets[0].values.length !== 1) {\n          translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n        } else {\n          if ($$.isTimeSeries()) {\n            flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n            flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n            translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n          } else {\n            translateX = diffDomain(domain) / 2;\n          }\n        }\n      } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n        translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n      } else {\n        if ($$.isTimeSeries()) {\n          translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n        } else {\n          translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n        }\n      }\n\n      scaleX = diffDomain(orgDomain) / diffDomain(domain);\n      transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n      $$.hideXGridFocus();\n      d3.transition().ease('linear').duration(durationForFlow).each(function () {\n        wait.add($$.axes.x.transition().call($$.xAxis));\n        wait.add(mainBar.transition().attr('transform', transform));\n        wait.add(mainLine.transition().attr('transform', transform));\n        wait.add(mainArea.transition().attr('transform', transform));\n        wait.add(mainCircle.transition().attr('transform', transform));\n        wait.add(mainText.transition().attr('transform', transform));\n        wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n        wait.add(xgrid.transition().attr('transform', transform));\n        wait.add(xgridLines.transition().attr('transform', transform));\n      }).call(wait, function () {\n        var i,\n            shapes = [],\n            texts = [],\n            eventRects = []; // remove flowed elements\n\n        if (flowLength) {\n          for (i = 0; i < flowLength; i++) {\n            shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n            texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n            eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n          }\n\n          $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n          $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n          $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n          $$.svg.select('.' + CLASS.xgrid).remove();\n        } // draw again for removing flowed elements and reverting attr\n\n\n        xgrid.attr('transform', null).attr($$.xgridAttr);\n        xgridLines.attr('transform', null);\n        xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n        xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n        mainBar.attr('transform', null).attr(\"d\", drawBar);\n        mainLine.attr('transform', null).attr(\"d\", drawLine);\n        mainArea.attr('transform', null).attr(\"d\", drawArea);\n        mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n        mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n        mainRegion.attr('transform', null);\n        mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n        if (config.interaction_enabled) {\n          $$.redrawEventRect();\n        } // callback for end of flow\n\n\n        done();\n        $$.flowing = false;\n      });\n    };\n  };\n\n  c3_chart_fn.focus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n    this.defocus();\n    candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n\n    if ($$.hasArcType()) {\n      $$.expandArc(targetIds);\n    }\n\n    $$.toggleFocusLegend(targetIds, true);\n    $$.focusedTargetIds = targetIds;\n    $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n      return targetIds.indexOf(id) < 0;\n    });\n  };\n\n  c3_chart_fn.defocus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n\n    if ($$.hasArcType()) {\n      $$.unexpandArc(targetIds);\n    }\n\n    $$.toggleFocusLegend(targetIds, false);\n    $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n      return targetIds.indexOf(id) < 0;\n    });\n    $$.defocusedTargetIds = targetIds;\n  };\n\n  c3_chart_fn.revert = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n    candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n\n    if ($$.hasArcType()) {\n      $$.unexpandArc(targetIds);\n    }\n\n    if ($$.config.legend_show) {\n      $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n      $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n        return $$.d3.select(this).classed(CLASS.legendItemFocused);\n      }).classed(CLASS.legendItemFocused, false);\n    }\n\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n  };\n\n  c3_chart_fn.xgrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (!grids) {\n      return config.grid_x_lines;\n    }\n\n    config.grid_x_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_x_lines;\n  };\n\n  c3_chart_fn.xgrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n  };\n\n  c3_chart_fn.xgrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, true);\n  };\n\n  c3_chart_fn.ygrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (!grids) {\n      return config.grid_y_lines;\n    }\n\n    config.grid_y_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_y_lines;\n  };\n\n  c3_chart_fn.ygrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n  };\n\n  c3_chart_fn.ygrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, false);\n  };\n\n  c3_chart_fn.groups = function (groups) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (isUndefined(groups)) {\n      return config.data_groups;\n    }\n\n    config.data_groups = groups;\n    $$.redraw();\n    return config.data_groups;\n  };\n\n  c3_chart_fn.legend = function () {};\n\n  c3_chart_fn.legend.show = function (targetIds) {\n    var $$ = this.internal;\n    $$.showLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({\n      withLegend: true\n    });\n  };\n\n  c3_chart_fn.legend.hide = function (targetIds) {\n    var $$ = this.internal;\n    $$.hideLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({\n      withLegend: true\n    });\n  };\n\n  c3_chart_fn.load = function (args) {\n    var $$ = this.internal,\n        config = $$.config; // update xs if specified\n\n    if (args.xs) {\n      $$.addXs(args.xs);\n    } // update names if exists\n\n\n    if ('names' in args) {\n      c3_chart_fn.data.names.bind(this)(args.names);\n    } // update classes if exists\n\n\n    if ('classes' in args) {\n      Object.keys(args.classes).forEach(function (id) {\n        config.data_classes[id] = args.classes[id];\n      });\n    } // update categories if exists\n\n\n    if ('categories' in args && $$.isCategorized()) {\n      config.axis_x_categories = args.categories;\n    } // update axes if exists\n\n\n    if ('axes' in args) {\n      Object.keys(args.axes).forEach(function (id) {\n        config.data_axes[id] = args.axes[id];\n      });\n    } // update colors if exists\n\n\n    if ('colors' in args) {\n      Object.keys(args.colors).forEach(function (id) {\n        config.data_colors[id] = args.colors[id];\n      });\n    } // use cache if exists\n\n\n    if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n      $$.load($$.getCaches(args.cacheIds), args.done);\n      return;\n    } // unload if needed\n\n\n    if ('unload' in args) {\n      // TODO: do not unload if target will load (included in url/rows/columns)\n      $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n        $$.loadFromArgs(args);\n      });\n    } else {\n      $$.loadFromArgs(args);\n    }\n  };\n\n  c3_chart_fn.unload = function (args) {\n    var $$ = this.internal;\n    args = args || {};\n\n    if (args instanceof Array) {\n      args = {\n        ids: args\n      };\n    } else if (typeof args === 'string') {\n      args = {\n        ids: [args]\n      };\n    }\n\n    $$.unload($$.mapToTargetIds(args.ids), function () {\n      $$.redraw({\n        withUpdateOrgXDomain: true,\n        withUpdateXDomain: true,\n        withLegend: true\n      });\n\n      if (args.done) {\n        args.done();\n      }\n    });\n  };\n\n  c3_chart_fn.regions = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (!regions) {\n      return config.regions;\n    }\n\n    config.regions = regions;\n    $$.redrawWithoutRescale();\n    return config.regions;\n  };\n\n  c3_chart_fn.regions.add = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n\n    if (!regions) {\n      return config.regions;\n    }\n\n    config.regions = config.regions.concat(regions);\n    $$.redrawWithoutRescale();\n    return config.regions;\n  };\n\n  c3_chart_fn.regions.remove = function (options) {\n    var $$ = this.internal,\n        config = $$.config,\n        duration,\n        classes,\n        regions;\n    options = options || {};\n    duration = $$.getOption(options, \"duration\", config.transition_duration);\n    classes = $$.getOption(options, \"classes\", [CLASS.region]);\n    regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n      return '.' + c;\n    }));\n    (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n    config.regions = config.regions.filter(function (region) {\n      var found = false;\n\n      if (!region['class']) {\n        return true;\n      }\n\n      region['class'].split(' ').forEach(function (c) {\n        if (classes.indexOf(c) >= 0) {\n          found = true;\n        }\n      });\n      return !found;\n    });\n    return config.regions;\n  };\n\n  c3_chart_fn.selected = function (targetId) {\n    var $$ = this.internal,\n        d3 = $$.d3;\n    return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n      return d3.select(this).classed(CLASS.SELECTED);\n    }).map(function (d) {\n      return d.map(function (d) {\n        var data = d.__data__;\n        return data.data ? data.data : data;\n      });\n    }));\n  };\n\n  c3_chart_fn.select = function (ids, indices, resetOther) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n\n    if (!config.data_selection_enabled) {\n      return;\n    }\n\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n      var shape = d3.select(this),\n          id = d.data ? d.data.id : d.id,\n          toggle = $$.getToggle(this, d).bind($$),\n          isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n          isTargetIndex = !indices || indices.indexOf(i) >= 0,\n          isSelected = shape.classed(CLASS.SELECTED); // line/area selection not supported yet\n\n      if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n        return;\n      }\n\n      if (isTargetId && isTargetIndex) {\n        if (config.data_selection_isselectable(d) && !isSelected) {\n          toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n        }\n      } else if (isDefined(resetOther) && resetOther) {\n        if (isSelected) {\n          toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n        }\n      }\n    });\n  };\n\n  c3_chart_fn.unselect = function (ids, indices) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n\n    if (!config.data_selection_enabled) {\n      return;\n    }\n\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n      var shape = d3.select(this),\n          id = d.data ? d.data.id : d.id,\n          toggle = $$.getToggle(this, d).bind($$),\n          isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n          isTargetIndex = !indices || indices.indexOf(i) >= 0,\n          isSelected = shape.classed(CLASS.SELECTED); // line/area selection not supported yet\n\n      if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n        return;\n      }\n\n      if (isTargetId && isTargetIndex) {\n        if (config.data_selection_isselectable(d)) {\n          if (isSelected) {\n            toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n          }\n        }\n      }\n    });\n  };\n\n  c3_chart_fn.show = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n    $$.removeHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n    targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n      targets.style('opacity', null).style('opacity', 1);\n    });\n\n    if (options.withLegend) {\n      $$.showLegend(targetIds);\n    }\n\n    $$.redraw({\n      withUpdateOrgXDomain: true,\n      withUpdateXDomain: true,\n      withLegend: true\n    });\n  };\n\n  c3_chart_fn.hide = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n    $$.addHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n    targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n      targets.style('opacity', null).style('opacity', 0);\n    });\n\n    if (options.withLegend) {\n      $$.hideLegend(targetIds);\n    }\n\n    $$.redraw({\n      withUpdateOrgXDomain: true,\n      withUpdateXDomain: true,\n      withLegend: true\n    });\n  };\n\n  c3_chart_fn.toggle = function (targetIds, options) {\n    var that = this,\n        $$ = this.internal;\n    $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n      $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n    });\n  };\n\n  c3_chart_fn.tooltip = function () {};\n\n  c3_chart_fn.tooltip.show = function (args) {\n    var $$ = this.internal,\n        index,\n        mouse; // determine mouse position on the chart\n\n    if (args.mouse) {\n      mouse = args.mouse;\n    } // determine focus data\n\n\n    if (args.data) {\n      if ($$.isMultipleX()) {\n        // if multiple xs, target point will be determined by mouse\n        mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n        index = null;\n      } else {\n        // TODO: when tooltip_grouped = false\n        index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n      }\n    } else if (typeof args.x !== 'undefined') {\n      index = $$.getIndexByX(args.x);\n    } else if (typeof args.index !== 'undefined') {\n      index = args.index;\n    } // emulate mouse events to show\n\n\n    $$.dispatchEvent('mouseover', index, mouse);\n    $$.dispatchEvent('mousemove', index, mouse);\n    $$.config.tooltip_onshow.call($$, args.data);\n  };\n\n  c3_chart_fn.tooltip.hide = function () {\n    // TODO: get target data by checking the state of focus\n    this.internal.dispatchEvent('mouseout', 0);\n    this.internal.config.tooltip_onhide.call(this);\n  };\n\n  c3_chart_fn.transform = function (type, targetIds) {\n    var $$ = this.internal,\n        options = ['pie', 'donut'].indexOf(type) >= 0 ? {\n      withTransform: true\n    } : null;\n    $$.transformTo(targetIds, type, options);\n  };\n\n  c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n    var $$ = this,\n        withTransitionForAxis = !$$.hasArcType(),\n        options = optionsForRedraw || {\n      withTransitionForAxis: withTransitionForAxis\n    };\n    options.withTransitionForTransform = false;\n    $$.transiting = false;\n    $$.setTargetType(targetIds, type);\n    $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n\n    $$.updateAndRedraw(options);\n  };\n\n  c3_chart_fn.x = function (x) {\n    var $$ = this.internal;\n\n    if (arguments.length) {\n      $$.updateTargetX($$.data.targets, x);\n      $$.redraw({\n        withUpdateOrgXDomain: true,\n        withUpdateXDomain: true\n      });\n    }\n\n    return $$.data.xs;\n  };\n\n  c3_chart_fn.xs = function (xs) {\n    var $$ = this.internal;\n\n    if (arguments.length) {\n      $$.updateTargetXs($$.data.targets, xs);\n      $$.redraw({\n        withUpdateOrgXDomain: true,\n        withUpdateXDomain: true\n      });\n    }\n\n    return $$.data.xs;\n  };\n\n  c3_chart_fn.zoom = function (domain) {\n    var $$ = this.internal;\n\n    if (domain) {\n      if ($$.isTimeSeries()) {\n        domain = domain.map(function (x) {\n          return $$.parseDate(x);\n        });\n      }\n\n      $$.brush.extent(domain);\n      $$.redraw({\n        withUpdateXDomain: true,\n        withY: $$.config.zoom_rescale\n      });\n      $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n    }\n\n    return $$.brush.extent();\n  };\n\n  c3_chart_fn.zoom.enable = function (enabled) {\n    var $$ = this.internal;\n    $$.config.zoom_enabled = enabled;\n    $$.updateAndRedraw();\n  };\n\n  c3_chart_fn.unzoom = function () {\n    var $$ = this.internal;\n    $$.brush.clear().update();\n    $$.redraw({\n      withUpdateXDomain: true\n    });\n  };\n\n  c3_chart_fn.zoom.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n\n    if (max === 0 || max) {\n      config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n    } else {\n      return config.zoom_x_max;\n    }\n  };\n\n  c3_chart_fn.zoom.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n\n    if (min === 0 || min) {\n      config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n    } else {\n      return config.zoom_x_min;\n    }\n  };\n\n  c3_chart_fn.zoom.range = function (range) {\n    if (arguments.length) {\n      if (isDefined(range.max)) {\n        this.domain.max(range.max);\n      }\n\n      if (isDefined(range.min)) {\n        this.domain.min(range.min);\n      }\n    } else {\n      return {\n        max: this.domain.max(),\n        min: this.domain.min()\n      };\n    }\n  };\n\n  c3_chart_internal_fn.initPie = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.pie = d3.layout.pie().value(function (d) {\n      return d.values.reduce(function (a, b) {\n        return a + b.value;\n      }, 0);\n    });\n    $$.pie.sort($$.getOrderFunction() || null);\n  };\n\n  c3_chart_internal_fn.updateRadius = function () {\n    var $$ = this,\n        config = $$.config,\n        w = config.gauge_width || config.donut_width,\n        gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n    $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n    $$.radius = $$.radiusExpanded * 0.95;\n    $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n    $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n    $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n  };\n\n  c3_chart_internal_fn.updateArc = function () {\n    var $$ = this;\n    $$.svgArc = $$.getSvgArc();\n    $$.svgArcExpanded = $$.getSvgArcExpanded();\n    $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n  };\n\n  c3_chart_internal_fn.updateAngle = function (d) {\n    var $$ = this,\n        config = $$.config,\n        found = false,\n        index = 0,\n        gMin,\n        gMax,\n        gTic,\n        gValue;\n\n    if (!config) {\n      return null;\n    }\n\n    $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n      if (!found && t.data.id === d.data.id) {\n        found = true;\n        d = t;\n        d.index = index;\n      }\n\n      index++;\n    });\n\n    if (isNaN(d.startAngle)) {\n      d.startAngle = 0;\n    }\n\n    if (isNaN(d.endAngle)) {\n      d.endAngle = d.startAngle;\n    }\n\n    if ($$.isGaugeType(d.data)) {\n      gMin = config.gauge_min;\n      gMax = config.gauge_max;\n      gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n      gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n      d.startAngle = config.gauge_startingAngle;\n      d.endAngle = d.startAngle + gTic * gValue;\n    }\n\n    return found ? d : null;\n  };\n\n  c3_chart_internal_fn.getSvgArc = function () {\n    var $$ = this,\n        hasGaugeType = $$.hasType('gauge'),\n        singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n        arc = $$.d3.svg.arc().outerRadius(function (d) {\n      return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n    }).innerRadius(function (d) {\n      return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n    }),\n        newArc = function newArc(d, withoutUpdate) {\n      var updated;\n\n      if (withoutUpdate) {\n        return arc(d);\n      } // for interpolate\n\n\n      updated = $$.updateAngle(d);\n      return updated ? arc(updated) : \"M 0 0\";\n    }; // TODO: extends all function\n\n\n    newArc.centroid = arc.centroid;\n    return newArc;\n  };\n\n  c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n    rate = rate || 1;\n    var $$ = this,\n        hasGaugeType = $$.hasType('gauge'),\n        singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n        expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n        arc = $$.d3.svg.arc().outerRadius(function (d) {\n      return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n    }).innerRadius(function (d) {\n      return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n    });\n    return function (d) {\n      var updated = $$.updateAngle(d);\n      return updated ? arc(updated) : \"M 0 0\";\n    };\n  };\n\n  c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n    return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n  };\n\n  c3_chart_internal_fn.transformForArcLabel = function (d) {\n    var $$ = this,\n        config = $$.config,\n        updated = $$.updateAngle(d),\n        c,\n        x,\n        y,\n        h,\n        ratio,\n        translate = \"\",\n        hasGauge = $$.hasType('gauge');\n\n    if (updated && !hasGauge) {\n      c = this.svgArc.centroid(updated);\n      x = isNaN(c[0]) ? 0 : c[0];\n      y = isNaN(c[1]) ? 0 : c[1];\n      h = Math.sqrt(x * x + y * y);\n\n      if ($$.hasType('donut') && config.donut_label_ratio) {\n        ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n      } else if ($$.hasType('pie') && config.pie_label_ratio) {\n        ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n      } else {\n        ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n      }\n\n      translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n    } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n      var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n      x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n      y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n      translate = \"translate(\" + x + ',' + y + \")\";\n    }\n\n    return translate;\n  };\n\n  c3_chart_internal_fn.getArcRatio = function (d) {\n    var $$ = this,\n        config = $$.config,\n        whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n    return d ? (d.endAngle - d.startAngle) / whole : null;\n  };\n\n  c3_chart_internal_fn.convertToArcData = function (d) {\n    return this.addName({\n      id: d.data.id,\n      value: d.value,\n      ratio: this.getArcRatio(d),\n      index: d.index\n    });\n  };\n\n  c3_chart_internal_fn.textForArcLabel = function (d) {\n    var $$ = this,\n        updated,\n        value,\n        ratio,\n        id,\n        format;\n\n    if (!$$.shouldShowArcLabel()) {\n      return \"\";\n    }\n\n    updated = $$.updateAngle(d);\n    value = updated ? updated.value : null;\n    ratio = $$.getArcRatio(updated);\n    id = d.data.id;\n\n    if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n      return \"\";\n    }\n\n    format = $$.getArcLabelFormat();\n    return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n  };\n\n  c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n    var $$ = this,\n        format = $$.getGaugeLabelExtents();\n    return format ? format(value, isMax) : value;\n  };\n\n  c3_chart_internal_fn.expandArc = function (targetIds) {\n    var $$ = this,\n        interval; // MEMO: avoid to cancel transition\n\n    if ($$.transiting) {\n      interval = window.setInterval(function () {\n        if (!$$.transiting) {\n          window.clearInterval(interval);\n\n          if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n            $$.expandArc(targetIds);\n          }\n        }\n      }, 10);\n      return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n      if (!$$.shouldExpand(d.data.id)) {\n        return;\n      }\n\n      $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n        if ($$.isDonutType(d.data)) {// callback here\n        }\n      });\n    });\n  };\n\n  c3_chart_internal_fn.unexpandArc = function (targetIds) {\n    var $$ = this;\n\n    if ($$.transiting) {\n      return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n      return $$.expandDuration(d.data.id);\n    }).attr(\"d\", $$.svgArc);\n    $$.svg.selectAll('.' + CLASS.arc);\n  };\n\n  c3_chart_internal_fn.expandDuration = function (id) {\n    var $$ = this,\n        config = $$.config;\n\n    if ($$.isDonutType(id)) {\n      return config.donut_expand_duration;\n    } else if ($$.isGaugeType(id)) {\n      return config.gauge_expand_duration;\n    } else if ($$.isPieType(id)) {\n      return config.pie_expand_duration;\n    } else {\n      return 50;\n    }\n  };\n\n  c3_chart_internal_fn.shouldExpand = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n  };\n\n  c3_chart_internal_fn.shouldShowArcLabel = function () {\n    var $$ = this,\n        config = $$.config,\n        shouldShow = true;\n\n    if ($$.hasType('donut')) {\n      shouldShow = config.donut_label_show;\n    } else if ($$.hasType('pie')) {\n      shouldShow = config.pie_label_show;\n    } // when gauge, always true\n\n\n    return shouldShow;\n  };\n\n  c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n    var $$ = this,\n        config = $$.config,\n        threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n    return ratio >= threshold;\n  };\n\n  c3_chart_internal_fn.getArcLabelFormat = function () {\n    var $$ = this,\n        config = $$.config,\n        format = config.pie_label_format;\n\n    if ($$.hasType('gauge')) {\n      format = config.gauge_label_format;\n    } else if ($$.hasType('donut')) {\n      format = config.donut_label_format;\n    }\n\n    return format;\n  };\n\n  c3_chart_internal_fn.getGaugeLabelExtents = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.gauge_label_extents;\n  };\n\n  c3_chart_internal_fn.getArcTitle = function () {\n    var $$ = this;\n    return $$.hasType('donut') ? $$.config.donut_title : \"\";\n  };\n\n  c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n    var $$ = this,\n        main = $$.main,\n        mainPieUpdate,\n        mainPieEnter,\n        classChartArc = $$.classChartArc.bind($$),\n        classArcs = $$.classArcs.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n      return classChartArc(d) + classFocus(d.data);\n    });\n    mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n    mainPieEnter.append('g').attr('class', classArcs);\n    mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\"); // MEMO: can not keep same color..., but not bad to update color in redraw\n    //mainPieUpdate.exit().remove();\n  };\n\n  c3_chart_internal_fn.initArc = function () {\n    var $$ = this;\n    $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n  };\n\n  c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        main = $$.main,\n        mainArc,\n        backgroundArc,\n        mainArcLabelLine,\n        hasGaugeType = $$.hasType('gauge');\n    mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n    mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n      return $$.color(d.data);\n    }).style(\"cursor\", function (d) {\n      return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n    }).each(function (d) {\n      if ($$.isGaugeType(d.data)) {\n        d.startAngle = d.endAngle = config.gauge_startingAngle;\n      }\n\n      this._current = d;\n    });\n\n    if (hasGaugeType) {\n      mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n      mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\n        return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n      });\n\n      if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n        mainArcLabelLine.style(\"display\", \"none\");\n      } else {\n        mainArcLabelLine.style(\"fill\", function (d) {\n          return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n        }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n          var lineLength = 0,\n              lineThickness = 2,\n              x = 0,\n              y = 0,\n              transform = \"\";\n\n          if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n            var updated = $$.updateAngle(d),\n                innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                lineAngle = updated.endAngle - Math.PI / 2,\n                arcInnerRadius = $$.radius - innerLineLength,\n                linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n            lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n            x = Math.cos(linePositioningAngle) * arcInnerRadius;\n            y = Math.sin(linePositioningAngle) * arcInnerRadius;\n            transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n          }\n\n          d3.select(this).attr({\n            x: x,\n            y: y,\n            width: lineLength,\n            height: lineThickness,\n            transform: transform\n          }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n        });\n      }\n    }\n\n    mainArc.attr(\"transform\", function (d) {\n      return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n    }).on('mouseover', config.interaction_enabled ? function (d) {\n      var updated, arcData;\n\n      if ($$.transiting) {\n        // skip while transiting\n        return;\n      }\n\n      updated = $$.updateAngle(d);\n\n      if (updated) {\n        arcData = $$.convertToArcData(updated); // transitions\n\n        $$.expandArc(updated.data.id);\n        $$.api.focus(updated.data.id);\n        $$.toggleFocusLegend(updated.data.id, true);\n        $$.config.data_onmouseover(arcData, this);\n      }\n    } : null).on('mousemove', config.interaction_enabled ? function (d) {\n      var updated = $$.updateAngle(d),\n          arcData,\n          selectedData;\n\n      if (updated) {\n        arcData = $$.convertToArcData(updated), selectedData = [arcData];\n        $$.showTooltip(selectedData, this);\n      }\n    } : null).on('mouseout', config.interaction_enabled ? function (d) {\n      var updated, arcData;\n\n      if ($$.transiting) {\n        // skip while transiting\n        return;\n      }\n\n      updated = $$.updateAngle(d);\n\n      if (updated) {\n        arcData = $$.convertToArcData(updated); // transitions\n\n        $$.unexpandArc(updated.data.id);\n        $$.api.revert();\n        $$.revertLegend();\n        $$.hideTooltip();\n        $$.config.data_onmouseout(arcData, this);\n      }\n    } : null).on('click', config.interaction_enabled ? function (d, i) {\n      var updated = $$.updateAngle(d),\n          arcData;\n\n      if (updated) {\n        arcData = $$.convertToArcData(updated);\n\n        if ($$.toggleShape) {\n          $$.toggleShape(this, arcData, i);\n        }\n\n        $$.config.data_onclick.call($$.api, arcData, this);\n      }\n    } : null).each(function () {\n      $$.transiting = true;\n    }).transition().duration(duration).attrTween(\"d\", function (d) {\n      var updated = $$.updateAngle(d),\n          interpolate;\n\n      if (!updated) {\n        return function () {\n          return \"M 0 0\";\n        };\n      } //                if (this._current === d) {\n      //                    this._current = {\n      //                        startAngle: Math.PI*2,\n      //                        endAngle: Math.PI*2,\n      //                    };\n      //                }\n\n\n      if (isNaN(this._current.startAngle)) {\n        this._current.startAngle = 0;\n      }\n\n      if (isNaN(this._current.endAngle)) {\n        this._current.endAngle = this._current.startAngle;\n      }\n\n      interpolate = d3.interpolate(this._current, updated);\n      this._current = interpolate(0);\n      return function (t) {\n        var interpolated = interpolate(t);\n        interpolated.data = d.data; // data.id will be updated by interporator\n\n        return $$.getArc(interpolated, true);\n      };\n    }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n      return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n    }) // Where gauge reading color would receive customization.\n    .call($$.endall, function () {\n      $$.transiting = false;\n    });\n    mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n      return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n    }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n      return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n    }).transition().duration(duration).style(\"opacity\", function (d) {\n      return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n    });\n    main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n    if (hasGaugeType) {\n      var index = 0;\n      backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n      backgroundArc.enter().append(\"path\");\n      backgroundArc.attr(\"class\", function (d, i) {\n        return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n      }).attr(\"d\", function (d1) {\n        if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n          return \"M 0 0\";\n        }\n\n        var d = {\n          data: [{\n            value: config.gauge_max\n          }],\n          startAngle: config.gauge_startingAngle,\n          endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n          index: index++\n        };\n        return $$.getArc(d, true, true);\n      });\n      backgroundArc.exit().remove();\n      $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n      $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n      $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n    }\n  };\n\n  c3_chart_internal_fn.initGauge = function () {\n    var arcs = this.arcs;\n\n    if (this.hasType('gauge')) {\n      arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n      arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n      arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n      arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n    }\n  };\n\n  c3_chart_internal_fn.getGaugeLabelHeight = function () {\n    return this.config.gauge_label_show ? 20 : 0;\n  };\n\n  c3_chart_internal_fn.hasCaches = function (ids) {\n    for (var i = 0; i < ids.length; i++) {\n      if (!(ids[i] in this.cache)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  c3_chart_internal_fn.addCache = function (id, target) {\n    this.cache[id] = this.cloneTarget(target);\n  };\n\n  c3_chart_internal_fn.getCaches = function (ids) {\n    var targets = [],\n        i;\n\n    for (i = 0; i < ids.length; i++) {\n      if (ids[i] in this.cache) {\n        targets.push(this.cloneTarget(this.cache[ids[i]]));\n      }\n    }\n\n    return targets;\n  };\n\n  c3_chart_internal_fn.categoryName = function (i) {\n    var config = this.config;\n    return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n  };\n\n  c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n    return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n  };\n\n  c3_chart_internal_fn.classText = function (d) {\n    return this.generateClass(CLASS.text, d.index);\n  };\n\n  c3_chart_internal_fn.classTexts = function (d) {\n    return this.generateClass(CLASS.texts, d.id);\n  };\n\n  c3_chart_internal_fn.classShape = function (d) {\n    return this.generateClass(CLASS.shape, d.index);\n  };\n\n  c3_chart_internal_fn.classShapes = function (d) {\n    return this.generateClass(CLASS.shapes, d.id);\n  };\n\n  c3_chart_internal_fn.classLine = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n  };\n\n  c3_chart_internal_fn.classLines = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n  };\n\n  c3_chart_internal_fn.classCircle = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n  };\n\n  c3_chart_internal_fn.classCircles = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n  };\n\n  c3_chart_internal_fn.classBar = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n  };\n\n  c3_chart_internal_fn.classBars = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n  };\n\n  c3_chart_internal_fn.classArc = function (d) {\n    return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n  };\n\n  c3_chart_internal_fn.classArcs = function (d) {\n    return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n  };\n\n  c3_chart_internal_fn.classArea = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n  };\n\n  c3_chart_internal_fn.classAreas = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n  };\n\n  c3_chart_internal_fn.classRegion = function (d, i) {\n    return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n  };\n\n  c3_chart_internal_fn.classEvent = function (d) {\n    return this.generateClass(CLASS.eventRect, d.index);\n  };\n\n  c3_chart_internal_fn.classTarget = function (id) {\n    var $$ = this;\n    var additionalClassSuffix = $$.config.data_classes[id],\n        additionalClass = '';\n\n    if (additionalClassSuffix) {\n      additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n    }\n\n    return $$.generateClass(CLASS.target, id) + additionalClass;\n  };\n\n  c3_chart_internal_fn.classFocus = function (d) {\n    return this.classFocused(d) + this.classDefocused(d);\n  };\n\n  c3_chart_internal_fn.classFocused = function (d) {\n    return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n  };\n\n  c3_chart_internal_fn.classDefocused = function (d) {\n    return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n  };\n\n  c3_chart_internal_fn.classChartText = function (d) {\n    return CLASS.chartText + this.classTarget(d.id);\n  };\n\n  c3_chart_internal_fn.classChartLine = function (d) {\n    return CLASS.chartLine + this.classTarget(d.id);\n  };\n\n  c3_chart_internal_fn.classChartBar = function (d) {\n    return CLASS.chartBar + this.classTarget(d.id);\n  };\n\n  c3_chart_internal_fn.classChartArc = function (d) {\n    return CLASS.chartArc + this.classTarget(d.data.id);\n  };\n\n  c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n    return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n  };\n\n  c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n    return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n  };\n\n  c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n    var $$ = this;\n    ids = ids || [];\n    return ids.length ? ids.map(function (id) {\n      return $$.selectorTarget(id, prefix);\n    }) : null;\n  };\n\n  c3_chart_internal_fn.selectorLegend = function (id) {\n    return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n  };\n\n  c3_chart_internal_fn.selectorLegends = function (ids) {\n    var $$ = this;\n    return ids && ids.length ? ids.map(function (id) {\n      return $$.selectorLegend(id);\n    }) : null;\n  };\n\n  c3_chart_internal_fn.getClipPath = function (id) {\n    var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n    return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n  };\n\n  c3_chart_internal_fn.appendClip = function (parent, id) {\n    return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n  };\n\n  c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n    // axis line width + padding for left\n    var left = Math.max(30, this.margin.left);\n    return forHorizontal ? -(1 + left) : -(left - 1);\n  };\n\n  c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n    return forHorizontal ? -20 : -this.margin.top;\n  };\n\n  c3_chart_internal_fn.getXAxisClipX = function () {\n    var $$ = this;\n    return $$.getAxisClipX(!$$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getXAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY(!$$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getYAxisClipX = function () {\n    var $$ = this;\n    return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getYAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY($$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n    var $$ = this,\n        left = Math.max(30, $$.margin.left),\n        right = Math.max(30, $$.margin.right); // width + axis line width + padding for left/right\n\n    return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n  };\n\n  c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n    // less than 20 is not enough to show the axis label 'outer' without legend\n    return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n  };\n\n  c3_chart_internal_fn.getXAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth(!$$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getXAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight(!$$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.getYAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n  };\n\n  c3_chart_internal_fn.getYAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight($$.config.axis_rotated);\n  };\n\n  c3_chart_internal_fn.generateColor = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        colors = config.data_colors,\n        pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n        callback = config.data_color,\n        ids = [];\n    return function (d) {\n      var id = d.id || d.data && d.data.id || d,\n          color; // if callback function is provided\n\n      if (colors[id] instanceof Function) {\n        color = colors[id](d);\n      } // if specified, choose that color\n      else if (colors[id]) {\n          color = colors[id];\n        } // if not specified, choose from pattern\n        else {\n            if (ids.indexOf(id) < 0) {\n              ids.push(id);\n            }\n\n            color = pattern[ids.indexOf(id) % pattern.length];\n            colors[id] = color;\n          }\n\n      return callback instanceof Function ? callback(color, d) : color;\n    };\n  };\n\n  c3_chart_internal_fn.generateLevelColor = function () {\n    var $$ = this,\n        config = $$.config,\n        colors = config.color_pattern,\n        threshold = config.color_threshold,\n        asValue = threshold.unit === 'value',\n        values = threshold.values && threshold.values.length ? threshold.values : [],\n        max = threshold.max || 100;\n    return notEmpty(config.color_threshold) ? function (value) {\n      var i,\n          v,\n          color = colors[colors.length - 1];\n\n      for (i = 0; i < values.length; i++) {\n        v = asValue ? value : value * 100 / max;\n\n        if (v < values[i]) {\n          color = colors[i];\n          break;\n        }\n      }\n\n      return color;\n    } : null;\n  };\n\n  c3_chart_internal_fn.getDefaultConfig = function () {\n    var config = {\n      bindto: '#chart',\n      svg_classname: undefined,\n      size_width: undefined,\n      size_height: undefined,\n      padding_left: undefined,\n      padding_right: undefined,\n      padding_top: undefined,\n      padding_bottom: undefined,\n      resize_auto: true,\n      zoom_enabled: false,\n      zoom_extent: undefined,\n      zoom_privileged: false,\n      zoom_rescale: false,\n      zoom_onzoom: function zoom_onzoom() {},\n      zoom_onzoomstart: function zoom_onzoomstart() {},\n      zoom_onzoomend: function zoom_onzoomend() {},\n      zoom_x_min: undefined,\n      zoom_x_max: undefined,\n      interaction_brighten: true,\n      interaction_enabled: true,\n      onmouseover: function onmouseover() {},\n      onmouseout: function onmouseout() {},\n      onresize: function onresize() {},\n      onresized: function onresized() {},\n      oninit: function oninit() {},\n      onrendered: function onrendered() {},\n      transition_duration: 350,\n      data_x: undefined,\n      data_xs: {},\n      data_xFormat: '%Y-%m-%d',\n      data_xLocaltime: true,\n      data_xSort: true,\n      data_idConverter: function data_idConverter(id) {\n        return id;\n      },\n      data_names: {},\n      data_classes: {},\n      data_groups: [],\n      data_axes: {},\n      data_type: undefined,\n      data_types: {},\n      data_labels: {},\n      data_order: 'desc',\n      data_regions: {},\n      data_color: undefined,\n      data_colors: {},\n      data_hide: false,\n      data_filter: undefined,\n      data_selection_enabled: false,\n      data_selection_grouped: false,\n      data_selection_isselectable: function data_selection_isselectable() {\n        return true;\n      },\n      data_selection_multiple: true,\n      data_selection_draggable: false,\n      data_onclick: function data_onclick() {},\n      data_onmouseover: function data_onmouseover() {},\n      data_onmouseout: function data_onmouseout() {},\n      data_onselected: function data_onselected() {},\n      data_onunselected: function data_onunselected() {},\n      data_url: undefined,\n      data_headers: undefined,\n      data_json: undefined,\n      data_rows: undefined,\n      data_columns: undefined,\n      data_mimeType: undefined,\n      data_keys: undefined,\n      // configuration for no plot-able data supplied.\n      data_empty_label_text: \"\",\n      // subchart\n      subchart_show: false,\n      subchart_size_height: 60,\n      subchart_axis_x_show: true,\n      subchart_onbrush: function subchart_onbrush() {},\n      // color\n      color_pattern: [],\n      color_threshold: {},\n      // legend\n      legend_show: true,\n      legend_hide: false,\n      legend_position: 'bottom',\n      legend_inset_anchor: 'top-left',\n      legend_inset_x: 10,\n      legend_inset_y: 0,\n      legend_inset_step: undefined,\n      legend_item_onclick: undefined,\n      legend_item_onmouseover: undefined,\n      legend_item_onmouseout: undefined,\n      legend_equally: false,\n      legend_padding: 0,\n      legend_item_tile_width: 10,\n      legend_item_tile_height: 10,\n      // axis\n      axis_rotated: false,\n      axis_x_show: true,\n      axis_x_type: 'indexed',\n      axis_x_localtime: true,\n      axis_x_categories: [],\n      axis_x_tick_centered: false,\n      axis_x_tick_format: undefined,\n      axis_x_tick_culling: {},\n      axis_x_tick_culling_max: 10,\n      axis_x_tick_count: undefined,\n      axis_x_tick_fit: true,\n      axis_x_tick_values: null,\n      axis_x_tick_rotate: 0,\n      axis_x_tick_outer: true,\n      axis_x_tick_multiline: true,\n      axis_x_tick_multilineMax: 0,\n      axis_x_tick_width: null,\n      axis_x_max: undefined,\n      axis_x_min: undefined,\n      axis_x_padding: {},\n      axis_x_height: undefined,\n      axis_x_extent: undefined,\n      axis_x_label: {},\n      axis_x_inner: undefined,\n      axis_y_show: true,\n      axis_y_type: undefined,\n      axis_y_max: undefined,\n      axis_y_min: undefined,\n      axis_y_inverted: false,\n      axis_y_center: undefined,\n      axis_y_inner: undefined,\n      axis_y_label: {},\n      axis_y_tick_format: undefined,\n      axis_y_tick_outer: true,\n      axis_y_tick_values: null,\n      axis_y_tick_rotate: 0,\n      axis_y_tick_count: undefined,\n      axis_y_tick_time_value: undefined,\n      axis_y_tick_time_interval: undefined,\n      axis_y_padding: {},\n      axis_y_default: undefined,\n      axis_y2_show: false,\n      axis_y2_max: undefined,\n      axis_y2_min: undefined,\n      axis_y2_inverted: false,\n      axis_y2_center: undefined,\n      axis_y2_inner: undefined,\n      axis_y2_label: {},\n      axis_y2_tick_format: undefined,\n      axis_y2_tick_outer: true,\n      axis_y2_tick_values: null,\n      axis_y2_tick_count: undefined,\n      axis_y2_padding: {},\n      axis_y2_default: undefined,\n      // grid\n      grid_x_show: false,\n      grid_x_type: 'tick',\n      grid_x_lines: [],\n      grid_y_show: false,\n      // not used\n      // grid_y_type: 'tick',\n      grid_y_lines: [],\n      grid_y_ticks: 10,\n      grid_focus_show: true,\n      grid_lines_front: true,\n      // point - point of each data\n      point_show: true,\n      point_r: 2.5,\n      point_sensitivity: 10,\n      point_focus_expand_enabled: true,\n      point_focus_expand_r: undefined,\n      point_select_r: undefined,\n      // line\n      line_connectNull: false,\n      line_step_type: 'step',\n      // bar\n      bar_width: undefined,\n      bar_width_ratio: 0.6,\n      bar_width_max: undefined,\n      bar_zerobased: true,\n      bar_space: 0,\n      // area\n      area_zerobased: true,\n      area_above: false,\n      // pie\n      pie_label_show: true,\n      pie_label_format: undefined,\n      pie_label_threshold: 0.05,\n      pie_label_ratio: undefined,\n      pie_expand: {},\n      pie_expand_duration: 50,\n      // gauge\n      gauge_fullCircle: false,\n      gauge_label_show: true,\n      gauge_labelLine_show: true,\n      gauge_label_format: undefined,\n      gauge_min: 0,\n      gauge_max: 100,\n      gauge_startingAngle: -1 * Math.PI / 2,\n      gauge_label_extents: undefined,\n      gauge_units: undefined,\n      gauge_width: undefined,\n      gauge_arcs_minWidth: 5,\n      gauge_expand: {},\n      gauge_expand_duration: 50,\n      // donut\n      donut_label_show: true,\n      donut_label_format: undefined,\n      donut_label_threshold: 0.05,\n      donut_label_ratio: undefined,\n      donut_width: undefined,\n      donut_title: \"\",\n      donut_expand: {},\n      donut_expand_duration: 50,\n      // spline\n      spline_interpolation_type: 'cardinal',\n      // region - region to change style\n      regions: [],\n      // tooltip - show when mouseover on each data\n      tooltip_show: true,\n      tooltip_grouped: true,\n      tooltip_order: undefined,\n      tooltip_format_title: undefined,\n      tooltip_format_name: undefined,\n      tooltip_format_value: undefined,\n      tooltip_position: undefined,\n      tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n        return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n      },\n      tooltip_init_show: false,\n      tooltip_init_x: 0,\n      tooltip_init_position: {\n        top: '0px',\n        left: '50px'\n      },\n      tooltip_onshow: function tooltip_onshow() {},\n      tooltip_onhide: function tooltip_onhide() {},\n      // title\n      title_text: undefined,\n      title_padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      title_position: 'top-center'\n    };\n    Object.keys(this.additionalConfig).forEach(function (key) {\n      config[key] = this.additionalConfig[key];\n    }, this);\n    return config;\n  };\n\n  c3_chart_internal_fn.additionalConfig = {};\n\n  c3_chart_internal_fn.loadConfig = function (config) {\n    var this_config = this.config,\n        target,\n        keys,\n        read;\n\n    function find() {\n      var key = keys.shift(); //        console.log(\"key =>\", key, \", target =>\", target);\n\n      if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n        target = target[key];\n        return find();\n      } else if (!key) {\n        return target;\n      } else {\n        return undefined;\n      }\n    }\n\n    Object.keys(this_config).forEach(function (key) {\n      target = config;\n      keys = key.split('_');\n      read = find(); //        console.log(\"CONFIG : \", key, read);\n\n      if (isDefined(read)) {\n        this_config[key] = read;\n      }\n    });\n  };\n\n  c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n    var $$ = this,\n        type = mimeType ? mimeType : 'csv';\n    var req = $$.d3.xhr(url);\n\n    if (headers) {\n      Object.keys(headers).forEach(function (header) {\n        req.header(header, headers[header]);\n      });\n    }\n\n    req.get(function (error, data) {\n      var d;\n      var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n\n      if (!data) {\n        throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n      }\n\n      if (type === 'json') {\n        d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n      } else if (type === 'tsv') {\n        d = $$.convertTsvToData(dataResponse);\n      } else {\n        d = $$.convertCsvToData(dataResponse);\n      }\n\n      done.call($$, d);\n    });\n  };\n\n  c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n    var rows = parser.parseRows(xsv),\n        d;\n\n    if (rows.length === 1) {\n      d = [{}];\n      rows[0].forEach(function (id) {\n        d[0][id] = null;\n      });\n    } else {\n      d = parser.parse(xsv);\n    }\n\n    return d;\n  };\n\n  c3_chart_internal_fn.convertCsvToData = function (csv) {\n    return this.convertXsvToData(csv, this.d3.csv);\n  };\n\n  c3_chart_internal_fn.convertTsvToData = function (tsv) {\n    return this.convertXsvToData(tsv, this.d3.tsv);\n  };\n\n  c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n    var $$ = this,\n        new_rows = [],\n        targetKeys,\n        data;\n\n    if (keys) {\n      // when keys specified, json would be an array that includes objects\n      if (keys.x) {\n        targetKeys = keys.value.concat(keys.x);\n        $$.config.data_x = keys.x;\n      } else {\n        targetKeys = keys.value;\n      }\n\n      new_rows.push(targetKeys);\n      json.forEach(function (o) {\n        var new_row = [];\n        targetKeys.forEach(function (key) {\n          // convert undefined to null because undefined data will be removed in convertDataToTargets()\n          var v = $$.findValueInJson(o, key);\n\n          if (isUndefined(v)) {\n            v = null;\n          }\n\n          new_row.push(v);\n        });\n        new_rows.push(new_row);\n      });\n      data = $$.convertRowsToData(new_rows);\n    } else {\n      Object.keys(json).forEach(function (key) {\n        new_rows.push([key].concat(json[key]));\n      });\n      data = $$.convertColumnsToData(new_rows);\n    }\n\n    return data;\n  };\n\n  c3_chart_internal_fn.findValueInJson = function (object, path) {\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n\n    path = path.replace(/^\\./, ''); // strip a leading dot\n\n    var pathArray = path.split('.');\n\n    for (var i = 0; i < pathArray.length; ++i) {\n      var k = pathArray[i];\n\n      if (k in object) {\n        object = object[k];\n      } else {\n        return;\n      }\n    }\n\n    return object;\n  };\n  /**\n   * Converts the rows to normalized data.\n   * @param {any[][]} rows The row data\n   * @return {Object[]}\n   */\n\n\n  c3_chart_internal_fn.convertRowsToData = function (rows) {\n    var newRows = [];\n    var keys = rows[0];\n\n    for (var i = 1; i < rows.length; i++) {\n      var newRow = {};\n\n      for (var j = 0; j < rows[i].length; j++) {\n        if (isUndefined(rows[i][j])) {\n          throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n        }\n\n        newRow[keys[j]] = rows[i][j];\n      }\n\n      newRows.push(newRow);\n    }\n\n    return newRows;\n  };\n  /**\n   * Converts the columns to normalized data.\n   * @param {any[][]} columns The column data\n   * @return {Object[]}\n   */\n\n\n  c3_chart_internal_fn.convertColumnsToData = function (columns) {\n    var newRows = [];\n\n    for (var i = 0; i < columns.length; i++) {\n      var key = columns[i][0];\n\n      for (var j = 1; j < columns[i].length; j++) {\n        if (isUndefined(newRows[j - 1])) {\n          newRows[j - 1] = {};\n        }\n\n        if (isUndefined(columns[i][j])) {\n          throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n        }\n\n        newRows[j - 1][key] = columns[i][j];\n      }\n    }\n\n    return newRows;\n  };\n\n  c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n        xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n        targets; // save x for update data by load when custom x and c3.x API\n\n    ids.forEach(function (id) {\n      var xKey = $$.getXKey(id);\n\n      if ($$.isCustomX() || $$.isTimeSeries()) {\n        // if included in input data\n        if (xs.indexOf(xKey) >= 0) {\n          $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n            return d[xKey];\n          }).filter(isValue).map(function (rawX, i) {\n            return $$.generateTargetX(rawX, id, i);\n          }));\n        } // if not included in input data, find from preloaded data of other id's x\n        else if (config.data_x) {\n            $$.data.xs[id] = $$.getOtherTargetXs();\n          } // if not included in input data, find from preloaded data\n          else if (notEmpty(config.data_xs)) {\n              $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n            } // MEMO: if no x included, use same x of current will be used\n\n      } else {\n        $$.data.xs[id] = data.map(function (d, i) {\n          return i;\n        });\n      }\n    }); // check x is defined\n\n    ids.forEach(function (id) {\n      if (!$$.data.xs[id]) {\n        throw new Error('x is not defined for id = \"' + id + '\".');\n      }\n    }); // convert to target\n\n    targets = ids.map(function (id, index) {\n      var convertedId = config.data_idConverter(id);\n      return {\n        id: convertedId,\n        id_org: id,\n        values: data.map(function (d, i) {\n          var xKey = $$.getXKey(id),\n              rawX = d[xKey],\n              value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n              x; // use x as categories if custom x and categorized\n\n          if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n            if (index === 0 && i === 0) {\n              config.axis_x_categories = [];\n            }\n\n            x = config.axis_x_categories.indexOf(rawX);\n\n            if (x === -1) {\n              x = config.axis_x_categories.length;\n              config.axis_x_categories.push(rawX);\n            }\n          } else {\n            x = $$.generateTargetX(rawX, id, i);\n          } // mark as x = undefined if value is undefined and filter to remove after mapped\n\n\n          if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n            x = undefined;\n          }\n\n          return {\n            x: x,\n            value: value,\n            id: convertedId\n          };\n        }).filter(function (v) {\n          return isDefined(v.x);\n        })\n      };\n    }); // finish targets\n\n    targets.forEach(function (t) {\n      var i; // sort values by its x\n\n      if (config.data_xSort) {\n        t.values = t.values.sort(function (v1, v2) {\n          var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n              x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n          return x1 - x2;\n        });\n      } // indexing each value\n\n\n      i = 0;\n      t.values.forEach(function (v) {\n        v.index = i++;\n      }); // this needs to be sorted because its index and value.index is identical\n\n      $$.data.xs[t.id].sort(function (v1, v2) {\n        return v1 - v2;\n      });\n    }); // cache information about values\n\n    $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n    $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets); // set target types\n\n    if (config.data_type) {\n      $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n        return !(id in config.data_types);\n      }), config.data_type);\n    } // cache as original id keyed\n\n\n    targets.forEach(function (d) {\n      $$.addCache(d.id_org, d);\n    });\n    return targets;\n  };\n\n  c3_chart_internal_fn.isX = function (key) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n  };\n\n  c3_chart_internal_fn.isNotX = function (key) {\n    return !this.isX(key);\n  };\n\n  c3_chart_internal_fn.getXKey = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n  };\n\n  c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n    var $$ = this,\n        xValues,\n        ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n    ids.forEach(function (id) {\n      if ($$.getXKey(id) === key) {\n        xValues = $$.data.xs[id];\n      }\n    });\n    return xValues;\n  };\n\n  c3_chart_internal_fn.getIndexByX = function (x) {\n    var $$ = this,\n        data = $$.filterByX($$.data.targets, x);\n    return data.length ? data[0].index : null;\n  };\n\n  c3_chart_internal_fn.getXValue = function (id, i) {\n    var $$ = this;\n    return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n  };\n\n  c3_chart_internal_fn.getOtherTargetXs = function () {\n    var $$ = this,\n        idsForX = Object.keys($$.data.xs);\n    return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n  };\n\n  c3_chart_internal_fn.getOtherTargetX = function (index) {\n    var xs = this.getOtherTargetXs();\n    return xs && index < xs.length ? xs[index] : null;\n  };\n\n  c3_chart_internal_fn.addXs = function (xs) {\n    var $$ = this;\n    Object.keys(xs).forEach(function (id) {\n      $$.config.data_xs[id] = xs[id];\n    });\n  };\n\n  c3_chart_internal_fn.hasMultipleX = function (xs) {\n    return this.d3.set(Object.keys(xs).map(function (id) {\n      return xs[id];\n    })).size() > 1;\n  };\n\n  c3_chart_internal_fn.isMultipleX = function () {\n    return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n  };\n\n  c3_chart_internal_fn.addName = function (data) {\n    var $$ = this,\n        name;\n\n    if (data) {\n      name = $$.config.data_names[data.id];\n      data.name = name !== undefined ? name : data.id;\n    }\n\n    return data;\n  };\n\n  c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n    var valueOnIndex = values.filter(function (v) {\n      return v.index === index;\n    });\n    return valueOnIndex.length ? valueOnIndex[0] : null;\n  };\n\n  c3_chart_internal_fn.updateTargetX = function (targets, x) {\n    var $$ = this;\n    targets.forEach(function (t) {\n      t.values.forEach(function (v, i) {\n        v.x = $$.generateTargetX(x[i], t.id, i);\n      });\n      $$.data.xs[t.id] = x;\n    });\n  };\n\n  c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n    var $$ = this;\n    targets.forEach(function (t) {\n      if (xs[t.id]) {\n        $$.updateTargetX([t], xs[t.id]);\n      }\n    });\n  };\n\n  c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n    var $$ = this,\n        x;\n\n    if ($$.isTimeSeries()) {\n      x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n    } else if ($$.isCustomX() && !$$.isCategorized()) {\n      x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n    } else {\n      x = index;\n    }\n\n    return x;\n  };\n\n  c3_chart_internal_fn.cloneTarget = function (target) {\n    return {\n      id: target.id,\n      id_org: target.id_org,\n      values: target.values.map(function (d) {\n        return {\n          x: d.x,\n          value: d.value,\n          id: d.id\n        };\n      })\n    };\n  };\n\n  c3_chart_internal_fn.updateXs = function () {\n    var $$ = this;\n\n    if ($$.data.targets.length) {\n      $$.xs = [];\n      $$.data.targets[0].values.forEach(function (v) {\n        $$.xs[v.index] = v.x;\n      });\n    }\n  };\n\n  c3_chart_internal_fn.getPrevX = function (i) {\n    var x = this.xs[i - 1];\n    return typeof x !== 'undefined' ? x : null;\n  };\n\n  c3_chart_internal_fn.getNextX = function (i) {\n    var x = this.xs[i + 1];\n    return typeof x !== 'undefined' ? x : null;\n  };\n\n  c3_chart_internal_fn.getMaxDataCount = function () {\n    var $$ = this;\n    return $$.d3.max($$.data.targets, function (t) {\n      return t.values.length;\n    });\n  };\n\n  c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n    var length = targets.length,\n        max = 0,\n        maxTarget;\n\n    if (length > 1) {\n      targets.forEach(function (t) {\n        if (t.values.length > max) {\n          maxTarget = t;\n          max = t.values.length;\n        }\n      });\n    } else {\n      maxTarget = length ? targets[0] : null;\n    }\n\n    return maxTarget;\n  };\n\n  c3_chart_internal_fn.getEdgeX = function (targets) {\n    var $$ = this;\n    return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n      return t.values[0].x;\n    }), $$.d3.max(targets, function (t) {\n      return t.values[t.values.length - 1].x;\n    })];\n  };\n\n  c3_chart_internal_fn.mapToIds = function (targets) {\n    return targets.map(function (d) {\n      return d.id;\n    });\n  };\n\n  c3_chart_internal_fn.mapToTargetIds = function (ids) {\n    var $$ = this;\n    return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n  };\n\n  c3_chart_internal_fn.hasTarget = function (targets, id) {\n    var ids = this.mapToIds(targets),\n        i;\n\n    for (i = 0; i < ids.length; i++) {\n      if (ids[i] === id) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  c3_chart_internal_fn.isTargetToShow = function (targetId) {\n    return this.hiddenTargetIds.indexOf(targetId) < 0;\n  };\n\n  c3_chart_internal_fn.isLegendToShow = function (targetId) {\n    return this.hiddenLegendIds.indexOf(targetId) < 0;\n  };\n\n  c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n    var $$ = this;\n    return targets.filter(function (t) {\n      return $$.isTargetToShow(t.id);\n    });\n  };\n\n  c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n    var $$ = this;\n    var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n      return t.values.map(function (v) {\n        return +v.x;\n      });\n    }))).values();\n    xs = $$.isTimeSeries() ? xs.map(function (x) {\n      return new Date(+x);\n    }) : xs.map(function (x) {\n      return +x;\n    });\n    return xs.sort(function (a, b) {\n      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n    });\n  };\n\n  c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n\n    for (var i = 0; i < targetIds.length; i++) {\n      if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n      }\n    }\n  };\n\n  c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n    this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n      return targetIds.indexOf(id) < 0;\n    });\n  };\n\n  c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n\n    for (var i = 0; i < targetIds.length; i++) {\n      if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n      }\n    }\n  };\n\n  c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n    this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n      return targetIds.indexOf(id) < 0;\n    });\n  };\n\n  c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n    var ys = {};\n    targets.forEach(function (t) {\n      ys[t.id] = [];\n      t.values.forEach(function (v) {\n        ys[t.id].push(v.value);\n      });\n    });\n    return ys;\n  };\n\n  c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n    var ids = Object.keys(targets),\n        i,\n        j,\n        values;\n\n    for (i = 0; i < ids.length; i++) {\n      values = targets[ids[i]].values;\n\n      for (j = 0; j < values.length; j++) {\n        if (checker(values[j].value)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n      return v < 0;\n    });\n  };\n\n  c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n      return v > 0;\n    });\n  };\n\n  c3_chart_internal_fn.isOrderDesc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n  };\n\n  c3_chart_internal_fn.isOrderAsc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n  };\n\n  c3_chart_internal_fn.getOrderFunction = function () {\n    var $$ = this,\n        config = $$.config,\n        orderAsc = $$.isOrderAsc(),\n        orderDesc = $$.isOrderDesc();\n\n    if (orderAsc || orderDesc) {\n      return function (t1, t2) {\n        var reducer = function reducer(p, c) {\n          return p + Math.abs(c.value);\n        };\n\n        var t1Sum = t1.values.reduce(reducer, 0),\n            t2Sum = t2.values.reduce(reducer, 0);\n        return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\n      };\n    } else if (isFunction(config.data_order)) {\n      return config.data_order;\n    } else if (isArray(config.data_order)) {\n      var order = config.data_order;\n      return function (t1, t2) {\n        return order.indexOf(t1.id) - order.indexOf(t2.id);\n      };\n    }\n  };\n\n  c3_chart_internal_fn.orderTargets = function (targets) {\n    var fct = this.getOrderFunction();\n\n    if (fct) {\n      targets.sort(fct);\n\n      if (this.isOrderAsc() || this.isOrderDesc()) {\n        targets.reverse();\n      }\n    }\n\n    return targets;\n  };\n\n  c3_chart_internal_fn.filterByX = function (targets, x) {\n    return this.d3.merge(targets.map(function (t) {\n      return t.values;\n    })).filter(function (v) {\n      return v.x - x === 0;\n    });\n  };\n\n  c3_chart_internal_fn.filterRemoveNull = function (data) {\n    return data.filter(function (d) {\n      return isValue(d.value);\n    });\n  };\n\n  c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n    return targets.map(function (t) {\n      return {\n        id: t.id,\n        id_org: t.id_org,\n        values: t.values.filter(function (v) {\n          return xDomain[0] <= v.x && v.x <= xDomain[1];\n        })\n      };\n    });\n  };\n\n  c3_chart_internal_fn.hasDataLabel = function () {\n    var config = this.config;\n\n    if (typeof config.data_labels === 'boolean' && config.data_labels) {\n      return true;\n    } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n    var $$ = this,\n        lengths = [0, 0],\n        paddingCoef = 1.3;\n    $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n      return $$.dataLabelFormat(d.id)(d);\n    }).each(function (d, i) {\n      lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n    }).remove();\n    return lengths;\n  };\n\n  c3_chart_internal_fn.isNoneArc = function (d) {\n    return this.hasTarget(this.data.targets, d.id);\n  }, c3_chart_internal_fn.isArc = function (d) {\n    return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n  };\n\n  c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n    var i,\n        targetX = values[index].x,\n        sames = [];\n\n    for (i = index - 1; i >= 0; i--) {\n      if (targetX !== values[i].x) {\n        break;\n      }\n\n      sames.push(values[i]);\n    }\n\n    for (i = index; i < values.length; i++) {\n      if (targetX !== values[i].x) {\n        break;\n      }\n\n      sames.push(values[i]);\n    }\n\n    return sames;\n  };\n\n  c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n    var $$ = this,\n        candidates; // map to array of closest points of each target\n\n    candidates = targets.map(function (target) {\n      return $$.findClosest(target.values, pos);\n    }); // decide closest point and return\n\n    return $$.findClosest(candidates, pos);\n  };\n\n  c3_chart_internal_fn.findClosest = function (values, pos) {\n    var $$ = this,\n        minDist = $$.config.point_sensitivity,\n        closest; // find mouseovering bar\n\n    values.filter(function (v) {\n      return v && $$.isBarType(v.id);\n    }).forEach(function (v) {\n      var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n\n      if (!closest && $$.isWithinBar(shape)) {\n        closest = v;\n      }\n    }); // find closest point from non-bar\n\n    values.filter(function (v) {\n      return v && !$$.isBarType(v.id);\n    }).forEach(function (v) {\n      var d = $$.dist(v, pos);\n\n      if (d < minDist) {\n        minDist = d;\n        closest = v;\n      }\n    });\n    return closest;\n  };\n\n  c3_chart_internal_fn.dist = function (data, pos) {\n    var $$ = this,\n        config = $$.config,\n        xIndex = config.axis_rotated ? 1 : 0,\n        yIndex = config.axis_rotated ? 0 : 1,\n        y = $$.circleY(data, data.index),\n        x = $$.x(data.x);\n    return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n  };\n\n  c3_chart_internal_fn.convertValuesToStep = function (values) {\n    var converted = [].concat(values),\n        i;\n\n    if (!this.isCategorized()) {\n      return values;\n    }\n\n    for (i = values.length + 1; 0 < i; i--) {\n      converted[i] = converted[i - 1];\n    }\n\n    converted[0] = {\n      x: converted[0].x - 1,\n      value: converted[0].value,\n      id: converted[0].id\n    };\n    converted[values.length + 1] = {\n      x: converted[values.length].x + 1,\n      value: converted[values.length].value,\n      id: converted[values.length].id\n    };\n    return converted;\n  };\n\n  c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n    var $$ = this,\n        config = $$.config,\n        current = config['data_' + name];\n\n    if (typeof attrs === 'undefined') {\n      return current;\n    }\n\n    Object.keys(attrs).forEach(function (id) {\n      current[id] = attrs[id];\n    });\n    $$.redraw({\n      withLegend: true\n    });\n    return current;\n  };\n\n  c3_chart_internal_fn.load = function (targets, args) {\n    var $$ = this;\n\n    if (targets) {\n      // filter loading targets if needed\n      if (args.filter) {\n        targets = targets.filter(args.filter);\n      } // set type if args.types || args.type specified\n\n\n      if (args.type || args.types) {\n        targets.forEach(function (t) {\n          var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n          $$.setTargetType(t.id, type);\n        });\n      } // Update/Add data\n\n\n      $$.data.targets.forEach(function (d) {\n        for (var i = 0; i < targets.length; i++) {\n          if (d.id === targets[i].id) {\n            d.values = targets[i].values;\n            targets.splice(i, 1);\n            break;\n          }\n        }\n      });\n      $$.data.targets = $$.data.targets.concat(targets); // add remained\n    } // Set targets\n\n\n    $$.updateTargets($$.data.targets); // Redraw with new targets\n\n    $$.redraw({\n      withUpdateOrgXDomain: true,\n      withUpdateXDomain: true,\n      withLegend: true\n    });\n\n    if (args.done) {\n      args.done();\n    }\n  };\n\n  c3_chart_internal_fn.loadFromArgs = function (args) {\n    var $$ = this;\n\n    if (args.data) {\n      $$.load($$.convertDataToTargets(args.data), args);\n    } else if (args.url) {\n      $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n        $$.load($$.convertDataToTargets(data), args);\n      });\n    } else if (args.json) {\n      $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n    } else if (args.rows) {\n      $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n    } else if (args.columns) {\n      $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n    } else {\n      $$.load(null, args);\n    }\n  };\n\n  c3_chart_internal_fn.unload = function (targetIds, done) {\n    var $$ = this;\n\n    if (!done) {\n      done = function done() {};\n    } // filter existing target\n\n\n    targetIds = targetIds.filter(function (id) {\n      return $$.hasTarget($$.data.targets, id);\n    }); // If no target, call done and return\n\n    if (!targetIds || targetIds.length === 0) {\n      done();\n      return;\n    }\n\n    $$.svg.selectAll(targetIds.map(function (id) {\n      return $$.selectorTarget(id);\n    })).transition().style('opacity', 0).remove().call($$.endall, done);\n    targetIds.forEach(function (id) {\n      // Reset fadein for future load\n      $$.withoutFadeIn[id] = false; // Remove target's elements\n\n      if ($$.legend) {\n        $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n      } // Remove target\n\n\n      $$.data.targets = $$.data.targets.filter(function (t) {\n        return t.id !== id;\n      });\n    });\n  };\n\n  c3_chart_internal_fn.getYDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasNegativeValue;\n\n    if (config.data_groups.length > 0) {\n      hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n\n      for (j = 0; j < config.data_groups.length; j++) {\n        // Determine baseId\n        idsInGroup = config.data_groups[j].filter(function (id) {\n          return ids.indexOf(id) >= 0;\n        });\n\n        if (idsInGroup.length === 0) {\n          continue;\n        }\n\n        baseId = idsInGroup[0]; // Consider negative values\n\n        if (hasNegativeValue && ys[baseId]) {\n          ys[baseId].forEach(function (v, i) {\n            ys[baseId][i] = v < 0 ? v : 0;\n          });\n        } // Compute min\n\n\n        for (k = 1; k < idsInGroup.length; k++) {\n          id = idsInGroup[k];\n\n          if (!ys[id]) {\n            continue;\n          }\n\n          ys[id].forEach(function (v, i) {\n            if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n              ys[baseId][i] += +v;\n            }\n          });\n        }\n      }\n    }\n\n    return $$.d3.min(Object.keys(ys).map(function (key) {\n      return $$.d3.min(ys[key]);\n    }));\n  };\n\n  c3_chart_internal_fn.getYDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasPositiveValue;\n\n    if (config.data_groups.length > 0) {\n      hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n      for (j = 0; j < config.data_groups.length; j++) {\n        // Determine baseId\n        idsInGroup = config.data_groups[j].filter(function (id) {\n          return ids.indexOf(id) >= 0;\n        });\n\n        if (idsInGroup.length === 0) {\n          continue;\n        }\n\n        baseId = idsInGroup[0]; // Consider positive values\n\n        if (hasPositiveValue && ys[baseId]) {\n          ys[baseId].forEach(function (v, i) {\n            ys[baseId][i] = v > 0 ? v : 0;\n          });\n        } // Compute max\n\n\n        for (k = 1; k < idsInGroup.length; k++) {\n          id = idsInGroup[k];\n\n          if (!ys[id]) {\n            continue;\n          }\n\n          ys[id].forEach(function (v, i) {\n            if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n              ys[baseId][i] += +v;\n            }\n          });\n        }\n      }\n    }\n\n    return $$.d3.max(Object.keys(ys).map(function (key) {\n      return $$.d3.max(ys[key]);\n    }));\n  };\n\n  c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n    var $$ = this,\n        config = $$.config,\n        targetsByAxisId = targets.filter(function (t) {\n      return $$.axis.getId(t.id) === axisId;\n    }),\n        yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n        yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n        yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n        yDomainMin = $$.getYDomainMin(yTargets),\n        yDomainMax = $$.getYDomainMax(yTargets),\n        domain,\n        domainLength,\n        padding,\n        padding_top,\n        padding_bottom,\n        center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n        yDomainAbs,\n        lengths,\n        diff,\n        ratio,\n        isAllPositive,\n        isAllNegative,\n        isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n        isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n        showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n        showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated; // MEMO: avoid inverting domain unexpectedly\n\n    yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n    yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n    if (yTargets.length === 0) {\n      // use current domain if target of axisId is none\n      return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n    }\n\n    if (isNaN(yDomainMin)) {\n      // set minimum to zero when not number\n      yDomainMin = 0;\n    }\n\n    if (isNaN(yDomainMax)) {\n      // set maximum to have same value as yDomainMin\n      yDomainMax = yDomainMin;\n    }\n\n    if (yDomainMin === yDomainMax) {\n      yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n    }\n\n    isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n    isAllNegative = yDomainMin <= 0 && yDomainMax <= 0; // Cancel zerobased if axis_*_min / axis_*_max specified\n\n    if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n      isZeroBased = false;\n    } // Bar/Area chart should be 0-based if all positive|negative\n\n\n    if (isZeroBased) {\n      if (isAllPositive) {\n        yDomainMin = 0;\n      }\n\n      if (isAllNegative) {\n        yDomainMax = 0;\n      }\n    }\n\n    domainLength = Math.abs(yDomainMax - yDomainMin);\n    padding = padding_top = padding_bottom = domainLength * 0.1;\n\n    if (typeof center !== 'undefined') {\n      yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n      yDomainMax = center + yDomainAbs;\n      yDomainMin = center - yDomainAbs;\n    } // add padding for data label\n\n\n    if (showHorizontalDataLabel) {\n      lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n      diff = diffDomain($$.y.range());\n      ratio = [lengths[0] / diff, lengths[1] / diff];\n      padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n      padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n    } else if (showVerticalDataLabel) {\n      lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n      padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n      padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n    }\n\n    if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n      padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n      padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n    }\n\n    if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n      padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n      padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n    } // Bar/Area chart should be 0-based if all positive|negative\n\n\n    if (isZeroBased) {\n      if (isAllPositive) {\n        padding_bottom = yDomainMin;\n      }\n\n      if (isAllNegative) {\n        padding_top = -yDomainMax;\n      }\n    }\n\n    domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n    return isInverted ? domain.reverse() : domain;\n  };\n\n  c3_chart_internal_fn.getXDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n      return $$.d3.min(t.values, function (v) {\n        return v.x;\n      });\n    });\n  };\n\n  c3_chart_internal_fn.getXDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n      return $$.d3.max(t.values, function (v) {\n        return v.x;\n      });\n    });\n  };\n\n  c3_chart_internal_fn.getXDomainPadding = function (domain) {\n    var $$ = this,\n        config = $$.config,\n        diff = domain[1] - domain[0],\n        maxDataCount,\n        padding,\n        paddingLeft,\n        paddingRight;\n\n    if ($$.isCategorized()) {\n      padding = 0;\n    } else if ($$.hasType('bar')) {\n      maxDataCount = $$.getMaxDataCount();\n      padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n    } else {\n      padding = diff * 0.01;\n    }\n\n    if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n      paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n      paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n    } else if (typeof config.axis_x_padding === 'number') {\n      paddingLeft = paddingRight = config.axis_x_padding;\n    } else {\n      paddingLeft = paddingRight = padding;\n    }\n\n    return {\n      left: paddingLeft,\n      right: paddingRight\n    };\n  };\n\n  c3_chart_internal_fn.getXDomain = function (targets) {\n    var $$ = this,\n        xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n        firstX = xDomain[0],\n        lastX = xDomain[1],\n        padding = $$.getXDomainPadding(xDomain),\n        min = 0,\n        max = 0; // show center of x domain if min and max are the same\n\n    if (firstX - lastX === 0 && !$$.isCategorized()) {\n      if ($$.isTimeSeries()) {\n        firstX = new Date(firstX.getTime() * 0.5);\n        lastX = new Date(lastX.getTime() * 1.5);\n      } else {\n        firstX = firstX === 0 ? 1 : firstX * 0.5;\n        lastX = lastX === 0 ? -1 : lastX * 1.5;\n      }\n    }\n\n    if (firstX || firstX === 0) {\n      min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n    }\n\n    if (lastX || lastX === 0) {\n      max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n    }\n\n    return [min, max];\n  };\n\n  c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n    var $$ = this,\n        config = $$.config;\n\n    if (withUpdateOrgXDomain) {\n      $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n      $$.orgXDomain = $$.x.domain();\n\n      if (config.zoom_enabled) {\n        $$.zoom.scale($$.x).updateScaleExtent();\n      }\n\n      $$.subX.domain($$.x.domain());\n\n      if ($$.brush) {\n        $$.brush.scale($$.subX);\n      }\n    }\n\n    if (withUpdateXDomain) {\n      $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n\n      if (config.zoom_enabled) {\n        $$.zoom.scale($$.x).updateScaleExtent();\n      }\n    } // Trim domain when too big by zoom mousemove event\n\n\n    if (withTrim) {\n      $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n    }\n\n    return $$.x.domain();\n  };\n\n  c3_chart_internal_fn.trimXDomain = function (domain) {\n    var zoomDomain = this.getZoomDomain(),\n        min = zoomDomain[0],\n        max = zoomDomain[1];\n\n    if (domain[0] <= min) {\n      domain[1] = +domain[1] + (min - domain[0]);\n      domain[0] = min;\n    }\n\n    if (max <= domain[1]) {\n      domain[0] = +domain[0] - (domain[1] - max);\n      domain[1] = max;\n    }\n\n    return domain;\n  };\n\n  c3_chart_internal_fn.drag = function (mouse) {\n    var $$ = this,\n        config = $$.config,\n        main = $$.main,\n        d3 = $$.d3;\n    var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n    if ($$.hasArcType()) {\n      return;\n    }\n\n    if (!config.data_selection_enabled) {\n      return;\n    } // do nothing if not selectable\n\n\n    if (config.zoom_enabled && !$$.zoom.altDomain) {\n      return;\n    } // skip if zoomable because of conflict drag dehavior\n\n\n    if (!config.data_selection_multiple) {\n      return;\n    } // skip when single selection because drag is used for multiple selection\n\n\n    sx = $$.dragStart[0];\n    sy = $$.dragStart[1];\n    mx = mouse[0];\n    my = mouse[1];\n    minX = Math.min(sx, mx);\n    maxX = Math.max(sx, mx);\n    minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n    maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n    main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY); // TODO: binary search when multiple xs\n\n    main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n      return config.data_selection_isselectable(d);\n    }).each(function (d, i) {\n      var shape = d3.select(this),\n          isSelected = shape.classed(CLASS.SELECTED),\n          isIncluded = shape.classed(CLASS.INCLUDED),\n          _x,\n          _y,\n          _w,\n          _h,\n          toggle,\n          isWithin = false,\n          box;\n\n      if (shape.classed(CLASS.circle)) {\n        _x = shape.attr(\"cx\") * 1;\n        _y = shape.attr(\"cy\") * 1;\n        toggle = $$.togglePoint;\n        isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n      } else if (shape.classed(CLASS.bar)) {\n        box = getPathBox(this);\n        _x = box.x;\n        _y = box.y;\n        _w = box.width;\n        _h = box.height;\n        toggle = $$.togglePath;\n        isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n      } else {\n        // line/area selection not supported yet\n        return;\n      }\n\n      if (isWithin ^ isIncluded) {\n        shape.classed(CLASS.INCLUDED, !isIncluded); // TODO: included/unincluded callback here\n\n        shape.classed(CLASS.SELECTED, !isSelected);\n        toggle.call($$, !isSelected, shape, d, i);\n      }\n    });\n  };\n\n  c3_chart_internal_fn.dragstart = function (mouse) {\n    var $$ = this,\n        config = $$.config;\n\n    if ($$.hasArcType()) {\n      return;\n    }\n\n    if (!config.data_selection_enabled) {\n      return;\n    } // do nothing if not selectable\n\n\n    $$.dragStart = mouse;\n    $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n    $$.dragging = true;\n  };\n\n  c3_chart_internal_fn.dragend = function () {\n    var $$ = this,\n        config = $$.config;\n\n    if ($$.hasArcType()) {\n      return;\n    }\n\n    if (!config.data_selection_enabled) {\n      return;\n    } // do nothing if not selectable\n\n\n    $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n    $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n    $$.dragging = false;\n  };\n\n  c3_chart_internal_fn.getYFormat = function (forArc) {\n    var $$ = this,\n        formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n        formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n    return function (v, ratio, id) {\n      var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n      return format.call($$, v, ratio);\n    };\n  };\n\n  c3_chart_internal_fn.yFormat = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n    return format(v);\n  };\n\n  c3_chart_internal_fn.y2Format = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n    return format(v);\n  };\n\n  c3_chart_internal_fn.defaultValueFormat = function (v) {\n    return isValue(v) ? +v : \"\";\n  };\n\n  c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n    return (ratio * 100).toFixed(1) + '%';\n  };\n\n  c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n    var $$ = this,\n        data_labels = $$.config.data_labels,\n        format,\n        defaultFormat = function defaultFormat(v) {\n      return isValue(v) ? +v : \"\";\n    }; // find format according to axis id\n\n\n    if (typeof data_labels.format === 'function') {\n      format = data_labels.format;\n    } else if (_typeof(data_labels.format) === 'object') {\n      if (data_labels.format[targetId]) {\n        format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n      } else {\n        format = function format() {\n          return '';\n        };\n      }\n    } else {\n      format = defaultFormat;\n    }\n\n    return format;\n  };\n\n  c3_chart_internal_fn.initGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n\n    if (config.grid_x_show) {\n      $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n    }\n\n    if (config.grid_y_show) {\n      $$.grid.append('g').attr('class', CLASS.ygrids);\n    }\n\n    if (config.grid_focus_show) {\n      $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n    }\n\n    $$.xgrid = d3.selectAll([]);\n\n    if (!config.grid_lines_front) {\n      $$.initGridLines();\n    }\n  };\n\n  c3_chart_internal_fn.initGridLines = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n    $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n    $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n    $$.xgridLines = d3.selectAll([]);\n  };\n\n  c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n        tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n    $$.xgridAttr = config.axis_rotated ? {\n      'x1': 0,\n      'x2': $$.width,\n      'y1': function y1(d) {\n        return $$.x(d) - tickOffset;\n      },\n      'y2': function y2(d) {\n        return $$.x(d) - tickOffset;\n      }\n    } : {\n      'x1': function x1(d) {\n        return $$.x(d) + tickOffset;\n      },\n      'x2': function x2(d) {\n        return $$.x(d) + tickOffset;\n      },\n      'y1': 0,\n      'y2': $$.height\n    };\n    $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n    $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n\n    if (!withoutUpdate) {\n      $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n        return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n      });\n    }\n\n    $$.xgrid.exit().remove();\n  };\n\n  c3_chart_internal_fn.updateYGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n    $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n    $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n    $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n    $$.ygrid.exit().remove();\n    $$.smoothLines($$.ygrid, 'grid');\n  };\n\n  c3_chart_internal_fn.gridTextAnchor = function (d) {\n    return d.position ? d.position : \"end\";\n  };\n\n  c3_chart_internal_fn.gridTextDx = function (d) {\n    return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n  };\n\n  c3_chart_internal_fn.xGridTextX = function (d) {\n    return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n  };\n\n  c3_chart_internal_fn.yGridTextX = function (d) {\n    return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n  };\n\n  c3_chart_internal_fn.updateGrid = function (duration) {\n    var $$ = this,\n        main = $$.main,\n        config = $$.config,\n        xgridLine,\n        ygridLine,\n        yv; // hide if arc type\n\n    $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n    main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n\n    if (config.grid_x_show) {\n      $$.updateXGrid();\n    }\n\n    $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines); // enter\n\n    xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n      return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    xgridLine.append('line').style(\"opacity\", 0);\n    xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0); // udpate\n    // done in d3.transition() of the end of this function\n    // exit\n\n    $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove(); // Y-Grid\n\n    if (config.grid_y_show) {\n      $$.updateYGrid();\n    }\n\n    $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines); // enter\n\n    ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n      return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    ygridLine.append('line').style(\"opacity\", 0);\n    ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0); // update\n\n    yv = $$.yv.bind($$);\n    $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n    $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n      return d.text;\n    }).style(\"opacity\", 1); // exit\n\n    $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawGrid = function (withTransition) {\n    var $$ = this,\n        config = $$.config,\n        xv = $$.xv.bind($$),\n        lines = $$.xgridLines.select('line'),\n        texts = $$.xgridLines.select('text');\n    return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n      return d.text;\n    }).style(\"opacity\", 1)];\n  };\n\n  c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n    var $$ = this,\n        config = $$.config,\n        dataToShow = selectedData.filter(function (d) {\n      return d && isValue(d.value);\n    }),\n        focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n        xx = $$.xx.bind($$);\n\n    if (!config.tooltip_show) {\n      return;\n    } // Hide when scatter plot exists\n\n\n    if ($$.hasType('scatter') || $$.hasArcType()) {\n      return;\n    }\n\n    focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n    $$.smoothLines(focusEl, 'grid');\n  };\n\n  c3_chart_internal_fn.hideXGridFocus = function () {\n    this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n  };\n\n  c3_chart_internal_fn.updateXgridFocus = function () {\n    var $$ = this,\n        config = $$.config;\n    $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n  };\n\n  c3_chart_internal_fn.generateGridData = function (type, scale) {\n    var $$ = this,\n        gridData = [],\n        xDomain,\n        firstYear,\n        lastYear,\n        i,\n        tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n\n    if (type === 'year') {\n      xDomain = $$.getXDomain();\n      firstYear = xDomain[0].getFullYear();\n      lastYear = xDomain[1].getFullYear();\n\n      for (i = firstYear; i <= lastYear; i++) {\n        gridData.push(new Date(i + '-01-01 00:00:00'));\n      }\n    } else {\n      gridData = scale.ticks(10);\n\n      if (gridData.length > tickNum) {\n        // use only int\n        gridData = gridData.filter(function (d) {\n          return (\"\" + d).indexOf('.') < 0;\n        });\n      }\n    }\n\n    return gridData;\n  };\n\n  c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n    return params ? function (line) {\n      var found = false;\n      [].concat(params).forEach(function (param) {\n        if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n          found = true;\n        }\n      });\n      return found;\n    } : function () {\n      return true;\n    };\n  };\n\n  c3_chart_internal_fn.removeGridLines = function (params, forX) {\n    var $$ = this,\n        config = $$.config,\n        toRemove = $$.getGridFilterToRemove(params),\n        toShow = function toShow(line) {\n      return !toRemove(line);\n    },\n        classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n        classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n\n    $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n\n    if (forX) {\n      config.grid_x_lines = config.grid_x_lines.filter(toShow);\n    } else {\n      config.grid_y_lines = config.grid_y_lines.filter(toShow);\n    }\n  };\n\n  c3_chart_internal_fn.initEventRect = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n  };\n\n  c3_chart_internal_fn.redrawEventRect = function () {\n    var $$ = this,\n        config = $$.config,\n        eventRectUpdate,\n        maxDataCountTarget,\n        isMultipleX = $$.isMultipleX(); // rects for mouseover\n\n    var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX); // clear old rects\n\n    eventRects.selectAll('.' + CLASS.eventRect).remove(); // open as public variable\n\n    $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n    if (isMultipleX) {\n      eventRectUpdate = $$.eventRect.data([0]); // enter : only one rect will be added\n\n      $$.generateEventRectsForMultipleXs(eventRectUpdate.enter()); // update\n\n      $$.updateEventRect(eventRectUpdate); // exit : not needed because always only one rect exists\n    } else {\n      // Set data and update $$.eventRect\n      maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n      eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n      $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n      eventRectUpdate = $$.eventRect.data(function (d) {\n        return d;\n      }); // enter\n\n      $$.generateEventRectsForSingleX(eventRectUpdate.enter()); // update\n\n      $$.updateEventRect(eventRectUpdate); // exit\n\n      eventRectUpdate.exit().remove();\n    }\n  };\n\n  c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y,\n        w,\n        h,\n        rectW,\n        rectX; // set update selection if null\n\n    eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n      return d;\n    });\n\n    if ($$.isMultipleX()) {\n      // TODO: rotated not supported yet\n      x = 0;\n      y = 0;\n      w = $$.width;\n      h = $$.height;\n    } else {\n      if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n        // update index for x that is used by prevX and nextX\n        $$.updateXs();\n\n        rectW = function rectW(d) {\n          var prevX = $$.getPrevX(d.index),\n              nextX = $$.getNextX(d.index); // if there this is a single data point make the eventRect full width (or height)\n\n          if (prevX === null && nextX === null) {\n            return config.axis_rotated ? $$.height : $$.width;\n          }\n\n          if (prevX === null) {\n            prevX = $$.x.domain()[0];\n          }\n\n          if (nextX === null) {\n            nextX = $$.x.domain()[1];\n          }\n\n          return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n        };\n\n        rectX = function rectX(d) {\n          var prevX = $$.getPrevX(d.index),\n              nextX = $$.getNextX(d.index),\n              thisX = $$.data.xs[d.id][d.index]; // if there this is a single data point position the eventRect at 0\n\n          if (prevX === null && nextX === null) {\n            return 0;\n          }\n\n          if (prevX === null) {\n            prevX = $$.x.domain()[0];\n          }\n\n          return ($$.x(thisX) + $$.x(prevX)) / 2;\n        };\n      } else {\n        rectW = $$.getEventRectWidth();\n\n        rectX = function rectX(d) {\n          return $$.x(d.x) - rectW / 2;\n        };\n      }\n\n      x = config.axis_rotated ? 0 : rectX;\n      y = config.axis_rotated ? rectX : 0;\n      w = config.axis_rotated ? $$.width : rectW;\n      h = config.axis_rotated ? rectW : $$.height;\n    }\n\n    eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n  };\n\n  c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n      var index = d.index;\n\n      if ($$.dragging || $$.flowing) {\n        return;\n      } // do nothing while dragging/flowing\n\n\n      if ($$.hasArcType()) {\n        return;\n      } // Expand shapes for selection\n\n\n      if (config.point_focus_expand_enabled) {\n        $$.expandCircles(index, null, true);\n      }\n\n      $$.expandBars(index, null, true); // Call event handler\n\n      $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n        config.data_onmouseover.call($$.api, d);\n      });\n    }).on('mouseout', function (d) {\n      var index = d.index;\n\n      if (!$$.config) {\n        return;\n      } // chart is destroyed\n\n\n      if ($$.hasArcType()) {\n        return;\n      }\n\n      $$.hideXGridFocus();\n      $$.hideTooltip(); // Undo expanded shapes\n\n      $$.unexpandCircles();\n      $$.unexpandBars(); // Call event handler\n\n      $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n        config.data_onmouseout.call($$.api, d);\n      });\n    }).on('mousemove', function (d) {\n      var selectedData,\n          index = d.index,\n          eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n      if ($$.dragging || $$.flowing) {\n        return;\n      } // do nothing while dragging/flowing\n\n\n      if ($$.hasArcType()) {\n        return;\n      }\n\n      if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n        index -= 1;\n      } // Show tooltip\n\n\n      selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n        return $$.addName($$.getValueOnIndex(t.values, index));\n      });\n\n      if (config.tooltip_grouped) {\n        $$.showTooltip(selectedData, this);\n        $$.showXGridFocus(selectedData);\n      }\n\n      if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n        return;\n      }\n\n      $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n        d3.select(this).classed(CLASS.EXPANDED, true);\n\n        if (config.data_selection_enabled) {\n          eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n        }\n\n        if (!config.tooltip_grouped) {\n          $$.hideXGridFocus();\n          $$.hideTooltip();\n\n          if (!config.data_selection_grouped) {\n            $$.unexpandCircles(index);\n            $$.unexpandBars(index);\n          }\n        }\n      }).filter(function (d) {\n        return $$.isWithinShape(this, d);\n      }).each(function (d) {\n        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n          eventRect.style('cursor', 'pointer');\n        }\n\n        if (!config.tooltip_grouped) {\n          $$.showTooltip([d], this);\n          $$.showXGridFocus([d]);\n\n          if (config.point_focus_expand_enabled) {\n            $$.expandCircles(index, d.id, true);\n          }\n\n          $$.expandBars(index, d.id, true);\n        }\n      });\n    }).on('click', function (d) {\n      var index = d.index;\n\n      if ($$.hasArcType() || !$$.toggleShape) {\n        return;\n      }\n\n      if ($$.cancelClick) {\n        $$.cancelClick = false;\n        return;\n      }\n\n      if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n        index -= 1;\n      }\n\n      $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n        if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n          $$.toggleShape(this, d, index);\n          $$.config.data_onclick.call($$.api, d, this);\n        }\n      });\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n      $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n      $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n      $$.dragend();\n    }) : function () {});\n  };\n\n  c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n\n    function mouseout() {\n      $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n      $$.hideXGridFocus();\n      $$.hideTooltip();\n      $$.unexpandCircles();\n      $$.unexpandBars();\n    }\n\n    eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n      if (!$$.config) {\n        return;\n      } // chart is destroyed\n\n\n      if ($$.hasArcType()) {\n        return;\n      }\n\n      mouseout();\n    }).on('mousemove', function () {\n      var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n      var mouse, closest, sameXData, selectedData;\n\n      if ($$.dragging) {\n        return;\n      } // do nothing when dragging\n\n\n      if ($$.hasArcType(targetsToShow)) {\n        return;\n      }\n\n      mouse = d3.mouse(this);\n      closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n      if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n        config.data_onmouseout.call($$.api, $$.mouseover);\n        $$.mouseover = undefined;\n      }\n\n      if (!closest) {\n        mouseout();\n        return;\n      }\n\n      if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n        sameXData = [closest];\n      } else {\n        sameXData = $$.filterByX(targetsToShow, closest.x);\n      } // show tooltip when cursor is close to some point\n\n\n      selectedData = sameXData.map(function (d) {\n        return $$.addName(d);\n      });\n      $$.showTooltip(selectedData, this); // expand points\n\n      if (config.point_focus_expand_enabled) {\n        $$.expandCircles(closest.index, closest.id, true);\n      }\n\n      $$.expandBars(closest.index, closest.id, true); // Show xgrid focus line\n\n      $$.showXGridFocus(selectedData); // Show cursor as pointer if point is close to mouse position\n\n      if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n        $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n\n        if (!$$.mouseover) {\n          config.data_onmouseover.call($$.api, closest);\n          $$.mouseover = closest;\n        }\n      }\n    }).on('click', function () {\n      var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n      var mouse, closest;\n\n      if ($$.hasArcType(targetsToShow)) {\n        return;\n      }\n\n      mouse = d3.mouse(this);\n      closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n      if (!closest) {\n        return;\n      } // select if selection enabled\n\n\n      if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n        $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n          if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n            $$.toggleShape(this, closest, closest.index);\n            $$.config.data_onclick.call($$.api, closest, this);\n          }\n        });\n      }\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n      $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n      $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n      $$.dragend();\n    }) : function () {});\n  };\n\n  c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n    var $$ = this,\n        selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n        eventRect = $$.main.select(selector).node(),\n        box = eventRect.getBoundingClientRect(),\n        x = box.left + (mouse ? mouse[0] : 0),\n        y = box.top + (mouse ? mouse[1] : 0),\n        event = document.createEvent(\"MouseEvents\");\n    event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n    eventRect.dispatchEvent(event);\n  };\n\n  c3_chart_internal_fn.initLegend = function () {\n    var $$ = this;\n    $$.legendItemTextBox = {};\n    $$.legendHasRendered = false;\n    $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n\n    if (!$$.config.legend_show) {\n      $$.legend.style('visibility', 'hidden');\n      $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n      return;\n    } // MEMO: call here to update legend box and tranlate for all\n    // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n\n\n    $$.updateLegendWithDefaults();\n  };\n\n  c3_chart_internal_fn.updateLegendWithDefaults = function () {\n    var $$ = this;\n    $$.updateLegend($$.mapToIds($$.data.targets), {\n      withTransform: false,\n      withTransitionForTransform: false,\n      withTransition: false\n    });\n  };\n\n  c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n    var $$ = this,\n        config = $$.config,\n        insetLegendPosition = {\n      top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n      left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n    };\n    $$.margin3 = {\n      top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n      right: NaN,\n      bottom: 0,\n      left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n    };\n  };\n\n  c3_chart_internal_fn.transformLegend = function (withTransition) {\n    var $$ = this;\n    (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n  };\n\n  c3_chart_internal_fn.updateLegendStep = function (step) {\n    this.legendStep = step;\n  };\n\n  c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n    this.legendItemWidth = w;\n  };\n\n  c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n    this.legendItemHeight = h;\n  };\n\n  c3_chart_internal_fn.getLegendWidth = function () {\n    var $$ = this;\n    return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n  };\n\n  c3_chart_internal_fn.getLegendHeight = function () {\n    var $$ = this,\n        h = 0;\n\n    if ($$.config.legend_show) {\n      if ($$.isLegendRight) {\n        h = $$.currentHeight;\n      } else {\n        h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n      }\n    }\n\n    return h;\n  };\n\n  c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n  };\n\n  c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n  };\n\n  c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n    var $$ = this;\n    targetIds = $$.mapToTargetIds(targetIds);\n    $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n      return targetIds.indexOf(id) >= 0;\n    }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n      var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n      return opacity.call($$, $$.d3.select(this));\n    });\n  };\n\n  c3_chart_internal_fn.revertLegend = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n      return $$.opacityForLegend(d3.select(this));\n    });\n  };\n\n  c3_chart_internal_fn.showLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n\n    if (!config.legend_show) {\n      config.legend_show = true;\n      $$.legend.style('visibility', 'visible');\n\n      if (!$$.legendHasRendered) {\n        $$.updateLegendWithDefaults();\n      }\n    }\n\n    $$.removeHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n      return $$.opacityForLegend($$.d3.select(this));\n    });\n  };\n\n  c3_chart_internal_fn.hideLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n\n    if (config.legend_show && isEmpty(targetIds)) {\n      config.legend_show = false;\n      $$.legend.style('visibility', 'hidden');\n    }\n\n    $$.addHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n  };\n\n  c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n    this.legendItemTextBox = {};\n  };\n\n  c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n    var $$ = this,\n        config = $$.config;\n    var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n    var paddingTop = 4,\n        paddingRight = 10,\n        maxWidth = 0,\n        maxHeight = 0,\n        posMin = 10,\n        tileWidth = config.legend_item_tile_width + 5;\n    var l,\n        totalLength = 0,\n        offsets = {},\n        widths = {},\n        heights = {},\n        margins = [0],\n        steps = {},\n        step = 0;\n    var withTransition, withTransitionForTransform;\n    var texts, rects, tiles, background; // Skip elements when their name is set to null\n\n    targetIds = targetIds.filter(function (id) {\n      return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n    });\n    options = options || {};\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n    function getTextBox(textElement, id) {\n      if (!$$.legendItemTextBox[id]) {\n        $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n      }\n\n      return $$.legendItemTextBox[id];\n    }\n\n    function updatePositions(textElement, id, index) {\n      var reset = index === 0,\n          isLast = index === targetIds.length - 1,\n          box = getTextBox(textElement, id),\n          itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n          itemHeight = box.height + paddingTop,\n          itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n          areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n          margin,\n          maxLength; // MEMO: care about condifion of step, totalLength\n\n      function updateValues(id, withoutStep) {\n        if (!withoutStep) {\n          margin = (areaLength - totalLength - itemLength) / 2;\n\n          if (margin < posMin) {\n            margin = (areaLength - itemLength) / 2;\n            totalLength = 0;\n            step++;\n          }\n        }\n\n        steps[id] = step;\n        margins[step] = $$.isLegendInset ? 10 : margin;\n        offsets[id] = totalLength;\n        totalLength += itemLength;\n      }\n\n      if (reset) {\n        totalLength = 0;\n        step = 0;\n        maxWidth = 0;\n        maxHeight = 0;\n      }\n\n      if (config.legend_show && !$$.isLegendToShow(id)) {\n        widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n        return;\n      }\n\n      widths[id] = itemWidth;\n      heights[id] = itemHeight;\n\n      if (!maxWidth || itemWidth >= maxWidth) {\n        maxWidth = itemWidth;\n      }\n\n      if (!maxHeight || itemHeight >= maxHeight) {\n        maxHeight = itemHeight;\n      }\n\n      maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n      if (config.legend_equally) {\n        Object.keys(widths).forEach(function (id) {\n          widths[id] = maxWidth;\n        });\n        Object.keys(heights).forEach(function (id) {\n          heights[id] = maxHeight;\n        });\n        margin = (areaLength - maxLength * targetIds.length) / 2;\n\n        if (margin < posMin) {\n          totalLength = 0;\n          step = 0;\n          targetIds.forEach(function (id) {\n            updateValues(id);\n          });\n        } else {\n          updateValues(id, true);\n        }\n      } else {\n        updateValues(id);\n      }\n    }\n\n    if ($$.isLegendInset) {\n      step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n      $$.updateLegendStep(step);\n    }\n\n    if ($$.isLegendRight) {\n      xForLegend = function xForLegend(id) {\n        return maxWidth * steps[id];\n      };\n\n      yForLegend = function yForLegend(id) {\n        return margins[steps[id]] + offsets[id];\n      };\n    } else if ($$.isLegendInset) {\n      xForLegend = function xForLegend(id) {\n        return maxWidth * steps[id] + 10;\n      };\n\n      yForLegend = function yForLegend(id) {\n        return margins[steps[id]] + offsets[id];\n      };\n    } else {\n      xForLegend = function xForLegend(id) {\n        return margins[steps[id]] + offsets[id];\n      };\n\n      yForLegend = function yForLegend(id) {\n        return maxHeight * steps[id];\n      };\n    }\n\n    xForLegendText = function xForLegendText(id, i) {\n      return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n    };\n\n    yForLegendText = function yForLegendText(id, i) {\n      return yForLegend(id, i) + 9;\n    };\n\n    xForLegendRect = function xForLegendRect(id, i) {\n      return xForLegend(id, i);\n    };\n\n    yForLegendRect = function yForLegendRect(id, i) {\n      return yForLegend(id, i) - 5;\n    };\n\n    x1ForLegendTile = function x1ForLegendTile(id, i) {\n      return xForLegend(id, i) - 2;\n    };\n\n    x2ForLegendTile = function x2ForLegendTile(id, i) {\n      return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n    };\n\n    yForLegendTile = function yForLegendTile(id, i) {\n      return yForLegend(id, i) + 4;\n    }; // Define g for legend area\n\n\n    l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n      return $$.generateClass(CLASS.legendItem, id);\n    }).style('visibility', function (id) {\n      return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n    }).style('cursor', 'pointer').on('click', function (id) {\n      if (config.legend_item_onclick) {\n        config.legend_item_onclick.call($$, id);\n      } else {\n        if ($$.d3.event.altKey) {\n          $$.api.hide();\n          $$.api.show(id);\n        } else {\n          $$.api.toggle(id);\n          $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n        }\n      }\n    }).on('mouseover', function (id) {\n      if (config.legend_item_onmouseover) {\n        config.legend_item_onmouseover.call($$, id);\n      } else {\n        $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n\n        if (!$$.transiting && $$.isTargetToShow(id)) {\n          $$.api.focus(id);\n        }\n      }\n    }).on('mouseout', function (id) {\n      if (config.legend_item_onmouseout) {\n        config.legend_item_onmouseout.call($$, id);\n      } else {\n        $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n        $$.api.revert();\n      }\n    });\n    l.append('text').text(function (id) {\n      return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    }).each(function (id, i) {\n      updatePositions(this, id, i);\n    }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n    l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n    l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height); // Set background for inset legend\n\n    background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n\n    if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n      background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n    }\n\n    texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n      return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    }) // MEMO: needed for update\n    .each(function (id, i) {\n      updatePositions(this, id, i);\n    });\n    (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n    rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n    (withTransition ? rects.transition() : rects).attr('width', function (id) {\n      return widths[id];\n    }).attr('height', function (id) {\n      return heights[id];\n    }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n    tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n    (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n      return $$.levelColor($$.cache[id].values[0].value);\n    } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n    if (background) {\n      (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n    } // toggle legend state\n\n\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n      return !$$.isTargetToShow(id);\n    }); // Update all to reflect change of legend\n\n    $$.updateLegendItemWidth(maxWidth);\n    $$.updateLegendItemHeight(maxHeight);\n    $$.updateLegendStep(step); // Update size and scale\n\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize(); // Update g positions\n\n    $$.transformAll(withTransitionForTransform, transitions);\n    $$.legendHasRendered = true;\n  };\n\n  c3_chart_internal_fn.initRegion = function () {\n    var $$ = this;\n    $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n  };\n\n  c3_chart_internal_fn.updateRegion = function (duration) {\n    var $$ = this,\n        config = $$.config; // hide if arc type\n\n    $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n    $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n    $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n    $$.mainRegion.attr('class', $$.classRegion.bind($$));\n    $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawRegion = function (withTransition) {\n    var $$ = this,\n        regions = $$.mainRegion.selectAll('rect').each(function () {\n      // data is binded to g and it's not transferred to rect (child node) automatically,\n      // then data of each rect has to be updated manually.\n      // TODO: there should be more efficient way to solve this?\n      var parentData = $$.d3.select(this.parentNode).datum();\n      $$.d3.select(this).datum(parentData);\n    }),\n        x = $$.regionX.bind($$),\n        y = $$.regionY.bind($$),\n        w = $$.regionWidth.bind($$),\n        h = $$.regionHeight.bind($$);\n    return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n      return isValue(d.opacity) ? d.opacity : 0.1;\n    })];\n  };\n\n  c3_chart_internal_fn.regionX = function (d) {\n    var $$ = this,\n        config = $$.config,\n        xPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n\n    if (d.axis === 'y' || d.axis === 'y2') {\n      xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n    } else {\n      xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n    }\n\n    return xPos;\n  };\n\n  c3_chart_internal_fn.regionY = function (d) {\n    var $$ = this,\n        config = $$.config,\n        yPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n\n    if (d.axis === 'y' || d.axis === 'y2') {\n      yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n    } else {\n      yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n    }\n\n    return yPos;\n  };\n\n  c3_chart_internal_fn.regionWidth = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = $$.regionX(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n\n    if (d.axis === 'y' || d.axis === 'y2') {\n      end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n    } else {\n      end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n    }\n\n    return end < start ? 0 : end - start;\n  };\n\n  c3_chart_internal_fn.regionHeight = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = this.regionY(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n\n    if (d.axis === 'y' || d.axis === 'y2') {\n      end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n    } else {\n      end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n    }\n\n    return end < start ? 0 : end - start;\n  };\n\n  c3_chart_internal_fn.isRegionOnX = function (d) {\n    return !d.axis || d.axis === 'x';\n  };\n\n  c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n    return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n  };\n\n  c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n    var $$ = this,\n        scale = $$.getScale(min, max, $$.isTimeSeries()),\n        _scale = domain ? scale.domain(domain) : scale,\n        key; // Define customized scale if categorized axis\n\n\n    if ($$.isCategorized()) {\n      offset = offset || function () {\n        return 0;\n      };\n\n      scale = function scale(d, raw) {\n        var v = _scale(d) + offset(d);\n        return raw ? v : Math.ceil(v);\n      };\n    } else {\n      scale = function scale(d, raw) {\n        var v = _scale(d);\n\n        return raw ? v : Math.ceil(v);\n      };\n    } // define functions\n\n\n    for (key in _scale) {\n      scale[key] = _scale[key];\n    }\n\n    scale.orgDomain = function () {\n      return _scale.domain();\n    }; // define custom domain() for categorized axis\n\n\n    if ($$.isCategorized()) {\n      scale.domain = function (domain) {\n        if (!arguments.length) {\n          domain = this.orgDomain();\n          return [domain[0], domain[1] + 1];\n        }\n\n        _scale.domain(domain);\n\n        return scale;\n      };\n    }\n\n    return scale;\n  };\n\n  c3_chart_internal_fn.getY = function (min, max, domain) {\n    var scale = this.getScale(min, max, this.isTimeSeriesY());\n\n    if (domain) {\n      scale.domain(domain);\n    }\n\n    return scale;\n  };\n\n  c3_chart_internal_fn.getYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n  };\n\n  c3_chart_internal_fn.getSubYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n  };\n\n  c3_chart_internal_fn.updateScales = function () {\n    var $$ = this,\n        config = $$.config,\n        forInit = !$$.x; // update edges\n\n    $$.xMin = config.axis_rotated ? 1 : 0;\n    $$.xMax = config.axis_rotated ? $$.height : $$.width;\n    $$.yMin = config.axis_rotated ? 0 : $$.height;\n    $$.yMax = config.axis_rotated ? $$.width : 1;\n    $$.subXMin = $$.xMin;\n    $$.subXMax = $$.xMax;\n    $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n    $$.subYMax = config.axis_rotated ? $$.width2 : 1; // update scales\n\n    $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n      return $$.xAxis.tickOffset();\n    });\n    $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n    $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n    $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n      return d % 1 ? 0 : $$.subXAxis.tickOffset();\n    });\n    $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n    $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain()); // update axes\n\n    $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n    $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n    $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n    $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n    $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n    $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer); // Set initialized scales to brush and zoom\n\n    if (!forInit) {\n      if ($$.brush) {\n        $$.brush.scale($$.subX);\n      }\n\n      if (config.zoom_enabled) {\n        $$.zoom.scale($$.x);\n      }\n    } // update for arc\n\n\n    if ($$.updateArc) {\n      $$.updateArc();\n    }\n  };\n\n  c3_chart_internal_fn.selectPoint = function (target, d, i) {\n    var $$ = this,\n        config = $$.config,\n        cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n        cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n        r = $$.pointSelectR.bind($$);\n    config.data_onselected.call($$.api, d, target.node()); // add selected-circle on low layer g\n\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n      return $$.generateClass(CLASS.selectedCircle, i);\n    }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n      return $$.color(d);\n    }).attr(\"r\", function (d) {\n      return $$.pointSelectR(d) * 1.4;\n    }).transition().duration(100).attr(\"r\", r);\n  };\n\n  c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$.api, d, target.node()); // remove selected-circle from low layer g\n\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n  };\n\n  c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n    selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n  };\n\n  c3_chart_internal_fn.selectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onselected.call($$, d, target.node());\n\n    if ($$.config.interaction_brighten) {\n      target.transition().duration(100).style(\"fill\", function () {\n        return $$.d3.rgb($$.color(d)).brighter(0.75);\n      });\n    }\n  };\n\n  c3_chart_internal_fn.unselectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$, d, target.node());\n\n    if ($$.config.interaction_brighten) {\n      target.transition().duration(100).style(\"fill\", function () {\n        return $$.color(d);\n      });\n    }\n  };\n\n  c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n    selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n  };\n\n  c3_chart_internal_fn.getToggle = function (that, d) {\n    var $$ = this,\n        toggle;\n\n    if (that.nodeName === 'circle') {\n      if ($$.isStepType(d)) {\n        // circle is hidden in step chart, so treat as within the click area\n        toggle = function toggle() {}; // TODO: how to select step chart?\n\n      } else {\n        toggle = $$.togglePoint;\n      }\n    } else if (that.nodeName === 'path') {\n      toggle = $$.togglePath;\n    }\n\n    return toggle;\n  };\n\n  c3_chart_internal_fn.toggleShape = function (that, d, i) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        shape = d3.select(that),\n        isSelected = shape.classed(CLASS.SELECTED),\n        toggle = $$.getToggle(that, d).bind($$);\n\n    if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n      if (!config.data_selection_multiple) {\n        $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n          var shape = d3.select(this);\n\n          if (shape.classed(CLASS.SELECTED)) {\n            toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n          }\n        });\n      }\n\n      shape.classed(CLASS.SELECTED, !isSelected);\n      toggle(!isSelected, shape, d, i);\n    }\n  };\n\n  c3_chart_internal_fn.initBar = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n  };\n\n  c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainBarUpdate,\n        mainBarEnter,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n      return classChartBar(d) + classFocus(d);\n    });\n    mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\"); // Bars for each data\n\n    mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n      return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    });\n  };\n\n  c3_chart_internal_fn.updateBar = function (durationForExit) {\n    var $$ = this,\n        barData = $$.barData.bind($$),\n        classBar = $$.classBar.bind($$),\n        initialOpacity = $$.initialOpacity.bind($$),\n        color = function color(d) {\n      return $$.color(d.id);\n    };\n\n    $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n    $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n    $$.mainBar.style(\"opacity\", initialOpacity);\n    $$.mainBar.exit().transition().duration(durationForExit).remove();\n  };\n\n  c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n    return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n  };\n\n  c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n    var $$ = this,\n        config = $$.config,\n        w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n    return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n  };\n\n  c3_chart_internal_fn.getBars = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n  };\n\n  c3_chart_internal_fn.expandBars = function (i, id, reset) {\n    var $$ = this;\n\n    if (reset) {\n      $$.unexpandBars();\n    }\n\n    $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n  };\n\n  c3_chart_internal_fn.unexpandBars = function (i) {\n    var $$ = this;\n    $$.getBars(i).classed(CLASS.EXPANDED, false);\n  };\n\n  c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        getPoints = $$.generateGetBarPoints(barIndices, isSub);\n    return function (d, i) {\n      // 4 points that make a bar\n      var points = getPoints(d, i); // switch points if axis is rotated, not applicable for sub chart\n\n      var indexX = config.axis_rotated ? 1 : 0;\n      var indexY = config.axis_rotated ? 0 : 1;\n      var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n      return path;\n    };\n  };\n\n  c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n    var $$ = this,\n        axis = isSub ? $$.subXAxis : $$.xAxis,\n        barTargetsNum = barIndices.__max__ + 1,\n        barW = $$.getBarW(axis, barTargetsNum),\n        barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n        barY = $$.getShapeY(!!isSub),\n        barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n        barSpaceOffset = barW * ($$.config.bar_space / 2),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n      var y0 = yScale.call($$, d.id)(0),\n          offset = barOffset(d, i) || y0,\n          // offset is for stacked bar chart\n      posX = barX(d),\n          posY = barY(d); // fix posY not to overflow opposite quadrant\n\n      if ($$.config.axis_rotated) {\n        if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n          posY = y0;\n        }\n      } // 4 points that make a bar\n\n\n      return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n    };\n  };\n\n  c3_chart_internal_fn.isWithinBar = function (that) {\n    var mouse = this.d3.mouse(that),\n        box = that.getBoundingClientRect(),\n        seg0 = that.pathSegList.getItem(0),\n        seg1 = that.pathSegList.getItem(1),\n        x = Math.min(seg0.x, seg1.x),\n        y = Math.min(seg0.y, seg1.y),\n        w = box.width,\n        h = box.height,\n        offset = 2,\n        sx = x - offset,\n        ex = x + w + offset,\n        sy = y + h + offset,\n        ey = y - offset;\n    return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n  };\n\n  c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n    var $$ = this,\n        config = $$.config,\n        indices = {},\n        i = 0,\n        j,\n        k;\n    $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n      for (j = 0; j < config.data_groups.length; j++) {\n        if (config.data_groups[j].indexOf(d.id) < 0) {\n          continue;\n        }\n\n        for (k = 0; k < config.data_groups[j].length; k++) {\n          if (config.data_groups[j][k] in indices) {\n            indices[d.id] = indices[config.data_groups[j][k]];\n            break;\n          }\n        }\n      }\n\n      if (isUndefined(indices[d.id])) {\n        indices[d.id] = i++;\n      }\n    });\n    indices.__max__ = i - 1;\n    return indices;\n  };\n\n  c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n    var $$ = this,\n        scale = isSub ? $$.subX : $$.x;\n    return function (d) {\n      var index = d.id in indices ? indices[d.id] : 0;\n      return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n    };\n  };\n\n  c3_chart_internal_fn.getShapeY = function (isSub) {\n    var $$ = this;\n    return function (d) {\n      var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n      return scale(d.value);\n    };\n  };\n\n  c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n    var $$ = this,\n        targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n        targetIds = targets.map(function (t) {\n      return t.id;\n    });\n    return function (d, i) {\n      var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n          y0 = scale(0),\n          offset = y0;\n      targets.forEach(function (t) {\n        var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n\n        if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n          return;\n        }\n\n        if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n          // check if the x values line up\n          if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n            // \"+\" for timeseries\n            // if not, try to find the value that does line up\n            i = -1;\n            values.forEach(function (v, j) {\n              if (v.x === d.x) {\n                i = j;\n              }\n            });\n          }\n\n          if (i in values && values[i].value * d.value >= 0) {\n            offset += scale(values[i].value) - y0;\n          }\n        }\n      });\n      return offset;\n    };\n  };\n\n  c3_chart_internal_fn.isWithinShape = function (that, d) {\n    var $$ = this,\n        shape = $$.d3.select(that),\n        isWithin;\n\n    if (!$$.isTargetToShow(d.id)) {\n      isWithin = false;\n    } else if (that.nodeName === 'circle') {\n      isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n    } else if (that.nodeName === 'path') {\n      isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n    }\n\n    return isWithin;\n  };\n\n  c3_chart_internal_fn.getInterpolate = function (d) {\n    var $$ = this,\n        interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n    return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n  };\n\n  c3_chart_internal_fn.initLine = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n  };\n\n  c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainLineUpdate,\n        mainLineEnter,\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$),\n        classCircles = $$.classCircles.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n      return classChartLine(d) + classFocus(d);\n    });\n    mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\"); // Lines for each data\n\n    mainLineEnter.append('g').attr(\"class\", classLines); // Areas\n\n    mainLineEnter.append('g').attr('class', classAreas); // Circles for each data point on lines\n\n    mainLineEnter.append('g').attr(\"class\", function (d) {\n      return $$.generateClass(CLASS.selectedCircles, d.id);\n    });\n    mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n      return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    }); // Update date for selected circles\n\n    targets.forEach(function (t) {\n      $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n        d.value = t.values[d.index].value;\n      });\n    }); // MEMO: can not keep same color...\n    //mainLineUpdate.exit().remove();\n  };\n\n  c3_chart_internal_fn.updateLine = function (durationForExit) {\n    var $$ = this;\n    $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n    $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n      return $$.isStepType(d) ? 'crispEdges' : '';\n    }).attr('transform', null);\n    $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n    return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n  };\n\n  c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        line = $$.d3.svg.line(),\n        getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n      return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        yValue = function yValue(d, i) {\n      return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n\n    if (!config.line_connectNull) {\n      line = line.defined(function (d) {\n        return d.value != null;\n      });\n    }\n\n    return function (d) {\n      var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n          x = isSub ? $$.x : $$.subX,\n          y = yScaleGetter.call($$, d.id),\n          x0 = 0,\n          y0 = 0,\n          path;\n\n      if ($$.isLineType(d)) {\n        if (config.data_regions[d.id]) {\n          path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n        } else {\n          if ($$.isStepType(d)) {\n            values = $$.convertValuesToStep(values);\n          }\n\n          path = line.interpolate($$.getInterpolate(d))(values);\n        }\n      } else {\n        if (values[0]) {\n          x0 = x(values[0].x);\n          y0 = y(values[0].value);\n        }\n\n        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n      }\n\n      return path ? path : \"M 0 0\";\n    };\n  };\n\n  c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        lineTargetsNum = lineIndices.__max__ + 1,\n        x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n      var y0 = yScale.call($$, d.id)(0),\n          offset = lineOffset(d, i) || y0,\n          // offset is for stacked area chart\n      posX = x(d),\n          posY = y(d); // fix posY not to overflow opposite quadrant\n\n      if (config.axis_rotated) {\n        if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n          posY = y0;\n        }\n      } // 1 point that marks the line position\n\n\n      return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n      [posX, posY - (y0 - offset)], // needed for compatibility\n      [posX, posY - (y0 - offset)] // needed for compatibility\n      ];\n    };\n  };\n\n  c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n    var $$ = this,\n        config = $$.config,\n        prev = -1,\n        i,\n        j,\n        s = \"M\",\n        sWithRegion,\n        xp,\n        yp,\n        dx,\n        dy,\n        dd,\n        diff,\n        diffx2,\n        xOffset = $$.isCategorized() ? 0.5 : 0,\n        xValue,\n        yValue,\n        regions = [];\n\n    function isWithinRegions(x, regions) {\n      var i;\n\n      for (i = 0; i < regions.length; i++) {\n        if (regions[i].start < x && x <= regions[i].end) {\n          return true;\n        }\n      }\n\n      return false;\n    } // Check start/end of regions\n\n\n    if (isDefined(_regions)) {\n      for (i = 0; i < _regions.length; i++) {\n        regions[i] = {};\n\n        if (isUndefined(_regions[i].start)) {\n          regions[i].start = d[0].x;\n        } else {\n          regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n        }\n\n        if (isUndefined(_regions[i].end)) {\n          regions[i].end = d[d.length - 1].x;\n        } else {\n          regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n        }\n      }\n    } // Set scales\n\n\n    xValue = config.axis_rotated ? function (d) {\n      return y(d.value);\n    } : function (d) {\n      return x(d.x);\n    };\n    yValue = config.axis_rotated ? function (d) {\n      return x(d.x);\n    } : function (d) {\n      return y(d.value);\n    }; // Define svg generator function for region\n\n    function generateM(points) {\n      return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n    }\n\n    if ($$.isTimeSeries()) {\n      sWithRegion = function sWithRegion(d0, d1, j, diff) {\n        var x0 = d0.x.getTime(),\n            x_diff = d1.x - d0.x,\n            xv0 = new Date(x0 + x_diff * j),\n            xv1 = new Date(x0 + x_diff * (j + diff)),\n            points;\n\n        if (config.axis_rotated) {\n          points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n        } else {\n          points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n        }\n\n        return generateM(points);\n      };\n    } else {\n      sWithRegion = function sWithRegion(d0, d1, j, diff) {\n        var points;\n\n        if (config.axis_rotated) {\n          points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n        } else {\n          points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n        }\n\n        return generateM(points);\n      };\n    } // Generate\n\n\n    for (i = 0; i < d.length; i++) {\n      // Draw as normal\n      if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n        s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n      } // Draw with region // TODO: Fix for horizotal charts\n      else {\n          xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n          yp = $$.getScale(d[i - 1].value, d[i].value);\n          dx = x(d[i].x) - x(d[i - 1].x);\n          dy = y(d[i].value) - y(d[i - 1].value);\n          dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n          diff = 2 / dd;\n          diffx2 = diff * 2;\n\n          for (j = diff; j <= 1; j += diffx2) {\n            s += sWithRegion(d[i - 1], d[i], j, diff);\n          }\n        }\n\n      prev = d[i].x;\n    }\n\n    return s;\n  };\n\n  c3_chart_internal_fn.updateArea = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n      $$.orgAreaOpacity = +d3.select(this).style('opacity');\n      return 0;\n    });\n    $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n    $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n    return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n  };\n\n  c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        area = $$.d3.svg.area(),\n        getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n      return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        value0 = function value0(d, i) {\n      return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n    },\n        value1 = function value1(d, i) {\n      return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n\n    if (!config.line_connectNull) {\n      area = area.defined(function (d) {\n        return d.value !== null;\n      });\n    }\n\n    return function (d) {\n      var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n          x0 = 0,\n          y0 = 0,\n          path;\n\n      if ($$.isAreaType(d)) {\n        if ($$.isStepType(d)) {\n          values = $$.convertValuesToStep(values);\n        }\n\n        path = area.interpolate($$.getInterpolate(d))(values);\n      } else {\n        if (values[0]) {\n          x0 = $$.x(values[0].x);\n          y0 = $$.getYScale(d.id)(values[0].value);\n        }\n\n        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n      }\n\n      return path ? path : \"M 0 0\";\n    };\n  };\n\n  c3_chart_internal_fn.getAreaBaseValue = function () {\n    return 0;\n  };\n\n  c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        areaTargetsNum = areaIndices.__max__ + 1,\n        x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n      var y0 = yScale.call($$, d.id)(0),\n          offset = areaOffset(d, i) || y0,\n          // offset is for stacked area chart\n      posX = x(d),\n          posY = y(d); // fix posY not to overflow opposite quadrant\n\n      if (config.axis_rotated) {\n        if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n          posY = y0;\n        }\n      } // 1 point that marks the area position\n\n\n      return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n      [posX, offset] // needed for compatibility\n      ];\n    };\n  };\n\n  c3_chart_internal_fn.updateCircle = function () {\n    var $$ = this;\n    $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n    $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n    $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n    $$.mainCircle.exit().remove();\n  };\n\n  c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n    var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n    return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n  };\n\n  c3_chart_internal_fn.circleX = function (d) {\n    return d.x || d.x === 0 ? this.x(d.x) : null;\n  };\n\n  c3_chart_internal_fn.updateCircleY = function () {\n    var $$ = this,\n        lineIndices,\n        getPoints;\n\n    if ($$.config.data_groups.length > 0) {\n      lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n\n      $$.circleY = function (d, i) {\n        return getPoints(d, i)[0][1];\n      };\n    } else {\n      $$.circleY = function (d) {\n        return $$.getYScale(d.id)(d.value);\n      };\n    }\n  };\n\n  c3_chart_internal_fn.getCircles = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n  };\n\n  c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n    var $$ = this,\n        r = $$.pointExpandedR.bind($$);\n\n    if (reset) {\n      $$.unexpandCircles();\n    }\n\n    $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n  };\n\n  c3_chart_internal_fn.unexpandCircles = function (i) {\n    var $$ = this,\n        r = $$.pointR.bind($$);\n    $$.getCircles(i).filter(function () {\n      return $$.d3.select(this).classed(CLASS.EXPANDED);\n    }).classed(CLASS.EXPANDED, false).attr('r', r);\n  };\n\n  c3_chart_internal_fn.pointR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n  };\n\n  c3_chart_internal_fn.pointExpandedR = function (d) {\n    var $$ = this,\n        config = $$.config;\n\n    if (config.point_focus_expand_enabled) {\n      return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n    } else {\n      return $$.pointR(d);\n    }\n  };\n\n  c3_chart_internal_fn.pointSelectR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n  };\n\n  c3_chart_internal_fn.isWithinCircle = function (that, r) {\n    var d3 = this.d3,\n        mouse = d3.mouse(that),\n        d3_this = d3.select(that),\n        cx = +d3_this.attr(\"cx\"),\n        cy = +d3_this.attr(\"cy\");\n    return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n  };\n\n  c3_chart_internal_fn.isWithinStep = function (that, y) {\n    return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n  };\n\n  c3_chart_internal_fn.getCurrentWidth = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.size_width ? config.size_width : $$.getParentWidth();\n  };\n\n  c3_chart_internal_fn.getCurrentHeight = function () {\n    var $$ = this,\n        config = $$.config,\n        h = config.size_height ? config.size_height : $$.getParentHeight();\n    return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n  };\n\n  c3_chart_internal_fn.getCurrentPaddingTop = function () {\n    var $$ = this,\n        config = $$.config,\n        padding = isValue(config.padding_top) ? config.padding_top : 0;\n\n    if ($$.title && $$.title.node()) {\n      padding += $$.getTitlePadding();\n    }\n\n    return padding;\n  };\n\n  c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n    var config = this.config;\n    return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n  };\n\n  c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config;\n\n    if (isValue(config.padding_left)) {\n      return config.padding_left;\n    } else if (config.axis_rotated) {\n      return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n    } else if (!config.axis_y_show || config.axis_y_inner) {\n      // && !config.axis_rotated\n      return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n    } else {\n      return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n    }\n  };\n\n  c3_chart_internal_fn.getCurrentPaddingRight = function () {\n    var $$ = this,\n        config = $$.config,\n        defaultPadding = 10,\n        legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n\n    if (isValue(config.padding_right)) {\n      return config.padding_right + 1; // 1 is needed not to hide tick line\n    } else if (config.axis_rotated) {\n      return defaultPadding + legendWidthOnRight;\n    } else if (!config.axis_y2_show || config.axis_y2_inner) {\n      // && !config.axis_rotated\n      return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n    } else {\n      return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n    }\n  };\n\n  c3_chart_internal_fn.getParentRectValue = function (key) {\n    var parent = this.selectChart.node(),\n        v;\n\n    while (parent && parent.tagName !== 'BODY') {\n      try {\n        v = parent.getBoundingClientRect()[key];\n      } catch (e) {\n        if (key === 'width') {\n          // In IE in certain cases getBoundingClientRect\n          // will cause an \"unspecified error\"\n          v = parent.offsetWidth;\n        }\n      }\n\n      if (v) {\n        break;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return v;\n  };\n\n  c3_chart_internal_fn.getParentWidth = function () {\n    return this.getParentRectValue('width');\n  };\n\n  c3_chart_internal_fn.getParentHeight = function () {\n    var h = this.selectChart.style('height');\n    return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n  };\n\n  c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config,\n        hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n        leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n        leftAxis = $$.main.select('.' + leftAxisClass).node(),\n        svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {\n      right: 0\n    },\n        chartRect = $$.selectChart.node().getBoundingClientRect(),\n        hasArc = $$.hasArcType(),\n        svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n    return svgLeft > 0 ? svgLeft : 0;\n  };\n\n  c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n    var $$ = this,\n        position = $$.axis.getLabelPositionById(id);\n    return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n  };\n\n  c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n    var $$ = this,\n        config = $$.config,\n        h = 30;\n\n    if (axisId === 'x' && !config.axis_x_show) {\n      return 8;\n    }\n\n    if (axisId === 'x' && config.axis_x_height) {\n      return config.axis_x_height;\n    }\n\n    if (axisId === 'y' && !config.axis_y_show) {\n      return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n    }\n\n    if (axisId === 'y2' && !config.axis_y2_show) {\n      return $$.rotated_padding_top;\n    } // Calculate x axis height when tick rotated\n\n\n    if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n      h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n    } // Calculate y axis height when tick rotated\n\n\n    if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n      h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n    }\n\n    return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n  };\n\n  c3_chart_internal_fn.getEventRectWidth = function () {\n    return Math.max(0, this.xAxis.tickInterval());\n  };\n\n  c3_chart_internal_fn.initBrush = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.brush = d3.svg.brush().on(\"brush\", function () {\n      $$.redrawForBrush();\n    });\n\n    $$.brush.update = function () {\n      if ($$.context) {\n        $$.context.select('.' + CLASS.brush).call(this);\n      }\n\n      return this;\n    };\n\n    $$.brush.scale = function (scale) {\n      return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n  };\n\n  c3_chart_internal_fn.initSubchart = function () {\n    var $$ = this,\n        config = $$.config,\n        context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n        visibility = config.subchart_show ? 'visible' : 'hidden';\n    context.style('visibility', visibility); // Define g for chart area\n\n    context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart); // Define g for bar chart area\n\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars); // Define g for line chart area\n\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines); // Add extent rect for Brush\n\n    context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush); // ATTENTION: This must be called AFTER chart added\n    // Add Axis\n\n    $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n  };\n\n  c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n    var $$ = this,\n        context = $$.context,\n        config = $$.config,\n        contextLineEnter,\n        contextLineUpdate,\n        contextBarEnter,\n        contextBarUpdate,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$);\n\n    if (config.subchart_show) {\n      //-- Bar --//\n      contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n      contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar); // Bars for each data\n\n      contextBarEnter.append('g').attr(\"class\", classBars); //-- Line --//\n\n      contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n      contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine); // Lines for each data\n\n      contextLineEnter.append(\"g\").attr(\"class\", classLines); // Area\n\n      contextLineEnter.append(\"g\").attr(\"class\", classAreas); //-- Brush --//\n\n      context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n    }\n  };\n\n  c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n    $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n    $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n    (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n  };\n\n  c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n    $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n    (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n  };\n\n  c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n      $$.orgAreaOpacity = +d3.select(this).style('opacity');\n      return 0;\n    });\n    $$.contextArea.style(\"opacity\", 0);\n    $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n    (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n  };\n\n  c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        drawAreaOnSub,\n        drawBarOnSub,\n        drawLineOnSub;\n    $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden'); // subchart\n\n    if (config.subchart_show) {\n      // reflect main chart to extent on subchart if zoomed\n      if (d3.event && d3.event.type === 'zoom') {\n        $$.brush.extent($$.x.orgDomain()).update();\n      } // update subchart elements if needed\n\n\n      if (withSubchart) {\n        // extent rect\n        if (!$$.brush.empty()) {\n          $$.brush.extent($$.x.orgDomain()).update();\n        } // setup drawer - MEMO: this must be called after axis updated\n\n\n        drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n        drawBarOnSub = $$.generateDrawBar(barIndices, true);\n        drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n        $$.updateBarForSubchart(duration);\n        $$.updateLineForSubchart(duration);\n        $$.updateAreaForSubchart(duration);\n        $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n        $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n        $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n      }\n    }\n  };\n\n  c3_chart_internal_fn.redrawForBrush = function () {\n    var $$ = this,\n        x = $$.x;\n    $$.redraw({\n      withTransition: false,\n      withY: $$.config.zoom_rescale,\n      withSubchart: false,\n      withUpdateXDomain: true,\n      withDimension: false\n    });\n    $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n  };\n\n  c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n    var $$ = this,\n        subXAxis;\n\n    if (transitions && transitions.axisSubX) {\n      subXAxis = transitions.axisSubX;\n    } else {\n      subXAxis = $$.context.select('.' + CLASS.axisX);\n\n      if (withTransition) {\n        subXAxis = subXAxis.transition();\n      }\n    }\n\n    $$.context.attr(\"transform\", $$.getTranslate('context'));\n    subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n  };\n\n  c3_chart_internal_fn.getDefaultExtent = function () {\n    var $$ = this,\n        config = $$.config,\n        extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n\n    if ($$.isTimeSeries()) {\n      extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n    }\n\n    return extent;\n  };\n\n  c3_chart_internal_fn.initText = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n    $$.mainText = $$.d3.selectAll([]);\n  };\n\n  c3_chart_internal_fn.updateTargetsForText = function (targets) {\n    var $$ = this,\n        mainTextUpdate,\n        mainTextEnter,\n        classChartText = $$.classChartText.bind($$),\n        classTexts = $$.classTexts.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n      return classChartText(d) + classFocus(d);\n    });\n    mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n    mainTextEnter.append('g').attr('class', classTexts);\n  };\n\n  c3_chart_internal_fn.updateText = function (durationForExit) {\n    var $$ = this,\n        config = $$.config,\n        barOrLineData = $$.barOrLineData.bind($$),\n        classText = $$.classText.bind($$);\n    $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n    $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n      return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n    }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n      return $$.color(d);\n    }).style(\"fill-opacity\", 0);\n    $$.mainText.text(function (d, i, j) {\n      return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n    });\n    $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n  };\n\n  c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n    return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n  };\n\n  c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n    var dummy = this.d3.select('body').append('div').classed('c3', true),\n        svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n        font = this.d3.select(element).style('font'),\n        rect;\n    svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n      rect = this.getBoundingClientRect();\n    });\n    dummy.remove();\n    return rect;\n  };\n\n  c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n    var $$ = this,\n        getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n        getBarPoints = $$.generateGetBarPoints(barIndices, false),\n        getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n        getter = forX ? $$.getXForText : $$.getYForText;\n    return function (d, i) {\n      var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n      return getter.call($$, getPoints(d, i), d, this);\n    };\n  };\n\n  c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        xPos,\n        padding;\n\n    if ($$.config.axis_rotated) {\n      padding = $$.isBarType(d) ? 4 : 6;\n      xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n    } else {\n      xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n    } // show labels regardless of the domain if value is null\n\n\n    if (d.value === null) {\n      if (xPos > $$.width) {\n        xPos = $$.width - box.width;\n      } else if (xPos < 0) {\n        xPos = 4;\n      }\n    }\n\n    return xPos;\n  };\n\n  c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        yPos;\n\n    if ($$.config.axis_rotated) {\n      yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n    } else {\n      yPos = points[2][1];\n\n      if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n        yPos += box.height;\n\n        if ($$.isBarType(d) && $$.isSafari()) {\n          yPos -= 3;\n        } else if (!$$.isBarType(d) && $$.isChrome()) {\n          yPos += 3;\n        }\n      } else {\n        yPos += $$.isBarType(d) ? -3 : -6;\n      }\n    } // show labels regardless of the domain if value is null\n\n\n    if (d.value === null && !$$.config.axis_rotated) {\n      if (yPos < box.height) {\n        yPos = box.height;\n      } else if (yPos > this.height) {\n        yPos = this.height - 4;\n      }\n    }\n\n    return yPos;\n  };\n\n  c3_chart_internal_fn.initTitle = function () {\n    var $$ = this;\n    $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n  };\n\n  c3_chart_internal_fn.redrawTitle = function () {\n    var $$ = this;\n    $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n  };\n\n  c3_chart_internal_fn.xForTitle = function () {\n    var $$ = this,\n        config = $$.config,\n        position = config.title_position || 'left',\n        x;\n\n    if (position.indexOf('right') >= 0) {\n      x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n    } else if (position.indexOf('center') >= 0) {\n      x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n    } else {\n      // left\n      x = config.title_padding.left;\n    }\n\n    return x;\n  };\n\n  c3_chart_internal_fn.yForTitle = function () {\n    var $$ = this;\n    return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n  };\n\n  c3_chart_internal_fn.getTitlePadding = function () {\n    var $$ = this;\n    return $$.yForTitle() + $$.config.title_padding.bottom;\n  };\n\n  c3_chart_internal_fn.initTooltip = function () {\n    var $$ = this,\n        config = $$.config,\n        i;\n    $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\"); // Show tooltip if needed\n\n    if (config.tooltip_init_show) {\n      if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n        config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n\n        for (i = 0; i < $$.data.targets[0].values.length; i++) {\n          if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n            break;\n          }\n        }\n\n        config.tooltip_init_x = i;\n      }\n\n      $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n        return $$.addName(d.values[config.tooltip_init_x]);\n      }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n      $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n    }\n  };\n\n  c3_chart_internal_fn.getTooltipSortFunction = function () {\n    var $$ = this,\n        config = $$.config;\n\n    if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n      // if data are not grouped or if an order is specified\n      // for the tooltip values we sort them by their values\n      var order = config.tooltip_order;\n\n      if (order === undefined) {\n        order = config.data_order;\n      }\n\n      var valueOf = function valueOf(obj) {\n        return obj ? obj.value : null;\n      }; // if data are not grouped, we sort them by their value\n\n\n      if (isString(order) && order.toLowerCase() === 'asc') {\n        return function (a, b) {\n          return valueOf(a) - valueOf(b);\n        };\n      } else if (isString(order) && order.toLowerCase() === 'desc') {\n        return function (a, b) {\n          return valueOf(b) - valueOf(a);\n        };\n      } else if (isFunction(order)) {\n        // if the function is from data_order we need\n        // to wrap the returned function in order to format\n        // the sorted value to the expected format\n        var sortFunction = order;\n\n        if (config.tooltip_order === undefined) {\n          sortFunction = function sortFunction(a, b) {\n            return order(a ? {\n              id: a.id,\n              values: [a]\n            } : null, b ? {\n              id: b.id,\n              values: [b]\n            } : null);\n          };\n        }\n\n        return sortFunction;\n      } else if (isArray(order)) {\n        return function (a, b) {\n          return order.indexOf(a.id) - order.indexOf(b.id);\n        };\n      }\n    } else {\n      // if data are grouped, we follow the order of grouped targets\n      var ids = $$.orderTargets($$.data.targets).map(function (i) {\n        return i.id;\n      }); // if it was either asc or desc we need to invert the order\n      // returned by orderTargets\n\n      if ($$.isOrderAsc() || $$.isOrderDesc()) {\n        ids = ids.reverse();\n      }\n\n      return function (a, b) {\n        return ids.indexOf(a.id) - ids.indexOf(b.id);\n      };\n    }\n  };\n\n  c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n    var $$ = this,\n        config = $$.config,\n        titleFormat = config.tooltip_format_title || defaultTitleFormat,\n        nameFormat = config.tooltip_format_name || function (name) {\n      return name;\n    },\n        valueFormat = config.tooltip_format_value || defaultValueFormat,\n        text,\n        i,\n        title,\n        value,\n        name,\n        bgcolor;\n\n    var tooltipSortFunction = this.getTooltipSortFunction();\n\n    if (tooltipSortFunction) {\n      d.sort(tooltipSortFunction);\n    }\n\n    for (i = 0; i < d.length; i++) {\n      if (!(d[i] && (d[i].value || d[i].value === 0))) {\n        continue;\n      }\n\n      if (!text) {\n        title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n        text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n      }\n\n      value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n\n      if (value !== undefined) {\n        // Skip elements when their name is set to null\n        if (d[i].name === null) {\n          continue;\n        }\n\n        name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n        bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n        text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n        text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n        text += \"<td class='value'>\" + value + \"</td>\";\n        text += \"</tr>\";\n      }\n    }\n\n    return text + \"</table>\";\n  };\n\n  c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n    var forArc = $$.hasArcType(),\n        mouse = d3.mouse(element); // Determin tooltip position\n\n    if (forArc) {\n      tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n      tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n    } else {\n      svgLeft = $$.getSvgLeft(true);\n\n      if (config.axis_rotated) {\n        tooltipLeft = svgLeft + mouse[0] + 100;\n        tooltipRight = tooltipLeft + tWidth;\n        chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n        tooltipTop = $$.x(dataToShow[0].x) + 20;\n      } else {\n        tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n        tooltipRight = tooltipLeft + tWidth;\n        chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n        tooltipTop = mouse[1] + 15;\n      }\n\n      if (tooltipRight > chartRight) {\n        // 20 is needed for Firefox to keep tooltip width\n        tooltipLeft -= tooltipRight - chartRight + 20;\n      }\n\n      if (tooltipTop + tHeight > $$.currentHeight) {\n        tooltipTop -= tHeight + 30;\n      }\n    }\n\n    if (tooltipTop < 0) {\n      tooltipTop = 0;\n    }\n\n    return {\n      top: tooltipTop,\n      left: tooltipLeft\n    };\n  };\n\n  c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n    var $$ = this,\n        config = $$.config;\n    var tWidth, tHeight, position;\n    var forArc = $$.hasArcType(),\n        dataToShow = selectedData.filter(function (d) {\n      return d && isValue(d.value);\n    }),\n        positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n\n    if (dataToShow.length === 0 || !config.tooltip_show) {\n      return;\n    }\n\n    $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\"); // Get tooltip dimensions\n\n    tWidth = $$.tooltip.property('offsetWidth');\n    tHeight = $$.tooltip.property('offsetHeight');\n    position = positionFunction.call(this, dataToShow, tWidth, tHeight, element); // Set tooltip\n\n    $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n  };\n\n  c3_chart_internal_fn.hideTooltip = function () {\n    this.tooltip.style(\"display\", \"none\");\n  };\n\n  c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n    var $$ = this,\n        config = $$.config;\n    $$.mapToTargetIds(targetIds).forEach(function (id) {\n      $$.withoutFadeIn[id] = type === config.data_types[id];\n      config.data_types[id] = type;\n    });\n\n    if (!targetIds) {\n      config.data_type = type;\n    }\n  };\n\n  c3_chart_internal_fn.hasType = function (type, targets) {\n    var $$ = this,\n        types = $$.config.data_types,\n        has = false;\n    targets = targets || $$.data.targets;\n\n    if (targets && targets.length) {\n      targets.forEach(function (target) {\n        var t = types[target.id];\n\n        if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n          has = true;\n        }\n      });\n    } else if (Object.keys(types).length) {\n      Object.keys(types).forEach(function (id) {\n        if (types[id] === type) {\n          has = true;\n        }\n      });\n    } else {\n      has = $$.config.data_type === type;\n    }\n\n    return has;\n  };\n\n  c3_chart_internal_fn.hasArcType = function (targets) {\n    return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n  };\n\n  c3_chart_internal_fn.isLineType = function (d) {\n    var config = this.config,\n        id = isString(d) ? d : d.id;\n    return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n  };\n\n  c3_chart_internal_fn.isStepType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n  };\n\n  c3_chart_internal_fn.isSplineType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n  };\n\n  c3_chart_internal_fn.isAreaType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n  };\n\n  c3_chart_internal_fn.isBarType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'bar';\n  };\n\n  c3_chart_internal_fn.isScatterType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'scatter';\n  };\n\n  c3_chart_internal_fn.isPieType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'pie';\n  };\n\n  c3_chart_internal_fn.isGaugeType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'gauge';\n  };\n\n  c3_chart_internal_fn.isDonutType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'donut';\n  };\n\n  c3_chart_internal_fn.isArcType = function (d) {\n    return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n  };\n\n  c3_chart_internal_fn.lineData = function (d) {\n    return this.isLineType(d) ? [d] : [];\n  };\n\n  c3_chart_internal_fn.arcData = function (d) {\n    return this.isArcType(d.data) ? [d] : [];\n  };\n  /* not used\n   function scatterData(d) {\n   return isScatterType(d) ? d.values : [];\n   }\n   */\n\n\n  c3_chart_internal_fn.barData = function (d) {\n    return this.isBarType(d) ? d.values : [];\n  };\n\n  c3_chart_internal_fn.lineOrScatterData = function (d) {\n    return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n  };\n\n  c3_chart_internal_fn.barOrLineData = function (d) {\n    return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n  };\n\n  c3_chart_internal_fn.isInterpolationType = function (type) {\n    return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n  };\n\n  c3_chart_internal_fn.isSafari = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n  };\n\n  c3_chart_internal_fn.isChrome = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Chrome') >= 0;\n  };\n\n  c3_chart_internal_fn.initZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        startEvent;\n    $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n      startEvent = d3.event.sourceEvent;\n      $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n      config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n    }).on(\"zoom\", function () {\n      $$.redrawForZoom.call($$);\n    }).on('zoomend', function () {\n      var event = d3.event.sourceEvent; // if click, do nothing. otherwise, click interaction will be canceled.\n\n      if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n        return;\n      }\n\n      $$.redrawEventRect();\n      $$.updateZoom();\n      config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n    });\n\n    $$.zoom.scale = function (scale) {\n      return config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n\n    $$.zoom.orgScaleExtent = function () {\n      var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n      return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n    };\n\n    $$.zoom.updateScaleExtent = function () {\n      var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n          extent = this.orgScaleExtent();\n      this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n      return this;\n    };\n  };\n\n  c3_chart_internal_fn.getZoomDomain = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n        max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n    return [min, max];\n  };\n\n  c3_chart_internal_fn.updateZoom = function () {\n    var $$ = this,\n        z = $$.config.zoom_enabled ? $$.zoom : function () {};\n    $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n    $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n  };\n\n  c3_chart_internal_fn.redrawForZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        zoom = $$.zoom,\n        x = $$.x;\n\n    if (!config.zoom_enabled) {\n      return;\n    }\n\n    if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n      return;\n    }\n\n    if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n      x.domain(zoom.altDomain);\n      zoom.scale(x).updateScaleExtent();\n      return;\n    }\n\n    if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n      x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n    }\n\n    $$.redraw({\n      withTransition: false,\n      withY: config.zoom_rescale,\n      withSubchart: false,\n      withEventRect: false,\n      withDimension: false\n    });\n\n    if (d3.event.sourceEvent.type === 'mousemove') {\n      $$.cancelClick = true;\n    }\n\n    config.zoom_onzoom.call($$.api, x.orgDomain());\n  };\n\n  return c3;\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();"],"sourceRoot":""}